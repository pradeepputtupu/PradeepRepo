{
  "allowPreview": true,
  "assetSharingUrl": "https://apmsandbox.my.salesforce.com/analytics/wave/dashboard?assetId=0FKf2000000MKxyGAG&orgId=00Df2000001LxAD&loginHost=na53.salesforce.com&urlType=sharing",
  "createdBy": {
    "id": "005f2000009PkNIAA0",
    "name": "Pradeep Puttupu",
    "profilePhotoUrl": "https://apmsandbox--c.na53.content.force.com/profilephoto/005/T"
  },
  "createdDate": "2018-10-30T06:24:10.000Z",
  "datasets": [
    {
      "name": "${App.EdgeMarts.APM_ACV.Alias}"
    },
    {
      "name": "${App.EdgeMarts.APM_AOV.Alias}"
    },
    {
      "name": "${App.EdgeMarts.APM_Attrition.Alias}"
    },
    {
      "name": "${App.EdgeMarts.APM_HC.Alias}"
    },
    {
      "name": "${App.EdgeMarts.APM_MARKET_CUSTOMER.Alias}"
    },
    {
      "name": "${App.EdgeMarts.APM_MARKET_SHARE.Alias}"
    },
    {
      "name": "${App.EdgeMarts.APM_Pipegen1.Alias}"
    },
    {
      "name": "${App.EdgeMarts.APM_REDACCOUNTS.Alias}"
    },
    {
      "name": "${App.EdgeMarts.APM_SWE_INFRA.Alias}"
    },
    {
      "name": "${App.EdgeMarts.APM_T_P.Alias}"
    },
    {
      "name": "${App.EdgeMarts.APM_T_P_Transactions.Alias}"
    },
    {
      "name": "${App.EdgeMarts.APM_TECH_AVAILABILITY.Alias}"
    },
    {
      "name": "${App.EdgeMarts.Master_Hierarchy.Alias}"
    },
    {
      "name": "${App.EdgeMarts.APM_AE.Alias}"
    }
  ],
  "files": [
    {
      "contentType": "image/png",
      "fileLength": 20248,
      "fileName": "assetPreviewThumb",
      "id": "0FJf2000000L5PVGA0",
      "lastModifiedDate": "2018-10-30T06:24:17.000Z",
      "url": "/services/data/v42.0/wave/lenses/0FKf2000000MKxyGAG/files/0FJf2000000L5PVGA0"
    }
  ],
  "folder": {
    "id": "${App.Folder.Id}"
  },
  "id": "0FKf2000000MKxyGAG",
  "label": "Copy of APM - Cloud Summary Dashboard (Level 2)",
  "lastAccessedDate": "2019-01-29T10:17:13.000Z",
  "lastModifiedBy": {
    "id": "005f2000009PkNIAA0",
    "name": "Pradeep Puttupu",
    "profilePhotoUrl": "https://apmsandbox--c.na53.content.force.com/profilephoto/005/T"
  },
  "lastModifiedDate": "2018-10-30T06:24:10.000Z",
  "mobileDisabled": true,
  "name": "Copy_of_APM_Cloud_Summary_Dashboard_Level_2",
  "permissions": {
    "manage": true,
    "modify": true,
    "view": true
  },
  "refreshDate": "2019-01-16T20:43:20.000Z",
  "state": {
    "dataSourceLinks": [
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_MARKET_CUSTOMER",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_MARKET_SHARE",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_TECH_AVAILABILITY",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_T_P",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_T_P_Transactions",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_REDACCOUNTS",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          }
        ],
        "label": "Lead",
        "name": "Link_1018"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_REDACCOUNTS",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_T_P",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_TECH_AVAILABILITY",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_T_P_Transactions",
            "dataSourceType": "saql",
            "fieldName": "Industries"
          },
          {
            "dataSourceName": "APM_MARKET_CUSTOMER",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_MARKET_SHARE",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          }
        ],
        "label": "Industry",
        "name": "Link_1302"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_REDACCOUNTS",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_T_P",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_TECH_AVAILABILITY",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_T_P_Transactions",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_MARKET_CUSTOMER",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_MARKET_SHARE",
            "dataSourceType": "saql",
            "fieldName": "Region"
          }
        ],
        "label": "Region",
        "name": "Link_1318"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_REDACCOUNTS",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_T_P",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_T_P_Transactions",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_MARKET_CUSTOMER",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_MARKET_SHARE",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_TECH_AVAILABILITY",
            "dataSourceType": "saql",
            "fieldName": "Country"
          }
        ],
        "label": "Country",
        "name": "Link_1336"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_REDACCOUNTS",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_T_P",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_T_P_Transactions",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_TECH_AVAILABILITY",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_MARKET_CUSTOMER",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_MARKET_SHARE",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          }
        ],
        "label": "Segment",
        "name": "Link_55"
      },
      {
        "fields": [
          {
            "dataSourceName": "Master_Hierarchy",
            "dataSourceType": "saql",
            "fieldName": "Level_1"
          },
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_REDACCOUNTS",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_T_P",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_TECH_AVAILABILITY",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_T_P_Transactions",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_MARKET_CUSTOMER",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_MARKET_SHARE",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          }
        ],
        "label": "Cloud Connection",
        "name": "Link_1340"
      },
      {
        "fields": [
          {
            "dataSourceName": "Master_Hierarchy",
            "dataSourceType": "saql",
            "fieldName": "Level_2"
          },
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_REDACCOUNTS",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_T_P",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_T_P_Transactions",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_TECH_AVAILABILITY",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_MARKET_CUSTOMER",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_MARKET_SHARE",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          }
        ],
        "label": "Sub Cloud Connection",
        "name": "Link_1389"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_REDACCOUNTS",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_T_P",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_TECH_AVAILABILITY",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_T_P_Transactions",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_MARKET_CUSTOMER",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_MARKET_SHARE",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          }
        ],
        "label": "Lead+1",
        "name": "Link_3761"
      }
    ],
    "filters": [],
    "gridLayouts": [
      {
        "maxWidth": 1540,
        "name": "Default",
        "numColumns": 36,
        "pages": [
          {
            "label": "Financial Measures",
            "name": "328a689d-17a8-489e-b41c-d6dbaedbf3ac",
            "widgets": [
              {
                "colspan": 4,
                "column": 8,
                "name": "listselector_8",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_4",
                "row": 18,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 0,
                "name": "link_1",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 13,
                "name": "text_3",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 18,
                "name": "listselector_3",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 9,
                "name": "listselector_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_7",
                "row": 21,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 8,
                "name": "text_1",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_2",
                "row": 15,
                "rowspan": 71,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_3",
                "row": 0,
                "rowspan": 12,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "image_1",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "image_2",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "image_3",
                "row": 86,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_14",
                "row": 25,
                "rowspan": 47,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 3,
                "name": "link_13",
                "row": 6,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "rgba(0, 135, 255, 0)",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 16,
                  "borderWidth": 2
                }
              },
              {
                "colspan": 4,
                "column": 23,
                "name": "listselector_10",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 28,
                "name": "listselector_7",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 3,
                "column": 14,
                "name": "listselector_12",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 3,
                "name": "text_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 3,
                "name": "listselector_2",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(230, 236, 242, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 13,
                "name": "listselector_1",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_7",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 7,
                "column": 8,
                "name": "link_14",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_16",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 22,
                "name": "link_17",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 29,
                "name": "link_18",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 28,
                "name": "listselector_5",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 29,
                "column": 0,
                "name": "text_6",
                "row": 74,
                "rowspan": 12,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 34,
                "name": "image_4",
                "row": 82,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              }
            ]
          },
          {
            "label": "Hide Filter - Financial Measures",
            "name": "fb908427-d26f-49fe-94a4-3ae9d59e11df",
            "widgets": [
              {
                "colspan": 36,
                "column": 0,
                "name": "table_4",
                "row": 11,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 0,
                "name": "link_1",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_7",
                "row": 14,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_2",
                "row": 8,
                "rowspan": 70,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_3",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "image_1",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "image_2",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "image_3",
                "row": 78,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_14",
                "row": 18,
                "rowspan": 47,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_7",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 7,
                "column": 8,
                "name": "link_14",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 29,
                "column": 0,
                "name": "text_6",
                "row": 66,
                "rowspan": 12,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 34,
                "name": "image_4",
                "row": 74,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_12",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_21",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 29,
                "name": "link_31",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 22,
                "name": "link_30",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          },
          {
            "label": "Distribution HC",
            "name": "a32a622b-f247-47ef-92af-1ce8fe739626",
            "widgets": [
              {
                "colspan": 1,
                "column": 13,
                "name": "text_3",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 28,
                "name": "listselector_5",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 8,
                "name": "listselector_8",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 9,
                "name": "listselector_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_15",
                "row": 18,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 0,
                "name": "link_1",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_12",
                "row": 21,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 8,
                "name": "text_1",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 18,
                "name": "listselector_3",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_2",
                "row": 15,
                "rowspan": 66,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_3",
                "row": 0,
                "rowspan": 12,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "image_1",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "image_2",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "image_3",
                "row": 81,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 3,
                "name": "link_10",
                "row": 6,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "rgba(242, 246, 250, 0)",
                  "borderColor": "rgba(0, 135, 255, 0.01)",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 16,
                  "borderWidth": 2
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_9",
                "row": 25,
                "rowspan": 45,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 28,
                "name": "listselector_7",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 23,
                "name": "listselector_10",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 14,
                "name": "listselector_12",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 3,
                "name": "text_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 3,
                "name": "listselector_2",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(230, 236, 242, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 13,
                "name": "listselector_1",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_9",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 7,
                "column": 8,
                "name": "link_23",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_24",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 22,
                "name": "link_25",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 29,
                "name": "link_26",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 35,
                "column": 0,
                "name": "text_8",
                "row": 71,
                "rowspan": 9,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_15",
                "row": 8,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          },
          {
            "label": "Hide Filters - Distribution HC",
            "name": "4fad4e26-13b7-4d45-bae5-fa096fab3892",
            "widgets": [
              {
                "colspan": 36,
                "column": 0,
                "name": "table_15",
                "row": 11,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 0,
                "name": "link_1",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_12",
                "row": 14,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_2",
                "row": 8,
                "rowspan": 66,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_3",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "image_1",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "image_2",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "image_3",
                "row": 74,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_9",
                "row": 18,
                "rowspan": 46,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_9",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_24",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 35,
                "column": 0,
                "name": "text_8",
                "row": 65,
                "rowspan": 9,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_19",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 8,
                "name": "link_22",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 29,
                "name": "link_31",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 22,
                "name": "link_30",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          },
          {
            "label": "T&amp;P Measures",
            "name": "20eda594-98ea-486b-aa1c-9d12c3aa2b7a",
            "widgets": [
              {
                "colspan": 4,
                "column": 8,
                "name": "listselector_8",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 28,
                "name": "listselector_5",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_8",
                "row": 18,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_16",
                "row": 21,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 0,
                "name": "link_1",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 13,
                "name": "text_3",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 18,
                "name": "listselector_3",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 9,
                "name": "listselector_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 8,
                "name": "text_1",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_2",
                "row": 15,
                "rowspan": 68,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_3",
                "row": 0,
                "rowspan": 12,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "image_1",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "image_2",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "image_3",
                "row": 83,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 3,
                "name": "link_13",
                "row": 6,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "rgba(0, 135, 255, 0)",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 16,
                  "borderWidth": 2
                }
              },
              {
                "colspan": 4,
                "column": 23,
                "name": "listselector_10",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 28,
                "name": "listselector_7",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 3,
                "column": 14,
                "name": "listselector_12",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 3,
                "name": "text_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 3,
                "name": "listselector_2",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(230, 236, 242, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 13,
                "name": "listselector_1",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 35,
                "column": 0,
                "name": "text_5",
                "row": 73,
                "rowspan": 9,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_19",
                "row": 25,
                "rowspan": 47,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_7",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 7,
                "column": 29,
                "name": "link_6",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 22,
                "name": "link_7",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_8",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 8,
                "name": "link_9",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_20",
                "row": 8,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          },
          {
            "label": "Hide Filters - T&amp;P Measures",
            "name": "d00384c1-6182-44f8-9c73-d72c18c67e14",
            "widgets": [
              {
                "colspan": 36,
                "column": 0,
                "name": "table_8",
                "row": 11,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_16",
                "row": 14,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 0,
                "name": "link_1",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_2",
                "row": 8,
                "rowspan": 67,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_3",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "image_1",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "image_2",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "image_3",
                "row": 75,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 35,
                "column": 0,
                "name": "text_5",
                "row": 65,
                "rowspan": 9,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_19",
                "row": 18,
                "rowspan": 46,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_7",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 7,
                "column": 22,
                "name": "link_7",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_27",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 8,
                "name": "link_22",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_21",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 29,
                "name": "link_31",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          },
          {
            "label": "Market Details",
            "name": "db7c532f-d5f4-4511-a109-e262585c6082",
            "widgets": [
              {
                "colspan": 4,
                "column": 8,
                "name": "listselector_8",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 28,
                "name": "listselector_5",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 0,
                "name": "link_1",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 13,
                "name": "text_3",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 18,
                "name": "listselector_3",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 9,
                "name": "listselector_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 8,
                "name": "text_1",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_2",
                "row": 15,
                "rowspan": 66,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_3",
                "row": 0,
                "rowspan": 12,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "image_1",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "image_2",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "image_3",
                "row": 81,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 3,
                "name": "link_13",
                "row": 6,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "rgba(0, 135, 255, 0)",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 16,
                  "borderWidth": 2
                }
              },
              {
                "colspan": 4,
                "column": 23,
                "name": "listselector_10",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 28,
                "name": "listselector_7",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 3,
                "column": 14,
                "name": "listselector_12",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 3,
                "name": "text_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 3,
                "name": "listselector_2",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(230, 236, 242, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 13,
                "name": "listselector_1",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_20",
                "row": 18,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_21",
                "row": 21,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_23",
                "row": 25,
                "rowspan": 46,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_7",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 7,
                "column": 8,
                "name": "link_2",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_3",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 22,
                "name": "link_4",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 29,
                "name": "link_5",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 35,
                "column": 0,
                "name": "text_2",
                "row": 72,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_28",
                "row": 8,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          },
          {
            "label": "Hide Filters - Market Details",
            "name": "34f375e9-4d4a-41f6-8d43-a7a27c89a90f",
            "widgets": [
              {
                "colspan": 8,
                "column": 0,
                "name": "link_1",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_2",
                "row": 8,
                "rowspan": 66,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_3",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "image_1",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "image_2",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "image_3",
                "row": 74,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_20",
                "row": 11,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_21",
                "row": 14,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_23",
                "row": 18,
                "rowspan": 46,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_7",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 7,
                "column": 29,
                "name": "link_5",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 35,
                "column": 0,
                "name": "text_2",
                "row": 65,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_29",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 22,
                "name": "link_30",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 8,
                "name": "link_22",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_21",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          }
        ],
        "rowHeight": "fine",
        "selectors": [],
        "style": {
          "alignmentX": "left",
          "alignmentY": "top",
          "backgroundColor": "#E6ECF2",
          "cellSpacingX": 0,
          "cellSpacingY": 0,
          "fit": "original",
          "gutterColor": "#E6ECF2"
        },
        "version": 1
      }
    ],
    "layouts": [],
    "steps": {
      "Table_Page_4_Header_Top": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Page_4_Header_Top",
        "numbers": [],
        "query": "MasterHierarchy = load \"Master_Hierarchy\";\nresult_Total = group MasterHierarchy by all;\nresult_Total = foreach result_Total generate \"  \" as '$ values in millions', \"Customer #                      \" as 'Customer #',\"Market Share                      \" as 'TAM $ &amp; Market Share %',\"Red Accounts                      \" as 'Red Accounts';",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart",
          "visualizationType": "hbar"
        }
      },
      "Table_Page_1_Header_Top": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Page_1_Header_Top",
        "numbers": [],
        "query": "MasterHierarchy = load \"Master_Hierarchy\";\nresult_Total = group MasterHierarchy by all;\nresult_Total = foreach result_Total generate \"$ values in millions\" as '$ values in millions', \"ACV                            \" as 'ACV', \"AOV                            \" as 'AOV', \"ATTRITION                            \" as 'ATTRITION', \"PipeGen                            \" as 'Pipeline';",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart",
          "visualizationType": "hbar"
        }
      },
      "Static_Cloud_Filter": {
        "broadcastFacet": true,
        "label": "Static_Cloud_Filter",
        "selectMode": "singlerequired",
        "start": "{\"display\":[\"Clouds\"]}",
        "type": "staticflex",
        "values": [
          "{\"display\":\"Clouds\",\"filter\":\"[\\\"Marketing Cloud\\\", \\\"Other\\\", \\\"Quip\\\", \\\"Sales Cloud\\\", \\\"Salesforce Platform\\\", \\\"Service Cloud\\\", \\\"Commerce Cloud\\\", \\\"Success Cloud\\\",\\\"Core Premier (A la Carte) &amp; Priority\\\",\\\"Integration Cloud\\\",\\\"Other CSG\\\",\\\"N/A\\\"]\",\"filter_REDACCOUNTS\":\"[\\\"Marketing Cloud\\\", \\\"Other\\\", \\\"Quip\\\", \\\"Sales Cloud\\\", \\\"Salesforce Platform\\\", \\\"Service Cloud\\\", \\\"Commerce Cloud\\\", \\\"Success Cloud\\\",\\\"Core Premier (A la Carte) &amp; Priority\\\",\\\"Integration Cloud\\\"]\",\"static_country_logic\":\"case when ('Region' == \\\"AMER\\\" &amp;&amp; ('Country' ==  \\\"Canada\\\" ))then \\\"Canada\\\" when ('Region' == \\\"AMER\\\" &amp;&amp; ('Country' ==  \\\"United States\\\" ))then \\\"United States\\\" when ('Region' == \\\"AMER\\\")then \\\"RO AMER\\\" when  ('Region' == \\\"EMEA\\\" &amp;&amp; ('Country' ==  \\\"United Kingdom\\\" ))then \\\"United Kingdom\\\"  when  ('Region' == \\\"EMEA\\\" &amp;&amp; ('Country' ==  \\\"France\\\" ))then \\\"France\\\" when ('Region' == \\\"EMEA\\\" &amp;&amp; ('Country' ==  \\\"Germany\\\" ))then \\\"Germany\\\" when  ('Region' == \\\"EMEA\\\" &amp;&amp; ('Country' ==  \\\"Netherlands\\\" ))then \\\"Netherlands\\\" when ('Region' == \\\"EMEA\\\" ) then \\\"RO EMEA\\\" when  ('Region' == \\\"APAC\\\" &amp;&amp; ('Country' ==  \\\"Australia\\\" ))then \\\"ANZ\\\"  when  ('Region' == \\\"APAC\\\" &amp;&amp; ('Country' ==  \\\"ANZ\\\" ))then \\\"ANZ\\\"when  ('Region' == \\\"APAC\\\" &amp;&amp; ('Country' ==  \\\"India\\\" ))then \\\"India\\\"  when  ('Region' == \\\"APAC\\\" )then \\\"RO APAC\\\"  when  ('Region' == \\\"APAC\\\" )then \\\"RO APAC\\\"  when  ('Region' == \\\"JP\\\" &amp;&amp; ('Country' ==  \\\"Japan\\\" ))then \\\"Japan\\\" when ('Region' == \\\"JP\\\" &amp;&amp; ('Country' == \\\"South Korea\\\")) then \\\"South Korea\\\" when  ('Region' == \\\"JP\\\"  )then \\\"RO JP\\\"  when  ('Region' == \\\"LACA\\\" &amp;&amp; ('Country' ==  \\\"Brazil\\\" ))then \\\"Brazil\\\" when ('Region' == \\\"LACA\\\" )then \\\"RO LACA\\\" when ('Region' == \\\"Other\\\" )then \\\"Other\\\" else \\\"ERROR\\\" end\"}"
        ]
      },
      "Filter_Lead": {
        "broadcastFacet": true,
        "groups": [
          "Lead"
        ],
        "numbers": [],
        "query": "q = load \"APM_ACV\";\nq = group q by ('Lead');\nq = foreach q generate case when 'Lead' == \"Tony Owens\" then \"1. Tony Owens\" when 'Lead' == \"Brian Millham\" then \"2. Brian Millham\" when 'Lead' == \"Miguel Milano\" then \"3. Miguel Milano\" when 'Lead' == \"Mark Innes\" then \"4. Mark Innes\" when 'Lead' == \"Shinichi Koide\" then \"5. Shinichi Koide\" when 'Lead' == \"Dave Rey\" then \"6. Dave Rey\" when 'Lead' == \"Maria Martinez\" then \"7. Maria Martinez\"else \"9. unkown\" end as Lead_Rank  ,'Lead' as 'Lead', count() as 'count';\nq = order q by 'Lead_Rank' asc;\nq = limit q 2000;",
        "receiveFacet": true,
        "selectMode": "multi",
        "strings": [
          "Lead"
        ],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      },
      "Table_Page_3_Header": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Page_3_Header",
        "numbers": [],
        "query": "MasterHierarchy = load \"Master_Hierarchy\";\nMasterHierarchy = filter MasterHierarchy by 'Level_1' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nACV = load \"APM_ACV\";\nACV = filter ACV by 'Segment' != \"CSG\";\nACV = filter ACV by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nACV = filter ACV by {{column(Filter_Lead_1.selection,[\"Lead_1\"]).asEquality('Lead_1')}};\nACV = filter ACV by {{column(Filter_Segment.selection,[\"Segment\"]).asEquality('Segment')}};\nACV = filter ACV by {{column(Filter_Industry.selection,[\"Industry\"]).asEquality('Industry')}};\nACV = filter ACV by {{column(Filter_Lead.selection,[\"Lead\"]).asEquality('Lead')}};\nACV = filter ACV by {{column(Filter_Cloud.selection,[\"Cloud\"]).asEquality('Cloud')}};\nACV = filter ACV by 'Cloud' in {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};;\nACV = group ACV by ('Cloud','Subcloud', 'Quarter','Month', 'Fiscal_Year', 'Region' , 'Country');\nACV = foreach ACV generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year' ,'Month' as 'Month',sum('ACV') as 'ACV', 'Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; ACV = filter ACV by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}} ;\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD NONE For Fake Header line----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nAPM_None = load \"APM_ACV\";\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER ACV----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYACV = filter ACV by 'Month' in   {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYACV = filter ACV by 'Month' in   {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nn\nAOV = load \"APM_AOV\";\nAOV = filter AOV by 'Segment' != \"CSG\";\nAOV = filter AOV by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\n--AOV = filter AOV by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nAOV = foreach AOV generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('AOV') as 'AOV','Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; AOV = filter AOV by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER AOV ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYAOV = filter AOV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYAOV = filter AOV by 'Month' in   {{cell(Selector_Quarter.selection,0,\"Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYAOV = filter AOV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month_cum\").asString()}}&amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYAOV = filter AOV by 'Month' in {{cell(Selector_Quarter.selection,0,\"YTD_Month_cum\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------/////////////////////////////-----------LOAD ATTRITION ----------------/////////////////////////////////////////\n\nAttrition = load \"APM_Attrition\"; Attrition = filter Attrition by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}} ;\nAttrition = filter Attrition by 'Segment' != \"CSG\";\nAttrition = filter Attrition by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nAttrition = filter Attrition by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nAttrition = foreach Attrition generate  'Cloud' as 'Cloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Attrition_Product')*-1 as 'Attrition_Product', sum('TTM_Product')*-1 as 'TTM_Product',sum('AOV_twelve_month_ago_Product') as 'AOV_twelve_month_ago','Region' as 'Region';\n----------------------------------------------------------------------------------------------FILTER ATTRITION -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYATT = filter Attrition by 'Month' in   {{cell(Selector_Quarter.selection,0,\"Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYATT = filter Attrition by 'Month' in   {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq4_CYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month_cum\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\n------------------------------------------------------------------------------------------------------------------------------------------------LOAD PIPEGEN--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nPipegen = load \"APM_Pipegen1\";\nPipegen = filter Pipegen by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};Pipegen = filter Pipegen by 'Segment' != \"CSG\";\nPipegen = filter Pipegen by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nPipegen = group Pipegen by ('Fiscal_Year','Quarter', 'Region', 'Cloud', 'Month','Subcloud', 'Cloud_2','Country');\nPipegen = foreach Pipegen generate  'Cloud' as 'Cloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Pipegen') as 'Pipegen','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; Pipegen = filter Pipegen by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}} ;;\n\nq2_CYPipegen = filter Pipegen by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYPipegen = filter Pipegen by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYPipegen = filter Pipegen by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_pipegen\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYPipegen = filter Pipegen by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_pipegen\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD /FILTER HC---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nHC = load \"APM_HC\";\nHC = filter HC by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nHC = foreach HC generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('SE') as 'SE',sum('AE') as 'AE',sum('Co_Prime') as 'Co_Prime','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; HC = filter HC by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\n--HC = filter HC by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYHC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYHC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_HC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYHC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYHC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_HC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD SWE INFRA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSW = load \"APM_SWE_INFRA\";\nSW = filter SW by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nSW = foreach SW generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('SWE') as 'SWE',sum('INFRA') as 'INFRA','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; SW = filter SW by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nSW = filter SW by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYSW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYSW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_SW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYSW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYSW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_SW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD T_P------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nT_P = load \"APM_T_P\";\n--T_P = filter T_P by 'Cloud' != \"TOTALS/SUMMARY\";\nT_P = filter T_P by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nT_P = foreach T_P generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Cloud_m0_CTS') as 'CTS',sum('Cloud_m0_CTS1') as 'CTS1','Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; T_P = filter T_P by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\n--T_P = filter T_P by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYT_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYT_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_T_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYT_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_cum\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYT_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_cum\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_T_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_cum\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD TRANSACTION------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nTRANSACTION = load \"APM_T_P_Transactions\";TRANSACTION = filter TRANSACTION by 'Cloud' != \"TOTALS/SUMMARY\";\nTRANSACTION = filter TRANSACTION by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nTRANSACTION = foreach TRANSACTION generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Transactions') as 'Transactions','Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; TRANSACTION = filter TRANSACTION by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nTRANSACTION = filter TRANSACTION by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYTRANSACTION = filter TRANSACTION by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYTRANSACTION = filter TRANSACTION by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_TRANSACTION = filter TRANSACTION by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYTRANSACTION = filter TRANSACTION by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYTRANSACTION = filter TRANSACTION by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_TRANSACTION = filter TRANSACTION by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD AVAILABILITY------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nAVAILABILITY = load \"APM_TECH_AVAILABILITY\";AVAILABILITY = filter AVAILABILITY by 'Cloud' == \"TOTALS/SUMMARY\";\nAVAILABILITY = filter AVAILABILITY by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nAVAILABILITY = foreach AVAILABILITY generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Availability')*100 as 'Availability','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; AVAILABILITY = filter AVAILABILITY by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\n--AVAILABILITY = filter AVAILABILITY by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYAVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYAVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_AVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYAVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYAVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_AVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD REDACCOUNTS------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nREDACCOUNTS = load \"APM_REDACCOUNTS\";REDACCOUNTS = filter REDACCOUNTS by 'Cloud' != \"TOTALS/SUMMARY\";\nREDACCOUNTS = filter REDACCOUNTS by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nREDACCOUNTS = foreach REDACCOUNTS generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Red_Accounts') as 'Red_Accounts','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; REDACCOUNTS = filter REDACCOUNTS by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nREDACCOUNTS = filter REDACCOUNTS by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYREDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYREDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_REDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYREDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYREDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_REDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD MARKET SHARE------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSHARE = load \"APM_MARKET_SHARE\";SHARE = filter SHARE by 'Cloud' != \"TOTALS/SUMMARY\";\nSHARE = filter SHARE by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nSHARE = foreach SHARE generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('TAM') as 'TAM','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; SHARE = filter SHARE by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nSHARE = filter SHARE by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYSHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYSHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_SHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYSHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYSHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_SHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD CUSTOMER------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nCUSTOMER = load \"APM_MARKET_CUSTOMER\";CUSTOMER = filter CUSTOMER by 'Cloud' != \"TOTALS/SUMMARY\";\nCUSTOMER = filter CUSTOMER by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nCUSTOMER = foreach CUSTOMER generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Customer') as 'Customer','Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; CUSTOMER = filter CUSTOMER by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nCUSTOMER = filter CUSTOMER by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYCUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYCUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_CUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYCUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYCUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_CUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Grouping------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nresult_Total = group q2_CYACV by all full, q2_PYACV by all full, q3_CYACV by all full, q3_PYACV by all full, q2_CYAOV by all full, q2_PYAOV by all full, q3_CYAOV by all full, q3_PYAOV by all full, q2_CYATT by all full, q2_PYATT by all full, q3_CYATT by all full, q3_PYATT by all full,q4_CYATT by all full,  q2_CYPipegen by all full, q2_PYPipegen by all full, q3_CYPipegen by all full, q3_PYPipegen by all full,q2_CYHC by all full, q2_PYHC by all full,q2_PY_2_HC by all full, q3_CYHC by all full, q3_PYHC by all full,q3_PY_2_HC by all full, q2_CYSW by all full, q2_PYSW by all full,q2_PY_2_SW by all full, q3_CYSW by all full, q3_PYSW by all full,q3_PY_2_SW by all full, q2_CYT_P by all full, q2_PYT_P by all full, q3_CYT_P by all full, q3_PYT_P by all full, q2_CYTRANSACTION by all full, q2_PYTRANSACTION by all full, q3_CYTRANSACTION by all full, q3_PYTRANSACTION by all full, q2_CYAVAILABILITY by all full, q2_PYAVAILABILITY by all full, q3_CYAVAILABILITY by all full, q3_PYAVAILABILITY by all full, q2_CYREDACCOUNTS by all full, q2_PYREDACCOUNTS by all full, q3_CYREDACCOUNTS by all full, q3_PYREDACCOUNTS by all full, q2_CYSHARE by all full, q2_PYSHARE by all full, q3_CYSHARE by all full, q3_PYSHARE by all full, q2_CYCUSTOMER by all full, q2_PYCUSTOMER by all full, q3_CYCUSTOMER by all full, q3_PYCUSTOMER by all;\nn\nresult_Total = foreach result_Total generate \"TOTAL\" as 'Cloud', coalesce(sum(q2_CYACV.'ACV'),0) as 'A', coalesce(sum(q2_PYACV.'ACV'),0) as 'B', coalesce(sum(q3_CYACV.'ACV'),0) as 'C', coalesce(sum(q3_PYACV.'ACV'),0) as 'D',coalesce(sum(q2_CYAOV.'AOV'),0) as 'E', coalesce(sum(q2_PYAOV.'AOV'),0) as 'F', coalesce(sum(q3_CYAOV.'AOV'),0) as 'G', coalesce(sum(q3_PYAOV.'AOV'),0) as 'H',coalesce(sum(q2_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q2',coalesce(sum(q3_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q3',coalesce(round(sum(q2_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q2' ,coalesce(round(sum(q2_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q2',coalesce(round(sum(q4_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q3' ,coalesce(round(sum(q4_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q3', coalesce(sum(q2_CYPipegen.'Pipegen'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Pipegen Absolute', coalesce(sum(q3_CYPipegen.'Pipegen'), 0) as 'YTD Pipegen Absolute', ((coalesce(sum(q2_CYPipegen.'Pipegen'), 0) - coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Pipegen Growth', ((coalesce(sum(q3_CYPipegen.'Pipegen'), 0) - coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) * 100 as 'YTD Pipegen Growth',coalesce(sum(q2_CYHC.'SE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE Absolute', coalesce(sum(q3_CYHC.'SE'), 0) as 'YTD SE Absolute', ((coalesce(sum(q2_CYHC.'SE'), 0) - coalesce(sum(q2_PYHC.'SE'), 0)) / coalesce(sum(q2_PYHC.'SE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SE Growth',(power(coalesce(sum(q2_CYHC.'SE'), 0) / coalesce(sum(q2_PY_2_HC.'SE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR',(power(coalesce(sum(q3_CYHC.'SE'), 0) / coalesce(sum(q3_PY_2_HC.'SE'), 0),(1/2))-1)*100 as 'YTD SE CAGR', ((coalesce(sum(q3_CYHC.'SE'), 0) - coalesce(sum(q3_PYHC.'SE'), 0)) / coalesce(sum(q3_PYHC.'SE'), 0)) * 100 as 'YTD SE Growth', coalesce(sum(q2_CYHC.'AE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE Absolute', coalesce(sum(q3_CYHC.'AE'), 0) as 'YTD AE Absolute', ((coalesce(sum(q2_CYHC.'AE'), 0) - coalesce(sum(q2_PYHC.'AE'), 0)) / coalesce(sum(q2_PYHC.'AE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AE Growth', ((coalesce(sum(q3_CYHC.'AE'), 0) - coalesce(sum(q3_PYHC.'AE'), 0)) / coalesce(sum(q3_PYHC.'AE'), 0)) * 100 as 'YTD AE Growth',(power(coalesce(sum(q2_CYHC.'AE'), 0) / coalesce(sum(q2_PY_2_HC.'AE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR',(power(coalesce(sum(q3_CYHC.'AE'), 0) / coalesce(sum(q3_PY_2_HC.'AE'), 0),(1/2))-1)*100 as 'YTD AE CAGR', coalesce(sum(q2_CYHC.'Co_Prime'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime Absolute', coalesce(sum(q3_CYHC.'Co_Prime'), 0) as 'YTD Co_Prime Absolute', ((coalesce(sum(q2_CYHC.'Co_Prime'), 0) - coalesce(sum(q2_PYHC.'Co_Prime'), 0)) / coalesce(sum(q2_PYHC.'Co_Prime'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Co_Prime Growth', ((coalesce(sum(q3_CYHC.'Co_Prime'), 0) - coalesce(sum(q3_PYHC.'Co_Prime'), 0)) / coalesce(sum(q3_PYHC.'Co_Prime'), 0)) * 100 as 'YTD Co_Prime Growth',(power(coalesce(sum(q2_CYHC.'Co_Prime'), 0) / coalesce(sum(q2_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR',(power(coalesce(sum(q3_CYHC.'Co_Prime'), 0) / coalesce(sum(q3_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as 'YTD Co_Prime CAGR', coalesce(sum(q2_CYSW.'SWE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE Absolute', coalesce(sum(q3_CYSW.'SWE'), 0) as 'YTD SWE Absolute', ((coalesce(sum(q2_CYSW.'SWE'), 0) - coalesce(sum(q2_PYSW.'SWE'), 0)) / coalesce(sum(q2_PYSW.'SWE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth', ((coalesce(sum(q3_CYSW.'SWE'), 0) - coalesce(sum(q3_PYSW.'SWE'), 0)) / coalesce(sum(q3_PYSW.'SWE'), 0)) * 100 as 'YTD SWE Growth',(power(coalesce(sum(q2_CYSW.'SWE'), 0) / coalesce(sum(q2_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE CAGR',(power(coalesce(sum(q3_CYSW.'SWE'), 0) / coalesce(sum(q3_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as 'YTD SWE CAGR', coalesce(sum(q2_CYSW.'INFRA'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA Absolute', coalesce(sum(q3_CYSW.'INFRA'), 0) as 'YTD INFRA Absolute', ((coalesce(sum(q2_CYSW.'INFRA'), 0) - coalesce(sum(q2_PYSW.'INFRA'), 0)) / coalesce(sum(q2_PYSW.'INFRA'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth', ((coalesce(sum(q3_CYSW.'INFRA'), 0) - coalesce(sum(q3_PYSW.'INFRA'), 0)) / coalesce(sum(q3_PYSW.'INFRA'), 0)) * 100 as 'YTD INFRA Growth',(power(coalesce(sum(q2_CYSW.'INFRA'), 0) / coalesce(sum(q2_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA CAGR',(power(coalesce(sum(q3_CYSW.'INFRA'), 0) / coalesce(sum(q3_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as 'YTD INFRA CAGR', coalesce(sum(q2_CYT_P.'CTS'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute', coalesce(sum(q3_CYT_P.'CTS'), 0) as 'YTD CTS Absolute', coalesce(sum(q2_CYT_P.'CTS1'), 0)  * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth', coalesce(sum(q3_CYT_P.'CTS1'), 0)  * 100 as 'YTD CTS Growth', coalesce(sum(q2_CYTRANSACTION.'Transactions'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute', coalesce(sum(q3_CYTRANSACTION.'Transactions'), 0) as 'YTD Transactions Absolute', ((coalesce(sum(q2_CYTRANSACTION.'Transactions'), 0) - coalesce(sum(q2_PYTRANSACTION.'Transactions'), 0)) / coalesce(sum(q2_PYTRANSACTION.'Transactions'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth', ((coalesce(sum(q3_CYTRANSACTION.'Transactions'), 0) - coalesce(sum(q3_PYTRANSACTION.'Transactions'), 0)) / coalesce(sum(q3_PYTRANSACTION.'Transactions'), 0)) * 100 as 'YTD Transactions Growth', coalesce(sum(q2_CYAVAILABILITY.'Availability'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute', coalesce(sum(q3_CYAVAILABILITY.'Availability'), 0) as 'YTD Availability Absolute', ((coalesce(sum(q2_CYAVAILABILITY.'Availability'), 0) - coalesce(sum(q2_PYAVAILABILITY.'Availability'), 0)) / coalesce(sum(q2_PYAVAILABILITY.'Availability'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth', ((coalesce(sum(q3_CYAVAILABILITY.'Availability'), 0) - coalesce(sum(q3_PYAVAILABILITY.'Availability'), 0)) / coalesce(sum(q3_PYAVAILABILITY.'Availability'), 0)) * 100 as 'YTD Availability Growth',  coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute', coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) as 'YTD Red_Accounts Absolute', ((coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth', ((coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as 'YTD Red_Accounts Growth', coalesce(sum(q2_CYSHARE.'TAM'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute', coalesce(sum(q3_CYSHARE.'TAM'), 0) as 'YTD TAM Absolute', ((coalesce(sum(q2_CYSHARE.'TAM'), 0) - coalesce(sum(q2_PYSHARE.'TAM'), 0)) / coalesce(sum(q2_PYSHARE.'TAM'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth', ((coalesce(sum(q3_CYSHARE.'TAM'), 0) - coalesce(sum(q3_PYSHARE.'TAM'), 0)) / coalesce(sum(q3_PYSHARE.'TAM'), 0)) * 100 as 'YTD TAM Growth', coalesce(sum(q2_CYCUSTOMER.'Customer'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute', coalesce(sum(q3_CYCUSTOMER.'Customer'), 0) as 'YTD Customer Absolute', ((coalesce(sum(q2_CYCUSTOMER.'Customer'), 0) - coalesce(sum(q2_PYCUSTOMER.'Customer'), 0)) / coalesce(sum(q2_PYCUSTOMER.'Customer'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth', ((coalesce(sum(q3_CYCUSTOMER.'Customer'), 0) - coalesce(sum(q3_PYCUSTOMER.'Customer'), 0)) / coalesce(sum(q3_PYCUSTOMER.'Customer'), 0)) * 100 as 'YTD Customer Growth';\nnresult_Total = foreach result_Total generate 'A' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute',  'C' as  'YTD ACV Absolute', ((A -B) / B) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth',((C - D) / D) * 100 as 'YTD ACV Growth','E' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AOV Absolute',  'G' as  'YTD AOV Absolute', ((E -F) / F) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AOV Growth',  ((G - H) / H) * 100  as 'YTD AOV Growth', coalesce(sum('Attrition_CY_Q2'),0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Attrition Absolute', coalesce(sum('Attrition_CY_Q3'),0) as 'YTD Attrition Absolute',(coalesce(round(sum('TTM_Product_CY_Q2'), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q2), 0), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Attrition TTM Rate', (coalesce(round(sum('TTM_Product_CY_Q3'), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q3), 0), 0)) * 100 as 'YTD Attrition TTM Rate','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Pipegen Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} PipeGen Absolute','YTD Pipegen Absolute' as 'YTD PipeGen Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Pipegen Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} PipeGen Growth','YTD Pipegen Growth' as 'YTD PipeGen Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AEs','YTD AE Absolute' as 'YTD AE Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR','YTD AE CAGR' as 'YTD AE CAGR' ,'{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime','YTD Co_Prime Absolute' as 'YTD Co_Prime Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR','YTD Co_Prime CAGR' as 'YTD Co_Prime CAGR', '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SEs','YTD SE Absolute' as 'YTD SE Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR','YTD SE CAGR' as 'YTD SE CAGR' ,'{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE','YTD SWE Absolute' as 'YTD SWE Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth','YTD SWE Growth' as 'YTD SWE Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA','YTD INFRA Absolute' as 'YTD INFRA Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth','YTD INFRA Growth' as 'YTD INFRA Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute','YTD CTS Absolute' as 'YTD CTS Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth','YTD CTS Growth' as 'YTD CTS Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute','YTD Availability Absolute' as 'YTD Availability Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth','YTD Availability Growth' as 'YTD Availability Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute','YTD Transactions Absolute' as 'YTD Transactions Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth','YTD Transactions Growth' as 'YTD Transactions Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute','YTD Customer Absolute' as 'YTD Customer Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth','YTD Customer Growth' as 'YTD Customer Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute','YTD TAM Absolute' as 'YTD TAM Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth','YTD TAM Growth' as 'YTD TAM Growth';\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------NONE for Fake HEADER--------------------------------------------------------------------------------------------------------------\n;result_none = group APM_None by 'all'; result_none = foreach result_none generate 0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute',  0 as  'YTD ACV Absolute', 0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth',0 as 'YTD ACV Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AOV Absolute', 0 as  'YTD AOV Absolute', 0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AOV Growth', 0 as 'YTD AOV Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Attrition Absolute',0 as 'YTD Attrition Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Attrition TTM Rate', 0 as 'YTD Attrition TTM Rate',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} PipeGen Absolute',0 as 'YTD PipeGen Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} PipeGen Growth',0 as 'YTD PipeGen Growth', 0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AEs',0 as 'YTD AE Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR',0 as 'YTD AE CAGR' ,0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime',0 as 'YTD Co_Prime Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR',0 as 'YTD Co_Prime CAGR', 0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SEs',0 as 'YTD SE Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR',0 as 'YTD SE CAGR' ,0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE',0 as 'YTD SWE Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth',0 as 'YTD SWE Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA',0 as 'YTD INFRA Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth',0 as 'YTD INFRA Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute',0 as 'YTD CTS Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth',0 as 'YTD CTS Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute',0 as 'YTD Availability Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth',0 as 'YTD Availability Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute',0 as 'YTD Transactions Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth',0 as 'YTD Transactions Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute',0 as 'YTD Customer Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth',0 as 'YTD Customer Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute',0 as 'YTD TAM Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth',0 as 'YTD TAM Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute',0 as 'YTD Red_Accounts Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth',0 as 'YTD Red_Accounts Growth'; \n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------UNION--------------------------------------------------------------------------------------------------------------\n;result_union = union result_none, result_Total;result_union = group result_union by 'all';  final_result = foreach result_union generate \"TOTAL                                                        \" as 'Cloud', sum( '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE') as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE',sum('YTD SWE Absolute') as 'YTD SWE Absolute',sum('{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth') as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth',sum('YTD SWE Growth') as 'YTD SWE Growth',sum('{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA') as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA',sum('YTD INFRA Absolute') as 'YTD INFRA Absolute',sum('{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth') as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth',sum('YTD INFRA Growth') as 'YTD INFRA Growth',sum('{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute') as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute', sum('YTD CTS Absolute') as 'YTD CTS Absolute', sum('{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth') as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth', sum('YTD CTS Growth') as  'YTD CTS Growth',sum('{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute') as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute', 0 as 'YTD Availability Absolute', sum('{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth') as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth', 0 as  'YTD Availability Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute', 0 as 'YTD Transactions Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth', 0 as  'YTD Transactions Growth' ; ",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        }
      },
      "Selector_Quarter": {
        "broadcastFacet": true,
        "label": "Quarter",
        "selectMode": "single",
        "start": "{\"display\":[\"Q2\"]}",
        "type": "staticflex",
        "values": [
          "{\"display\":\"Q1\",\"Quarter\":\"[\\\"FYQ1\\\"]\",\"Month\":\"[\\\"February\\\",\\\"March\\\",\\\"April\\\"]\",\"YTD_Month\":\"[\\\"February\\\",\\\"March\\\",\\\"April\\\",\\\"May\\\",\\\"June\\\",\\\"July\\\"]\",\"YTD_Month_cum\":\"[\\\"July\\\"]\",\"YTD_Month_cum_attrit\":\"[\\\"July\\\"]\",\"YTD_Quarter\":\"[\\\"FYQ1\\\",\\\"FYQ2\\\"]\",\"YTD_Quarter_cum\":\"[\\\"FYQ2\\\"]\",\"YTD_Quarter_pipegen\":\"[\\\"FYQ1\\\",\\\"FYQ2\\\"]\",\"YTD_Quarter_HC\":\"[\\\"FYQ2\\\"]\",\"YTD_Quarter_SW\":\"[\\\"FYQ2\\\"]\",\"Unit_Month\":\"Month\",\"Unit_Quarter\":\"Quarter\",\"Header_name_absolute\":\"Q1\",\"Header_name_rate\":\"YoY Q1\",\"Line_Rank\":\"HZZ\",\"Filter_Table\":\"[]\",\"Filter_Table_2\":\"[\\\"☁ Core Premier (A la Carte) &amp; Priority\\\",\\\"    ↳  Core Premier (A la Carte)\\\",\\\"    ↳  Core Premier Priority\\\",\\\"☁ N/A\\\",\\\"    ↳  N/A\\\"]\"}",
          "{\"display\":\"Q2\",\"Quarter\":\"[\\\"FYQ2\\\"]\",\"Month\":\"[\\\"July\\\",\\\"June\\\",\\\"May\\\"]\",\"YTD_Month\":\"[\\\"February\\\",\\\"March\\\",\\\"April\\\",\\\"May\\\",\\\"June\\\",\\\"July\\\"]\",\"YTD_Month_cum\":\"[\\\"July\\\"]\",\"YTD_Month_cum_attrit\":\"[\\\"July\\\"]\",\"YTD_Quarter\":\"[\\\"FYQ1\\\",\\\"FYQ2\\\"]\",\"YTD_Quarter_cum\":\"[\\\"FYQ2\\\"]\",\"YTD_Quarter_pipegen\":\"[\\\"FYQ1\\\",\\\"FYQ2\\\"]\",\"YTD_Quarter_HC\":\"[\\\"FYQ2\\\"]\",\"YTD_Quarter_SW\":\"[\\\"FYQ2\\\"]\",\"QTD_Month\":\"[\\\"July\\\",\\\"June\\\",\\\"May\\\"]\",\"Unit_Month\":\"Month\",\"Unit_Quarter\":\"Quarter\",\"Header_name_absolute\":\"Q2\",\"Header_name_rate\":\"YoY Q2\",\"Line_Rank\":\"HZZ\",\"Filter_Table\":\"[]\",\"Filter_Table_2\":\"[\\\"☁ Core Premier (A la Carte) &amp; Priority\\\",\\\"    ↳  Core Premier (A la Carte)\\\",\\\"    ↳  Core Premier Priority\\\",\\\"☁ N/A\\\",\\\"    ↳  N/A\\\"]\"}"
        ]
      },
      "Filter_Cloud": {
        "broadcastFacet": true,
        "groups": [
          "Cloud"
        ],
        "numbers": [],
        "query": "q = load \"APM_ACV\";\nq = group q by ('Cloud');\nq = foreach q generate case when 'Cloud' == \"Sales Cloud\" then \"A. Sales Cloud\" when 'Cloud' == \"Service Cloud\" then \"B. Service Cloud\" when 'Cloud' == \"Marketing Cloud\" then \"C. Marketing Cloud\" when 'Cloud' == \"Commerce Cloud\" then \"D. Commerce Cloud\" when 'Cloud' == \"Salesforce Platform\" then \"E. Salesforce Platform\" when 'Cloud' == \"Quip\" then \"F. Quip\" when 'Cloud' == \"Other\" then \"G. Other\"when 'Cloud' == \"Other CSG\" then \"H. Other CSG\" when 'Cloud' == \"Core Premier (A la Carte) &amp; Priority\" then \"I. Core Premier (A la Carte) &amp; Priority\"  when 'Cloud' == \"Success Cloud\" then \"J. Success Cloud\"else \"K. unkown\" end as Cloud_Rank  ,'Cloud' as 'Cloud', count() as 'count';\nq = order q by 'Cloud_Rank' asc;q = filter q by 'Cloud' not in [\"Core Premier (A la Carte) &amp; Priority\"];\nq = limit q 2000;",
        "receiveFacet": true,
        "selectMode": "multi",
        "strings": [
          "Cloud"
        ],
        "type": "saql",
        "useGlobal": false,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      },
      "Static_Region_Filter": {
        "broadcastFacet": true,
        "label": "Static_Cloud_Filter",
        "selectMode": "singlerequired",
        "start": "{\"display\":[\"Region\"]}",
        "type": "staticflex",
        "values": [
          "{\"display\":\"Region\",\"filter\":\"[\\\"AMER\\\", \\\"EMEA\\\", \\\"APAC\\\", \\\"JP\\\", \\\"LACA\\\",\\\"LACA\\\",\\\"Other\\\"]\"}"
        ]
      },
      "Table_Level_1_Measures_1": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Level_1_Measures_1",
        "numbers": [],
        "query": "MasterHierarchy = load \"Master_Hierarchy\";\nMasterHierarchy = filter MasterHierarchy by 'Level_1' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nACV = load \"APM_ACV\";\nACV = filter ACV by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nACV = filter ACV by 'Cloud' in {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nACV = group ACV by ('Cloud','Subcloud', 'Quarter','Month', 'Fiscal_Year', 'Region', 'Country');\nACV = foreach ACV generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year' ,'Month' as 'Month',sum('ACV') as 'ACV', 'Region' as 'Region',  case when ('Region' == \"AMER\" &amp;&amp; ('Country' ==  \"Canada\" ))then \"Canada\" when ('Region' == \"AMER\" &amp;&amp; ('Country' ==  \"United States\" ))then \"United States\" when ('Region' == \"AMER\")then \"RO AMER\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"United Kingdom\" ))then \"United Kingdom\"  when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"France\" ))then \"France\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"Germany\" ))then \"Germany\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"Netherlands\" ))then \"Netherlands\" when ('Region' == \"EMEA\" ) then \"RO EMEA\" when  ('Region' == \"APAC\" &amp;&amp; ('Country' ==  \"Australia\" ))then \"Australia\"  when  ('Region' == \"APAC\" &amp;&amp; ('Country' ==  \"India\" ))then \"India\" when  ('Region' == \"APAC\" )then \"RO APAC\"  when  ('Region' == \"APAC\" )then \"RO APAC\"  when  ('Region' == \"JP\" &amp;&amp; ('Country' ==  \"Japan\" ))then \"Japan\"  when  ('Region' == \"JP\"  )then \"RO JP\"  when  ('Region' == \"LACA\" &amp;&amp; ('Country' ==  \"Brazil\" ))then \"Brazil\" when ('Region' == \"LACA\" )then \"RO LACA\" when ('Region' == \"Other\" )then \"Other\" else \"ERROR\" end as 'Country' ; ACV = filter ACV by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}} ;\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER ACV----------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nnAOV = load \"APM_AOV\";\nAOV = filter AOV by 'Cloud' in{{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nAOV = filter AOV by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nAOV = group AOV by ('Cloud','Subcloud',  'Quarter', 'Month', 'Fiscal_Year', 'Region' , 'Country');\nAOV = foreach AOV generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('AOV') as 'AOV','Region' as 'Region', case when ('Region' == \"AMER\" &amp;&amp; ('Country' ==  \"Canada\" ))then \"Canada\" when ('Region' == \"AMER\" &amp;&amp; ('Country' ==  \"United States\" ))then \"United States\" when ('Region' == \"AMER\")then \"RO AMER\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"United Kingdom\" ))then \"United Kingdom\"  when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"France\" ))then \"France\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"Germany\" ))then \"Germany\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"Netherlands\" ))then \"Netherlands\" when ('Region' == \"EMEA\" ) then \"RO EMEA\" when  ('Region' == \"APAC\" &amp;&amp; ('Country' ==  \"Australia\" ))then \"Australia\"when  ('Region' == \"APAC\" &amp;&amp; ('Country' ==  \"India\" ))then \"India\"   when  ('Region' == \"APAC\" )then \"RO APAC\"  when  ('Region' == \"APAC\" )then \"RO APAC\"  when  ('Region' == \"JP\" &amp;&amp; ('Country' ==  \"Japan\" ))then \"Japan\"  when  ('Region' == \"JP\"  )then \"RO JP\"  when  ('Region' == \"LACA\" &amp;&amp; ('Country' ==  \"Brazil\" ))then \"Brazil\" when ('Region' == \"LACA\" )then \"RO LACA\"  when ('Region' == \"Other\" )then \"Other\" else \"ERROR\" end as 'Country' ; AOV = filter AOV by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER AOV ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYAOV = filter AOV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYAOV = filter AOV by 'Month' in   {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYAOV = filter AOV by 'Month' in {{cell(Selector_Quarter.selection,0,\"YTD_Month_cum\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYAOV = filter AOV by 'Month' in{{cell(Selector_Quarter.selection,0,\"YTD_Month_cum\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------/////////////////////////////-----------LOAD ATTRITION ----------------/////////////////////////////////////////\nAttrition = load \"APM_Attrition\"; Attrition = filter Attrition by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}} ;\nAttrition = filter Attrition by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nAttrition = filter Attrition by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nAttrition = group Attrition by ('Cloud', 'Quarter', 'Month', 'Fiscal_Year', 'Region');\nAttrition = foreach Attrition generate  'Cloud' as 'Cloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Attrition_Product')*-1 as 'Attrition_Product', sum('TTM_Product')*-1 as 'TTM_Product',sum('AOV_twelve_month_ago_Product') as 'AOV_twelve_month_ago','Region' as 'Region' ;;\n----------------------------------------------------------------------------------------------FILTER ATTRITION -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYATT = filter Attrition by 'Month' in   {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYATT = filter Attrition by 'Month' in {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq4_CYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month_cum\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\n----------------------------------------------------------------------------------------------------------------------------------LOAD/FILTER PIPEGEN-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nPipegen = load \"APM_Pipegen1\";\nPipegen = filter Pipegen by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nPipegen = filter Pipegen by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nPipegen = group Pipegen by ('Fiscal_Year','Quarter', 'Region', 'Cloud', 'Month','Subcloud', 'Cloud_2','Country');\nPipegen = foreach Pipegen generate  'Cloud' as 'Cloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Pipegen') as 'Pipegen','Region' as 'Region', case when ('Region' == \"AMER\" &amp;&amp; ('Country' ==  \"Canada\" ))then \"Canada\" when ('Region' == \"AMER\" &amp;&amp; ('Country' ==  \"United States\" ))then \"United States\" when ('Region' == \"AMER\")then \"RO AMER\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"United Kingdom\" ))then \"United Kingdom\"  when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"France\" ))then \"France\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"Germany\" ))then \"Germany\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"Netherlands\" ))then \"Netherlands\" when ('Region' == \"EMEA\" ) then \"RO EMEA\" when  ('Region' == \"APAC\" &amp;&amp; ('Country' ==  \"Australia\" ))then \"Australia\"when  ('Region' == \"APAC\" &amp;&amp; ('Country' ==  \"India\" ))then \"India\"   when  ('Region' == \"APAC\" )then \"RO APAC\"  when  ('Region' == \"APAC\" )then \"RO APAC\"  when  ('Region' == \"JP\" &amp;&amp; ('Country' ==  \"Japan\" ))then \"Japan\"  when  ('Region' == \"JP\"  )then \"RO JP\"  when  ('Region' == \"LACA\" &amp;&amp; ('Country' ==  \"Brazil\" ))then \"Brazil\" when ('Region' == \"LACA\" )then \"RO LACA\"  when ('Region' == \"Other\" )then \"Other\" else \"ERROR\" end as 'Country' ; Pipegen = filter Pipegen by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}} ;;\n\nq2_CYPipegen = filter Pipegen by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYPipegen = filter Pipegen by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYPipegen = filter Pipegen by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_pipegen\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYPipegen = filter Pipegen by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_pipegen\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq2_CYPipegen = filter Pipegen by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYPipegen = filter Pipegen by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_CYPipegen = filter Pipegen by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_pipegen\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYPipegen = filter Pipegen by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_pipegen\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nnHC = load \"APM_HC\";\nHC = filter HC by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nHC = foreach HC generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('SE') as 'SE',sum('AE') as 'AE',sum('Co_Prime') as 'Co_Prime','Region' as 'Region', case when ('Region' == \"AMER\" &amp;&amp; ('Country' ==  \"Canada\" ))then \"Canada\" when ('Region' == \"AMER\" &amp;&amp; ('Country' ==  \"United States\" ))then \"United States\" when ('Region' == \"AMER\")then \"RO AMER\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"United Kingdom\" ))then \"United Kingdom\"  when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"France\" ))then \"France\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"Germany\" ))then \"Germany\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"Netherlands\" ))then \"Netherlands\" when ('Region' == \"EMEA\" ) then \"RO EMEA\" when  ('Region' == \"APAC\" &amp;&amp; ('Country' ==  \"Australia\" ))then \"Australia\" when  ('Region' == \"APAC\" &amp;&amp; ('Country' ==  \"India\" ))then \"India\"  when  ('Region' == \"APAC\" )then \"RO APAC\"  when  ('Region' == \"APAC\" )then \"RO APAC\"  when  ('Region' == \"JP\" &amp;&amp; ('Country' ==  \"Japan\" ))then \"Japan\"  when  ('Region' == \"JP\"  )then \"RO JP\"  when  ('Region' == \"LACA\" &amp;&amp; ('Country' ==  \"Brazil\" ))then \"Brazil\" when ('Region' == \"LACA\" )then \"RO LACA\" when ('Region' == \"Other\" )then \"Other\" else \"ERROR\" end as 'Country' ; HC = filter HC by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nHC = filter HC by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYHC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYHC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_HC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYHC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYHC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_HC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD SWE INFRA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSW = load \"APM_SWE_INFRA\";\nSW = filter SW by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nSW = foreach SW generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('SWE') as 'SWE',sum('INFRA') as 'INFRA','Region' as 'Region', case when ('Region' == \"AMER\" &amp;&amp; ('Country' ==  \"Canada\" ))then \"Canada\" when ('Region' == \"AMER\" &amp;&amp; ('Country' ==  \"United States\" ))then \"United States\" when ('Region' == \"AMER\")then \"RO AMER\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"United Kingdom\" ))then \"United Kingdom\"  when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"France\" ))then \"France\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"Germany\" ))then \"Germany\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"Netherlands\" ))then \"Netherlands\" when ('Region' == \"EMEA\" ) then \"RO EMEA\" when  ('Region' == \"APAC\" &amp;&amp; ('Country' ==  \"Australia\" ))then \"Australia\" when  ('Region' == \"APAC\" &amp;&amp; ('Country' ==  \"India\" ))then \"India\"  when  ('Region' == \"APAC\" )then \"RO APAC\"  when  ('Region' == \"APAC\" )then \"RO APAC\"  when  ('Region' == \"JP\" &amp;&amp; ('Country' ==  \"Japan\" ))then \"Japan\"  when  ('Region' == \"JP\"  )then \"RO JP\"  when  ('Region' == \"LACA\" &amp;&amp; ('Country' ==  \"Brazil\" ))then \"Brazil\" when ('Region' == \"LACA\" )then \"RO LACA\" when ('Region' == \"Other\" )then \"Other\" else \"ERROR\" end as 'Country' ; SW = filter SW by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nSW = filter SW by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYSW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYSW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_SW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYSW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYSW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_SW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD REDACCOUNTS------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nREDACCOUNTS = load \"APM_REDACCOUNTS\";\nREDACCOUNTS = filter REDACCOUNTS by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nREDACCOUNTS = foreach REDACCOUNTS generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Red_Accounts') as 'Red_Accounts','Region' as 'Region', case when ('Region' == \"AMER\" &amp;&amp; ('Country' ==  \"Canada\" ))then \"Canada\" when ('Region' == \"AMER\" &amp;&amp; ('Country' ==  \"United States\" ))then \"United States\" when ('Region' == \"AMER\")then \"RO AMER\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"United Kingdom\" ))then \"United Kingdom\"  when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"France\" ))then \"France\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"Germany\" ))then \"Germany\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"Netherlands\" ))then \"Netherlands\" when ('Region' == \"EMEA\" ) then \"RO EMEA\" when  ('Region' == \"APAC\" &amp;&amp; ('Country' ==  \"Australia\" ))then \"Australia\" when  ('Region' == \"APAC\" &amp;&amp; ('Country' ==  \"India\" ))then \"India\"  when  ('Region' == \"APAC\" )then \"RO APAC\"  when  ('Region' == \"APAC\" )then \"RO APAC\"  when  ('Region' == \"JP\" &amp;&amp; ('Country' ==  \"Japan\" ))then \"Japan\"  when  ('Region' == \"JP\"  )then \"RO JP\"  when  ('Region' == \"LACA\" &amp;&amp; ('Country' ==  \"Brazil\" ))then \"Brazil\" when ('Region' == \"LACA\" )then \"RO LACA\" when ('Region' == \"Other\" )then \"Other\" else \"ERROR\" end as 'Country' ; REDACCOUNTS = filter REDACCOUNTS by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nREDACCOUNTS = filter REDACCOUNTS by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYREDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYREDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_REDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYREDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYREDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_REDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD T_P T&amp;P Cost to Serve------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nT_P = load \"APM_T_P\";\nT_P = filter T_P by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nT_P = foreach T_P generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('CTS') as 'CTS','Region' as 'Region', case when ('Region' == \"AMER\" &amp;&amp; ('Country' ==  \"Canada\" ))then \"Canada\" when ('Region' == \"AMER\" &amp;&amp; ('Country' ==  \"United States\" ))then \"United States\" when ('Region' == \"AMER\")then \"RO AMER\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"United Kingdom\" ))then \"United Kingdom\"  when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"France\" ))then \"France\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"Germany\" ))then \"Germany\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"Netherlands\" ))then \"Netherlands\" when ('Region' == \"EMEA\" ) then \"RO EMEA\" when  ('Region' == \"APAC\" &amp;&amp; ('Country' ==  \"Australia\" ))then \"Australia\" when  ('Region' == \"APAC\" &amp;&amp; ('Country' ==  \"India\" ))then \"India\"  when  ('Region' == \"APAC\" )then \"RO APAC\"  when  ('Region' == \"APAC\" )then \"RO APAC\"  when  ('Region' == \"JP\" &amp;&amp; ('Country' ==  \"Japan\" ))then \"Japan\"  when  ('Region' == \"JP\"  )then \"RO JP\"  when  ('Region' == \"LACA\" &amp;&amp; ('Country' ==  \"Brazil\" ))then \"Brazil\" when ('Region' == \"LACA\" )then \"RO LACA\" when ('Region' == \"Other\" )then \"Other\" else \"ERROR\" end as 'Country' ; T_P = filter T_P by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nT_P = filter T_P by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYT_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYT_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_T_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYT_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYT_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_T_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD AVAILABILITY------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nAVAILABILITY = load \"APM_TECH_AVAILABILITY\";\nAVAILABILITY = filter AVAILABILITY by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nAVAILABILITY = foreach AVAILABILITY generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Availability') as 'Availability','Region' as 'Region', case when ('Region' == \"AMER\" &amp;&amp; ('Country' ==  \"Canada\" ))then \"Canada\" when ('Region' == \"AMER\" &amp;&amp; ('Country' ==  \"United States\" ))then \"United States\" when ('Region' == \"AMER\")then \"RO AMER\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"United Kingdom\" ))then \"United Kingdom\"  when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"France\" ))then \"France\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"Germany\" ))then \"Germany\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"Netherlands\" ))then \"Netherlands\" when ('Region' == \"EMEA\" ) then \"RO EMEA\" when  ('Region' == \"APAC\" &amp;&amp; ('Country' ==  \"Australia\" ))then \"Australia\" when  ('Region' == \"APAC\" &amp;&amp; ('Country' ==  \"India\" ))then \"India\"  when  ('Region' == \"APAC\" )then \"RO APAC\"  when  ('Region' == \"APAC\" )then \"RO APAC\"  when  ('Region' == \"JP\" &amp;&amp; ('Country' ==  \"Japan\" ))then \"Japan\"  when  ('Region' == \"JP\"  )then \"RO JP\"  when  ('Region' == \"LACA\" &amp;&amp; ('Country' ==  \"Brazil\" ))then \"Brazil\" when ('Region' == \"LACA\" )then \"RO LACA\" when ('Region' == \"Other\" )then \"Other\" else \"ERROR\" end as 'Country' ; AVAILABILITY = filter AVAILABILITY by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nAVAILABILITY = filter AVAILABILITY by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYAVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYAVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_AVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYAVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYAVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_AVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD TRANSACTIONS------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nTRANSACTIONS = load \"APM_T_P_Transactions\";\nTRANSACTIONS = filter TRANSACTIONS by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nTRANSACTIONS = foreach TRANSACTIONS generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Transactions') as 'Transactions','Region' as 'Region', case when ('Region' == \"AMER\" &amp;&amp; ('Country' ==  \"Canada\" ))then \"Canada\" when ('Region' == \"AMER\" &amp;&amp; ('Country' ==  \"United States\" ))then \"United States\" when ('Region' == \"AMER\")then \"RO AMER\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"United Kingdom\" ))then \"United Kingdom\"  when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"France\" ))then \"France\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"Germany\" ))then \"Germany\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"Netherlands\" ))then \"Netherlands\" when ('Region' == \"EMEA\" ) then \"RO EMEA\" when  ('Region' == \"APAC\" &amp;&amp; ('Country' ==  \"Australia\" ))then \"Australia\" when  ('Region' == \"APAC\" &amp;&amp; ('Country' ==  \"India\" ))then \"India\"  when  ('Region' == \"APAC\" )then \"RO APAC\"  when  ('Region' == \"APAC\" )then \"RO APAC\"  when  ('Region' == \"JP\" &amp;&amp; ('Country' ==  \"Japan\" ))then \"Japan\"  when  ('Region' == \"JP\"  )then \"RO JP\"  when  ('Region' == \"LACA\" &amp;&amp; ('Country' ==  \"Brazil\" ))then \"Brazil\" when ('Region' == \"LACA\" )then \"RO LACA\" when ('Region' == \"Other\" )then \"Other\" else \"ERROR\" end as 'Country' ; TRANSACTIONS = filter TRANSACTIONS by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nTRANSACTIONS = filter TRANSACTIONS by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYTRANSACTIONS = filter TRANSACTIONS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYTRANSACTIONS = filter TRANSACTIONS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_TRANSACTIONS = filter TRANSACTIONS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYTRANSACTIONS = filter TRANSACTIONS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYTRANSACTIONS = filter TRANSACTIONS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_TRANSACTIONS = filter TRANSACTIONS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD MARKET CUSTOMER------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nCUSTOMER = load \"APM_MARKET_CUSTOMER\";\nCUSTOMER = filter CUSTOMER by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nCUSTOMER = foreach CUSTOMER generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Customer') as 'Customer','Region' as 'Region', case when ('Region' == \"AMER\" &amp;&amp; ('Country' ==  \"Canada\" ))then \"Canada\" when ('Region' == \"AMER\" &amp;&amp; ('Country' ==  \"United States\" ))then \"United States\" when ('Region' == \"AMER\")then \"RO AMER\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"United Kingdom\" ))then \"United Kingdom\"  when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"France\" ))then \"France\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"Germany\" ))then \"Germany\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"Netherlands\" ))then \"Netherlands\" when ('Region' == \"EMEA\" ) then \"RO EMEA\" when  ('Region' == \"APAC\" &amp;&amp; ('Country' ==  \"Australia\" ))then \"Australia\" when  ('Region' == \"APAC\" &amp;&amp; ('Country' ==  \"India\" ))then \"India\"  when  ('Region' == \"APAC\" )then \"RO APAC\"  when  ('Region' == \"APAC\" )then \"RO APAC\"  when  ('Region' == \"JP\" &amp;&amp; ('Country' ==  \"Japan\" ))then \"Japan\"  when  ('Region' == \"JP\"  )then \"RO JP\"  when  ('Region' == \"LACA\" &amp;&amp; ('Country' ==  \"Brazil\" ))then \"Brazil\" when ('Region' == \"LACA\" )then \"RO LACA\" when ('Region' == \"Other\" )then \"Other\" else \"ERROR\" end as 'Country' ; CUSTOMER = filter CUSTOMER by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nCUSTOMER = filter CUSTOMER by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYCUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYCUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_CUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYCUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYCUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_CUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD MARKET SHARE------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSHARE= load \"APM_MARKET_SHARE\";\nSHARE= filter SHARE by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nSHARE= foreach SHARE generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('TAM') as 'TAM','Region' as 'Region', case when ('Region' == \"AMER\" &amp;&amp; ('Country' ==  \"Canada\" ))then \"Canada\" when ('Region' == \"AMER\" &amp;&amp; ('Country' ==  \"United States\" ))then \"United States\" when ('Region' == \"AMER\")then \"RO AMER\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"United Kingdom\" ))then \"United Kingdom\"  when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"France\" ))then \"France\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"Germany\" ))then \"Germany\" when  ('Region' == \"EMEA\" &amp;&amp; ('Country' ==  \"Netherlands\" ))then \"Netherlands\" when ('Region' == \"EMEA\" ) then \"RO EMEA\" when  ('Region' == \"APAC\" &amp;&amp; ('Country' ==  \"Australia\" ))then \"Australia\" when  ('Region' == \"APAC\" &amp;&amp; ('Country' ==  \"India\" ))then \"India\"  when  ('Region' == \"APAC\" )then \"RO APAC\"  when  ('Region' == \"APAC\" )then \"RO APAC\"  when  ('Region' == \"JP\" &amp;&amp; ('Country' ==  \"Japan\" ))then \"Japan\"  when  ('Region' == \"JP\"  )then \"RO JP\"  when  ('Region' == \"LACA\" &amp;&amp; ('Country' ==  \"Brazil\" ))then \"Brazil\" when ('Region' == \"LACA\" )then \"RO LACA\" when ('Region' == \"Other\" )then \"Other\" else \"ERROR\" end as 'Country' ; SHARE= filter SHARE by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nSHARE = filter SHARE by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYSHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYSHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_SHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYSHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYSHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_SHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Grouping------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult = group  q2_CYACV by 'Cloud' full, q2_PYACV by 'Cloud' full, q3_CYACV by 'Cloud' full, q3_PYACV by 'Cloud' full, q2_CYAOV by 'Cloud' full, q2_PYAOV by 'Cloud' full, q3_CYAOV by 'Cloud' full, q3_PYAOV by 'Cloud' full,  q2_CYATT by 'Cloud' full, q2_PYATT by 'Cloud' full, q3_CYATT by 'Cloud' full, q3_PYATT by 'Cloud' full,q4_CYATT by 'Cloud' full,  q2_CYPipegen by 'Cloud' full, q2_PYPipegen by 'Cloud' full, q3_CYPipegen by 'Cloud' full, q3_PYPipegen by 'Cloud'full,q2_CYHC by 'Cloud' full, q2_PYHC by 'Cloud' full,q2_PY_2_HC by 'Cloud' full, q3_CYHC by 'Cloud' full, q3_PYHC by 'Cloud' full,q3_PY_2_HC by 'Cloud' full, q2_CYSW by 'Cloud' full, q2_PYSW by 'Cloud' full,q2_PY_2_SW by 'Cloud' full, q3_CYSW by 'Cloud' full, q3_PYSW by 'Cloud' full,q3_PY_2_SW by 'Cloud' full, q2_CYREDACCOUNTS by 'Cloud' full, q2_PYREDACCOUNTS by 'Cloud' full,q2_PY_2_REDACCOUNTS by 'Cloud' full, q3_CYREDACCOUNTS by 'Cloud' full, q3_PYREDACCOUNTS by 'Cloud' full,q3_PY_2_REDACCOUNTS by 'Cloud' full, q2_CYT_P by 'Cloud' full, q2_PYT_P by 'Cloud' full,q2_PY_2_T_P by 'Cloud' full, q3_CYT_P by 'Cloud' full, q3_PYT_P by 'Cloud' full,q3_PY_2_T_P by 'Cloud' full, q2_CYAVAILABILITY by 'Cloud' full, q2_PYAVAILABILITY by 'Cloud' full,q2_PY_2_AVAILABILITY by 'Cloud' full, q3_CYAVAILABILITY by 'Cloud' full, q3_PYAVAILABILITY by 'Cloud' full,q3_PY_2_AVAILABILITY by 'Cloud' full, q2_CYTRANSACTIONS by 'Cloud' full, q2_PYTRANSACTIONS by 'Cloud' full,q2_PY_2_TRANSACTIONS by 'Cloud' full, q3_CYTRANSACTIONS by 'Cloud' full, q3_PYTRANSACTIONS by 'Cloud' full,q3_PY_2_TRANSACTIONS by 'Cloud'  full, q2_CYCUSTOMER by 'Cloud' full, q2_PYCUSTOMER by 'Cloud' full,q2_PY_2_CUSTOMER by 'Cloud' full, q3_CYCUSTOMER by 'Cloud' full, q3_PYCUSTOMER by 'Cloud' full,q3_PY_2_CUSTOMER by 'Cloud'full, q2_CYSHARE by 'Cloud' full, q2_PYSHARE by 'Cloud' full,q2_PY_2_SHARE by 'Cloud' full, q3_CYSHARE by 'Cloud' full, q3_PYSHARE by 'Cloud' full,q3_PY_2_SHARE by 'Cloud',MasterHierarchy by 'Level_1';\n----------------------------------------------/////////////////////////////////////////------PROJECTION----- -////////////////////////////////////////////////-----------------------------------------------------------------------------------------------------------------------------------------------------\nresult = foreach result generate coalesce(MasterHierarchy.'Level_1', q2_CYACV.'Cloud', q2_PYACV.'Cloud', q3_CYACV.'Cloud', q3_PYACV.'Cloud', q2_CYAOV.'Cloud', q2_PYAOV.'Cloud', q3_CYAOV.'Cloud', q3_PYAOV.'Cloud', q2_CYHC.'Cloud', q2_PYHC.'Cloud',q2_PY_2_HC.'Cloud', q3_CYHC.'Cloud', q3_PYHC.'Cloud',q3_PY_2_HC.'Cloud', q2_CYPipegen.'Cloud', q2_PYPipegen.'Cloud', q3_CYPipegen.'Cloud', q3_PYPipegen.'Cloud', q2_CYREDACCOUNTS.'Cloud', q2_PYREDACCOUNTS.'Cloud', q3_CYREDACCOUNTS.'Cloud', q3_PYREDACCOUNTS.'Cloud', q2_CYT_P.'Cloud', q2_PYT_P.'Cloud', q3_CYT_P.'Cloud', q3_PYT_P.'Cloud', q2_CYAVAILABILITY.'Cloud', q2_PYAVAILABILITY.'Cloud', q3_CYAVAILABILITY.'Cloud', q3_PYAVAILABILITY.'Cloud', q2_CYTRANSACTIONS.'Cloud', q2_PYTRANSACTIONS.'Cloud', q3_CYTRANSACTIONS.'Cloud', q3_PYTRANSACTIONS.'Cloud', q2_CYAVAILABILITY.'Cloud', q2_PYAVAILABILITY.'Cloud', q3_CYAVAILABILITY.'Cloud', q3_PYAVAILABILITY.'Cloud', q2_CYCUSTOMER.'Cloud', q2_PYCUSTOMER.'Cloud', q3_CYCUSTOMER.'Cloud', q3_PYCUSTOMER.'Cloud', q2_CYSHARE.'Cloud', q2_PYSHARE.'Cloud', q3_CYSHARE.'Cloud', q3_PYSHARE.'Cloud') as 'Cloud', last(MasterHierarchy.'Level_1_Ranking') as 'SortOrder', coalesce(sum(q2_CYACV.'ACV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute', coalesce(sum(q3_CYACV.'ACV'), 0) as 'YTD ACV Absolute', ((coalesce(sum(q2_CYACV.'ACV'), 0) - coalesce(sum(q2_PYACV.'ACV'), 0)) / coalesce(sum(q2_PYACV.'ACV'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth', ((coalesce(sum(q3_CYACV.'ACV'), 0) - coalesce(sum(q3_PYACV.'ACV'), 0)) / coalesce(sum(q3_PYACV.'ACV'), 0)) * 100 as 'YTD ACV Growth', coalesce(sum(q2_CYAOV.'AOV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AOV Absolute', coalesce(sum(q3_CYAOV.'AOV'), 0) as 'YTD AOV Absolute', ((coalesce(sum(q2_CYAOV.'AOV'), 0) - coalesce(sum(q2_PYAOV.'AOV'), 0)) / coalesce(sum(q2_PYAOV.'AOV'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AOV Growth', ((coalesce(sum(q3_CYAOV.'AOV'), 0) - coalesce(sum(q3_PYAOV.'AOV'), 0)) / coalesce(sum(q3_PYAOV.'AOV'), 0)) * 100 as 'YTD AOV Growth', coalesce(sum(q2_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q2',coalesce(sum(q3_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q3',coalesce(round(sum(q2_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q2' ,coalesce(round(sum(q2_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q2',coalesce(round(sum(q4_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q3' ,coalesce(round(sum(q4_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q3', coalesce(sum(q2_CYPipegen.'Pipegen'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Pipegen Absolute', coalesce(sum(q3_CYPipegen.'Pipegen'), 0) as 'YTD Pipegen Absolute', ((coalesce(sum(q2_CYPipegen.'Pipegen'), 0) - coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Pipegen Growth', ((coalesce(sum(q3_CYPipegen.'Pipegen'), 0) - coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) * 100 as 'YTD Pipegen Growth',coalesce(sum(q2_CYHC.'SE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE Absolute', coalesce(sum(q3_CYHC.'SE'), 0) as 'YTD SE Absolute', ((coalesce(sum(q2_CYHC.'SE'), 0) - coalesce(sum(q2_PYHC.'SE'), 0)) / coalesce(sum(q2_PYHC.'SE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SE Growth', ((coalesce(sum(q3_CYHC.'SE'), 0) - coalesce(sum(q3_PYHC.'SE'), 0)) / coalesce(sum(q3_PYHC.'SE'), 0)) * 100 as 'YTD SE Growth',(power(coalesce(sum(q2_CYHC.'SE'), 0) / coalesce(sum(q2_PY_2_HC.'SE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR',(power(coalesce(sum(q3_CYHC.'SE'), 0) / coalesce(sum(q3_PY_2_HC.'SE'), 0),(1/2))-1)*100 as 'YTD SE CAGR', coalesce(sum(q2_CYHC.'AE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE Absolute', coalesce(sum(q3_CYHC.'AE'), 0) as 'YTD AE Absolute', ((coalesce(sum(q2_CYHC.'AE'), 0) - coalesce(sum(q2_PYHC.'AE'), 0)) / coalesce(sum(q2_PYHC.'AE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AE Growth', ((coalesce(sum(q3_CYHC.'AE'), 0) - coalesce(sum(q3_PYHC.'AE'), 0)) / coalesce(sum(q3_PYHC.'AE'), 0)) * 100 as 'YTD AE Growth', (power(coalesce(sum(q2_CYHC.'AE'), 0) / coalesce(sum(q2_PY_2_HC.'AE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR',(power(coalesce(sum(q3_CYHC.'AE'), 0) / coalesce(sum(q3_PY_2_HC.'AE'), 0),(1/2))-1)*100 as 'YTD AE CAGR',coalesce(sum(q2_CYHC.'Co_Prime'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime Absolute', coalesce(sum(q3_CYHC.'Co_Prime'), 0) as 'YTD Co_Prime Absolute', ((coalesce(sum(q2_CYHC.'Co_Prime'), 0) - coalesce(sum(q2_PYHC.'Co_Prime'), 0)) / coalesce(sum(q2_PYHC.'Co_Prime'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Co_Prime Growth', ((coalesce(sum(q3_CYHC.'Co_Prime'), 0) - coalesce(sum(q3_PYHC.'Co_Prime'), 0)) / coalesce(sum(q3_PYHC.'Co_Prime'), 0)) * 100 as 'YTD Co_Prime Growth',(power(coalesce(sum(q2_CYHC.'Co_Prime'), 0) / coalesce(sum(q2_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR',(power(coalesce(sum(q3_CYHC.'Co_Prime'), 0) / coalesce(sum(q3_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as 'YTD Co_Prime CAGR',coalesce(sum(q2_CYSW.'SWE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE Absolute', coalesce(sum(q3_CYSW.'SWE'), 0) as 'YTD SWE Absolute', ((coalesce(sum(q2_CYSW.'SWE'), 0) - coalesce(sum(q2_PYSW.'SWE'), 0)) / coalesce(sum(q2_PYSW.'SWE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth', ((coalesce(sum(q3_CYSW.'SWE'), 0) - coalesce(sum(q3_PYSW.'SWE'), 0)) / coalesce(sum(q3_PYSW.'SWE'), 0)) * 100 as 'YTD SWE Growth',(power(coalesce(sum(q2_CYSW.'SWE'), 0) / coalesce(sum(q2_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE CAGR',(power(coalesce(sum(q3_CYSW.'SWE'), 0) / coalesce(sum(q3_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as 'YTD SWE CAGR', coalesce(sum(q2_CYSW.'INFRA'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA Absolute', coalesce(sum(q3_CYSW.'INFRA'), 0) as 'YTD INFRA Absolute', ((coalesce(sum(q2_CYSW.'INFRA'), 0) - coalesce(sum(q2_PYSW.'INFRA'), 0)) / coalesce(sum(q2_PYSW.'INFRA'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth', ((coalesce(sum(q3_CYSW.'INFRA'), 0) - coalesce(sum(q3_PYSW.'INFRA'), 0)) / coalesce(sum(q3_PYSW.'INFRA'), 0)) * 100 as 'YTD INFRA Growth',(power(coalesce(sum(q2_CYSW.'INFRA'), 0) / coalesce(sum(q2_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA CAGR',(power(coalesce(sum(q3_CYSW.'INFRA'), 0) / coalesce(sum(q3_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as 'YTD INFRA CAGR', coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute', coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) as 'YTD Red_Accounts Absolute', ((coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth', ((coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as 'YTD Red_Accounts Growth', coalesce(sum(q2_CYT_P.'CTS'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute', coalesce(sum(q3_CYT_P.'CTS'), 0) as 'YTD CTS Absolute', ((coalesce(sum(q2_CYT_P.'CTS'), 0) - coalesce(sum(q2_PYT_P.'CTS'), 0)) / coalesce(sum(q2_PYT_P.'CTS'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth', ((coalesce(sum(q3_CYT_P.'CTS'), 0) - coalesce(sum(q3_PYT_P.'CTS'), 0)) / coalesce(sum(q3_PYT_P.'CTS'), 0)) * 100 as 'YTD CTS Growth', coalesce(sum(q2_CYAVAILABILITY.'Availability'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute', coalesce(sum(q3_CYAVAILABILITY.'Availability'), 0) as 'YTD Availability Absolute', ((coalesce(sum(q2_CYAVAILABILITY.'Availability'), 0) - coalesce(sum(q2_PYAVAILABILITY.'Availability'), 0)) / coalesce(sum(q2_PYAVAILABILITY.'Availability'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth', ((coalesce(sum(q3_CYAVAILABILITY.'Availability'), 0) - coalesce(sum(q3_PYAVAILABILITY.'Availability'), 0)) / coalesce(sum(q3_PYAVAILABILITY.'Availability'), 0)) * 100 as 'YTD Availability Growth', coalesce(sum(q2_CYTRANSACTIONS.'Transactions'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute', coalesce(sum(q3_CYTRANSACTIONS.'Transactions'), 0) as 'YTD Transactions Absolute', ((coalesce(sum(q2_CYTRANSACTIONS.'Transactions'), 0) - coalesce(sum(q2_PYTRANSACTIONS.'Transactions'), 0)) / coalesce(sum(q2_PYTRANSACTIONS.'Transactions'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth', ((coalesce(sum(q3_CYTRANSACTIONS.'Transactions'), 0) - coalesce(sum(q3_PYTRANSACTIONS.'Transactions'), 0)) / coalesce(sum(q3_PYTRANSACTIONS.'Transactions'), 0)) * 100 as 'YTD Transactions Growth', coalesce(sum(q2_CYCUSTOMER.'Customer'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute', coalesce(sum(q3_CYCUSTOMER.'Customer'), 0) as 'YTD Customer Absolute', ((coalesce(sum(q2_CYCUSTOMER.'Customer'), 0) - coalesce(sum(q2_PYCUSTOMER.'Customer'), 0)) / coalesce(sum(q2_PYCUSTOMER.'Customer'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth', ((coalesce(sum(q3_CYCUSTOMER.'Customer'), 0) - coalesce(sum(q3_PYCUSTOMER.'Customer'), 0)) / coalesce(sum(q3_PYCUSTOMER.'Customer'), 0)) * 100 as 'YTD Customer Growth', coalesce(sum(q2_CYSHARE.'TAM'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute', coalesce(sum(q3_CYSHARE.'TAM'), 0) as 'YTD TAM Absolute', ((coalesce(sum(q2_CYSHARE.'TAM'), 0) - coalesce(sum(q2_PYSHARE.'TAM'), 0)) / coalesce(sum(q2_PYSHARE.'TAM'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth', ((coalesce(sum(q3_CYSHARE.'TAM'), 0) - coalesce(sum(q3_PYSHARE.'TAM'), 0)) / coalesce(sum(q3_PYSHARE.'TAM'), 0)) * 100 as 'YTD TAM Growth';\nnline =  group MasterHierarchy by 'all';line= foreach line generate \"-----------------------------------------------------------------\" as 'Cloud',\"{{cell(Selector_Quarter.selection,0,\"Line_Rank\").asString()}}\"  as 'SortOrder';result = union result,line;----------------------------------------------------------------------------------------------------------------------------------------------------------------\n--------------------------------------------------------------------------------------------------------------------------------------FINAL FILTER FOR Premier a la carte-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult = order result by 'SortOrder' asc;\nresult = filter result by 'Cloud' not in {{cell(Selector_Quarter.selection,0,\"Filter_Table\").asString()}};\n--------------------------------------------------------------------------------------------------------------------------------------FINAL PROJECTION-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nresult = foreach result generate '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute', 'YTD ACV Absolute' as 'YTD ACV Absolute', '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth', 'YTD ACV Growth' as 'YTD ACV Growth', '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AOV Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AOV Absolute', 'YTD AOV Absolute' as 'YTD AOV Absolute', '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AOV Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AOV Growth', 'YTD AOV Growth' as 'YTD AOV Growth', sum('Attrition_CY_Q2') as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Attrition Absolute', sum('Attrition_CY_Q3') as 'YTD Attrition Absolute',(coalesce(round(sum('TTM_Product_CY_Q2'), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q2), 0), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Attrition TTM Rate', (coalesce(round(sum('TTM_Product_CY_Q3'), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q3), 0), 0)) * 100 as 'YTD Attrition TTM Rate', '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Pipegen Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} PipeGen Absolute','YTD Pipegen Absolute' as 'YTD PipeGen Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Pipegen Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} PipeGen Growth',   'YTD Pipegen Growth' as  'YTD PipeGen Growth';",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true
      },
      "Fiscal_Year_1": {
        "broadcastFacet": true,
        "label": "Fiscal_Year",
        "selectMode": "singlerequired",
        "start": "{\"display\":[\"2019\"]}",
        "type": "staticflex",
        "values": [
          "{\"display\":\"2019\",\"value\":2019,\"CY\":\"2019\",\"PY\":\"2018\",\"PY_2\":\"2017\"}",
          "{\"display\":\"2018\",\"value\":2018,\"CY\":\"2018\",\"PY\":\"2017\",\"PY_2\":\"2016\"}"
        ]
      },
      "Table_Page_4_Header": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Page_4_Header",
        "numbers": [],
        "query": "MasterHierarchy = load \"Master_Hierarchy\";\nMasterHierarchy = filter MasterHierarchy by 'Level_1' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nACV = load \"APM_ACV\";\nACV = filter ACV by 'Segment' != \"CSG\";\nACV = filter ACV by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nACV = filter ACV by 'Cloud' in {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};;\nACV = group ACV by ('Cloud','Subcloud', 'Quarter','Month', 'Fiscal_Year', 'Region' , 'Country');\nACV = foreach ACV generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year' ,'Month' as 'Month',sum('ACV') as 'ACV', 'Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; ACV = filter ACV by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}} ;\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD NONE For Fake Header line----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nAPM_None = load \"APM_ACV\";\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER ACV----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYACV = filter ACV by 'Month' in   {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYACV = filter ACV by 'Month' in   {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nn\nAOV = load \"APM_AOV\";\nAOV = filter AOV by 'Segment' != \"CSG\";\nAOV = filter AOV by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\n--AOV = filter AOV by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nAOV = foreach AOV generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('AOV') as 'AOV','Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; AOV = filter AOV by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER AOV ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYAOV = filter AOV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYAOV = filter AOV by 'Month' in   {{cell(Selector_Quarter.selection,0,\"Month\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYAOV = filter AOV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month_cum\").asString()}}&amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYAOV = filter AOV by 'Month' in {{cell(Selector_Quarter.selection,0,\"YTD_Month_cum\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------/////////////////////////////-----------LOAD ATTRITION ----------------/////////////////////////////////////////\n\nAttrition = load \"APM_Attrition\";\nAttrition = filter Attrition by 'Segment' != \"CSG\";\nAttrition = filter Attrition by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\n--Attrition = filter Attrition by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nAttrition = foreach Attrition generate  'Cloud' as 'Cloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Attrition')*-1 as 'Attrition_Product', sum('TTM')*-1 as 'TTM_Product',sum('AOV_twelve_month_ago') as 'AOV_twelve_month_ago','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country';\n----------------------------------------------------------------------------------------------FILTER ATTRITION -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n Attrition = filter Attrition by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}} ;q2_CYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYATT = filter Attrition by 'Month' in   {{cell(Selector_Quarter.selection,0,\"Month\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYATT = filter Attrition by 'Month' in   {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq4_CYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month_cum\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\n------------------------------------------------------------------------------------------------------------------------------------------------LOAD PIPEGEN--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nPipegen = load \"APM_Pipegen1\";\nPipegen = filter Pipegen by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};Pipegen = filter Pipegen by 'Segment' != \"CSG\";\nPipegen = filter Pipegen by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};Pipegen = group Pipegen by ('Fiscal_Year','Quarter','Cloud','Region','Month','Country');\nPipegen = foreach Pipegen generate  'Cloud' as 'Cloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Pipegen') as 'Pipegen','Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'  ; Pipegen = filter Pipegen by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}} ;;\n\nq2_CYPipegen = filter Pipegen by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYPipegen = filter Pipegen by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYPipegen = filter Pipegen by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_pipegen\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYPipegen = filter Pipegen by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_pipegen\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD /FILTER HC---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nHC = load \"APM_HC\";\nHC = filter HC by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nHC = foreach HC generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('SE') as 'SE',sum('AE') as 'AE',sum('Co_Prime') as 'Co_Prime','Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'  ; HC = filter HC by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\n--HC = filter HC by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYHC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYHC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq2_PY_2_HC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\nq3_CYHC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYHC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_PY_2_HC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD SWE INFRA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSW = load \"APM_SWE_INFRA\";\nSW = filter SW by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nSW = foreach SW generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('SWE') as 'SWE',sum('INFRA') as 'INFRA','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; SW = filter SW by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nSW = filter SW by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYSW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYSW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq2_PY_2_SW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\nq3_CYSW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYSW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_PY_2_SW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD T_P------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nT_P = load \"APM_T_P\";\nT_P = filter T_P by 'Cloud' != \"TOTALS/SUMMARY\";\nT_P = filter T_P by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nT_P = foreach T_P generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('CTS') as 'CTS','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; T_P = filter T_P by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nT_P = filter T_P by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYT_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYT_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq2_PY_2_T_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\nq3_CYT_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYT_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_PY_2_T_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD TRANSACTION------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nTRANSACTION = load \"APM_T_P_Transactions\";TRANSACTION = filter TRANSACTION by 'Cloud' != \"TOTALS/SUMMARY\";\nTRANSACTION = filter TRANSACTION by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nTRANSACTION = foreach TRANSACTION generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Transactions') as 'Transactions','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; TRANSACTION = filter TRANSACTION by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nTRANSACTION = filter TRANSACTION by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYTRANSACTION = filter TRANSACTION by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYTRANSACTION = filter TRANSACTION by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq2_PY_2_TRANSACTION = filter TRANSACTION by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\nq3_CYTRANSACTION = filter TRANSACTION by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYTRANSACTION = filter TRANSACTION by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_PY_2_TRANSACTION = filter TRANSACTION by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD AVAILABILITY------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nAVAILABILITY = load \"APM_TECH_AVAILABILITY\";AVAILABILITY = filter AVAILABILITY by 'Cloud' != \"TOTALS/SUMMARY\";\nAVAILABILITY = filter AVAILABILITY by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nAVAILABILITY = foreach AVAILABILITY generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Availability') as 'Availability','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; AVAILABILITY = filter AVAILABILITY by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nAVAILABILITY = filter AVAILABILITY by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYAVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYAVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq2_PY_2_AVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\nq3_CYAVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYAVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_PY_2_AVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD REDACCOUNTS------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nREDACCOUNTS = load \"APM_REDACCOUNTS\";REDACCOUNTS = filter REDACCOUNTS by 'Cloud' != \"TOTALS/SUMMARY\";\nREDACCOUNTS = filter REDACCOUNTS by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nREDACCOUNTS = foreach REDACCOUNTS generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Red_Accounts') as 'Red_Accounts','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; REDACCOUNTS = filter REDACCOUNTS by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nREDACCOUNTS = filter REDACCOUNTS by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter_REDACCOUNTS\").asString()}};\nq2_CYREDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYREDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq2_PY_2_REDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\nq3_CYREDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYREDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_PY_2_REDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD MARKET SHARE------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSHARE = load \"APM_MARKET_SHARE\";SHARE = filter SHARE by 'Cloud' == \"TOTALS/SUMMARY\";\nSHARE = filter SHARE by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nSHARE = foreach SHARE generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('TAM') as 'TAM','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; SHARE = filter SHARE by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\n--SHARE = filter SHARE by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYSHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYSHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq2_PY_2_SHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\nq3_CYSHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_cum\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYSHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_cum\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_PY_2_SHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_cum\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD CUSTOMER------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nCUSTOMER = load \"APM_MARKET_CUSTOMER\";CUSTOMER = filter CUSTOMER by 'Cloud' == \"TOTALS/SUMMARY\";\nCUSTOMER = filter CUSTOMER by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nCUSTOMER = foreach CUSTOMER generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Customer') as 'Customer',sum('Cloud_m1') as 'Customer1',sum('Cloud_m2') as 'Customer2',sum('Cloud_m3') as 'Customer3','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ;\n CUSTOMER = filter CUSTOMER by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\n--CUSTOMER = filter CUSTOMER by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYCUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYCUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq2_PY_2_CUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\nq3_CYCUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_cum\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYCUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_cum\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_PY_2_CUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\n\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Grouping------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nresult_Total = group q2_CYACV by all full, q2_PYACV by all full, q3_CYACV by all full, q3_PYACV by all full, q2_CYAOV by all full, q2_PYAOV by all full, q3_CYAOV by all full, q3_PYAOV by all full, q2_CYATT by all full, q2_PYATT by all full, q3_CYATT by all full, q3_PYATT by all full,q4_CYATT by all full,  q2_CYPipegen by all full, q2_PYPipegen by all full, q3_CYPipegen by all full, q3_PYPipegen by all full,q2_CYHC by all full, q2_PYHC by all full,q2_PY_2_HC by all full, q3_CYHC by all full, q3_PYHC by all full,q3_PY_2_HC by all full, q2_CYSW by all full, q2_PYSW by all full,q2_PY_2_SW by all full, q3_CYSW by all full, q3_PYSW by all full,q3_PY_2_SW by all full, q2_CYT_P by all full, q2_PYT_P by all full, q3_CYT_P by all full, q3_PYT_P by all full, q2_CYTRANSACTION by all full, q2_PYTRANSACTION by all full, q3_CYTRANSACTION by all full, q3_PYTRANSACTION by all full, q2_CYAVAILABILITY by all full, q2_PYAVAILABILITY by all full, q3_CYAVAILABILITY by all full, q3_PYAVAILABILITY by all full, q2_CYREDACCOUNTS by all full, q2_PYREDACCOUNTS by all full, q3_CYREDACCOUNTS by all full, q3_PYREDACCOUNTS by all full, q2_CYSHARE by all full, q2_PYSHARE by all full, q3_CYSHARE by all full, q3_PYSHARE by all full, q2_CYCUSTOMER by all full, q2_PYCUSTOMER by all full, q3_CYCUSTOMER by all full, q3_PYCUSTOMER by all;\nn\nresult_Total = foreach result_Total generate \"TOTAL\" as 'Cloud', coalesce(sum(q2_CYACV.'ACV'),0) as 'A', coalesce(sum(q2_PYACV.'ACV'),0) as 'B', coalesce(sum(q3_CYACV.'ACV'),0) as 'C', coalesce(sum(q3_PYACV.'ACV'),0) as 'D',coalesce(sum(q2_CYAOV.'AOV'),0) as 'E', coalesce(sum(q2_PYAOV.'AOV'),0) as 'F', coalesce(sum(q3_CYAOV.'AOV'),0) as 'G', coalesce(sum(q3_PYAOV.'AOV'),0) as 'H',coalesce(sum(q2_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q2',coalesce(sum(q3_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q3',coalesce(round(sum(q2_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q2' ,coalesce(round(sum(q2_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q2',coalesce(round(sum(q4_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q3' ,coalesce(round(sum(q4_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q3', coalesce(sum(q2_CYPipegen.'Pipegen'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Pipegen Absolute', coalesce(sum(q3_CYPipegen.'Pipegen'), 0) as 'YTD Pipegen Absolute', ((coalesce(sum(q2_CYPipegen.'Pipegen'), 0) - coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Pipegen Growth', ((coalesce(sum(q3_CYPipegen.'Pipegen'), 0) - coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) * 100 as 'YTD Pipegen Growth',coalesce(sum(q2_CYHC.'SE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE Absolute', coalesce(sum(q3_CYHC.'SE'), 0) as 'YTD SE Absolute', ((coalesce(sum(q2_CYHC.'SE'), 0) - coalesce(sum(q2_PYHC.'SE'), 0)) / coalesce(sum(q2_PYHC.'SE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SE Growth',(power(coalesce(sum(q2_CYHC.'SE'), 0) / coalesce(sum(q2_PY_2_HC.'SE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR',(power(coalesce(sum(q3_CYHC.'SE'), 0) / coalesce(sum(q3_PY_2_HC.'SE'), 0),(1/2))-1)*100 as 'YTD SE CAGR', ((coalesce(sum(q3_CYHC.'SE'), 0) - coalesce(sum(q3_PYHC.'SE'), 0)) / coalesce(sum(q3_PYHC.'SE'), 0)) * 100 as 'YTD SE Growth', coalesce(sum(q2_CYHC.'AE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE Absolute', coalesce(sum(q3_CYHC.'AE'), 0) as 'YTD AE Absolute', ((coalesce(sum(q2_CYHC.'AE'), 0) - coalesce(sum(q2_PYHC.'AE'), 0)) / coalesce(sum(q2_PYHC.'AE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AE Growth', ((coalesce(sum(q3_CYHC.'AE'), 0) - coalesce(sum(q3_PYHC.'AE'), 0)) / coalesce(sum(q3_PYHC.'AE'), 0)) * 100 as 'YTD AE Growth',(power(coalesce(sum(q2_CYHC.'AE'), 0) / coalesce(sum(q2_PY_2_HC.'AE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR',(power(coalesce(sum(q3_CYHC.'AE'), 0) / coalesce(sum(q3_PY_2_HC.'AE'), 0),(1/2))-1)*100 as 'YTD AE CAGR', coalesce(sum(q2_CYHC.'Co_Prime'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime Absolute', coalesce(sum(q3_CYHC.'Co_Prime'), 0) as 'YTD Co_Prime Absolute', ((coalesce(sum(q2_CYHC.'Co_Prime'), 0) - coalesce(sum(q2_PYHC.'Co_Prime'), 0)) / coalesce(sum(q2_PYHC.'Co_Prime'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Co_Prime Growth', ((coalesce(sum(q3_CYHC.'Co_Prime'), 0) - coalesce(sum(q3_PYHC.'Co_Prime'), 0)) / coalesce(sum(q3_PYHC.'Co_Prime'), 0)) * 100 as 'YTD Co_Prime Growth',(power(coalesce(sum(q2_CYHC.'Co_Prime'), 0) / coalesce(sum(q2_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR',(power(coalesce(sum(q3_CYHC.'Co_Prime'), 0) / coalesce(sum(q3_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as 'YTD Co_Prime CAGR', coalesce(sum(q2_CYSW.'SWE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE Absolute', coalesce(sum(q3_CYSW.'SWE'), 0) as 'YTD SWE Absolute', ((coalesce(sum(q2_CYSW.'SWE'), 0) - coalesce(sum(q2_PYSW.'SWE'), 0)) / coalesce(sum(q2_PYSW.'SWE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth', ((coalesce(sum(q3_CYSW.'SWE'), 0) - coalesce(sum(q3_PYSW.'SWE'), 0)) / coalesce(sum(q3_PYSW.'SWE'), 0)) * 100 as 'YTD SWE Growth',(power(coalesce(sum(q2_CYSW.'SWE'), 0) / coalesce(sum(q2_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE CAGR',(power(coalesce(sum(q3_CYSW.'SWE'), 0) / coalesce(sum(q3_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as 'YTD SWE CAGR', coalesce(sum(q2_CYSW.'INFRA'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA Absolute', coalesce(sum(q3_CYSW.'INFRA'), 0) as 'YTD INFRA Absolute', ((coalesce(sum(q2_CYSW.'INFRA'), 0) - coalesce(sum(q2_PYSW.'INFRA'), 0)) / coalesce(sum(q2_PYSW.'INFRA'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth', ((coalesce(sum(q3_CYSW.'INFRA'), 0) - coalesce(sum(q3_PYSW.'INFRA'), 0)) / coalesce(sum(q3_PYSW.'INFRA'), 0)) * 100 as 'YTD INFRA Growth',(power(coalesce(sum(q2_CYSW.'INFRA'), 0) / coalesce(sum(q2_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA CAGR',(power(coalesce(sum(q3_CYSW.'INFRA'), 0) / coalesce(sum(q3_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as 'YTD INFRA CAGR', coalesce(sum(q2_CYT_P.'CTS'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute', coalesce(sum(q3_CYT_P.'CTS'), 0) as 'YTD CTS Absolute', ((coalesce(sum(q2_CYT_P.'CTS'), 0) - coalesce(sum(q2_PYT_P.'CTS'), 0)) / coalesce(sum(q2_PYT_P.'CTS'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth', ((coalesce(sum(q3_CYT_P.'CTS'), 0) - coalesce(sum(q3_PYT_P.'CTS'), 0)) / coalesce(sum(q3_PYT_P.'CTS'), 0)) * 100 as 'YTD CTS Growth', coalesce(sum(q2_CYTRANSACTION.'Transactions'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute', coalesce(sum(q3_CYTRANSACTION.'Transactions'), 0) as 'YTD Transactions Absolute', ((coalesce(sum(q2_CYTRANSACTION.'Transactions'), 0) - coalesce(sum(q2_PYTRANSACTION.'Transactions'), 0)) / coalesce(sum(q2_PYTRANSACTION.'Transactions'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth', ((coalesce(sum(q3_CYTRANSACTION.'Transactions'), 0) - coalesce(sum(q3_PYTRANSACTION.'Transactions'), 0)) / coalesce(sum(q3_PYTRANSACTION.'Transactions'), 0)) * 100 as 'YTD Transactions Growth', coalesce(sum(q2_CYAVAILABILITY.'Availability'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute', coalesce(sum(q3_CYAVAILABILITY.'Availability'), 0) as 'YTD Availability Absolute', ((coalesce(sum(q2_CYAVAILABILITY.'Availability'), 0) - coalesce(sum(q2_PYAVAILABILITY.'Availability'), 0)) / coalesce(sum(q2_PYAVAILABILITY.'Availability'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth', ((coalesce(sum(q3_CYAVAILABILITY.'Availability'), 0) - coalesce(sum(q3_PYAVAILABILITY.'Availability'), 0)) / coalesce(sum(q3_PYAVAILABILITY.'Availability'), 0)) * 100 as 'YTD Availability Growth',  coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute', coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) as 'YTD Red_Accounts Absolute', ((coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth', ((coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as 'YTD Red_Accounts Growth',coalesce(sum(q2_CYSHARE.'TAM'), 0)  as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute',coalesce(sum(q3_CYSHARE.'TAM'), 0) as 'YTD TAM Absolute',(coalesce(sum(q2_CYAOV.'AOV'),0)/10000) / coalesce(sum(q2_CYSHARE.'TAM'), 0)  as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth', (coalesce(sum(q3_CYAOV.'AOV'),0)/10000)/ coalesce(sum(q3_CYSHARE.'TAM'), 0)  as 'YTD TAM Growth', coalesce(sum(q2_CYCUSTOMER.'Customer'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute', coalesce(sum(q3_CYCUSTOMER.'Customer'), 0) as 'YTD Customer Absolute', ((coalesce(sum(q2_CYCUSTOMER.'Customer'), 0) - coalesce(sum(q2_PYCUSTOMER.'Customer'), 0)) / coalesce(sum(q2_PYCUSTOMER.'Customer'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth', ((coalesce(sum(q3_CYCUSTOMER.'Customer'), 0) - coalesce(sum(q3_PYCUSTOMER.'Customer'), 0)) / coalesce(sum(q3_PYCUSTOMER.'Customer'), 0)) * 100 as 'YTD Customer Growth';\nnresult_Total = foreach result_Total generate 'A' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute',  'C' as  'YTD ACV Absolute', ((A -B) / B) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth',((C - D) / D) * 100 as 'YTD ACV Growth','E' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AOV Absolute',  'G' as  'YTD AOV Absolute', ((E -F) / F) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AOV Growth',  ((G - H) / H) * 100  as 'YTD AOV Growth', coalesce(sum('Attrition_CY_Q2'),0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Attrition Absolute', coalesce(sum('Attrition_CY_Q3'),0) as 'YTD Attrition Absolute',(coalesce(round(sum('TTM_Product_CY_Q2'), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q2), 0), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Attrition TTM Rate', (coalesce(round(sum('TTM_Product_CY_Q3'), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q3), 0), 0)) * 100 as 'YTD Attrition TTM Rate','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Pipegen Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} PipeGen Absolute','YTD Pipegen Absolute' as 'YTD PipeGen Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Pipegen Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} PipeGen Growth','YTD Pipegen Growth' as 'YTD PipeGen Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AEs','YTD AE Absolute' as 'YTD AE Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR','YTD AE CAGR' as 'YTD AE CAGR' ,'{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime','YTD Co_Prime Absolute' as 'YTD Co_Prime Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR','YTD Co_Prime CAGR' as 'YTD Co_Prime CAGR', '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SEs','YTD SE Absolute' as 'YTD SE Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR','YTD SE CAGR' as 'YTD SE CAGR' ,'{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE','YTD SWE Absolute' as 'YTD SWE Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth','YTD SWE Growth' as 'YTD SWE Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA','YTD INFRA Absolute' as 'YTD INFRA Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth','YTD INFRA Growth' as 'YTD INFRA Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute','YTD CTS Absolute' as 'YTD CTS Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth','YTD CTS Growth' as 'YTD CTS Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute','YTD Availability Absolute' as 'YTD Availability Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth','YTD Availability Growth' as 'YTD Availability Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute','YTD Transactions Absolute' as 'YTD Transactions Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth','YTD Transactions Growth' as 'YTD Transactions Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute','YTD Customer Absolute' as 'YTD Customer Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth','YTD Customer Growth' as 'YTD Customer Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute','YTD TAM Absolute' as 'YTD TAM Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth','YTD TAM Growth' as 'YTD TAM Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute','YTD Red_Accounts Absolute' as 'YTD Red_Accounts Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth','YTD Red_Accounts Growth' as 'YTD Red_Accounts Growth';\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------NONE for Fake HEADER--------------------------------------------------------------------------------------------------------------\n;result_none = group APM_None by 'all'; result_none = foreach result_none generate 0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute',  0 as  'YTD ACV Absolute', 0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth',0 as 'YTD ACV Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AOV Absolute', 0 as  'YTD AOV Absolute', 0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AOV Growth', 0 as 'YTD AOV Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Attrition Absolute',0 as 'YTD Attrition Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Attrition TTM Rate', 0 as 'YTD Attrition TTM Rate',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} PipeGen Absolute',0 as 'YTD PipeGen Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} PipeGen Growth',0 as 'YTD PipeGen Growth', 0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AEs',0 as 'YTD AE Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR',0 as 'YTD AE CAGR' ,0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime',0 as 'YTD Co_Prime Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR',0 as 'YTD Co_Prime CAGR', 0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SEs',0 as 'YTD SE Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR',0 as 'YTD SE CAGR' ,0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE',0 as 'YTD SWE Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth',0 as 'YTD SWE Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA',0 as 'YTD INFRA Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth',0 as 'YTD INFRA Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute',0 as 'YTD CTS Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth',0 as 'YTD CTS Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute',0 as 'YTD Availability Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth',0 as 'YTD Availability Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute',0 as 'YTD Transactions Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth',0 as 'YTD Transactions Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute',0 as 'YTD Customer Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth',0 as 'YTD Customer Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute',0 as 'YTD TAM Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth',0 as 'YTD TAM Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute',0 as 'YTD Red_Accounts Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth',0 as 'YTD Red_Accounts Growth'; \n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------UNION--------------------------------------------------------------------------------------------------------------\n;result_union = union result_none, result_Total;result_union = group result_union by 'all'; final_result = foreach result_union generate \"TOTAL                        \" as 'Cloud', sum('{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute') as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute', sum('YTD Customer Absolute') as 'YTD Customer Absolute', sum('{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth') as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth', sum('YTD Customer Growth') as  'YTD Customer Growth',sum('{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute') as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute', 0 as 'YTD TAM Absolute', sum('{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth') as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth', 0 as  'YTD TAM Growth',sum('{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute') as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute', sum('YTD Red_Accounts Absolute') as 'YTD Red_Accounts Absolute', sum('{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth') as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth', sum('YTD Red_Accounts Growth') as  'YTD Red_Accounts Growth' ;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        }
      },
      "Table_Page_2_Header": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Page_2_Header",
        "numbers": [],
        "query": "MasterHierarchy = load \"Master_Hierarchy\";\nMasterHierarchy = filter MasterHierarchy by 'Level_1' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nACV = load \"APM_ACV\";\nACV = filter ACV by 'Segment' != \"CSG\";\nACV = filter ACV by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nACV = filter ACV by 'Cloud' in {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};;\nACV = group ACV by ('Cloud','Subcloud', 'Quarter','Month', 'Fiscal_Year', 'Region' , 'Country');\nACV = foreach ACV generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year' ,'Month' as 'Month',sum('ACV') as 'ACV', 'Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; ACV = filter ACV by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}} ;\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD NONE For Fake Header line----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nAPM_None = load \"APM_ACV\";\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER ACV----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYACV = filter ACV by 'Month' in   {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYACV = filter ACV by 'Month' in   {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nn\nAOV = load \"APM_AOV\";\nAOV = filter AOV by 'Segment' != \"CSG\";\nAOV = filter AOV by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\n--AOV = filter AOV by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nAOV = foreach AOV generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('AOV') as 'AOV','Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; AOV = filter AOV by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER AOV ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYAOV = filter AOV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYAOV = filter AOV by 'Month' in   {{cell(Selector_Quarter.selection,0,\"Month\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYAOV = filter AOV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month_cum\").asString()}}&amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYAOV = filter AOV by 'Month' in {{cell(Selector_Quarter.selection,0,\"YTD_Month_cum\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------/////////////////////////////-----------LOAD ATTRITION ----------------/////////////////////////////////////////\n\nAttrition = load \"APM_Attrition\";\nAttrition = filter Attrition by 'Segment' != \"CSG\";\nAttrition = filter Attrition by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\n--Attrition = filter Attrition by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nAttrition = foreach Attrition generate  'Cloud' as 'Cloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Attrition')*-1 as 'Attrition_Product', sum('TTM')*-1 as 'TTM_Product',sum('AOV_twelve_month_ago') as 'AOV_twelve_month_ago','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country';\n----------------------------------------------------------------------------------------------FILTER ATTRITION -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n Attrition = filter Attrition by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}} ;q2_CYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYATT = filter Attrition by 'Month' in   {{cell(Selector_Quarter.selection,0,\"Month\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYATT = filter Attrition by 'Month' in   {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq4_CYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month_cum\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\n------------------------------------------------------------------------------------------------------------------------------------------------LOAD PIPEGEN--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nPipegen = load \"APM_Pipegen1\";\nPipegen = filter Pipegen by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};Pipegen = filter Pipegen by 'Segment' != \"CSG\";\nPipegen = filter Pipegen by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};Pipegen = group Pipegen by ('Fiscal_Year','Quarter','Cloud','Region','Month','Country');\nPipegen = foreach Pipegen generate  'Cloud' as 'Cloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Pipegen') as 'Pipegen','Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'  ; Pipegen = filter Pipegen by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}} ;;\n\nq2_CYPipegen = filter Pipegen by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYPipegen = filter Pipegen by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYPipegen = filter Pipegen by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_pipegen\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYPipegen = filter Pipegen by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_pipegen\").asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD /FILTER HC---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nHC = load \"APM_HC\";\nHC = filter HC by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nHC = foreach HC generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('SE') as 'SE',sum('AE') as 'AE',sum('Co_Prime') as 'Co_Prime','Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'  ; HC = filter HC by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\n--HC = filter HC by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYHC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYHC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq2_PY_2_HC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\nq3_CYHC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYHC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_PY_2_HC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD SWE INFRA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSW = load \"APM_SWE_INFRA\";\nSW = filter SW by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nSW = foreach SW generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('SWE') as 'SWE',sum('INFRA') as 'INFRA','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; SW = filter SW by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nSW = filter SW by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYSW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYSW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq2_PY_2_SW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\nq3_CYSW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYSW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_PY_2_SW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD T_P------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nT_P = load \"APM_T_P\";\nT_P = filter T_P by 'Cloud' != \"TOTALS/SUMMARY\";\nT_P = filter T_P by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nT_P = foreach T_P generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('CTS') as 'CTS','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; T_P = filter T_P by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nT_P = filter T_P by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYT_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYT_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq2_PY_2_T_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\nq3_CYT_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYT_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_PY_2_T_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD TRANSACTION------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nTRANSACTION = load \"APM_T_P_Transactions\";TRANSACTION = filter TRANSACTION by 'Cloud' != \"TOTALS/SUMMARY\";\nTRANSACTION = filter TRANSACTION by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nTRANSACTION = foreach TRANSACTION generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Transactions') as 'Transactions','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; TRANSACTION = filter TRANSACTION by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nTRANSACTION = filter TRANSACTION by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYTRANSACTION = filter TRANSACTION by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYTRANSACTION = filter TRANSACTION by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq2_PY_2_TRANSACTION = filter TRANSACTION by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\nq3_CYTRANSACTION = filter TRANSACTION by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYTRANSACTION = filter TRANSACTION by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_PY_2_TRANSACTION = filter TRANSACTION by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD AVAILABILITY------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nAVAILABILITY = load \"APM_TECH_AVAILABILITY\";AVAILABILITY = filter AVAILABILITY by 'Cloud' != \"TOTALS/SUMMARY\";\nAVAILABILITY = filter AVAILABILITY by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nAVAILABILITY = foreach AVAILABILITY generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Availability') as 'Availability','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; AVAILABILITY = filter AVAILABILITY by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nAVAILABILITY = filter AVAILABILITY by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYAVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYAVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq2_PY_2_AVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\nq3_CYAVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYAVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_PY_2_AVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD REDACCOUNTS------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nREDACCOUNTS = load \"APM_REDACCOUNTS\";REDACCOUNTS = filter REDACCOUNTS by 'Cloud' != \"TOTALS/SUMMARY\";\nREDACCOUNTS = filter REDACCOUNTS by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nREDACCOUNTS = foreach REDACCOUNTS generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Red_Accounts') as 'Red_Accounts','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; REDACCOUNTS = filter REDACCOUNTS by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nREDACCOUNTS = filter REDACCOUNTS by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter_REDACCOUNTS\").asString()}};\nq2_CYREDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYREDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq2_PY_2_REDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\nq3_CYREDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYREDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_PY_2_REDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD MARKET SHARE------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSHARE = load \"APM_MARKET_SHARE\";SHARE = filter SHARE by 'Cloud' == \"TOTALS/SUMMARY\";\nSHARE = filter SHARE by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nSHARE = foreach SHARE generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('TAM') as 'TAM','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; SHARE = filter SHARE by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\n--SHARE = filter SHARE by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYSHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYSHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq2_PY_2_SHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\nq3_CYSHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_cum\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYSHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_cum\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_PY_2_SHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_cum\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD CUSTOMER------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nCUSTOMER = load \"APM_MARKET_CUSTOMER\";CUSTOMER = filter CUSTOMER by 'Cloud' == \"TOTALS/SUMMARY\";\nCUSTOMER = filter CUSTOMER by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nCUSTOMER = foreach CUSTOMER generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Customer') as 'Customer',sum('Cloud_m1') as 'Customer1',sum('Cloud_m2') as 'Customer2',sum('Cloud_m3') as 'Customer3','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ;\n CUSTOMER = filter CUSTOMER by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\n--CUSTOMER = filter CUSTOMER by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYCUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYCUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq2_PY_2_CUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\nq3_CYCUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_cum\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYCUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_cum\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_PY_2_CUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\n\n----------------------AE PARTICIPATION-----------------------------\nPARTICIPATION = load \"APM_AE\";\nPARTICIPATION = filter PARTICIPATION by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nPARTICIPATION = filter PARTICIPATION by 'Region' == \"N/A\";\nPARTICIPATION = filter PARTICIPATION by 'Lead' == \"N/A\";\nPARTICIPATION = foreach PARTICIPATION generate 'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Cloud_m1') as 'Cloud_m1','Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; \nPARTICIPATION = filter PARTICIPATION by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nPARTICIPATION = filter PARTICIPATION by 'Cloud' in {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\n\nq2_CYPARTICIPATION = filter PARTICIPATION by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYPARTICIPATION = filter PARTICIPATION by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq2_PY_2_PARTICIPATION = filter PARTICIPATION by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\nq3_CYPARTICIPATION = filter PARTICIPATION by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYPARTICIPATION = filter PARTICIPATION by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_PY_2_PARTICIPATION = filter PARTICIPATION by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\n\n\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Grouping------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nresult_Total = group q2_CYACV by all full, q2_PYACV by all full, q3_CYACV by all full, q3_PYACV by all full, q2_CYAOV by all full, q2_PYAOV by all full, q3_CYAOV by all full, q3_PYAOV by all full, q2_CYATT by all full, q2_PYATT by all full, q3_CYATT by all full, q3_PYATT by all full,q4_CYATT by all full,  q2_CYPipegen by all full, q2_PYPipegen by all full, q3_CYPipegen by all full, q3_PYPipegen by all full,q2_CYHC by all full, q2_PYHC by all full,q2_PY_2_HC by all full, q3_CYHC by all full, q3_PYHC by all full,q3_PY_2_HC by all full, q2_CYSW by all full, q2_PYSW by all full,q2_PY_2_SW by all full, q3_CYSW by all full, q3_PYSW by all full,q3_PY_2_SW by all full, q2_CYT_P by all full, q2_PYT_P by all full, q3_CYT_P by all full, q3_PYT_P by all full, q2_CYTRANSACTION by all full, q2_PYTRANSACTION by all full, q3_CYTRANSACTION by all full, q3_PYTRANSACTION by all full, q2_CYAVAILABILITY by all full, q2_PYAVAILABILITY by all full, q3_CYAVAILABILITY by all full, q3_PYAVAILABILITY by all full, q2_CYREDACCOUNTS by all full, q2_PYREDACCOUNTS by all full, q3_CYREDACCOUNTS by all full, q3_PYREDACCOUNTS by all full, q2_CYSHARE by all full, q2_PYSHARE by all full, q3_CYSHARE by all full, q3_PYSHARE by all full, \n\nq2_CYPARTICIPATION by 'Cloud' full, q2_PYPARTICIPATION by 'Cloud' full, q2_PY_2_PARTICIPATION by 'Cloud' full, q3_CYPARTICIPATION by 'Cloud' full, q3_PYPARTICIPATION by 'Cloud' full, q3_PY_2_PARTICIPATION by 'Cloud' full,\n\nq2_CYCUSTOMER by all full, q2_PYCUSTOMER by all full, q3_CYCUSTOMER by all full, q3_PYCUSTOMER by all;\nn\nresult_Total = foreach result_Total generate \"TOTAL\" as 'Cloud', coalesce(sum(q2_CYACV.'ACV'),0) as 'A', coalesce(sum(q2_PYACV.'ACV'),0) as 'B', coalesce(sum(q3_CYACV.'ACV'),0) as 'C', coalesce(sum(q3_PYACV.'ACV'),0) as 'D',coalesce(sum(q2_CYAOV.'AOV'),0) as 'E', coalesce(sum(q2_PYAOV.'AOV'),0) as 'F', coalesce(sum(q3_CYAOV.'AOV'),0) as 'G', coalesce(sum(q3_PYAOV.'AOV'),0) as 'H',coalesce(sum(q2_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q2',coalesce(sum(q3_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q3',coalesce(round(sum(q2_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q2' ,coalesce(round(sum(q2_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q2',coalesce(round(sum(q4_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q3' ,coalesce(round(sum(q4_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q3', coalesce(sum(q2_CYPipegen.'Pipegen'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Pipegen Absolute', coalesce(sum(q3_CYPipegen.'Pipegen'), 0) as 'YTD Pipegen Absolute', ((coalesce(sum(q2_CYPipegen.'Pipegen'), 0) - coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Pipegen Growth', ((coalesce(sum(q3_CYPipegen.'Pipegen'), 0) - coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) * 100 as 'YTD Pipegen Growth',coalesce(sum(q2_CYHC.'SE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE Absolute', coalesce(sum(q3_CYHC.'SE'), 0) as 'YTD SE Absolute', ((coalesce(sum(q2_CYHC.'SE'), 0) - coalesce(sum(q2_PYHC.'SE'), 0)) / coalesce(sum(q2_PYHC.'SE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SE Growth',(power(coalesce(sum(q2_CYHC.'SE'), 0) / coalesce(sum(q2_PY_2_HC.'SE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR',(power(coalesce(sum(q3_CYHC.'SE'), 0) / coalesce(sum(q3_PY_2_HC.'SE'), 0),(1/2))-1)*100 as 'YTD SE CAGR', ((coalesce(sum(q3_CYHC.'SE'), 0) - coalesce(sum(q3_PYHC.'SE'), 0)) / coalesce(sum(q3_PYHC.'SE'), 0)) * 100 as 'YTD SE Growth', coalesce(sum(q2_CYHC.'AE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE Absolute', coalesce(sum(q3_CYHC.'AE'), 0) as 'YTD AE Absolute', ((coalesce(sum(q2_CYHC.'AE'), 0) - coalesce(sum(q2_PYHC.'AE'), 0)) / coalesce(sum(q2_PYHC.'AE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AE Growth', ((coalesce(sum(q3_CYHC.'AE'), 0) - coalesce(sum(q3_PYHC.'AE'), 0)) / coalesce(sum(q3_PYHC.'AE'), 0)) * 100 as 'YTD AE Growth',(power(coalesce(sum(q2_CYHC.'AE'), 0) / coalesce(sum(q2_PY_2_HC.'AE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR',(power(coalesce(sum(q3_CYHC.'AE'), 0) / coalesce(sum(q3_PY_2_HC.'AE'), 0),(1/2))-1)*100 as 'YTD AE CAGR', coalesce(sum(q2_CYHC.'Co_Prime'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime Absolute', coalesce(sum(q3_CYHC.'Co_Prime'), 0) as 'YTD Co_Prime Absolute', ((coalesce(sum(q2_CYHC.'Co_Prime'), 0) - coalesce(sum(q2_PYHC.'Co_Prime'), 0)) / coalesce(sum(q2_PYHC.'Co_Prime'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Co_Prime Growth', ((coalesce(sum(q3_CYHC.'Co_Prime'), 0) - coalesce(sum(q3_PYHC.'Co_Prime'), 0)) / coalesce(sum(q3_PYHC.'Co_Prime'), 0)) * 100 as 'YTD Co_Prime Growth',(power(coalesce(sum(q2_CYHC.'Co_Prime'), 0) / coalesce(sum(q2_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR',(power(coalesce(sum(q3_CYHC.'Co_Prime'), 0) / coalesce(sum(q3_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as 'YTD Co_Prime CAGR', coalesce(sum(q2_CYSW.'SWE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE Absolute', coalesce(sum(q3_CYSW.'SWE'), 0) as 'YTD SWE Absolute', ((coalesce(sum(q2_CYSW.'SWE'), 0) - coalesce(sum(q2_PYSW.'SWE'), 0)) / coalesce(sum(q2_PYSW.'SWE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth', ((coalesce(sum(q3_CYSW.'SWE'), 0) - coalesce(sum(q3_PYSW.'SWE'), 0)) / coalesce(sum(q3_PYSW.'SWE'), 0)) * 100 as 'YTD SWE Growth',(power(coalesce(sum(q2_CYSW.'SWE'), 0) / coalesce(sum(q2_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE CAGR',(power(coalesce(sum(q3_CYSW.'SWE'), 0) / coalesce(sum(q3_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as 'YTD SWE CAGR', coalesce(sum(q2_CYSW.'INFRA'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA Absolute', coalesce(sum(q3_CYSW.'INFRA'), 0) as 'YTD INFRA Absolute', ((coalesce(sum(q2_CYSW.'INFRA'), 0) - coalesce(sum(q2_PYSW.'INFRA'), 0)) / coalesce(sum(q2_PYSW.'INFRA'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth', ((coalesce(sum(q3_CYSW.'INFRA'), 0) - coalesce(sum(q3_PYSW.'INFRA'), 0)) / coalesce(sum(q3_PYSW.'INFRA'), 0)) * 100 as 'YTD INFRA Growth',(power(coalesce(sum(q2_CYSW.'INFRA'), 0) / coalesce(sum(q2_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA CAGR',(power(coalesce(sum(q3_CYSW.'INFRA'), 0) / coalesce(sum(q3_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as 'YTD INFRA CAGR', coalesce(sum(q2_CYT_P.'CTS'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute', coalesce(sum(q3_CYT_P.'CTS'), 0) as 'YTD CTS Absolute', ((coalesce(sum(q2_CYT_P.'CTS'), 0) - coalesce(sum(q2_PYT_P.'CTS'), 0)) / coalesce(sum(q2_PYT_P.'CTS'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth', ((coalesce(sum(q3_CYT_P.'CTS'), 0) - coalesce(sum(q3_PYT_P.'CTS'), 0)) / coalesce(sum(q3_PYT_P.'CTS'), 0)) * 100 as 'YTD CTS Growth', coalesce(sum(q2_CYTRANSACTION.'Transactions'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute', coalesce(sum(q3_CYTRANSACTION.'Transactions'), 0) as 'YTD Transactions Absolute', ((coalesce(sum(q2_CYTRANSACTION.'Transactions'), 0) - coalesce(sum(q2_PYTRANSACTION.'Transactions'), 0)) / coalesce(sum(q2_PYTRANSACTION.'Transactions'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth', ((coalesce(sum(q3_CYTRANSACTION.'Transactions'), 0) - coalesce(sum(q3_PYTRANSACTION.'Transactions'), 0)) / coalesce(sum(q3_PYTRANSACTION.'Transactions'), 0)) * 100 as 'YTD Transactions Growth', coalesce(sum(q2_CYAVAILABILITY.'Availability'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute', coalesce(sum(q3_CYAVAILABILITY.'Availability'), 0) as 'YTD Availability Absolute', ((coalesce(sum(q2_CYAVAILABILITY.'Availability'), 0) - coalesce(sum(q2_PYAVAILABILITY.'Availability'), 0)) / coalesce(sum(q2_PYAVAILABILITY.'Availability'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth', ((coalesce(sum(q3_CYAVAILABILITY.'Availability'), 0) - coalesce(sum(q3_PYAVAILABILITY.'Availability'), 0)) / coalesce(sum(q3_PYAVAILABILITY.'Availability'), 0)) * 100 as 'YTD Availability Growth',  coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute', coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) as 'YTD Red_Accounts Absolute', ((coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth', ((coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as 'YTD Red_Accounts Growth', coalesce(sum(q2_CYSHARE.'TAM'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute', coalesce(sum(q3_CYSHARE.'TAM'), 0) as 'YTD TAM Absolute', ((coalesce(sum(q2_CYSHARE.'TAM'), 0) - coalesce(sum(q2_PYSHARE.'TAM'), 0)) / coalesce(sum(q2_PYSHARE.'TAM'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth', ((coalesce(sum(q3_CYSHARE.'TAM'), 0) - coalesce(sum(q3_PYSHARE.'TAM'), 0)) / coalesce(sum(q3_PYSHARE.'TAM'), 0)) * 100 as 'YTD TAM Growth', \n\ncoalesce(sum(q2_CYPARTICIPATION.'Cloud_m1'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Participation Absolute', \ncoalesce(sum(q3_CYPARTICIPATION.'Cloud_m1'), 0) as 'YTD Participation Absolute', \n((coalesce(sum(q2_CYPARTICIPATION.'Cloud_m1'), 0) - coalesce(sum(q2_PYPARTICIPATION.'Cloud_m1'), 0)) / coalesce(sum(q2_PYPARTICIPATION.'Cloud_m1'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Participation Growth', \n((coalesce(sum(q3_CYPARTICIPATION.'Cloud_m1'), 0) - coalesce(sum(q3_PYPARTICIPATION.'Cloud_m1'), 0)) / coalesce(sum(q3_PYPARTICIPATION.'Cloud_m1'), 0)) * 100 as 'YTD Participation Growth',\n\ncoalesce(sum(q2_CYCUSTOMER.'Customer'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute', \ncoalesce(sum(q3_CYCUSTOMER.'Customer'), 0) as 'YTD Customer Absolute', \n((coalesce(sum(q2_CYCUSTOMER.'Customer'), 0) - coalesce(sum(q2_PYCUSTOMER.'Customer'), 0)) / coalesce(sum(q2_PYCUSTOMER.'Customer'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth', \n((coalesce(sum(q3_CYCUSTOMER.'Customer'), 0) - coalesce(sum(q3_PYCUSTOMER.'Customer'), 0)) / coalesce(sum(q3_PYCUSTOMER.'Customer'), 0)) * 100 as 'YTD Customer Growth';\nnresult_Total = foreach result_Total generate 'A' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute',  'C' as  'YTD ACV Absolute', ((A -B) / B) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth',((C - D) / D) * 100 as 'YTD ACV Growth','E' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AOV Absolute',  'G' as  'YTD AOV Absolute', ((E -F) / F) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AOV Growth',  ((G - H) / H) * 100  as 'YTD AOV Growth', coalesce(sum('Attrition_CY_Q2'),0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Attrition Absolute', coalesce(sum('Attrition_CY_Q3'),0) as 'YTD Attrition Absolute',(coalesce(round(sum('TTM_Product_CY_Q2'), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q2), 0), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Attrition TTM Rate', (coalesce(round(sum('TTM_Product_CY_Q3'), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q3), 0), 0)) * 100 as 'YTD Attrition TTM Rate','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Pipegen Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} PipeGen Absolute','YTD Pipegen Absolute' as 'YTD PipeGen Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Pipegen Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} PipeGen Growth','YTD Pipegen Growth' as 'YTD PipeGen Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AEs','YTD AE Absolute' as 'YTD AE Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR','YTD AE CAGR' as 'YTD AE CAGR' ,'{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime','YTD Co_Prime Absolute' as 'YTD Co_Prime Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR','YTD Co_Prime CAGR' as 'YTD Co_Prime CAGR', '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SEs','YTD SE Absolute' as 'YTD SE Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR','YTD SE CAGR' as 'YTD SE CAGR' ,'{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE','YTD SWE Absolute' as 'YTD SWE Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth','YTD SWE Growth' as 'YTD SWE Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA','YTD INFRA Absolute' as 'YTD INFRA Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth','YTD INFRA Growth' as 'YTD INFRA Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute','YTD CTS Absolute' as 'YTD CTS Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth','YTD CTS Growth' as 'YTD CTS Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute','YTD Availability Absolute' as 'YTD Availability Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth','YTD Availability Growth' as 'YTD Availability Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute','YTD Transactions Absolute' as 'YTD Transactions Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth','YTD Transactions Growth' as 'YTD Transactions Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute','YTD Customer Absolute' as 'YTD Customer Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth','YTD Customer Growth' as 'YTD Customer Growth',\n\n'{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Participation Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Participation Absolute',\n'YTD Participation Absolute' as 'YTD Participation Absolute',\n'{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Participation Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Participation Growth',\n'YTD Participation Growth' as 'YTD Participation Growth',\n\n'{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute','YTD TAM Absolute' as 'YTD TAM Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth','YTD TAM Growth' as 'YTD TAM Growth';\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------NONE for Fake HEADER--------------------------------------------------------------------------------------------------------------\n\nresult_none = group APM_None by 'all'; result_none = foreach result_none generate 0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute',  0 as  'YTD ACV Absolute', 0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth',0 as 'YTD ACV Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AOV Absolute', 0 as  'YTD AOV Absolute', 0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AOV Growth', 0 as 'YTD AOV Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Attrition Absolute',0 as 'YTD Attrition Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Attrition TTM Rate', 0 as 'YTD Attrition TTM Rate',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} PipeGen Absolute',0 as 'YTD PipeGen Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} PipeGen Growth',0 as 'YTD PipeGen Growth', 0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AEs',0 as 'YTD AE Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR',0 as 'YTD AE CAGR' ,0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime',0 as 'YTD Co_Prime Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR',0 as 'YTD Co_Prime CAGR', 0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SEs',0 as 'YTD SE Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR',0 as 'YTD SE CAGR' ,0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE',0 as 'YTD SWE Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth',0 as 'YTD SWE Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA',0 as 'YTD INFRA Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth',0 as 'YTD INFRA Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute',0 as 'YTD CTS Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth',0 as 'YTD CTS Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute',0 as 'YTD Availability Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth',0 as 'YTD Availability Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute',0 as 'YTD Transactions Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth',0 as 'YTD Transactions Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute',0 as 'YTD Customer Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth',0 as 'YTD Customer Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute',0 as 'YTD TAM Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth',0 as 'YTD TAM Growth',\n\n0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Participation Absolute',\n0 as 'YTD Participation Absolute',\n0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Participation Growth',\n0 as 'YTD Participation Growth',\n\n0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute',\n0 as 'YTD Red_Accounts Absolute',\n0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth',\n0 as 'YTD Red_Accounts Growth'; \n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------UNION--------------------------------------------------------------------------------------------------------------\nresult_union = union result_none, result_Total;\nresult_union = group result_union by 'all';  \nfinal_result = foreach result_union generate \"TOTAL                        \" as 'Cloud', \nsum('{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AEs') as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AEs',\nsum('YTD AE Absolute') as 'YTD AE Absolute',\nsum('{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR') as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR',\nsum('YTD AE CAGR') as 'YTD AE CAGR' ,\n\nsum('{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime') as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime',\nsum('YTD Co_Prime Absolute') as 'YTD Co_Prime Absolute',\nsum('{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR') as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR',\nsum('YTD Co_Prime CAGR') as 'YTD Co_Prime CAGR',\n\nsum('{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SEs') as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SEs',\nsum('YTD SE Absolute') as 'YTD SE Absolute',\nsum('{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR') as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR',\nsum('YTD SE CAGR') as 'YTD SE CAGR',\n\n0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Participation Absolute',\n0 as 'YTD Participation Absolute',\n0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Participation Growth',\n0 as 'YTD Participation Growth' ;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        }
      },
      "Table_Page_1_Header": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Page_1_Header",
        "numbers": [],
        "query": "MasterHierarchy = load \"Master_Hierarchy\";\nMasterHierarchy = filter MasterHierarchy by 'Level_1' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nACV = load \"APM_ACV\";\nACV = filter ACV by 'Segment' != \"CSG\";\nACV = filter ACV by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nACV = filter ACV by {{column(Filter_Lead_1.selection,[\"Lead_1\"]).asEquality('Lead_1')}};\nACV = filter ACV by {{column(Filter_Segment.selection,[\"Segment\"]).asEquality('Segment')}};\nACV = filter ACV by {{column(Filter_Industry.selection,[\"Industry\"]).asEquality('Industry')}};\nACV = filter ACV by {{column(Filter_Lead.selection,[\"Lead\"]).asEquality('Lead')}};\nACV = filter ACV by {{column(Filter_Cloud.selection,[\"Cloud\"]).asEquality('Cloud')}};\nACV = filter ACV by 'Cloud' in {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};;\nACV = group ACV by ('Cloud','Subcloud', 'Quarter','Month', 'Fiscal_Year', 'Region' , 'Country');\nACV = foreach ACV generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year' ,'Month' as 'Month',sum('ACV') as 'ACV', 'Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; ACV = filter ACV by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}} ;\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD NONE For Fake Header line----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nAPM_None = load \"APM_ACV\";\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER ACV----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYACV = filter ACV by 'Month' in   {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYACV = filter ACV by 'Month' in   {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nn\nAOV = load \"APM_AOV\";\nAOV = filter AOV by 'Segment' != \"CSG\";\nAOV = filter AOV by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\n--AOV = filter AOV by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nAOV = foreach AOV generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('AOV') as 'AOV','Region' as 'Region',   {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; AOV = filter AOV by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER AOV ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYAOV = filter AOV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYAOV = filter AOV by 'Month' in   {{cell(Selector_Quarter.selection,0,\"Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYAOV = filter AOV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month_cum\").asString()}}&amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYAOV = filter AOV by 'Month' in {{cell(Selector_Quarter.selection,0,\"YTD_Month_cum\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------/////////////////////////////-----------LOAD ATTRITION ----------------/////////////////////////////////////////\n\nAttrition = load \"APM_Attrition\"; Attrition = filter Attrition by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}} ;\nAttrition = filter Attrition by 'Segment' != \"CSG\";\nAttrition = filter Attrition by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\n--Attrition = filter Attrition by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nAttrition = foreach Attrition generate  'Cloud' as 'Cloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Attrition')*-1 as 'Attrition_Product', sum('TTM')*-1 as 'TTM_Product',sum('AOV_twelve_month_ago') as 'AOV_twelve_month_ago','Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country';\n----------------------------------------------------------------------------------------------FILTER ATTRITION -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYATT = filter Attrition by 'Month' in   {{cell(Selector_Quarter.selection,0,\"Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYATT = filter Attrition by 'Month' in   {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq4_CYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month_cum_attrit\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\n------------------------------------------------------------------------------------------------------------------------------------------------LOAD PIPEGEN--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nPipegen = load \"APM_Pipegen1\";\nPipegen = filter Pipegen by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};Pipegen = filter Pipegen by 'Segment' != \"CSG\";\nPipegen = filter Pipegen by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nPipegen = group Pipegen by ('Fiscal_Year','Quarter', 'Region', 'Cloud', 'Month','Subcloud', 'Cloud_2','Country');\nPipegen = foreach Pipegen generate  'Cloud' as 'Cloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Pipegen') as 'Pipegen','Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; Pipegen = filter Pipegen by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}} ;;\n\nq2_CYPipegen = filter Pipegen by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYPipegen = filter Pipegen by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYPipegen = filter Pipegen by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_pipegen\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYPipegen = filter Pipegen by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_pipegen\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD /FILTER HC---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nHC = load \"APM_HC\";\nHC = filter HC by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nHC = foreach HC generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('SE') as 'SE',sum('AE') as 'AE',sum('Co_Prime') as 'Co_Prime','Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; HC = filter HC by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\n--HC = filter HC by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYHC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYHC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_HC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYHC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYHC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_HC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD SWE INFRA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSW = load \"APM_SWE_INFRA\";\nSW = filter SW by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nSW = foreach SW generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('SWE') as 'SWE',sum('INFRA') as 'INFRA','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; SW = filter SW by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nSW = filter SW by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYSW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYSW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_SW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYSW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYSW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_SW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD T_P------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nT_P = load \"APM_T_P\";\nT_P = filter T_P by 'Cloud' != \"TOTALS/SUMMARY\";\nT_P = filter T_P by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nT_P = foreach T_P generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('CTS') as 'CTS','Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; T_P = filter T_P by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nT_P = filter T_P by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYT_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYT_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_T_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYT_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYT_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_T_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD TRANSACTION------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nTRANSACTION = load \"APM_T_P_Transactions\";TRANSACTION = filter TRANSACTION by 'Cloud' != \"TOTALS/SUMMARY\";\nTRANSACTION = filter TRANSACTION by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nTRANSACTION = foreach TRANSACTION generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Transactions') as 'Transactions','Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; TRANSACTION = filter TRANSACTION by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nTRANSACTION = filter TRANSACTION by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYTRANSACTION = filter TRANSACTION by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYTRANSACTION = filter TRANSACTION by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_TRANSACTION = filter TRANSACTION by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYTRANSACTION = filter TRANSACTION by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYTRANSACTION = filter TRANSACTION by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_TRANSACTION = filter TRANSACTION by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD AVAILABILITY------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nAVAILABILITY = load \"APM_TECH_AVAILABILITY\";AVAILABILITY = filter AVAILABILITY by 'Cloud' != \"TOTALS/SUMMARY\";\nAVAILABILITY = filter AVAILABILITY by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nAVAILABILITY = foreach AVAILABILITY generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Availability') as 'Availability','Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; AVAILABILITY = filter AVAILABILITY by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nAVAILABILITY = filter AVAILABILITY by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYAVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYAVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_AVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYAVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYAVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_AVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD REDACCOUNTS------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nREDACCOUNTS = load \"APM_REDACCOUNTS\";REDACCOUNTS = filter REDACCOUNTS by 'Cloud' != \"TOTALS/SUMMARY\";\nREDACCOUNTS = filter REDACCOUNTS by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nREDACCOUNTS = foreach REDACCOUNTS generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Red_Accounts') as 'Red_Accounts','Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; REDACCOUNTS = filter REDACCOUNTS by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nREDACCOUNTS = filter REDACCOUNTS by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYREDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYREDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_REDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYREDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYREDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_REDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD MARKET SHARE------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSHARE = load \"APM_MARKET_SHARE\";SHARE = filter SHARE by 'Cloud' != \"TOTALS/SUMMARY\";\nSHARE = filter SHARE by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nSHARE = foreach SHARE generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('TAM') as 'TAM','Region' as 'Region',   {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; SHARE = filter SHARE by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nSHARE = filter SHARE by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYSHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYSHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_SHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYSHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYSHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_SHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD CUSTOMER------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nCUSTOMER = load \"APM_MARKET_CUSTOMER\";CUSTOMER = filter CUSTOMER by 'Cloud' != \"TOTALS/SUMMARY\";\nCUSTOMER = filter CUSTOMER by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nCUSTOMER = foreach CUSTOMER generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Customer') as 'Customer','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; CUSTOMER = filter CUSTOMER by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nCUSTOMER = filter CUSTOMER by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYCUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYCUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_CUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYCUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYCUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_CUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Grouping------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nresult_Total = group q2_CYACV by all full, q2_PYACV by all full, q3_CYACV by all full, q3_PYACV by all full, q2_CYAOV by all full, q2_PYAOV by all full, q3_CYAOV by all full, q3_PYAOV by all full, q2_CYATT by all full, q2_PYATT by all full, q3_CYATT by all full, q3_PYATT by all full,q4_CYATT by all full,  q2_CYPipegen by all full, q2_PYPipegen by all full, q3_CYPipegen by all full, q3_PYPipegen by all full,q2_CYHC by all full, q2_PYHC by all full,q2_PY_2_HC by all full, q3_CYHC by all full, q3_PYHC by all full,q3_PY_2_HC by all full, q2_CYSW by all full, q2_PYSW by all full,q2_PY_2_SW by all full, q3_CYSW by all full, q3_PYSW by all full,q3_PY_2_SW by all full, q2_CYT_P by all full, q2_PYT_P by all full, q3_CYT_P by all full, q3_PYT_P by all full, q2_CYTRANSACTION by all full, q2_PYTRANSACTION by all full, q3_CYTRANSACTION by all full, q3_PYTRANSACTION by all full, q2_CYAVAILABILITY by all full, q2_PYAVAILABILITY by all full, q3_CYAVAILABILITY by all full, q3_PYAVAILABILITY by all full, q2_CYREDACCOUNTS by all full, q2_PYREDACCOUNTS by all full, q3_CYREDACCOUNTS by all full, q3_PYREDACCOUNTS by all full, q2_CYSHARE by all full, q2_PYSHARE by all full, q3_CYSHARE by all full, q3_PYSHARE by all full, q2_CYCUSTOMER by all full, q2_PYCUSTOMER by all full, q3_CYCUSTOMER by all full, q3_PYCUSTOMER by all;\nn\nresult_Total = foreach result_Total generate \"TOTAL\" as 'Cloud', coalesce(sum(q2_CYACV.'ACV'),0) as 'A', coalesce(sum(q2_PYACV.'ACV'),0) as 'B', coalesce(sum(q3_CYACV.'ACV'),0) as 'C', coalesce(sum(q3_PYACV.'ACV'),0) as 'D',coalesce(sum(q2_CYAOV.'AOV'),0) as 'E', coalesce(sum(q2_PYAOV.'AOV'),0) as 'F', coalesce(sum(q3_CYAOV.'AOV'),0) as 'G', coalesce(sum(q3_PYAOV.'AOV'),0) as 'H',coalesce(sum(q2_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q2',coalesce(sum(q3_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q3',coalesce(round(sum(q2_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q2' ,coalesce(round(sum(q2_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q2',coalesce(round(sum(q4_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q3' ,coalesce(round(sum(q4_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q3', coalesce(sum(q2_CYPipegen.'Pipegen'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Pipegen Absolute', coalesce(sum(q3_CYPipegen.'Pipegen'), 0) as 'YTD Pipegen Absolute', ((coalesce(sum(q2_CYPipegen.'Pipegen'), 0) - coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Pipegen Growth', ((coalesce(sum(q3_CYPipegen.'Pipegen'), 0) - coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) * 100 as 'YTD Pipegen Growth',coalesce(sum(q2_CYHC.'SE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE Absolute', coalesce(sum(q3_CYHC.'SE'), 0) as 'YTD SE Absolute', ((coalesce(sum(q2_CYHC.'SE'), 0) - coalesce(sum(q2_PYHC.'SE'), 0)) / coalesce(sum(q2_PYHC.'SE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SE Growth',(power(coalesce(sum(q2_CYHC.'SE'), 0) / coalesce(sum(q2_PY_2_HC.'SE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR',(power(coalesce(sum(q3_CYHC.'SE'), 0) / coalesce(sum(q3_PY_2_HC.'SE'), 0),(1/2))-1)*100 as 'YTD SE CAGR', ((coalesce(sum(q3_CYHC.'SE'), 0) - coalesce(sum(q3_PYHC.'SE'), 0)) / coalesce(sum(q3_PYHC.'SE'), 0)) * 100 as 'YTD SE Growth', coalesce(sum(q2_CYHC.'AE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE Absolute', coalesce(sum(q3_CYHC.'AE'), 0) as 'YTD AE Absolute', ((coalesce(sum(q2_CYHC.'AE'), 0) - coalesce(sum(q2_PYHC.'AE'), 0)) / coalesce(sum(q2_PYHC.'AE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AE Growth', ((coalesce(sum(q3_CYHC.'AE'), 0) - coalesce(sum(q3_PYHC.'AE'), 0)) / coalesce(sum(q3_PYHC.'AE'), 0)) * 100 as 'YTD AE Growth',(power(coalesce(sum(q2_CYHC.'AE'), 0) / coalesce(sum(q2_PY_2_HC.'AE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR',(power(coalesce(sum(q3_CYHC.'AE'), 0) / coalesce(sum(q3_PY_2_HC.'AE'), 0),(1/2))-1)*100 as 'YTD AE CAGR', coalesce(sum(q2_CYHC.'Co_Prime'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime Absolute', coalesce(sum(q3_CYHC.'Co_Prime'), 0) as 'YTD Co_Prime Absolute', ((coalesce(sum(q2_CYHC.'Co_Prime'), 0) - coalesce(sum(q2_PYHC.'Co_Prime'), 0)) / coalesce(sum(q2_PYHC.'Co_Prime'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Co_Prime Growth', ((coalesce(sum(q3_CYHC.'Co_Prime'), 0) - coalesce(sum(q3_PYHC.'Co_Prime'), 0)) / coalesce(sum(q3_PYHC.'Co_Prime'), 0)) * 100 as 'YTD Co_Prime Growth',(power(coalesce(sum(q2_CYHC.'Co_Prime'), 0) / coalesce(sum(q2_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR',(power(coalesce(sum(q3_CYHC.'Co_Prime'), 0) / coalesce(sum(q3_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as 'YTD Co_Prime CAGR', coalesce(sum(q2_CYSW.'SWE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE Absolute', coalesce(sum(q3_CYSW.'SWE'), 0) as 'YTD SWE Absolute', ((coalesce(sum(q2_CYSW.'SWE'), 0) - coalesce(sum(q2_PYSW.'SWE'), 0)) / coalesce(sum(q2_PYSW.'SWE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth', ((coalesce(sum(q3_CYSW.'SWE'), 0) - coalesce(sum(q3_PYSW.'SWE'), 0)) / coalesce(sum(q3_PYSW.'SWE'), 0)) * 100 as 'YTD SWE Growth',(power(coalesce(sum(q2_CYSW.'SWE'), 0) / coalesce(sum(q2_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE CAGR',(power(coalesce(sum(q3_CYSW.'SWE'), 0) / coalesce(sum(q3_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as 'YTD SWE CAGR', coalesce(sum(q2_CYSW.'INFRA'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA Absolute', coalesce(sum(q3_CYSW.'INFRA'), 0) as 'YTD INFRA Absolute', ((coalesce(sum(q2_CYSW.'INFRA'), 0) - coalesce(sum(q2_PYSW.'INFRA'), 0)) / coalesce(sum(q2_PYSW.'INFRA'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth', ((coalesce(sum(q3_CYSW.'INFRA'), 0) - coalesce(sum(q3_PYSW.'INFRA'), 0)) / coalesce(sum(q3_PYSW.'INFRA'), 0)) * 100 as 'YTD INFRA Growth',(power(coalesce(sum(q2_CYSW.'INFRA'), 0) / coalesce(sum(q2_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA CAGR',(power(coalesce(sum(q3_CYSW.'INFRA'), 0) / coalesce(sum(q3_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as 'YTD INFRA CAGR', coalesce(sum(q2_CYT_P.'CTS'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute', coalesce(sum(q3_CYT_P.'CTS'), 0) as 'YTD CTS Absolute', ((coalesce(sum(q2_CYT_P.'CTS'), 0) - coalesce(sum(q2_PYT_P.'CTS'), 0)) / coalesce(sum(q2_PYT_P.'CTS'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth', ((coalesce(sum(q3_CYT_P.'CTS'), 0) - coalesce(sum(q3_PYT_P.'CTS'), 0)) / coalesce(sum(q3_PYT_P.'CTS'), 0)) * 100 as 'YTD CTS Growth', coalesce(sum(q2_CYTRANSACTION.'Transactions'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute', coalesce(sum(q3_CYTRANSACTION.'Transactions'), 0) as 'YTD Transactions Absolute', ((coalesce(sum(q2_CYTRANSACTION.'Transactions'), 0) - coalesce(sum(q2_PYTRANSACTION.'Transactions'), 0)) / coalesce(sum(q2_PYTRANSACTION.'Transactions'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth', ((coalesce(sum(q3_CYTRANSACTION.'Transactions'), 0) - coalesce(sum(q3_PYTRANSACTION.'Transactions'), 0)) / coalesce(sum(q3_PYTRANSACTION.'Transactions'), 0)) * 100 as 'YTD Transactions Growth', coalesce(sum(q2_CYAVAILABILITY.'Availability'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute', coalesce(sum(q3_CYAVAILABILITY.'Availability'), 0) as 'YTD Availability Absolute', ((coalesce(sum(q2_CYAVAILABILITY.'Availability'), 0) - coalesce(sum(q2_PYAVAILABILITY.'Availability'), 0)) / coalesce(sum(q2_PYAVAILABILITY.'Availability'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth', ((coalesce(sum(q3_CYAVAILABILITY.'Availability'), 0) - coalesce(sum(q3_PYAVAILABILITY.'Availability'), 0)) / coalesce(sum(q3_PYAVAILABILITY.'Availability'), 0)) * 100 as 'YTD Availability Growth',  coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute', coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) as 'YTD Red_Accounts Absolute', ((coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth', ((coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as 'YTD Red_Accounts Growth', coalesce(sum(q2_CYSHARE.'TAM'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute', coalesce(sum(q3_CYSHARE.'TAM'), 0) as 'YTD TAM Absolute', ((coalesce(sum(q2_CYSHARE.'TAM'), 0) - coalesce(sum(q2_PYSHARE.'TAM'), 0)) / coalesce(sum(q2_PYSHARE.'TAM'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth', ((coalesce(sum(q3_CYSHARE.'TAM'), 0) - coalesce(sum(q3_PYSHARE.'TAM'), 0)) / coalesce(sum(q3_PYSHARE.'TAM'), 0)) * 100 as 'YTD TAM Growth', coalesce(sum(q2_CYCUSTOMER.'Customer'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute', coalesce(sum(q3_CYCUSTOMER.'Customer'), 0) as 'YTD Customer Absolute', ((coalesce(sum(q2_CYCUSTOMER.'Customer'), 0) - coalesce(sum(q2_PYCUSTOMER.'Customer'), 0)) / coalesce(sum(q2_PYCUSTOMER.'Customer'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth', ((coalesce(sum(q3_CYCUSTOMER.'Customer'), 0) - coalesce(sum(q3_PYCUSTOMER.'Customer'), 0)) / coalesce(sum(q3_PYCUSTOMER.'Customer'), 0)) * 100 as 'YTD Customer Growth';\nnresult_Total = foreach result_Total generate 'A' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute',  'C' as  'YTD ACV Absolute', ((A -B) / B) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth',((C - D) / D) * 100 as 'YTD ACV Growth','E' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AOV Absolute',  'G' as  'YTD AOV Absolute', ((E -F) / F) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AOV Growth',  ((G - H) / H) * 100  as 'YTD AOV Growth', coalesce(sum('Attrition_CY_Q2'),0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Attrition Absolute', coalesce(sum('Attrition_CY_Q3'),0) as 'YTD Attrition Absolute',(coalesce(round(sum('TTM_Product_CY_Q2'), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q2), 0), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Attrition TTM Rate', (coalesce(round(sum('TTM_Product_CY_Q3'), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q3), 0), 0)) * 100 as 'YTD Attrition TTM Rate','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Pipegen Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} PipeGen Absolute','YTD Pipegen Absolute' as 'YTD PipeGen Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Pipegen Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} PipeGen Growth','YTD Pipegen Growth' as 'YTD PipeGen Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AEs','YTD AE Absolute' as 'YTD AE Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR','YTD AE CAGR' as 'YTD AE CAGR' ,'{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime','YTD Co_Prime Absolute' as 'YTD Co_Prime Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR','YTD Co_Prime CAGR' as 'YTD Co_Prime CAGR', '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SEs','YTD SE Absolute' as 'YTD SE Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR','YTD SE CAGR' as 'YTD SE CAGR' ,'{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE','YTD SWE Absolute' as 'YTD SWE Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth','YTD SWE Growth' as 'YTD SWE Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA','YTD INFRA Absolute' as 'YTD INFRA Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth','YTD INFRA Growth' as 'YTD INFRA Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute','YTD CTS Absolute' as 'YTD CTS Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth','YTD CTS Growth' as 'YTD CTS Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute','YTD Availability Absolute' as 'YTD Availability Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth','YTD Availability Growth' as 'YTD Availability Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute','YTD Transactions Absolute' as 'YTD Transactions Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth','YTD Transactions Growth' as 'YTD Transactions Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute','YTD Customer Absolute' as 'YTD Customer Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth','YTD Customer Growth' as 'YTD Customer Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute','YTD TAM Absolute' as 'YTD TAM Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth','YTD TAM Growth' as 'YTD TAM Growth';\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------NONE for Fake HEADER--------------------------------------------------------------------------------------------------------------\n;result_none = group APM_None by 'all'; result_none = foreach result_none generate 0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute',  0 as  'YTD ACV Absolute', 0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth',0 as 'YTD ACV Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AOV Absolute', 0 as  'YTD AOV Absolute', 0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AOV Growth', 0 as 'YTD AOV Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Attrition Absolute',0 as 'YTD Attrition Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Attrition TTM Rate', 0 as 'YTD Attrition TTM Rate',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} PipeGen Absolute',0 as 'YTD PipeGen Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} PipeGen Growth',0 as 'YTD PipeGen Growth', 0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AEs',0 as 'YTD AE Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR',0 as 'YTD AE CAGR' ,0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime',0 as 'YTD Co_Prime Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR',0 as 'YTD Co_Prime CAGR', 0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SEs',0 as 'YTD SE Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR',0 as 'YTD SE CAGR' ,0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE',0 as 'YTD SWE Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth',0 as 'YTD SWE Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA',0 as 'YTD INFRA Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth',0 as 'YTD INFRA Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute',0 as 'YTD CTS Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth',0 as 'YTD CTS Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute',0 as 'YTD Availability Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth',0 as 'YTD Availability Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute',0 as 'YTD Transactions Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth',0 as 'YTD Transactions Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute',0 as 'YTD Customer Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth',0 as 'YTD Customer Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute',0 as 'YTD TAM Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth',0 as 'YTD TAM Growth',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute',0 as 'YTD Red_Accounts Absolute',0 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth',0 as 'YTD Red_Accounts Growth'; \n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------UNION--------------------------------------------------------------------------------------------------------------\n;result_union = union result_none, result_Total;result_union = group result_union by 'all';  final_result = foreach result_union generate \"TOTAL                        \" as 'Cloud', sum('{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute') as  '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute', sum('YTD ACV Absolute') as'YTD ACV Absolute' , sum('{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth') as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth', sum('YTD ACV Growth') as  'YTD ACV Growth',sum ('{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AOV Absolute') as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AOV Absolute', sum( 'YTD AOV Absolute') as  'YTD AOV Absolute', sum( '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AOV Growth') as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AOV Growth', sum('YTD AOV Growth') as 'YTD AOV Growth', sum('{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Attrition Absolute') as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Attrition Absolute', sum('YTD Attrition Absolute') as 'YTD Attrition Absolute', sum('{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Attrition TTM Rate') as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Attrition TTM Rate', sum('YTD Attrition TTM Rate') as  'YTD Attrition TTM Rate', sum('{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} PipeGen Absolute') as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} PipeGen Absolute', sum('YTD PipeGen Absolute') as 'YTD PipeGen Absolute', sum('{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} PipeGen Growth') as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} PipeGen Growth', sum('YTD PipeGen Growth') as  'YTD PipeGen Growth' ; ",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        }
      },
      "Filter_Lead_1": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.EdgeMarts.APM_ACV.Alias}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Lead_1\"]}",
          "version": -1
        },
        "receiveFacet": true,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {}
      },
      "Table_Page_2_Header_Top": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Page_2_Header_Top",
        "numbers": [],
        "query": "MasterHierarchy = load \"Master_Hierarchy\";\nresult_Total = group MasterHierarchy by all;\nresult_Total = foreach result_Total generate \"                                \" as ' ', \"    AE    \" as 'AE', \"    Co Prime    \" as 'Co Prime', \"    SE    \" as 'SE', \"AE                                        \" as 'AE Participation'",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart",
          "visualizationType": "hbar"
        }
      },
      "Table_Level_2_Measures_4": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Level_2_Measures_4",
        "numbers": [],
        "query": "MasterHierarchy = load \"Master_Hierarchy\";\nMasterHierarchy = filter MasterHierarchy by 'Level_1' in   {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nnACV = load \"APM_ACV\";\nACV = filter ACV by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nACV = filter ACV by {{column(Filter_Lead_1.selection,[\"Lead_1\"]).asEquality('Lead_1')}};\nACV = filter ACV by {{column(Filter_Segment.selection,[\"Segment\"]).asEquality('Segment')}};\nACV = filter ACV by {{column(Filter_Industry.selection,[\"Industry\"]).asEquality('Industry')}};\nACV = filter ACV by {{column(Filter_Lead.selection,[\"Lead\"]).asEquality('Lead')}};\nACV = filter ACV by {{column(Filter_Cloud.selection,[\"Cloud\"]).asEquality('Cloud')}};\nACV = filter ACV by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nACV = group ACV by ('Cloud','Cloud_2','Subcloud', 'Quarter','Month', 'Fiscal_Year', 'Region' , 'Country');\nACV = foreach ACV generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year' ,'Month' as 'Month',sum('ACV') as 'ACV', 'Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; ACV = filter ACV by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nq2_CYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}} ;\nnAOV = load \"APM_AOV\";\nAOV = filter AOV by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nAOV = filter AOV by 'Cloud' in{{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nAOV = group AOV by ('Cloud','Subcloud', 'Cloud_2', 'Quarter', 'Month', 'Fiscal_Year', 'Region' , 'Country');\nAOV = foreach AOV generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('AOV') as 'AOV','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; AOV = filter AOV by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nq2_CYAOV = filter AOV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYAOV = filter AOV by 'Month' in   {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYAOV = filter AOV by 'Month' in {{cell(Selector_Quarter.selection,0,\"YTD_Month_cum\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYAOV = filter AOV by 'Month' in{{cell(Selector_Quarter.selection,0,\"YTD_Month_cum\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nnAttrition = load \"APM_Attrition\";\nAttrition = filter Attrition by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nAttrition = filter Attrition by 'Segment' != \"CSG\";\nAttrition = filter Attrition by 'Cloud' in   {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nAttrition = foreach Attrition generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2','Segment' as 'Segment', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Attrition_Product')*-1 as 'Attrition_Product', sum('TTM_Product')*-1 as 'TTM_Product',sum('AOV_twelve_month_ago_Product') as 'AOV_twelve_month_ago','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; Attrition = filter Attrition by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}} ;\nq2_CYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYATT = filter Attrition by 'Month' in   {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYATT = filter Attrition by 'Month' in {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq4_CYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month_cum\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD /FILTER PIPEGEN-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nPipegen = load \"APM_Pipegen1\";\nPipegen = filter Pipegen by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nPipegen = group Pipegen by ('Fiscal_Year','Quarter', 'Region', 'Cloud', 'Month','Subcloud', 'Cloud_2','Country');\nPipegen = foreach Pipegen generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Pipegen') as 'Pipegen','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; Pipegen = filter Pipegen by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nPipegen = filter Pipegen by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYPipegen = filter Pipegen by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYPipegen = filter Pipegen by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_CYPipegen = filter Pipegen by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_pipegen\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYPipegen = filter Pipegen by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_pipegen\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nnHC = load \"APM_HC\";\nHC = filter HC by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nHC = foreach HC generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('SE') as 'SE',sum('AE') as 'AE',sum('Co_Prime') as 'Co_Prime','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; HC = filter HC by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nHC = filter HC by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYHC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYHC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_HC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYHC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYHC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_HC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD SWE INFRA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSW = load \"APM_SWE_INFRA\";\nSW = filter SW by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nSW = foreach SW generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('SWE') as 'SWE',sum('INFRA') as 'INFRA','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; SW = filter SW by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nSW = filter SW by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYSW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYSW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_SW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYSW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYSW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_SW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD REDACCOUNTS------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nREDACCOUNTS = load \"APM_REDACCOUNTS\";\nREDACCOUNTS = filter REDACCOUNTS by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nREDACCOUNTS = foreach REDACCOUNTS generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Red_Accounts') as 'Red_Accounts','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; REDACCOUNTS = filter REDACCOUNTS by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nREDACCOUNTS = filter REDACCOUNTS by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYREDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYREDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_REDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYREDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYREDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_REDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD T_P T&amp;P Cost to Serve------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nT_P = load \"APM_T_P\";\nT_P = filter T_P by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nT_P = foreach T_P generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('CTS') as 'CTS','Region' as 'Region',{{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; T_P = filter T_P by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nT_P = filter T_P by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYT_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYT_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_T_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYT_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYT_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_T_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD AVAILABILITY------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nAVAILABILITY = load \"APM_TECH_AVAILABILITY\";\nAVAILABILITY = filter AVAILABILITY by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nAVAILABILITY = foreach AVAILABILITY generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Availability') as 'Availability','Region' as 'Region',{{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; AVAILABILITY = filter AVAILABILITY by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nAVAILABILITY = filter AVAILABILITY by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYAVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYAVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_AVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYAVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYAVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_AVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD TRANSACTIONS------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nTRANSACTIONS = load \"APM_T_P_Transactions\";\nTRANSACTIONS = filter TRANSACTIONS by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nTRANSACTIONS = foreach TRANSACTIONS generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Transactions') as 'Transactions','Region' as 'Region',{{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; TRANSACTIONS = filter TRANSACTIONS by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nTRANSACTIONS = filter TRANSACTIONS by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYTRANSACTIONS = filter TRANSACTIONS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYTRANSACTIONS = filter TRANSACTIONS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_TRANSACTIONS = filter TRANSACTIONS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYTRANSACTIONS = filter TRANSACTIONS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYTRANSACTIONS = filter TRANSACTIONS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_TRANSACTIONS = filter TRANSACTIONS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD MARKET CUSTOMER------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nCUSTOMER = load \"APM_MARKET_CUSTOMER\";\nCUSTOMER = filter CUSTOMER by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nCUSTOMER = foreach CUSTOMER generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Customer') as 'Customer',sum('Cloud_m1') as 'Customer1',sum('Cloud_m2') as 'Customer2',sum('Cloud_m3') as 'Customer3','Region' as 'Region',{{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; CUSTOMER = filter CUSTOMER by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nCUSTOMER = filter CUSTOMER by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYCUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYCUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_CUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYCUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_cum\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYCUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_cum\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_CUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_cum\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD MARKET SHARE------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSHARE= load \"APM_MARKET_SHARE\";\nSHARE= filter SHARE by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nSHARE= foreach SHARE generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('TAM') as 'TAM',sum('Cloud_m1') as 'TAM1',sum('Cloud_m2') as 'TAM2' ,sum('Cloud_m3') as 'TAM3',sum('Original_TAM') as 'Original_TAM',sum('Cloud_merged') as 'Cloud_merged', 'Region' as 'Region',{{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; SHARE= filter SHARE by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nSHARE = filter SHARE by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYSHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYSHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_SHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYSHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_cum\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYSHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_cum\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_SHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_cum\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nnresult = group  q2_CYACV by 'Cloud' full, q2_PYACV by 'Cloud' full, q3_CYACV by 'Cloud' full, q3_PYACV by 'Cloud' full, q2_CYAOV by 'Cloud' full, q2_PYAOV by 'Cloud' full, q3_CYAOV by 'Cloud' full, q3_PYAOV by 'Cloud' full,  q2_CYATT by 'Cloud' full, q2_PYATT by 'Cloud' full, q3_CYATT by 'Cloud' full, q3_PYATT by 'Cloud' full,q4_CYATT by 'Cloud' full, q2_CYPipegen by 'Cloud' full, q2_PYPipegen by 'Cloud' full, q3_CYPipegen by 'Cloud' full, q3_PYPipegen by 'Cloud'full,q2_CYHC by 'Cloud' full, q2_PYHC by 'Cloud' full,q2_PY_2_HC by 'Cloud' full, q3_CYHC by 'Cloud' full, q3_PYHC by 'Cloud' full,q3_PY_2_HC by 'Cloud' full, q2_CYSW by 'Cloud' full, q2_PYSW by 'Cloud' full,q2_PY_2_SW by 'Cloud' full, q3_CYSW by 'Cloud' full, q3_PYSW by 'Cloud' full,q3_PY_2_SW by 'Cloud'full, q2_CYREDACCOUNTS by 'Cloud' full, q2_PYREDACCOUNTS by 'Cloud' full,q2_PY_2_REDACCOUNTS by 'Cloud' full, q3_CYREDACCOUNTS by 'Cloud' full, q3_PYREDACCOUNTS by 'Cloud' full,q3_PY_2_REDACCOUNTS by 'Cloud' full, q2_CYT_P by 'Cloud' full, q2_PYT_P by 'Cloud' full,q2_PY_2_T_P by 'Cloud' full, q3_CYT_P by 'Cloud' full, q3_PYT_P by 'Cloud' full,q3_PY_2_T_P by 'Cloud' full, q2_CYAVAILABILITY by 'Cloud' full, q2_PYAVAILABILITY by 'Cloud' full,q2_PY_2_AVAILABILITY by 'Cloud' full, q3_CYAVAILABILITY by 'Cloud' full, q3_PYAVAILABILITY by 'Cloud' full,q3_PY_2_AVAILABILITY by 'Cloud' full, q2_CYTRANSACTIONS by 'Cloud' full, q2_PYTRANSACTIONS by 'Cloud' full,q2_PY_2_TRANSACTIONS by 'Cloud' full, q3_CYTRANSACTIONS by 'Cloud' full, q3_PYTRANSACTIONS by 'Cloud' full,q3_PY_2_TRANSACTIONS by 'Cloud'  full, q2_CYCUSTOMER by 'Cloud' full, q2_PYCUSTOMER by 'Cloud' full,q2_PY_2_CUSTOMER by 'Cloud' full, q3_CYCUSTOMER by 'Cloud' full, q3_PYCUSTOMER by 'Cloud' full,q3_PY_2_CUSTOMER by 'Cloud'full, q2_CYSHARE by 'Cloud' full, q2_PYSHARE by 'Cloud' full,q2_PY_2_SHARE by 'Cloud' full, q3_CYSHARE by 'Cloud' full, q3_PYSHARE by 'Cloud' full,q3_PY_2_SHARE by 'Cloud',MasterHierarchy by 'Level_1';\nn;\nresult = foreach result generate  \"☁ \" + coalesce(MasterHierarchy.'Level_1', q2_CYACV.'Cloud', q2_PYACV.'Cloud', q3_CYACV.'Cloud', q3_PYACV.'Cloud', q2_CYAOV.'Cloud', q2_PYAOV.'Cloud', q3_CYAOV.'Cloud', q3_PYAOV.'Cloud',q2_PYATT.'Cloud',q2_CYATT.'Cloud',q3_PYATT.'Cloud',q3_CYATT.'Cloud',q2_CYPipegen.'Cloud', q2_PYPipegen.'Cloud', q3_CYPipegen.'Cloud', q3_PYPipegen.'Cloud',q2_CYREDACCOUNTS.'Cloud', q2_PYREDACCOUNTS.'Cloud', q3_CYREDACCOUNTS.'Cloud', q3_PYREDACCOUNTS.'Cloud', q2_CYT_P.'Cloud', q2_PYT_P.'Cloud', q3_CYT_P.'Cloud', q3_PYT_P.'Cloud', q2_CYAVAILABILITY.'Cloud', q2_PYAVAILABILITY.'Cloud', q3_CYAVAILABILITY.'Cloud', q3_PYAVAILABILITY.'Cloud', q2_CYTRANSACTIONS.'Cloud', q2_PYTRANSACTIONS.'Cloud', q3_CYTRANSACTIONS.'Cloud', q3_PYTRANSACTIONS.'Cloud', q2_CYAVAILABILITY.'Cloud', q2_PYAVAILABILITY.'Cloud', q3_CYAVAILABILITY.'Cloud', q3_PYAVAILABILITY.'Cloud', q2_CYCUSTOMER.'Cloud', q2_PYCUSTOMER.'Cloud', q3_CYCUSTOMER.'Cloud', q3_PYCUSTOMER.'Cloud', q2_CYSHARE.'Cloud', q2_PYSHARE.'Cloud', q3_CYSHARE.'Cloud', q3_PYSHARE.'Cloud') as 'Cloud',  coalesce(sum(q2_CYACV.'ACV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute', coalesce(sum(q3_CYACV.'ACV'), 0) as 'YTD ACV Absolute', ((coalesce(sum(q2_CYACV.'ACV'), 0) - coalesce(sum(q2_PYACV.'ACV'), 0)) / coalesce(sum(q2_PYACV.'ACV'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth', ((coalesce(sum(q3_CYACV.'ACV'), 0) - coalesce(sum(q3_PYACV.'ACV'), 0)) / coalesce(sum(q3_PYACV.'ACV'), 0)) * 100 as 'YTD ACV Growth', coalesce(sum(q2_CYAOV.'AOV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AOV Absolute', coalesce(sum(q3_CYAOV.'AOV'), 0) as 'YTD AOV Absolute', ((coalesce(sum(q2_CYAOV.'AOV'), 0) - coalesce(sum(q2_PYAOV.'AOV'), 0)) / coalesce(sum(q2_PYAOV.'AOV'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AOV Growth', ((coalesce(sum(q3_CYAOV.'AOV'), 0) - coalesce(sum(q3_PYAOV.'AOV'), 0)) / coalesce(sum(q3_PYAOV.'AOV'), 0)) * 100 as 'YTD AOV Growth',last(MasterHierarchy.'Level_1_Ranking') as 'Sort_Code', coalesce(sum(q2_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q2',coalesce(sum(q3_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q3',coalesce(round(sum(q2_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q2' ,coalesce(round(sum(q2_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q2',coalesce(round(sum(q4_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q3' ,coalesce(round(sum(q4_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q3',(coalesce(round(sum(q2_CYATT.'TTM_Product'), 0), 0) / coalesce(round(sum(q2_CYATT.'AOV_twelve_month_ago'), 0), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Attrition TTM Rate', (coalesce(round(sum(q4_CYATT.'TTM_Product'), 0), 0) / coalesce(round(sum(q4_CYATT.'AOV_twelve_month_ago'), 0), 0)) * 100 as 'YTD Attrition TTM Rate', coalesce(sum(q2_CYPipegen.'Pipegen'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Pipegen Absolute', coalesce(sum(q3_CYPipegen.'Pipegen'), 0) as 'YTD Pipegen Absolute', ((coalesce(sum(q2_CYPipegen.'Pipegen'), 0) - coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Pipegen Growth', ((coalesce(sum(q3_CYPipegen.'Pipegen'), 0) - coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) * 100 as 'YTD Pipegen Growth', coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute', coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) as 'YTD Red_Accounts Absolute', ((coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth', ((coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as 'YTD Red_Accounts Growth', coalesce(sum(q2_CYT_P.'CTS'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute', coalesce(sum(q3_CYT_P.'CTS'), 0) as 'YTD CTS Absolute', ((coalesce(sum(q2_CYT_P.'CTS'), 0) - coalesce(sum(q2_PYT_P.'CTS'), 0)) / coalesce(sum(q2_PYT_P.'CTS'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth', ((coalesce(sum(q3_CYT_P.'CTS'), 0) - coalesce(sum(q3_PYT_P.'CTS'), 0)) / coalesce(sum(q3_PYT_P.'CTS'), 0)) * 100 as 'YTD CTS Growth', coalesce(sum(q2_CYAVAILABILITY.'Availability'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute', coalesce(sum(q3_CYAVAILABILITY.'Availability'), 0) as 'YTD Availability Absolute', ((coalesce(sum(q2_CYAVAILABILITY.'Availability'), 0) - coalesce(sum(q2_PYAVAILABILITY.'Availability'), 0)) / coalesce(sum(q2_PYAVAILABILITY.'Availability'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth', ((coalesce(sum(q3_CYAVAILABILITY.'Availability'), 0) - coalesce(sum(q3_PYAVAILABILITY.'Availability'), 0)) / coalesce(sum(q3_PYAVAILABILITY.'Availability'), 0)) * 100 as 'YTD Availability Growth', coalesce(sum(q2_CYTRANSACTIONS.'Transactions'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute', coalesce(sum(q3_CYTRANSACTIONS.'Transactions'), 0) as 'YTD Transactions Absolute', ((coalesce(sum(q2_CYTRANSACTIONS.'Transactions'), 0) - coalesce(sum(q2_PYTRANSACTIONS.'Transactions'), 0)) / coalesce(sum(q2_PYTRANSACTIONS.'Transactions'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth', ((coalesce(sum(q3_CYTRANSACTIONS.'Transactions'), 0) - coalesce(sum(q3_PYTRANSACTIONS.'Transactions'), 0)) / coalesce(sum(q3_PYTRANSACTIONS.'Transactions'), 0)) * 100 as 'YTD Transactions Growth', coalesce(sum(q2_CYCUSTOMER.'Customer1'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute', coalesce(sum(q3_CYCUSTOMER.'Customer1'), 0) as 'YTD Customer Absolute', ((coalesce(sum(q2_CYCUSTOMER.'Customer1'), 0) - coalesce(sum(q2_PYCUSTOMER.'Customer1'), 0)) / coalesce(sum(q2_PYCUSTOMER.'Customer1'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth', ((coalesce(sum(q3_CYCUSTOMER.'Customer1'), 0) - coalesce(sum(q3_PYCUSTOMER.'Customer1'), 0)) / coalesce(sum(q3_PYCUSTOMER.'Customer1'), 0)) * 100 as 'YTD Customer Growth',coalesce(sum(q2_CYSHARE.'TAM1'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute', coalesce(sum(q3_CYSHARE.'TAM1'), 0) as 'YTD TAM Absolute',(coalesce(sum(q2_CYAOV.'AOV'),0)/10000) / coalesce(sum(q2_CYSHARE.'TAM1'), 0) as  '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth' , (coalesce(sum(q3_CYAOV.'AOV'),0)/10000)/ coalesce(sum(q3_CYSHARE.'TAM1'), 0)   as 'YTD TAM Growth',coalesce(sum(q2_CYHC.'SE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE Absolute', coalesce(sum(q3_CYHC.'SE'), 0) as 'YTD SE Absolute', ((coalesce(sum(q2_CYHC.'SE'), 0) - coalesce(sum(q2_PYHC.'SE'), 0)) / coalesce(sum(q2_PYHC.'SE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SE Growth', ((coalesce(sum(q3_CYHC.'SE'), 0) - coalesce(sum(q3_PYHC.'SE'), 0)) / coalesce(sum(q3_PYHC.'SE'), 0)) * 100 as 'YTD SE Growth',(power(coalesce(sum(q2_CYHC.'SE'), 0) / coalesce(sum(q2_PY_2_HC.'SE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR',(power(coalesce(sum(q3_CYHC.'SE'), 0) / coalesce(sum(q3_PY_2_HC.'SE'), 0),(1/2))-1)*100 as 'YTD SE CAGR', coalesce(sum(q2_CYHC.'AE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE Absolute', coalesce(sum(q3_CYHC.'AE'), 0) as 'YTD AE Absolute', ((coalesce(sum(q2_CYHC.'AE'), 0) - coalesce(sum(q2_PYHC.'AE'), 0)) / coalesce(sum(q2_PYHC.'AE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AE Growth', ((coalesce(sum(q3_CYHC.'AE'), 0) - coalesce(sum(q3_PYHC.'AE'), 0)) / coalesce(sum(q3_PYHC.'AE'), 0)) * 100 as 'YTD AE Growth', (power(coalesce(sum(q2_CYHC.'AE'), 0) / coalesce(sum(q2_PY_2_HC.'AE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR',(power(coalesce(sum(q3_CYHC.'AE'), 0) / coalesce(sum(q3_PY_2_HC.'AE'), 0),(1/2))-1)*100 as 'YTD AE CAGR',coalesce(sum(q2_CYHC.'Co_Prime'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime Absolute', coalesce(sum(q3_CYHC.'Co_Prime'), 0) as 'YTD Co_Prime Absolute', ((coalesce(sum(q2_CYHC.'Co_Prime'), 0) - coalesce(sum(q2_PYHC.'Co_Prime'), 0)) / coalesce(sum(q2_PYHC.'Co_Prime'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Co_Prime Growth', ((coalesce(sum(q3_CYHC.'Co_Prime'), 0) - coalesce(sum(q3_PYHC.'Co_Prime'), 0)) / coalesce(sum(q3_PYHC.'Co_Prime'), 0)) * 100 as 'YTD Co_Prime Growth',(power(coalesce(sum(q2_CYHC.'Co_Prime'), 0) / coalesce(sum(q2_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR',(power(coalesce(sum(q3_CYHC.'Co_Prime'), 0) / coalesce(sum(q3_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as 'YTD Co_Prime CAGR', coalesce(sum(q2_CYSW.'SWE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE Absolute', coalesce(sum(q3_CYSW.'SWE'), 0) as 'YTD SWE Absolute', ((coalesce(sum(q2_CYSW.'SWE'), 0) - coalesce(sum(q2_PYSW.'SWE'), 0)) / coalesce(sum(q2_PYSW.'SWE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth', ((coalesce(sum(q3_CYSW.'SWE'), 0) - coalesce(sum(q3_PYSW.'SWE'), 0)) / coalesce(sum(q3_PYSW.'SWE'), 0)) * 100 as 'YTD SWE Growth',(power(coalesce(sum(q2_CYSW.'SWE'), 0) / coalesce(sum(q2_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE CAGR',(power(coalesce(sum(q3_CYSW.'SWE'), 0) / coalesce(sum(q3_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as 'YTD SWE CAGR', coalesce(sum(q2_CYSW.'INFRA'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA Absolute', coalesce(sum(q3_CYSW.'INFRA'), 0) as 'YTD INFRA Absolute', ((coalesce(sum(q2_CYSW.'INFRA'), 0) - coalesce(sum(q2_PYSW.'INFRA'), 0)) / coalesce(sum(q2_PYSW.'INFRA'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth', ((coalesce(sum(q3_CYSW.'INFRA'), 0) - coalesce(sum(q3_PYSW.'INFRA'), 0)) / coalesce(sum(q3_PYSW.'INFRA'), 0)) * 100 as 'YTD INFRA Growth',(power(coalesce(sum(q2_CYSW.'INFRA'), 0) / coalesce(sum(q2_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA CAGR',(power(coalesce(sum(q3_CYSW.'INFRA'), 0) / coalesce(sum(q3_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as 'YTD INFRA CAGR';\nnresult_SubCloud = group q2_CYACV by ('Cloud', 'Subcloud') full, q2_PYACV by ('Cloud', 'Subcloud') full, q3_CYACV by ('Cloud', 'Subcloud') full, q3_PYACV by ('Cloud', 'Subcloud') full, q2_CYAOV by ('Cloud', 'Subcloud') full, q2_PYAOV by ('Cloud', 'Subcloud') full, q3_CYAOV by ('Cloud', 'Subcloud') full, q3_PYAOV by ('Cloud', 'Subcloud') full,q2_CYATT by ('Cloud', 'Subcloud') full, q2_PYATT by ('Cloud', 'Subcloud') full, q3_CYATT by ('Cloud', 'Subcloud') full, q3_PYATT by ('Cloud', 'Subcloud') full,q4_CYATT by ('Cloud', 'Subcloud') full, q2_CYPipegen by ('Cloud', 'Subcloud') full, q2_PYPipegen by ('Cloud', 'Subcloud') full, q3_CYPipegen by ('Cloud', 'Subcloud') full, q3_PYPipegen by ('Cloud', 'Subcloud') full,q2_CYHC by ('Cloud', 'Subcloud') full, q2_PYHC by ('Cloud', 'Subcloud') full,q2_PY_2_HC by ('Cloud', 'Subcloud') full, q3_CYHC by ('Cloud', 'Subcloud') full, q3_PYHC by ('Cloud', 'Subcloud') full, q3_PY_2_HC by ('Cloud', 'Subcloud') full ,q2_CYSW by ('Cloud', 'Subcloud') full, q2_PYSW by ('Cloud', 'Subcloud') full,q2_PY_2_SW by ('Cloud', 'Subcloud') full, q3_CYSW by ('Cloud', 'Subcloud') full, q3_PYSW by ('Cloud', 'Subcloud') full, q3_PY_2_SW by ('Cloud', 'Subcloud')full, q2_CYREDACCOUNTS by ('Cloud', 'Subcloud') full, q2_PYREDACCOUNTS by ('Cloud', 'Subcloud') full,q2_PY_2_REDACCOUNTS by ('Cloud', 'Subcloud') full, q3_CYREDACCOUNTS by ('Cloud', 'Subcloud') full, q3_PYREDACCOUNTS by ('Cloud', 'Subcloud') full,q3_PY_2_REDACCOUNTS by ('Cloud', 'Subcloud') full, q2_CYT_P by ('Cloud', 'Subcloud') full, q2_PYT_P by ('Cloud', 'Subcloud') full,q2_PY_2_T_P by ('Cloud', 'Subcloud') full, q3_CYT_P by ('Cloud', 'Subcloud') full, q3_PYT_P by ('Cloud', 'Subcloud') full,q3_PY_2_T_P by ('Cloud', 'Subcloud') full, q2_CYAVAILABILITY by ('Cloud', 'Subcloud') full, q2_PYAVAILABILITY by ('Cloud', 'Subcloud') full,q2_PY_2_AVAILABILITY by ('Cloud', 'Subcloud') full, q3_CYAVAILABILITY by ('Cloud', 'Subcloud') full, q3_PYAVAILABILITY by ('Cloud', 'Subcloud') full,q3_PY_2_AVAILABILITY by ('Cloud', 'Subcloud') full, q2_CYTRANSACTIONS by ('Cloud', 'Subcloud') full, q2_PYTRANSACTIONS by ('Cloud', 'Subcloud') full,q2_PY_2_TRANSACTIONS by ('Cloud', 'Subcloud') full, q3_CYTRANSACTIONS by ('Cloud', 'Subcloud') full, q3_PYTRANSACTIONS by ('Cloud', 'Subcloud') full,q3_PY_2_TRANSACTIONS by ('Cloud', 'Subcloud')  full, q2_CYCUSTOMER by ('Cloud', 'Subcloud') full, q2_PYCUSTOMER by ('Cloud', 'Subcloud') full,q2_PY_2_CUSTOMER by ('Cloud', 'Subcloud') full, q3_CYCUSTOMER by ('Cloud', 'Subcloud') full, q3_PYCUSTOMER by ('Cloud', 'Subcloud') full,q3_PY_2_CUSTOMER by ('Cloud', 'Subcloud')full, q2_CYSHARE by ('Cloud', 'Subcloud') full, q2_PYSHARE by ('Cloud', 'Subcloud') full,q2_PY_2_SHARE by ('Cloud', 'Subcloud') full, q3_CYSHARE by ('Cloud', 'Subcloud') full, q3_PYSHARE by ('Cloud', 'Subcloud') full,q3_PY_2_SHARE by ('Cloud', 'Subcloud'),MasterHierarchy by ('Level_1', 'Level_2') ;\nn\nresult_SubCloud = foreach result_SubCloud generate \"    ↳  \" + coalesce(MasterHierarchy.'Level_2', q2_CYACV.'Subcloud', q2_PYACV.'Subcloud', q3_CYACV.'Subcloud', q3_PYACV.'Subcloud', q2_CYAOV.'Subcloud', q2_PYAOV.'Subcloud', q3_CYAOV.'Subcloud', q3_PYAOV.'Subcloud',q2_CYREDACCOUNTS.'Subcloud', q2_PYREDACCOUNTS.'Subcloud', q3_CYREDACCOUNTS.'Subcloud', q3_PYREDACCOUNTS.'Subcloud', q2_CYT_P.'Subcloud', q2_PYT_P.'Subcloud', q3_CYT_P.'Subcloud', q3_PYT_P.'Subcloud', q2_CYAVAILABILITY.'Subcloud', q2_PYAVAILABILITY.'Subcloud', q3_CYAVAILABILITY.'Subcloud', q3_PYAVAILABILITY.'Subcloud', q2_CYTRANSACTIONS.'Subcloud', q2_PYTRANSACTIONS.'Subcloud', q3_CYTRANSACTIONS.'Subcloud', q3_PYTRANSACTIONS.'Subcloud', q2_CYAVAILABILITY.'Subcloud', q2_PYAVAILABILITY.'Subcloud', q3_CYAVAILABILITY.'Subcloud', q3_PYAVAILABILITY.'Subcloud', q2_CYCUSTOMER.'Subcloud', q2_PYCUSTOMER.'Subcloud', q3_CYCUSTOMER.'Subcloud', q3_PYCUSTOMER.'Subcloud', q2_CYSHARE.'Subcloud', q2_PYSHARE.'Subcloud', q3_CYSHARE.'Subcloud', q3_PYSHARE.'Subcloud') as 'Cloud',  coalesce(sum(q2_CYACV.'ACV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute', coalesce(sum(q3_CYACV.'ACV'), 0) as 'YTD ACV Absolute', ((coalesce(sum(q2_CYACV.'ACV'), 0) - coalesce(sum(q2_PYACV.'ACV'), 0)) / coalesce(sum(q2_PYACV.'ACV'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth', ((coalesce(sum(q3_CYACV.'ACV'), 0) - coalesce(sum(q3_PYACV.'ACV'), 0)) / coalesce(sum(q3_PYACV.'ACV'), 0)) * 100 as 'YTD ACV Growth', coalesce(sum(q2_CYAOV.'AOV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AOV Absolute', coalesce(sum(q3_CYAOV.'AOV'), 0) as 'YTD AOV Absolute', ((coalesce(sum(q2_CYAOV.'AOV'), 0) - coalesce(sum(q2_PYAOV.'AOV'), 0)) / coalesce(sum(q2_PYAOV.'AOV'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AOV Growth', ((coalesce(sum(q3_CYAOV.'AOV'), 0) - coalesce(sum(q3_PYAOV.'AOV'), 0)) / coalesce(sum(q3_PYAOV.'AOV'), 0)) * 100 as 'YTD AOV Growth', coalesce(sum(q2_CYPipegen.'Pipegen'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Pipegen Absolute', coalesce(sum(q3_CYPipegen.'Pipegen'), 0) as 'YTD Pipegen Absolute', ((coalesce(sum(q2_CYPipegen.'Pipegen'), 0) - coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Pipegen Growth', ((coalesce(sum(q3_CYPipegen.'Pipegen'), 0) - coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) * 100 as 'YTD Pipegen Growth',coalesce(sum(q2_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q2',coalesce(sum(q3_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q3',coalesce(round(sum(q2_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q2' ,coalesce(round(sum(q2_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q2',coalesce(round(sum(q4_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q3' ,coalesce(round(sum(q4_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q3',(coalesce(round(sum(q2_CYATT.'TTM_Product'), 0), 0) / coalesce(round(sum(q2_CYATT.'AOV_twelve_month_ago'), 0), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Attrition TTM Rate', (coalesce(round(sum(q4_CYATT.'TTM_Product'), 0), 0) / coalesce(round(sum(q4_CYATT.'AOV_twelve_month_ago'), 0), 0)) * 100 as 'YTD Attrition TTM Rate', coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute', coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) as 'YTD Red_Accounts Absolute', ((coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth', ((coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as 'YTD Red_Accounts Growth', coalesce(sum(q2_CYT_P.'CTS'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute', coalesce(sum(q3_CYT_P.'CTS'), 0) as 'YTD CTS Absolute', ((coalesce(sum(q2_CYT_P.'CTS'), 0) - coalesce(sum(q2_PYT_P.'CTS'), 0)) / coalesce(sum(q2_PYT_P.'CTS'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth', ((coalesce(sum(q3_CYT_P.'CTS'), 0) - coalesce(sum(q3_PYT_P.'CTS'), 0)) / coalesce(sum(q3_PYT_P.'CTS'), 0)) * 100 as 'YTD CTS Growth', coalesce(sum(q2_CYAVAILABILITY.'Availability'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute', coalesce(sum(q3_CYAVAILABILITY.'Availability'), 0) as 'YTD Availability Absolute', ((coalesce(sum(q2_CYAVAILABILITY.'Availability'), 0) - coalesce(sum(q2_PYAVAILABILITY.'Availability'), 0)) / coalesce(sum(q2_PYAVAILABILITY.'Availability'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth', ((coalesce(sum(q3_CYAVAILABILITY.'Availability'), 0) - coalesce(sum(q3_PYAVAILABILITY.'Availability'), 0)) / coalesce(sum(q3_PYAVAILABILITY.'Availability'), 0)) * 100 as 'YTD Availability Growth', coalesce(sum(q2_CYTRANSACTIONS.'Transactions'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute', coalesce(sum(q3_CYTRANSACTIONS.'Transactions'), 0) as 'YTD Transactions Absolute', ((coalesce(sum(q2_CYTRANSACTIONS.'Transactions'), 0) - coalesce(sum(q2_PYTRANSACTIONS.'Transactions'), 0)) / coalesce(sum(q2_PYTRANSACTIONS.'Transactions'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth', ((coalesce(sum(q3_CYTRANSACTIONS.'Transactions'), 0) - coalesce(sum(q3_PYTRANSACTIONS.'Transactions'), 0)) / coalesce(sum(q3_PYTRANSACTIONS.'Transactions'), 0)) * 100 as 'YTD Transactions Growth', coalesce(sum(q2_CYCUSTOMER.'Customer2'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute', coalesce(sum(q3_CYCUSTOMER.'Customer2'), 0) as 'YTD Customer Absolute', ((coalesce(sum(q2_CYCUSTOMER.'Customer2'), 0) - coalesce(sum(q2_PYCUSTOMER.'Customer2'), 0)) / coalesce(sum(q2_PYCUSTOMER.'Customer2'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth', ((coalesce(sum(q3_CYCUSTOMER.'Customer2'), 0) - coalesce(sum(q3_PYCUSTOMER.'Customer2'), 0)) / coalesce(sum(q3_PYCUSTOMER.'Customer2'), 0)) * 100 as 'YTD Customer Growth', coalesce(sum(q2_CYSHARE.'TAM2'), 0)  as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute', coalesce(sum(q3_CYSHARE.'TAM2'), 0) as 'YTD TAM Absolute', (coalesce(sum(q2_CYAOV.'AOV'),0)/10000) / coalesce(sum(q2_CYSHARE.'TAM2'), 0)  as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth',(coalesce(sum(q3_CYAOV.'AOV'),0)/10000)/ coalesce(sum(q3_CYSHARE.'TAM2'), 0)   as 'YTD TAM Growth', coalesce(sum(q2_CYHC.'SE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE Absolute', coalesce(sum(q3_CYHC.'SE'), 0) as 'YTD SE Absolute', ((coalesce(sum(q2_CYHC.'SE'), 0) - coalesce(sum(q2_PYHC.'SE'), 0)) / coalesce(sum(q2_PYHC.'SE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SE Growth', ((coalesce(sum(q3_CYHC.'SE'), 0) - coalesce(sum(q3_PYHC.'SE'), 0)) / coalesce(sum(q3_PYHC.'SE'), 0)) * 100 as 'YTD SE Growth',(power(coalesce(sum(q2_CYHC.'SE'), 0) / coalesce(sum(q2_PY_2_HC.'SE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR',(power(coalesce(sum(q3_CYHC.'SE'), 0) / coalesce(sum(q3_PY_2_HC.'SE'), 0),(1/2))-1)*100 as 'YTD SE CAGR', coalesce(sum(q2_CYHC.'AE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE Absolute', coalesce(sum(q3_CYHC.'AE'), 0) as 'YTD AE Absolute', ((coalesce(sum(q2_CYHC.'AE'), 0) - coalesce(sum(q2_PYHC.'AE'), 0)) / coalesce(sum(q2_PYHC.'AE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AE Growth', ((coalesce(sum(q3_CYHC.'AE'), 0) - coalesce(sum(q3_PYHC.'AE'), 0)) / coalesce(sum(q3_PYHC.'AE'), 0)) * 100 as 'YTD AE Growth', (power(coalesce(sum(q2_CYHC.'AE'), 0) / coalesce(sum(q2_PY_2_HC.'AE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR',(power(coalesce(sum(q3_CYHC.'AE'), 0) / coalesce(sum(q3_PY_2_HC.'AE'), 0),(1/2))-1)*100 as 'YTD AE CAGR',coalesce(sum(q2_CYHC.'Co_Prime'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime Absolute', coalesce(sum(q3_CYHC.'Co_Prime'), 0) as 'YTD Co_Prime Absolute', ((coalesce(sum(q2_CYHC.'Co_Prime'), 0) - coalesce(sum(q2_PYHC.'Co_Prime'), 0)) / coalesce(sum(q2_PYHC.'Co_Prime'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Co_Prime Growth', ((coalesce(sum(q3_CYHC.'Co_Prime'), 0) - coalesce(sum(q3_PYHC.'Co_Prime'), 0)) / coalesce(sum(q3_PYHC.'Co_Prime'), 0)) * 100 as 'YTD Co_Prime Growth',(power(coalesce(sum(q2_CYHC.'Co_Prime'), 0) / coalesce(sum(q2_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR',(power(coalesce(sum(q3_CYHC.'Co_Prime'), 0) / coalesce(sum(q3_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as 'YTD Co_Prime CAGR', coalesce(sum(q2_CYSW.'SWE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE Absolute', coalesce(sum(q3_CYSW.'SWE'), 0) as 'YTD SWE Absolute', ((coalesce(sum(q2_CYSW.'SWE'), 0) - coalesce(sum(q2_PYSW.'SWE'), 0)) / coalesce(sum(q2_PYSW.'SWE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth', ((coalesce(sum(q3_CYSW.'SWE'), 0) - coalesce(sum(q3_PYSW.'SWE'), 0)) / coalesce(sum(q3_PYSW.'SWE'), 0)) * 100 as 'YTD SWE Growth',(power(coalesce(sum(q2_CYSW.'SWE'), 0) / coalesce(sum(q2_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE CAGR',(power(coalesce(sum(q3_CYSW.'SWE'), 0) / coalesce(sum(q3_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as 'YTD SWE CAGR', coalesce(sum(q2_CYSW.'INFRA'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA Absolute', coalesce(sum(q3_CYSW.'INFRA'), 0) as 'YTD INFRA Absolute', ((coalesce(sum(q2_CYSW.'INFRA'), 0) - coalesce(sum(q2_PYSW.'INFRA'), 0)) / coalesce(sum(q2_PYSW.'INFRA'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth', ((coalesce(sum(q3_CYSW.'INFRA'), 0) - coalesce(sum(q3_PYSW.'INFRA'), 0)) / coalesce(sum(q3_PYSW.'INFRA'), 0)) * 100 as 'YTD INFRA Growth',(power(coalesce(sum(q2_CYSW.'INFRA'), 0) / coalesce(sum(q2_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA CAGR',(power(coalesce(sum(q3_CYSW.'INFRA'), 0) / coalesce(sum(q3_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as 'YTD INFRA CAGR',last(MasterHierarchy.'Level_2_Sort_Code')  as 'Sort_Code';\nnresult_Cloud_Level3 = group  q2_CYACV by ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYACV by ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYACV by ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYACV by ('Cloud', 'Subcloud', 'Cloud_2') full, q2_CYAOV by ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYAOV by ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYAOV by ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYAOV by ('Cloud', 'Subcloud', 'Cloud_2') full,  q2_CYPipegen by ('Cloud', 'Subcloud','Cloud_2') full, q2_PYPipegen by ('Cloud', 'Subcloud','Cloud_2') full, q3_CYPipegen by ('Cloud', 'Subcloud','Cloud_2') full, q3_PYPipegen by ('Cloud', 'Subcloud','Cloud_2') full, q2_CYHC by ('Cloud', 'Subcloud','Cloud_2') full, q2_PYHC by ('Cloud', 'Subcloud','Cloud_2') full,q2_PY_2_HC by ('Cloud', 'Subcloud','Cloud_2') full, q3_CYHC by ('Cloud', 'Subcloud','Cloud_2') full, q3_PYHC by ('Cloud', 'Subcloud','Cloud_2') full,  q3_PY_2_HC by ('Cloud', 'Subcloud','Cloud_2') full, q2_CYSW by ('Cloud', 'Subcloud','Cloud_2') full, q2_PYSW by ('Cloud', 'Subcloud','Cloud_2') full,q2_PY_2_SW by ('Cloud', 'Subcloud','Cloud_2') full, q3_CYSW by ('Cloud', 'Subcloud','Cloud_2') full, q3_PYSW by ('Cloud', 'Subcloud','Cloud_2') full,  q3_PY_2_SW by ('Cloud', 'Subcloud','Cloud_2') full,q2_CYATT by ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYATT by ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYATT by ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYATT by ('Cloud', 'Subcloud', 'Cloud_2')full, q2_CYREDACCOUNTS by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYREDACCOUNTS by  ('Cloud', 'Subcloud', 'Cloud_2') full,q2_PY_2_REDACCOUNTS by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYREDACCOUNTS by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYREDACCOUNTS by  ('Cloud', 'Subcloud', 'Cloud_2') full,q3_PY_2_REDACCOUNTS by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_CYT_P by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYT_P by  ('Cloud', 'Subcloud', 'Cloud_2') full,q2_PY_2_T_P by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYT_P by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYT_P by  ('Cloud', 'Subcloud', 'Cloud_2') full,q3_PY_2_T_P by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_CYAVAILABILITY by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYAVAILABILITY by  ('Cloud', 'Subcloud', 'Cloud_2') full,q2_PY_2_AVAILABILITY by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYAVAILABILITY by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYAVAILABILITY by  ('Cloud', 'Subcloud', 'Cloud_2') full,q3_PY_2_AVAILABILITY by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_CYTRANSACTIONS by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYTRANSACTIONS by  ('Cloud', 'Subcloud', 'Cloud_2') full,q2_PY_2_TRANSACTIONS by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYTRANSACTIONS by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYTRANSACTIONS by  ('Cloud', 'Subcloud', 'Cloud_2') full,q3_PY_2_TRANSACTIONS by  ('Cloud', 'Subcloud', 'Cloud_2')  full, q2_CYCUSTOMER by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYCUSTOMER by  ('Cloud', 'Subcloud', 'Cloud_2') full,q2_PY_2_CUSTOMER by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYCUSTOMER by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYCUSTOMER by  ('Cloud', 'Subcloud', 'Cloud_2') full,q3_PY_2_CUSTOMER by  ('Cloud', 'Subcloud', 'Cloud_2')full, q2_CYSHARE by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYSHARE by  ('Cloud', 'Subcloud', 'Cloud_2') full,q2_PY_2_SHARE by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYSHARE by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYSHARE by  ('Cloud', 'Subcloud', 'Cloud_2') full,q3_PY_2_SHARE by  ('Cloud', 'Subcloud', 'Cloud_2'),MasterHierarchy by ('Level_1', 'Level_2','Level_3')  ;\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------PROJECTION LEVEL3-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nresult_Cloud_Level3 = foreach result_Cloud_Level3 generate \"          \" + coalesce(MasterHierarchy.'Level_3', q2_CYACV.'Cloud_2', q2_PYACV.'Cloud_2', q3_CYACV.'Cloud_2', q3_PYACV.'Cloud_2', q2_CYAOV.'Cloud_2', q2_PYAOV.'Cloud_2', q3_CYAOV.'Cloud_2', q3_PYAOV.'Cloud_2',q2_CYREDACCOUNTS.'Cloud_2', q2_PYREDACCOUNTS.'Cloud_2', q3_CYREDACCOUNTS.'Cloud_2', q3_PYREDACCOUNTS.'Cloud_2', q2_CYT_P.'Cloud_2', q2_PYT_P.'Cloud_2', q3_CYT_P.'Cloud_2', q3_PYT_P.'Cloud_2', q2_CYAVAILABILITY.'Cloud_2', q2_PYAVAILABILITY.'Cloud_2', q3_CYAVAILABILITY.'Cloud_2', q3_PYAVAILABILITY.'Cloud_2', q2_CYTRANSACTIONS.'Cloud_2', q2_PYTRANSACTIONS.'Cloud_2', q3_CYTRANSACTIONS.'Cloud_2', q3_PYTRANSACTIONS.'Cloud_2', q2_CYAVAILABILITY.'Cloud_2', q2_PYAVAILABILITY.'Cloud_2', q3_CYAVAILABILITY.'Cloud_2', q3_PYAVAILABILITY.'Cloud_2', q2_CYCUSTOMER.'Cloud_2', q2_PYCUSTOMER.'Cloud_2', q3_CYCUSTOMER.'Cloud_2', q3_PYCUSTOMER.'Cloud_2', q2_CYSHARE.'Cloud_2', q2_PYSHARE.'Cloud_2', q3_CYSHARE.'Cloud_2', q3_PYSHARE.'Cloud_2') as 'Cloud',  coalesce(sum(q2_CYACV.'ACV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute', coalesce(sum(q3_CYACV.'ACV'), 0) as 'YTD ACV Absolute', ((coalesce(sum(q2_CYACV.'ACV'), 0) - coalesce(sum(q2_PYACV.'ACV'), 0)) / coalesce(sum(q2_PYACV.'ACV'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth', ((coalesce(sum(q3_CYACV.'ACV'), 0) - coalesce(sum(q3_PYACV.'ACV'), 0)) / coalesce(sum(q3_PYACV.'ACV'), 0)) * 100 as 'YTD ACV Growth', coalesce(sum(q2_CYAOV.'AOV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AOV Absolute', coalesce(sum(q3_CYAOV.'AOV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} YTD AOV Absolute', ((coalesce(sum(q2_CYAOV.'AOV'), 0) - coalesce(sum(q2_PYAOV.'AOV'), 0)) / coalesce(sum(q2_PYAOV.'AOV'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AOV Growth', ((coalesce(sum(q3_CYAOV.'AOV'), 0) - coalesce(sum(q3_PYAOV.'AOV'), 0)) / coalesce(sum(q3_PYAOV.'AOV'), 0)) * 100 as 'YTD AOV Growth', coalesce(sum(q2_CYPipegen.'Pipegen'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Pipegen Absolute', coalesce(sum(q3_CYPipegen.'Pipegen'), 0) as 'YTD Pipegen Absolute', ((coalesce(sum(q2_CYPipegen.'Pipegen'), 0) - coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Pipegen Growth', ((coalesce(sum(q3_CYPipegen.'Pipegen'), 0) - coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) * 100 as 'YTD Pipegen Growth', coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute', coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) as 'YTD Red_Accounts Absolute', ((coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth', ((coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as 'YTD Red_Accounts Growth', coalesce(sum(q2_CYT_P.'CTS'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute', coalesce(sum(q3_CYT_P.'CTS'), 0) as 'YTD CTS Absolute', ((coalesce(sum(q2_CYT_P.'CTS'), 0) - coalesce(sum(q2_PYT_P.'CTS'), 0)) / coalesce(sum(q2_PYT_P.'CTS'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth', ((coalesce(sum(q3_CYT_P.'CTS'), 0) - coalesce(sum(q3_PYT_P.'CTS'), 0)) / coalesce(sum(q3_PYT_P.'CTS'), 0)) * 100 as 'YTD CTS Growth', coalesce(sum(q2_CYAVAILABILITY.'Availability'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute', coalesce(sum(q3_CYAVAILABILITY.'Availability'), 0) as 'YTD Availability Absolute', ((coalesce(sum(q2_CYAVAILABILITY.'Availability'), 0) - coalesce(sum(q2_PYAVAILABILITY.'Availability'), 0)) / coalesce(sum(q2_PYAVAILABILITY.'Availability'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth', ((coalesce(sum(q3_CYAVAILABILITY.'Availability'), 0) - coalesce(sum(q3_PYAVAILABILITY.'Availability'), 0)) / coalesce(sum(q3_PYAVAILABILITY.'Availability'), 0)) * 100 as 'YTD Availability Growth', coalesce(sum(q2_CYTRANSACTIONS.'Transactions'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute', coalesce(sum(q3_CYTRANSACTIONS.'Transactions'), 0) as 'YTD Transactions Absolute', ((coalesce(sum(q2_CYTRANSACTIONS.'Transactions'), 0) - coalesce(sum(q2_PYTRANSACTIONS.'Transactions'), 0)) / coalesce(sum(q2_PYTRANSACTIONS.'Transactions'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth', ((coalesce(sum(q3_CYTRANSACTIONS.'Transactions'), 0) - coalesce(sum(q3_PYTRANSACTIONS.'Transactions'), 0)) / coalesce(sum(q3_PYTRANSACTIONS.'Transactions'), 0)) * 100 as 'YTD Transactions Growth', coalesce(sum(q2_CYCUSTOMER.'Customer3'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute', coalesce(sum(q3_CYCUSTOMER.'Customer3'), 0) as 'YTD Customer Absolute', ((coalesce(sum(q2_CYCUSTOMER.'Customer3'), 0) - coalesce(sum(q2_PYCUSTOMER.'Customer3'), 0)) / coalesce(sum(q2_PYCUSTOMER.'Customer3'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth', ((coalesce(sum(q3_CYCUSTOMER.'Customer3'), 0) - coalesce(sum(q3_PYCUSTOMER.'Customer3'), 0)) / coalesce(sum(q3_PYCUSTOMER.'Customer3'), 0)) * 100 as 'YTD Customer Growth', coalesce(sum(q2_CYSHARE.'TAM3'), 0)  as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute', coalesce(sum(q3_CYSHARE.'TAM3'), 0) as 'YTD TAM Absolute',(coalesce(sum(q2_CYAOV.'AOV'),0)/10000) / coalesce(sum(q2_CYSHARE.'TAM3'), 0)  as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth', (coalesce(sum(q3_CYAOV.'AOV'),0)/10000)/ coalesce(sum(q3_CYSHARE.'TAM3'), 0)   as 'YTD TAM Growth', coalesce(sum(q2_CYHC.'SE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE Absolute', coalesce(sum(q3_CYHC.'SE'), 0) as 'YTD SE Absolute', ((coalesce(sum(q2_CYHC.'SE'), 0) - coalesce(sum(q2_PYHC.'SE'), 0)) / coalesce(sum(q2_PYHC.'SE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SE Growth', ((coalesce(sum(q3_CYHC.'SE'), 0) - coalesce(sum(q3_PYHC.'SE'), 0)) / coalesce(sum(q3_PYHC.'SE'), 0)) * 100 as 'YTD SE Growth',(power(coalesce(sum(q2_CYHC.'SE'), 0) / coalesce(sum(q2_PY_2_HC.'SE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR',(power(coalesce(sum(q3_CYHC.'SE'), 0) / coalesce(sum(q3_PY_2_HC.'SE'), 0),(1/2))-1)*100 as 'YTD SE CAGR', coalesce(sum(q2_CYHC.'AE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE Absolute', coalesce(sum(q3_CYHC.'AE'), 0) as 'YTD AE Absolute', ((coalesce(sum(q2_CYHC.'AE'), 0) - coalesce(sum(q2_PYHC.'AE'), 0)) / coalesce(sum(q2_PYHC.'AE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AE Growth', ((coalesce(sum(q3_CYHC.'AE'), 0) - coalesce(sum(q3_PYHC.'AE'), 0)) / coalesce(sum(q3_PYHC.'AE'), 0)) * 100 as 'YTD AE Growth', (power(coalesce(sum(q2_CYHC.'AE'), 0) / coalesce(sum(q2_PY_2_HC.'AE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR',(power(coalesce(sum(q3_CYHC.'AE'), 0) / coalesce(sum(q3_PY_2_HC.'AE'), 0),(1/2))-1)*100 as 'YTD AE CAGR',coalesce(sum(q2_CYHC.'Co_Prime'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime Absolute', coalesce(sum(q3_CYHC.'Co_Prime'), 0) as 'YTD Co_Prime Absolute', ((coalesce(sum(q2_CYHC.'Co_Prime'), 0) - coalesce(sum(q2_PYHC.'Co_Prime'), 0)) / coalesce(sum(q2_PYHC.'Co_Prime'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Co_Prime Growth', ((coalesce(sum(q3_CYHC.'Co_Prime'), 0) - coalesce(sum(q3_PYHC.'Co_Prime'), 0)) / coalesce(sum(q3_PYHC.'Co_Prime'), 0)) * 100 as 'YTD Co_Prime Growth',(power(coalesce(sum(q2_CYHC.'Co_Prime'), 0) / coalesce(sum(q2_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR',(power(coalesce(sum(q3_CYHC.'Co_Prime'), 0) / coalesce(sum(q3_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as 'YTD Co_Prime CAGR', coalesce(sum(q2_CYSW.'SWE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE Absolute', coalesce(sum(q3_CYSW.'SWE'), 0) as 'YTD SWE Absolute', ((coalesce(sum(q2_CYSW.'SWE'), 0) - coalesce(sum(q2_PYSW.'SWE'), 0)) / coalesce(sum(q2_PYSW.'SWE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth', ((coalesce(sum(q3_CYSW.'SWE'), 0) - coalesce(sum(q3_PYSW.'SWE'), 0)) / coalesce(sum(q3_PYSW.'SWE'), 0)) * 100 as 'YTD SWE Growth',(power(coalesce(sum(q2_CYSW.'SWE'), 0) / coalesce(sum(q2_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE CAGR',(power(coalesce(sum(q3_CYSW.'SWE'), 0) / coalesce(sum(q3_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as 'YTD SWE CAGR', coalesce(sum(q2_CYSW.'INFRA'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA Absolute', coalesce(sum(q3_CYSW.'INFRA'), 0) as 'YTD INFRA Absolute', ((coalesce(sum(q2_CYSW.'INFRA'), 0) - coalesce(sum(q2_PYSW.'INFRA'), 0)) / coalesce(sum(q2_PYSW.'INFRA'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth', ((coalesce(sum(q3_CYSW.'INFRA'), 0) - coalesce(sum(q3_PYSW.'INFRA'), 0)) / coalesce(sum(q3_PYSW.'INFRA'), 0)) * 100 as 'YTD INFRA Growth',(power(coalesce(sum(q2_CYSW.'INFRA'), 0) / coalesce(sum(q2_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA CAGR',(power(coalesce(sum(q3_CYSW.'INFRA'), 0) / coalesce(sum(q3_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as 'YTD INFRA CAGR',last(MasterHierarchy.'Level_3_Sort_Code')  as 'Sort_Code',\"          \" + coalesce(last(MasterHierarchy.'Level_2'), last(q2_CYACV.'Subcloud'), last(q2_PYACV.'Subcloud'), last(q3_CYACV.'Subcloud'), last(q3_PYACV.'Subcloud'), last(q2_CYAOV.'Subcloud'), last(q2_PYAOV.'Subcloud'), last(q3_CYAOV.'Subcloud'), last(q3_PYAOV.'Subcloud')) as 'ParentCloud';\nresult_Cloud_Level3 = filter result_Cloud_Level3 by 'Cloud' != 'ParentCloud';\nline =  group MasterHierarchy by 'all';line= foreach line generate \"----------------------------------------------------\" as 'Cloud',\"{{cell(Selector_Quarter.selection,0,\"Line_Rank\").asString()}}\"  as 'Sort_Code';\nnFinal = union result, result_SubCloud, result_Cloud_Level3,line;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FINAL PROJECTION ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nFinal = filter Final by 'Sort_Code' != \"\";\nFinal = filter Final by 'Cloud' not in {{cell(Selector_Quarter.selection,0,\"Filter_Table_2\").asString()}};\nFinal = order Final by ('Sort_Code' asc,  'Cloud' asc);\nFinal = foreach Final generate 'Cloud'+\"                      \" as 'Cloud', '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute','YTD Customer Absolute' as 'YTD Customer Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth',   'YTD Customer Growth' as  'YTD Customer Growth', '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute',\"-\" as 'YTD TAM Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth',   \"-\" as  'YTD TAM Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute','YTD Red_Accounts Absolute' as 'YTD Red_Accounts Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth',   'YTD Red_Accounts Growth' as  'YTD Red_Accounts Growth';\n",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      },
      "Table_Level_2_Measures_3": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Level_2_Measures_3",
        "numbers": [],
        "query": "MasterHierarchy = load \"Master_Hierarchy\";\nMasterHierarchy = filter MasterHierarchy by 'Level_1' in   {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD/FILTER ACV------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nACV = load \"APM_ACV\";\nACV = filter ACV by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nACV = filter ACV by {{column(Filter_Lead_1.selection,[\"Lead_1\"]).asEquality('Lead_1')}};\nACV = filter ACV by {{column(Filter_Segment.selection,[\"Segment\"]).asEquality('Segment')}};\nACV = filter ACV by {{column(Filter_Industry.selection,[\"Industry\"]).asEquality('Industry')}};\nACV = filter ACV by {{column(Filter_Lead.selection,[\"Lead\"]).asEquality('Lead')}};\nACV = filter ACV by {{column(Filter_Cloud.selection,[\"Cloud\"]).asEquality('Cloud')}};\nACV = filter ACV by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nACV = group ACV by ('Cloud','Cloud_2','Subcloud', 'Quarter','Month', 'Fiscal_Year', 'Region' , 'Country');\nACV = foreach ACV generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year' ,'Month' as 'Month',sum('ACV') as 'ACV', 'Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; ACV = filter ACV by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nq2_CYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}} ;\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD/FILTER AOV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nAOV = load \"APM_AOV\";\nAOV = filter AOV by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nAOV = filter AOV by 'Cloud' in{{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nAOV = group AOV by ('Cloud','Subcloud', 'Cloud_2', 'Quarter', 'Month', 'Fiscal_Year', 'Region' , 'Country');\nAOV = foreach AOV generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('AOV') as 'AOV','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; AOV = filter AOV by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nq2_CYAOV = filter AOV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYAOV = filter AOV by 'Month' in   {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYAOV = filter AOV by 'Month' in {{cell(Selector_Quarter.selection,0,\"YTD_Month_cum\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYAOV = filter AOV by 'Month' in{{cell(Selector_Quarter.selection,0,\"YTD_Month_cum\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nnAttrition = load \"APM_Attrition\";\nAttrition = filter Attrition by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nAttrition = filter Attrition by 'Segment' != \"CSG\";\nAttrition = filter Attrition by 'Cloud' in   {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nAttrition = foreach Attrition generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2','Segment' as 'Segment', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Attrition_Product')*-1 as 'Attrition_Product', sum('TTM_Product')*-1 as 'TTM_Product',sum('AOV_twelve_month_ago_Product') as 'AOV_twelve_month_ago','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; Attrition = filter Attrition by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}} ;\nq2_CYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYATT = filter Attrition by 'Month' in   {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYATT = filter Attrition by 'Month' in {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq4_CYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month_cum\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD /FILTER PIPEGEN-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nPipegen = load \"APM_Pipegen1\";\nPipegen = filter Pipegen by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nPipegen = group Pipegen by ('Fiscal_Year','Quarter', 'Region', 'Cloud', 'Month','Subcloud', 'Cloud_2','Country');\nPipegen = foreach Pipegen generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Pipegen') as 'Pipegen','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; Pipegen = filter Pipegen by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nPipegen = filter Pipegen by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYPipegen = filter Pipegen by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYPipegen = filter Pipegen by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_CYPipegen = filter Pipegen by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_pipegen\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYPipegen = filter Pipegen by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_pipegen\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nnHC = load \"APM_HC\";\nHC = filter HC by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nHC = foreach HC generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('SE') as 'SE',sum('AE') as 'AE',sum('Co_Prime') as 'Co_Prime','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; HC = filter HC by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nHC = filter HC by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYHC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYHC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_HC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYHC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYHC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_HC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD SWE INFRA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSW = load \"APM_SWE_INFRA\";\nSW = filter SW by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nSW = foreach SW generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('SWE') as 'SWE',sum('INFRA') as 'INFRA','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; SW = filter SW by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nSW = filter SW by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYSW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYSW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_SW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYSW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYSW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_SW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD REDACCOUNTS------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nREDACCOUNTS = load \"APM_REDACCOUNTS\";\nREDACCOUNTS = filter REDACCOUNTS by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nREDACCOUNTS = foreach REDACCOUNTS generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Red_Accounts') as 'Red_Accounts','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; REDACCOUNTS = filter REDACCOUNTS by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nREDACCOUNTS = filter REDACCOUNTS by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYREDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYREDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_REDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYREDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYREDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_REDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD T_P T&amp;P Cost to Serve------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nT_P = load \"APM_T_P\";\nT_P = filter T_P by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nT_P = foreach T_P generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('CTS') as 'CTS',sum('Cloud_m1_CTS') as 'CTS_L1',sum('Cloud_m2_CTS') as 'CTS_L2',sum('Cloud_m3_CTS') as 'CTS_L3',sum('Cloud_m1_CTS1') as 'CTS1_L1',sum('Cloud_m2_CTS1') as 'CTS1_L2',sum('Cloud_m3_CTS1') as 'CTS1_L3','Region' as 'Region',{{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; T_P = filter T_P by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nT_P = filter T_P by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYT_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYT_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_T_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYT_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_cum\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYT_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_cum\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_T_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_cum\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD AVAILABILITY------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nAVAILABILITY = load \"APM_TECH_AVAILABILITY\";\nAVAILABILITY = filter AVAILABILITY by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nAVAILABILITY = foreach AVAILABILITY generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Availability') as 'Availability',sum('Cloud_m1')*100 as 'Availability1', sum('Cloud_m2')*100 as 'Availability2', sum('Cloud_m3')*100 as 'Availability3','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; AVAILABILITY = filter AVAILABILITY by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nAVAILABILITY = filter AVAILABILITY by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYAVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYAVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_AVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYAVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYAVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_AVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD TRANSACTIONS------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nTRANSACTIONS = load \"APM_T_P_Transactions\";\nTRANSACTIONS = filter TRANSACTIONS by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nTRANSACTIONS = foreach TRANSACTIONS generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Transactions') as 'Transactions','Region' as 'Region',{{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; TRANSACTIONS = filter TRANSACTIONS by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nTRANSACTIONS = filter TRANSACTIONS by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYTRANSACTIONS = filter TRANSACTIONS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYTRANSACTIONS = filter TRANSACTIONS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_TRANSACTIONS = filter TRANSACTIONS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYTRANSACTIONS = filter TRANSACTIONS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYTRANSACTIONS = filter TRANSACTIONS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_TRANSACTIONS = filter TRANSACTIONS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD MARKET CUSTOMER------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nCUSTOMER = load \"APM_MARKET_CUSTOMER\";\nCUSTOMER = filter CUSTOMER by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nCUSTOMER = foreach CUSTOMER generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Customer') as 'Customer','Region' as 'Region',{{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; CUSTOMER = filter CUSTOMER by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nCUSTOMER = filter CUSTOMER by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYCUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYCUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_CUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYCUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYCUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_CUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD MARKET SHARE------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSHARE= load \"APM_MARKET_SHARE\";\nSHARE= filter SHARE by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nSHARE= foreach SHARE generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('TAM') as 'TAM','Region' as 'Region',{{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; SHARE= filter SHARE by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nSHARE = filter SHARE by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYSHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYSHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_SHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYSHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYSHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_SHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nnresult = group  q2_CYACV by 'Cloud' full, q2_PYACV by 'Cloud' full, q3_CYACV by 'Cloud' full, q3_PYACV by 'Cloud' full, q2_CYAOV by 'Cloud' full, q2_PYAOV by 'Cloud' full, q3_CYAOV by 'Cloud' full, q3_PYAOV by 'Cloud' full,  q2_CYATT by 'Cloud' full, q2_PYATT by 'Cloud' full, q3_CYATT by 'Cloud' full, q3_PYATT by 'Cloud' full,q4_CYATT by 'Cloud' full, q2_CYPipegen by 'Cloud' full, q2_PYPipegen by 'Cloud' full, q3_CYPipegen by 'Cloud' full, q3_PYPipegen by 'Cloud'full,q2_CYHC by 'Cloud' full, q2_PYHC by 'Cloud' full,q2_PY_2_HC by 'Cloud' full, q3_CYHC by 'Cloud' full, q3_PYHC by 'Cloud' full,q3_PY_2_HC by 'Cloud' full, q2_CYSW by 'Cloud' full, q2_PYSW by 'Cloud' full,q2_PY_2_SW by 'Cloud' full, q3_CYSW by 'Cloud' full, q3_PYSW by 'Cloud' full,q3_PY_2_SW by 'Cloud'full, q2_CYREDACCOUNTS by 'Cloud' full, q2_PYREDACCOUNTS by 'Cloud' full,q2_PY_2_REDACCOUNTS by 'Cloud' full, q3_CYREDACCOUNTS by 'Cloud' full, q3_PYREDACCOUNTS by 'Cloud' full,q3_PY_2_REDACCOUNTS by 'Cloud' full, q2_CYT_P by 'Cloud' full, q2_PYT_P by 'Cloud' full,q2_PY_2_T_P by 'Cloud' full, q3_CYT_P by 'Cloud' full, q3_PYT_P by 'Cloud' full,q3_PY_2_T_P by 'Cloud' full, q2_CYAVAILABILITY by 'Cloud' full, q2_PYAVAILABILITY by 'Cloud' full,q2_PY_2_AVAILABILITY by 'Cloud' full, q3_CYAVAILABILITY by 'Cloud' full, q3_PYAVAILABILITY by 'Cloud' full,q3_PY_2_AVAILABILITY by 'Cloud' full, q2_CYTRANSACTIONS by 'Cloud' full, q2_PYTRANSACTIONS by 'Cloud' full,q2_PY_2_TRANSACTIONS by 'Cloud' full, q3_CYTRANSACTIONS by 'Cloud' full, q3_PYTRANSACTIONS by 'Cloud' full,q3_PY_2_TRANSACTIONS by 'Cloud'  full, q2_CYCUSTOMER by 'Cloud' full, q2_PYCUSTOMER by 'Cloud' full,q2_PY_2_CUSTOMER by 'Cloud' full, q3_CYCUSTOMER by 'Cloud' full, q3_PYCUSTOMER by 'Cloud' full,q3_PY_2_CUSTOMER by 'Cloud'full, q2_CYSHARE by 'Cloud' full, q2_PYSHARE by 'Cloud' full,q2_PY_2_SHARE by 'Cloud' full, q3_CYSHARE by 'Cloud' full, q3_PYSHARE by 'Cloud' full,q3_PY_2_SHARE by 'Cloud',MasterHierarchy by 'Level_1';\nn;\nresult = foreach result generate  \"☁ \" + coalesce(MasterHierarchy.'Level_1', q2_CYACV.'Cloud', q2_PYACV.'Cloud', q3_CYACV.'Cloud', q3_PYACV.'Cloud', q2_CYAOV.'Cloud', q2_PYAOV.'Cloud', q3_CYAOV.'Cloud', q3_PYAOV.'Cloud',q2_PYATT.'Cloud',q2_CYATT.'Cloud',q3_PYATT.'Cloud',q3_CYATT.'Cloud',q2_CYPipegen.'Cloud', q2_PYPipegen.'Cloud', q3_CYPipegen.'Cloud', q3_PYPipegen.'Cloud',q2_CYREDACCOUNTS.'Cloud', q2_PYREDACCOUNTS.'Cloud', q3_CYREDACCOUNTS.'Cloud', q3_PYREDACCOUNTS.'Cloud', q2_CYT_P.'Cloud', q2_PYT_P.'Cloud', q3_CYT_P.'Cloud', q3_PYT_P.'Cloud', q2_CYAVAILABILITY.'Cloud', q2_PYAVAILABILITY.'Cloud', q3_CYAVAILABILITY.'Cloud', q3_PYAVAILABILITY.'Cloud', q2_CYTRANSACTIONS.'Cloud', q2_PYTRANSACTIONS.'Cloud', q3_CYTRANSACTIONS.'Cloud', q3_PYTRANSACTIONS.'Cloud', q2_CYAVAILABILITY.'Cloud', q2_PYAVAILABILITY.'Cloud', q3_CYAVAILABILITY.'Cloud', q3_PYAVAILABILITY.'Cloud', q2_CYCUSTOMER.'Cloud', q2_PYCUSTOMER.'Cloud', q3_CYCUSTOMER.'Cloud', q3_PYCUSTOMER.'Cloud', q2_CYSHARE.'Cloud', q2_PYSHARE.'Cloud', q3_CYSHARE.'Cloud', q3_PYSHARE.'Cloud') as 'Cloud',  coalesce(sum(q2_CYACV.'ACV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute', coalesce(sum(q3_CYACV.'ACV'), 0) as 'YTD ACV Absolute', ((coalesce(sum(q2_CYACV.'ACV'), 0) - coalesce(sum(q2_PYACV.'ACV'), 0)) / coalesce(sum(q2_PYACV.'ACV'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth', ((coalesce(sum(q3_CYACV.'ACV'), 0) - coalesce(sum(q3_PYACV.'ACV'), 0)) / coalesce(sum(q3_PYACV.'ACV'), 0)) * 100 as 'YTD ACV Growth', coalesce(sum(q2_CYAOV.'AOV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AOV Absolute', coalesce(sum(q3_CYAOV.'AOV'), 0) as 'YTD AOV Absolute', ((coalesce(sum(q2_CYAOV.'AOV'), 0) - coalesce(sum(q2_PYAOV.'AOV'), 0)) / coalesce(sum(q2_PYAOV.'AOV'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AOV Growth', ((coalesce(sum(q3_CYAOV.'AOV'), 0) - coalesce(sum(q3_PYAOV.'AOV'), 0)) / coalesce(sum(q3_PYAOV.'AOV'), 0)) * 100 as 'YTD AOV Growth',last(MasterHierarchy.'Level_1_Ranking') as 'Sort_Code', coalesce(sum(q2_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q2',coalesce(sum(q3_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q3',coalesce(round(sum(q2_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q2' ,coalesce(round(sum(q2_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q2',coalesce(round(sum(q4_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q3' ,coalesce(round(sum(q4_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q3',(coalesce(round(sum(q2_CYATT.'TTM_Product'), 0), 0) / coalesce(round(sum(q2_CYATT.'AOV_twelve_month_ago'), 0), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Attrition TTM Rate', (coalesce(round(sum(q4_CYATT.'TTM_Product'), 0), 0) / coalesce(round(sum(q4_CYATT.'AOV_twelve_month_ago'), 0), 0)) * 100 as 'YTD Attrition TTM Rate', coalesce(sum(q2_CYPipegen.'Pipegen'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Pipegen Absolute', coalesce(sum(q3_CYPipegen.'Pipegen'), 0) as 'YTD Pipegen Absolute', ((coalesce(sum(q2_CYPipegen.'Pipegen'), 0) - coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Pipegen Growth', ((coalesce(sum(q3_CYPipegen.'Pipegen'), 0) - coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) * 100 as 'YTD Pipegen Growth', coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute', coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) as 'YTD Red_Accounts Absolute', ((coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth', ((coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as 'YTD Red_Accounts Growth', coalesce(sum(q2_CYT_P.'CTS_L1'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute', coalesce(sum(q3_CYT_P.'CTS_L1'), 0) as 'YTD CTS Absolute', coalesce(sum(q2_CYT_P.'CTS1_L1'), 0) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth', coalesce(sum(q3_CYT_P.'CTS1_L1'), 0)  * 100 as 'YTD CTS Growth', coalesce(sum(q2_CYAVAILABILITY.'Availability1'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute', coalesce(sum(q3_CYAVAILABILITY.'Availability1'), 0) as 'YTD Availability Absolute', ((coalesce(sum(q2_CYAVAILABILITY.'Availability1'), 0) - coalesce(sum(q2_PYAVAILABILITY.'Availability1'), 0)) / coalesce(sum(q2_PYAVAILABILITY.'Availability1'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth', ((coalesce(sum(q3_CYAVAILABILITY.'Availability1'), 0) - coalesce(sum(q3_PYAVAILABILITY.'Availability1'), 0)) / coalesce(sum(q3_PYAVAILABILITY.'Availability1'), 0)) * 100 as 'YTD Availability Growth', coalesce(sum(q2_CYTRANSACTIONS.'Transactions'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute', coalesce(sum(q3_CYTRANSACTIONS.'Transactions'), 0) as 'YTD Transactions Absolute', ((coalesce(sum(q2_CYTRANSACTIONS.'Transactions'), 0) - coalesce(sum(q2_PYTRANSACTIONS.'Transactions'), 0)) / coalesce(sum(q2_PYTRANSACTIONS.'Transactions'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth', ((coalesce(sum(q3_CYTRANSACTIONS.'Transactions'), 0) - coalesce(sum(q3_PYTRANSACTIONS.'Transactions'), 0)) / coalesce(sum(q3_PYTRANSACTIONS.'Transactions'), 0)) * 100 as 'YTD Transactions Growth', coalesce(sum(q2_CYCUSTOMER.'Customer'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute', coalesce(sum(q3_CYCUSTOMER.'Customer'), 0) as 'YTD Customer Absolute', ((coalesce(sum(q2_CYCUSTOMER.'Customer'), 0) - coalesce(sum(q2_PYCUSTOMER.'Customer'), 0)) / coalesce(sum(q2_PYCUSTOMER.'Customer'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth', ((coalesce(sum(q3_CYCUSTOMER.'Customer'), 0) - coalesce(sum(q3_PYCUSTOMER.'Customer'), 0)) / coalesce(sum(q3_PYCUSTOMER.'Customer'), 0)) * 100 as 'YTD Customer Growth', coalesce(sum(q2_CYSHARE.'TAM'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute', coalesce(sum(q3_CYSHARE.'TAM'), 0) as 'YTD TAM Absolute', ((coalesce(sum(q2_CYSHARE.'TAM'), 0) - coalesce(sum(q2_PYSHARE.'TAM'), 0)) / coalesce(sum(q2_PYSHARE.'TAM'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth', ((coalesce(sum(q3_CYSHARE.'TAM'), 0) - coalesce(sum(q3_PYSHARE.'TAM'), 0)) / coalesce(sum(q3_PYSHARE.'TAM'), 0)) * 100 as 'YTD TAM Growth',coalesce(sum(q2_CYHC.'SE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE Absolute', coalesce(sum(q3_CYHC.'SE'), 0) as 'YTD SE Absolute', ((coalesce(sum(q2_CYHC.'SE'), 0) - coalesce(sum(q2_PYHC.'SE'), 0)) / coalesce(sum(q2_PYHC.'SE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SE Growth', ((coalesce(sum(q3_CYHC.'SE'), 0) - coalesce(sum(q3_PYHC.'SE'), 0)) / coalesce(sum(q3_PYHC.'SE'), 0)) * 100 as 'YTD SE Growth',(power(coalesce(sum(q2_CYHC.'SE'), 0) / coalesce(sum(q2_PY_2_HC.'SE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR',(power(coalesce(sum(q3_CYHC.'SE'), 0) / coalesce(sum(q3_PY_2_HC.'SE'), 0),(1/2))-1)*100 as 'YTD SE CAGR', coalesce(sum(q2_CYHC.'AE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE Absolute', coalesce(sum(q3_CYHC.'AE'), 0) as 'YTD AE Absolute', ((coalesce(sum(q2_CYHC.'AE'), 0) - coalesce(sum(q2_PYHC.'AE'), 0)) / coalesce(sum(q2_PYHC.'AE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AE Growth', ((coalesce(sum(q3_CYHC.'AE'), 0) - coalesce(sum(q3_PYHC.'AE'), 0)) / coalesce(sum(q3_PYHC.'AE'), 0)) * 100 as 'YTD AE Growth', (power(coalesce(sum(q2_CYHC.'AE'), 0) / coalesce(sum(q2_PY_2_HC.'AE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR',(power(coalesce(sum(q3_CYHC.'AE'), 0) / coalesce(sum(q3_PY_2_HC.'AE'), 0),(1/2))-1)*100 as 'YTD AE CAGR',coalesce(sum(q2_CYHC.'Co_Prime'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime Absolute', coalesce(sum(q3_CYHC.'Co_Prime'), 0) as 'YTD Co_Prime Absolute', ((coalesce(sum(q2_CYHC.'Co_Prime'), 0) - coalesce(sum(q2_PYHC.'Co_Prime'), 0)) / coalesce(sum(q2_PYHC.'Co_Prime'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Co_Prime Growth', ((coalesce(sum(q3_CYHC.'Co_Prime'), 0) - coalesce(sum(q3_PYHC.'Co_Prime'), 0)) / coalesce(sum(q3_PYHC.'Co_Prime'), 0)) * 100 as 'YTD Co_Prime Growth',(power(coalesce(sum(q2_CYHC.'Co_Prime'), 0) / coalesce(sum(q2_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR',(power(coalesce(sum(q3_CYHC.'Co_Prime'), 0) / coalesce(sum(q3_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as 'YTD Co_Prime CAGR', coalesce(sum(q2_CYSW.'SWE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE Absolute', coalesce(sum(q3_CYSW.'SWE'), 0) as 'YTD SWE Absolute', ((coalesce(sum(q2_CYSW.'SWE'), 0) - coalesce(sum(q2_PYSW.'SWE'), 0)) / coalesce(sum(q2_PYSW.'SWE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth', ((coalesce(sum(q3_CYSW.'SWE'), 0) - coalesce(sum(q3_PYSW.'SWE'), 0)) / coalesce(sum(q3_PYSW.'SWE'), 0)) * 100 as 'YTD SWE Growth',(power(coalesce(sum(q2_CYSW.'SWE'), 0) / coalesce(sum(q2_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE CAGR',(power(coalesce(sum(q3_CYSW.'SWE'), 0) / coalesce(sum(q3_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as 'YTD SWE CAGR', coalesce(sum(q2_CYSW.'INFRA'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA Absolute', coalesce(sum(q3_CYSW.'INFRA'), 0) as 'YTD INFRA Absolute', ((coalesce(sum(q2_CYSW.'INFRA'), 0) - coalesce(sum(q2_PYSW.'INFRA'), 0)) / coalesce(sum(q2_PYSW.'INFRA'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth', ((coalesce(sum(q3_CYSW.'INFRA'), 0) - coalesce(sum(q3_PYSW.'INFRA'), 0)) / coalesce(sum(q3_PYSW.'INFRA'), 0)) * 100 as 'YTD INFRA Growth',(power(coalesce(sum(q2_CYSW.'INFRA'), 0) / coalesce(sum(q2_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA CAGR',(power(coalesce(sum(q3_CYSW.'INFRA'), 0) / coalesce(sum(q3_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as 'YTD INFRA CAGR';\nnresult_SubCloud = group q2_CYACV by ('Cloud', 'Subcloud') full, q2_PYACV by ('Cloud', 'Subcloud') full, q3_CYACV by ('Cloud', 'Subcloud') full, q3_PYACV by ('Cloud', 'Subcloud') full, q2_CYAOV by ('Cloud', 'Subcloud') full, q2_PYAOV by ('Cloud', 'Subcloud') full, q3_CYAOV by ('Cloud', 'Subcloud') full, q3_PYAOV by ('Cloud', 'Subcloud') full,q2_CYATT by ('Cloud', 'Subcloud') full, q2_PYATT by ('Cloud', 'Subcloud') full, q3_CYATT by ('Cloud', 'Subcloud') full, q3_PYATT by ('Cloud', 'Subcloud') full,q4_CYATT by ('Cloud', 'Subcloud') full, q2_CYPipegen by ('Cloud', 'Subcloud') full, q2_PYPipegen by ('Cloud', 'Subcloud') full, q3_CYPipegen by ('Cloud', 'Subcloud') full, q3_PYPipegen by ('Cloud', 'Subcloud') full,q2_CYHC by ('Cloud', 'Subcloud') full, q2_PYHC by ('Cloud', 'Subcloud') full,q2_PY_2_HC by ('Cloud', 'Subcloud') full, q3_CYHC by ('Cloud', 'Subcloud') full, q3_PYHC by ('Cloud', 'Subcloud') full, q3_PY_2_HC by ('Cloud', 'Subcloud') full ,q2_CYSW by ('Cloud', 'Subcloud') full, q2_PYSW by ('Cloud', 'Subcloud') full,q2_PY_2_SW by ('Cloud', 'Subcloud') full, q3_CYSW by ('Cloud', 'Subcloud') full, q3_PYSW by ('Cloud', 'Subcloud') full, q3_PY_2_SW by ('Cloud', 'Subcloud')full, q2_CYREDACCOUNTS by ('Cloud', 'Subcloud') full, q2_PYREDACCOUNTS by ('Cloud', 'Subcloud') full,q2_PY_2_REDACCOUNTS by ('Cloud', 'Subcloud') full, q3_CYREDACCOUNTS by ('Cloud', 'Subcloud') full, q3_PYREDACCOUNTS by ('Cloud', 'Subcloud') full,q3_PY_2_REDACCOUNTS by ('Cloud', 'Subcloud') full, q2_CYT_P by ('Cloud', 'Subcloud') full, q2_PYT_P by ('Cloud', 'Subcloud') full,q2_PY_2_T_P by ('Cloud', 'Subcloud') full, q3_CYT_P by ('Cloud', 'Subcloud') full, q3_PYT_P by ('Cloud', 'Subcloud') full,q3_PY_2_T_P by ('Cloud', 'Subcloud') full, q2_CYAVAILABILITY by ('Cloud', 'Subcloud') full, q2_PYAVAILABILITY by ('Cloud', 'Subcloud') full,q2_PY_2_AVAILABILITY by ('Cloud', 'Subcloud') full, q3_CYAVAILABILITY by ('Cloud', 'Subcloud') full, q3_PYAVAILABILITY by ('Cloud', 'Subcloud') full,q3_PY_2_AVAILABILITY by ('Cloud', 'Subcloud') full, q2_CYTRANSACTIONS by ('Cloud', 'Subcloud') full, q2_PYTRANSACTIONS by ('Cloud', 'Subcloud') full,q2_PY_2_TRANSACTIONS by ('Cloud', 'Subcloud') full, q3_CYTRANSACTIONS by ('Cloud', 'Subcloud') full, q3_PYTRANSACTIONS by ('Cloud', 'Subcloud') full,q3_PY_2_TRANSACTIONS by ('Cloud', 'Subcloud')  full, q2_CYCUSTOMER by ('Cloud', 'Subcloud') full, q2_PYCUSTOMER by ('Cloud', 'Subcloud') full,q2_PY_2_CUSTOMER by ('Cloud', 'Subcloud') full, q3_CYCUSTOMER by ('Cloud', 'Subcloud') full, q3_PYCUSTOMER by ('Cloud', 'Subcloud') full,q3_PY_2_CUSTOMER by ('Cloud', 'Subcloud')full, q2_CYSHARE by ('Cloud', 'Subcloud') full, q2_PYSHARE by ('Cloud', 'Subcloud') full,q2_PY_2_SHARE by ('Cloud', 'Subcloud') full, q3_CYSHARE by ('Cloud', 'Subcloud') full, q3_PYSHARE by ('Cloud', 'Subcloud') full,q3_PY_2_SHARE by ('Cloud', 'Subcloud'),MasterHierarchy by ('Level_1', 'Level_2') ;\nn\nresult_SubCloud = foreach result_SubCloud generate \"    ↳  \" + coalesce(MasterHierarchy.'Level_2', q2_CYACV.'Subcloud', q2_PYACV.'Subcloud', q3_CYACV.'Subcloud', q3_PYACV.'Subcloud', q2_CYAOV.'Subcloud', q2_PYAOV.'Subcloud', q3_CYAOV.'Subcloud', q3_PYAOV.'Subcloud',q2_CYREDACCOUNTS.'Subcloud', q2_PYREDACCOUNTS.'Subcloud', q3_CYREDACCOUNTS.'Subcloud', q3_PYREDACCOUNTS.'Subcloud', q2_CYT_P.'Subcloud', q2_PYT_P.'Subcloud', q3_CYT_P.'Subcloud', q3_PYT_P.'Subcloud', q2_CYAVAILABILITY.'Subcloud', q2_PYAVAILABILITY.'Subcloud', q3_CYAVAILABILITY.'Subcloud', q3_PYAVAILABILITY.'Subcloud', q2_CYTRANSACTIONS.'Subcloud', q2_PYTRANSACTIONS.'Subcloud', q3_CYTRANSACTIONS.'Subcloud', q3_PYTRANSACTIONS.'Subcloud', q2_CYAVAILABILITY.'Subcloud', q2_PYAVAILABILITY.'Subcloud', q3_CYAVAILABILITY.'Subcloud', q3_PYAVAILABILITY.'Subcloud', q2_CYCUSTOMER.'Subcloud', q2_PYCUSTOMER.'Subcloud', q3_CYCUSTOMER.'Subcloud', q3_PYCUSTOMER.'Subcloud', q2_CYSHARE.'Subcloud', q2_PYSHARE.'Subcloud', q3_CYSHARE.'Subcloud', q3_PYSHARE.'Subcloud') as 'Cloud',  coalesce(sum(q2_CYACV.'ACV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute', coalesce(sum(q3_CYACV.'ACV'), 0) as 'YTD ACV Absolute', ((coalesce(sum(q2_CYACV.'ACV'), 0) - coalesce(sum(q2_PYACV.'ACV'), 0)) / coalesce(sum(q2_PYACV.'ACV'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth', ((coalesce(sum(q3_CYACV.'ACV'), 0) - coalesce(sum(q3_PYACV.'ACV'), 0)) / coalesce(sum(q3_PYACV.'ACV'), 0)) * 100 as 'YTD ACV Growth', coalesce(sum(q2_CYAOV.'AOV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AOV Absolute', coalesce(sum(q3_CYAOV.'AOV'), 0) as 'YTD AOV Absolute', ((coalesce(sum(q2_CYAOV.'AOV'), 0) - coalesce(sum(q2_PYAOV.'AOV'), 0)) / coalesce(sum(q2_PYAOV.'AOV'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AOV Growth', ((coalesce(sum(q3_CYAOV.'AOV'), 0) - coalesce(sum(q3_PYAOV.'AOV'), 0)) / coalesce(sum(q3_PYAOV.'AOV'), 0)) * 100 as 'YTD AOV Growth', coalesce(sum(q2_CYPipegen.'Pipegen'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Pipegen Absolute', coalesce(sum(q3_CYPipegen.'Pipegen'), 0) as 'YTD Pipegen Absolute', ((coalesce(sum(q2_CYPipegen.'Pipegen'), 0) - coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Pipegen Growth', ((coalesce(sum(q3_CYPipegen.'Pipegen'), 0) - coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) * 100 as 'YTD Pipegen Growth',coalesce(sum(q2_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q2',coalesce(sum(q3_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q3',coalesce(round(sum(q2_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q2' ,coalesce(round(sum(q2_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q2',coalesce(round(sum(q4_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q3' ,coalesce(round(sum(q4_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q3',(coalesce(round(sum(q2_CYATT.'TTM_Product'), 0), 0) / coalesce(round(sum(q2_CYATT.'AOV_twelve_month_ago'), 0), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Attrition TTM Rate', (coalesce(round(sum(q4_CYATT.'TTM_Product'), 0), 0) / coalesce(round(sum(q4_CYATT.'AOV_twelve_month_ago'), 0), 0)) * 100 as 'YTD Attrition TTM Rate', coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute', coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) as 'YTD Red_Accounts Absolute', ((coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth', ((coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as 'YTD Red_Accounts Growth', coalesce(sum(q2_CYT_P.'CTS_L2'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute', coalesce(sum(q3_CYT_P.'CTS_L2'), 0) as 'YTD CTS Absolute', coalesce(sum(q2_CYT_P.'CTS1_L2'), 0) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth', coalesce(sum(q3_CYT_P.'CTS1_L2'), 0)  * 100 as 'YTD CTS Growth', coalesce(sum(q2_CYAVAILABILITY.'Availability2'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute', coalesce(sum(q3_CYAVAILABILITY.'Availability2'), 0) as 'YTD Availability Absolute', ((coalesce(sum(q2_CYAVAILABILITY.'Availability2'), 0) - coalesce(sum(q2_PYAVAILABILITY.'Availability2'), 0)) / coalesce(sum(q2_PYAVAILABILITY.'Availability2'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth', ((coalesce(sum(q3_CYAVAILABILITY.'Availability2'), 0) - coalesce(sum(q3_PYAVAILABILITY.'Availability2'), 0)) / coalesce(sum(q3_PYAVAILABILITY.'Availability2'), 0)) * 100 as 'YTD Availability Growth', coalesce(sum(q2_CYTRANSACTIONS.'Transactions'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute', coalesce(sum(q3_CYTRANSACTIONS.'Transactions'), 0) as 'YTD Transactions Absolute', ((coalesce(sum(q2_CYTRANSACTIONS.'Transactions'), 0) - coalesce(sum(q2_PYTRANSACTIONS.'Transactions'), 0)) / coalesce(sum(q2_PYTRANSACTIONS.'Transactions'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth', ((coalesce(sum(q3_CYTRANSACTIONS.'Transactions'), 0) - coalesce(sum(q3_PYTRANSACTIONS.'Transactions'), 0)) / coalesce(sum(q3_PYTRANSACTIONS.'Transactions'), 0)) * 100 as 'YTD Transactions Growth', coalesce(sum(q2_CYCUSTOMER.'Customer'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute', coalesce(sum(q3_CYCUSTOMER.'Customer'), 0) as 'YTD Customer Absolute', ((coalesce(sum(q2_CYCUSTOMER.'Customer'), 0) - coalesce(sum(q2_PYCUSTOMER.'Customer'), 0)) / coalesce(sum(q2_PYCUSTOMER.'Customer'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth', ((coalesce(sum(q3_CYCUSTOMER.'Customer'), 0) - coalesce(sum(q3_PYCUSTOMER.'Customer'), 0)) / coalesce(sum(q3_PYCUSTOMER.'Customer'), 0)) * 100 as 'YTD Customer Growth', coalesce(sum(q2_CYSHARE.'TAM'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute', coalesce(sum(q3_CYSHARE.'TAM'), 0) as 'YTD TAM Absolute', ((coalesce(sum(q2_CYSHARE.'TAM'), 0) - coalesce(sum(q2_PYSHARE.'TAM'), 0)) / coalesce(sum(q2_PYSHARE.'TAM'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth', ((coalesce(sum(q3_CYSHARE.'TAM'), 0) - coalesce(sum(q3_PYSHARE.'TAM'), 0)) / coalesce(sum(q3_PYSHARE.'TAM'), 0)) * 100 as 'YTD TAM Growth', coalesce(sum(q2_CYHC.'SE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE Absolute', coalesce(sum(q3_CYHC.'SE'), 0) as 'YTD SE Absolute', ((coalesce(sum(q2_CYHC.'SE'), 0) - coalesce(sum(q2_PYHC.'SE'), 0)) / coalesce(sum(q2_PYHC.'SE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SE Growth', ((coalesce(sum(q3_CYHC.'SE'), 0) - coalesce(sum(q3_PYHC.'SE'), 0)) / coalesce(sum(q3_PYHC.'SE'), 0)) * 100 as 'YTD SE Growth',(power(coalesce(sum(q2_CYHC.'SE'), 0) / coalesce(sum(q2_PY_2_HC.'SE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR',(power(coalesce(sum(q3_CYHC.'SE'), 0) / coalesce(sum(q3_PY_2_HC.'SE'), 0),(1/2))-1)*100 as 'YTD SE CAGR', coalesce(sum(q2_CYHC.'AE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE Absolute', coalesce(sum(q3_CYHC.'AE'), 0) as 'YTD AE Absolute', ((coalesce(sum(q2_CYHC.'AE'), 0) - coalesce(sum(q2_PYHC.'AE'), 0)) / coalesce(sum(q2_PYHC.'AE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AE Growth', ((coalesce(sum(q3_CYHC.'AE'), 0) - coalesce(sum(q3_PYHC.'AE'), 0)) / coalesce(sum(q3_PYHC.'AE'), 0)) * 100 as 'YTD AE Growth', (power(coalesce(sum(q2_CYHC.'AE'), 0) / coalesce(sum(q2_PY_2_HC.'AE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR',(power(coalesce(sum(q3_CYHC.'AE'), 0) / coalesce(sum(q3_PY_2_HC.'AE'), 0),(1/2))-1)*100 as 'YTD AE CAGR',coalesce(sum(q2_CYHC.'Co_Prime'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime Absolute', coalesce(sum(q3_CYHC.'Co_Prime'), 0) as 'YTD Co_Prime Absolute', ((coalesce(sum(q2_CYHC.'Co_Prime'), 0) - coalesce(sum(q2_PYHC.'Co_Prime'), 0)) / coalesce(sum(q2_PYHC.'Co_Prime'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Co_Prime Growth', ((coalesce(sum(q3_CYHC.'Co_Prime'), 0) - coalesce(sum(q3_PYHC.'Co_Prime'), 0)) / coalesce(sum(q3_PYHC.'Co_Prime'), 0)) * 100 as 'YTD Co_Prime Growth',(power(coalesce(sum(q2_CYHC.'Co_Prime'), 0) / coalesce(sum(q2_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR',(power(coalesce(sum(q3_CYHC.'Co_Prime'), 0) / coalesce(sum(q3_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as 'YTD Co_Prime CAGR', coalesce(sum(q2_CYSW.'SWE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE Absolute', coalesce(sum(q3_CYSW.'SWE'), 0) as 'YTD SWE Absolute', ((coalesce(sum(q2_CYSW.'SWE'), 0) - coalesce(sum(q2_PYSW.'SWE'), 0)) / coalesce(sum(q2_PYSW.'SWE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth', ((coalesce(sum(q3_CYSW.'SWE'), 0) - coalesce(sum(q3_PYSW.'SWE'), 0)) / coalesce(sum(q3_PYSW.'SWE'), 0)) * 100 as 'YTD SWE Growth',(power(coalesce(sum(q2_CYSW.'SWE'), 0) / coalesce(sum(q2_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE CAGR',(power(coalesce(sum(q3_CYSW.'SWE'), 0) / coalesce(sum(q3_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as 'YTD SWE CAGR', coalesce(sum(q2_CYSW.'INFRA'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA Absolute', coalesce(sum(q3_CYSW.'INFRA'), 0) as 'YTD INFRA Absolute', ((coalesce(sum(q2_CYSW.'INFRA'), 0) - coalesce(sum(q2_PYSW.'INFRA'), 0)) / coalesce(sum(q2_PYSW.'INFRA'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth', ((coalesce(sum(q3_CYSW.'INFRA'), 0) - coalesce(sum(q3_PYSW.'INFRA'), 0)) / coalesce(sum(q3_PYSW.'INFRA'), 0)) * 100 as 'YTD INFRA Growth',(power(coalesce(sum(q2_CYSW.'INFRA'), 0) / coalesce(sum(q2_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA CAGR',(power(coalesce(sum(q3_CYSW.'INFRA'), 0) / coalesce(sum(q3_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as 'YTD INFRA CAGR',last(MasterHierarchy.'Level_2_Sort_Code')  as 'Sort_Code';\nnresult_Cloud_Level3 = group  q2_CYACV by ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYACV by ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYACV by ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYACV by ('Cloud', 'Subcloud', 'Cloud_2') full, q2_CYAOV by ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYAOV by ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYAOV by ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYAOV by ('Cloud', 'Subcloud', 'Cloud_2') full,  q2_CYPipegen by ('Cloud', 'Subcloud','Cloud_2') full, q2_PYPipegen by ('Cloud', 'Subcloud','Cloud_2') full, q3_CYPipegen by ('Cloud', 'Subcloud','Cloud_2') full, q3_PYPipegen by ('Cloud', 'Subcloud','Cloud_2') full, q2_CYHC by ('Cloud', 'Subcloud','Cloud_2') full, q2_PYHC by ('Cloud', 'Subcloud','Cloud_2') full,q2_PY_2_HC by ('Cloud', 'Subcloud','Cloud_2') full, q3_CYHC by ('Cloud', 'Subcloud','Cloud_2') full, q3_PYHC by ('Cloud', 'Subcloud','Cloud_2') full,  q3_PY_2_HC by ('Cloud', 'Subcloud','Cloud_2') full, q2_CYSW by ('Cloud', 'Subcloud','Cloud_2') full, q2_PYSW by ('Cloud', 'Subcloud','Cloud_2') full,q2_PY_2_SW by ('Cloud', 'Subcloud','Cloud_2') full, q3_CYSW by ('Cloud', 'Subcloud','Cloud_2') full, q3_PYSW by ('Cloud', 'Subcloud','Cloud_2') full,  q3_PY_2_SW by ('Cloud', 'Subcloud','Cloud_2') full,q2_CYATT by ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYATT by ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYATT by ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYATT by ('Cloud', 'Subcloud', 'Cloud_2')full, q2_CYREDACCOUNTS by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYREDACCOUNTS by  ('Cloud', 'Subcloud', 'Cloud_2') full,q2_PY_2_REDACCOUNTS by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYREDACCOUNTS by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYREDACCOUNTS by  ('Cloud', 'Subcloud', 'Cloud_2') full,q3_PY_2_REDACCOUNTS by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_CYT_P by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYT_P by  ('Cloud', 'Subcloud', 'Cloud_2') full,q2_PY_2_T_P by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYT_P by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYT_P by  ('Cloud', 'Subcloud', 'Cloud_2') full,q3_PY_2_T_P by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_CYAVAILABILITY by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYAVAILABILITY by  ('Cloud', 'Subcloud', 'Cloud_2') full,q2_PY_2_AVAILABILITY by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYAVAILABILITY by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYAVAILABILITY by  ('Cloud', 'Subcloud', 'Cloud_2') full,q3_PY_2_AVAILABILITY by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_CYTRANSACTIONS by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYTRANSACTIONS by  ('Cloud', 'Subcloud', 'Cloud_2') full,q2_PY_2_TRANSACTIONS by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYTRANSACTIONS by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYTRANSACTIONS by  ('Cloud', 'Subcloud', 'Cloud_2') full,q3_PY_2_TRANSACTIONS by  ('Cloud', 'Subcloud', 'Cloud_2')  full, q2_CYCUSTOMER by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYCUSTOMER by  ('Cloud', 'Subcloud', 'Cloud_2') full,q2_PY_2_CUSTOMER by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYCUSTOMER by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYCUSTOMER by  ('Cloud', 'Subcloud', 'Cloud_2') full,q3_PY_2_CUSTOMER by  ('Cloud', 'Subcloud', 'Cloud_2')full, q2_CYSHARE by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYSHARE by  ('Cloud', 'Subcloud', 'Cloud_2') full,q2_PY_2_SHARE by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYSHARE by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYSHARE by  ('Cloud', 'Subcloud', 'Cloud_2') full,q3_PY_2_SHARE by  ('Cloud', 'Subcloud', 'Cloud_2'),MasterHierarchy by ('Level_1', 'Level_2','Level_3')  ;\nn\nresult_Cloud_Level3 = foreach result_Cloud_Level3 generate \"          \" + coalesce(MasterHierarchy.'Level_3', q2_CYACV.'Cloud_2', q2_PYACV.'Cloud_2', q3_CYACV.'Cloud_2', q3_PYACV.'Cloud_2', q2_CYAOV.'Cloud_2', q2_PYAOV.'Cloud_2', q3_CYAOV.'Cloud_2', q3_PYAOV.'Cloud_2',q2_CYREDACCOUNTS.'Cloud_2', q2_PYREDACCOUNTS.'Cloud_2', q3_CYREDACCOUNTS.'Cloud_2', q3_PYREDACCOUNTS.'Cloud_2', q2_CYT_P.'Cloud_2', q2_PYT_P.'Cloud_2', q3_CYT_P.'Cloud_2', q3_PYT_P.'Cloud_2', q2_CYAVAILABILITY.'Cloud_2', q2_PYAVAILABILITY.'Cloud_2', q3_CYAVAILABILITY.'Cloud_2', q3_PYAVAILABILITY.'Cloud_2', q2_CYTRANSACTIONS.'Cloud_2', q2_PYTRANSACTIONS.'Cloud_2', q3_CYTRANSACTIONS.'Cloud_2', q3_PYTRANSACTIONS.'Cloud_2', q2_CYAVAILABILITY.'Cloud_2', q2_PYAVAILABILITY.'Cloud_2', q3_CYAVAILABILITY.'Cloud_2', q3_PYAVAILABILITY.'Cloud_2', q2_CYCUSTOMER.'Cloud_2', q2_PYCUSTOMER.'Cloud_2', q3_CYCUSTOMER.'Cloud_2', q3_PYCUSTOMER.'Cloud_2', q2_CYSHARE.'Cloud_2', q2_PYSHARE.'Cloud_2', q3_CYSHARE.'Cloud_2', q3_PYSHARE.'Cloud_2') as 'Cloud',  coalesce(sum(q2_CYACV.'ACV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute', coalesce(sum(q3_CYACV.'ACV'), 0) as 'YTD ACV Absolute', ((coalesce(sum(q2_CYACV.'ACV'), 0) - coalesce(sum(q2_PYACV.'ACV'), 0)) / coalesce(sum(q2_PYACV.'ACV'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth', ((coalesce(sum(q3_CYACV.'ACV'), 0) - coalesce(sum(q3_PYACV.'ACV'), 0)) / coalesce(sum(q3_PYACV.'ACV'), 0)) * 100 as 'YTD ACV Growth', coalesce(sum(q2_CYAOV.'AOV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AOV Absolute', coalesce(sum(q3_CYAOV.'AOV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} YTD AOV Absolute', ((coalesce(sum(q2_CYAOV.'AOV'), 0) - coalesce(sum(q2_PYAOV.'AOV'), 0)) / coalesce(sum(q2_PYAOV.'AOV'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AOV Growth', ((coalesce(sum(q3_CYAOV.'AOV'), 0) - coalesce(sum(q3_PYAOV.'AOV'), 0)) / coalesce(sum(q3_PYAOV.'AOV'), 0)) * 100 as 'YTD AOV Growth', coalesce(sum(q2_CYPipegen.'Pipegen'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Pipegen Absolute', coalesce(sum(q3_CYPipegen.'Pipegen'), 0) as 'YTD Pipegen Absolute', ((coalesce(sum(q2_CYPipegen.'Pipegen'), 0) - coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Pipegen Growth', ((coalesce(sum(q3_CYPipegen.'Pipegen'), 0) - coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) * 100 as 'YTD Pipegen Growth', coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute', coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) as 'YTD Red_Accounts Absolute', ((coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth', ((coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as 'YTD Red_Accounts Growth', coalesce(sum(q2_CYT_P.'CTS_L3'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute', coalesce(sum(q3_CYT_P.'CTS_L3'), 0) as 'YTD CTS Absolute', coalesce(sum(q2_CYT_P.'CTS1_L3'), 0)  * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth', coalesce(sum(q3_CYT_P.'CTS1_L3'), 0)  * 100 as 'YTD CTS Growth', coalesce(sum(q2_CYAVAILABILITY.'Availability3'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute', coalesce(sum(q3_CYAVAILABILITY.'Availability3'), 0) as 'YTD Availability Absolute', ((coalesce(sum(q2_CYAVAILABILITY.'Availability3'), 0) - coalesce(sum(q2_PYAVAILABILITY.'Availability3'), 0)) / coalesce(sum(q2_PYAVAILABILITY.'Availability3'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth', ((coalesce(sum(q3_CYAVAILABILITY.'Availability3'), 0) - coalesce(sum(q3_PYAVAILABILITY.'Availability3'), 0)) / coalesce(sum(q3_PYAVAILABILITY.'Availability3'), 0)) * 100 as 'YTD Availability Growth', coalesce(sum(q2_CYTRANSACTIONS.'Transactions'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute', coalesce(sum(q3_CYTRANSACTIONS.'Transactions'), 0) as 'YTD Transactions Absolute', ((coalesce(sum(q2_CYTRANSACTIONS.'Transactions'), 0) - coalesce(sum(q2_PYTRANSACTIONS.'Transactions'), 0)) / coalesce(sum(q2_PYTRANSACTIONS.'Transactions'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth', ((coalesce(sum(q3_CYTRANSACTIONS.'Transactions'), 0) - coalesce(sum(q3_PYTRANSACTIONS.'Transactions'), 0)) / coalesce(sum(q3_PYTRANSACTIONS.'Transactions'), 0)) * 100 as 'YTD Transactions Growth', coalesce(sum(q2_CYCUSTOMER.'Customer'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute', coalesce(sum(q3_CYCUSTOMER.'Customer'), 0) as 'YTD Customer Absolute', ((coalesce(sum(q2_CYCUSTOMER.'Customer'), 0) - coalesce(sum(q2_PYCUSTOMER.'Customer'), 0)) / coalesce(sum(q2_PYCUSTOMER.'Customer'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth', ((coalesce(sum(q3_CYCUSTOMER.'Customer'), 0) - coalesce(sum(q3_PYCUSTOMER.'Customer'), 0)) / coalesce(sum(q3_PYCUSTOMER.'Customer'), 0)) * 100 as 'YTD Customer Growth', coalesce(sum(q2_CYSHARE.'TAM'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute', coalesce(sum(q3_CYSHARE.'TAM'), 0) as 'YTD TAM Absolute', ((coalesce(sum(q2_CYSHARE.'TAM'), 0) - coalesce(sum(q2_PYSHARE.'TAM'), 0)) / coalesce(sum(q2_PYSHARE.'TAM'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth', ((coalesce(sum(q3_CYSHARE.'TAM'), 0) - coalesce(sum(q3_PYSHARE.'TAM'), 0)) / coalesce(sum(q3_PYSHARE.'TAM'), 0)) * 100 as 'YTD TAM Growth', coalesce(sum(q2_CYHC.'SE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE Absolute', coalesce(sum(q3_CYHC.'SE'), 0) as 'YTD SE Absolute', ((coalesce(sum(q2_CYHC.'SE'), 0) - coalesce(sum(q2_PYHC.'SE'), 0)) / coalesce(sum(q2_PYHC.'SE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SE Growth', ((coalesce(sum(q3_CYHC.'SE'), 0) - coalesce(sum(q3_PYHC.'SE'), 0)) / coalesce(sum(q3_PYHC.'SE'), 0)) * 100 as 'YTD SE Growth',(power(coalesce(sum(q2_CYHC.'SE'), 0) / coalesce(sum(q2_PY_2_HC.'SE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR',(power(coalesce(sum(q3_CYHC.'SE'), 0) / coalesce(sum(q3_PY_2_HC.'SE'), 0),(1/2))-1)*100 as 'YTD SE CAGR', coalesce(sum(q2_CYHC.'AE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE Absolute', coalesce(sum(q3_CYHC.'AE'), 0) as 'YTD AE Absolute', ((coalesce(sum(q2_CYHC.'AE'), 0) - coalesce(sum(q2_PYHC.'AE'), 0)) / coalesce(sum(q2_PYHC.'AE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AE Growth', ((coalesce(sum(q3_CYHC.'AE'), 0) - coalesce(sum(q3_PYHC.'AE'), 0)) / coalesce(sum(q3_PYHC.'AE'), 0)) * 100 as 'YTD AE Growth', (power(coalesce(sum(q2_CYHC.'AE'), 0) / coalesce(sum(q2_PY_2_HC.'AE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR',(power(coalesce(sum(q3_CYHC.'AE'), 0) / coalesce(sum(q3_PY_2_HC.'AE'), 0),(1/2))-1)*100 as 'YTD AE CAGR',coalesce(sum(q2_CYHC.'Co_Prime'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime Absolute', coalesce(sum(q3_CYHC.'Co_Prime'), 0) as 'YTD Co_Prime Absolute', ((coalesce(sum(q2_CYHC.'Co_Prime'), 0) - coalesce(sum(q2_PYHC.'Co_Prime'), 0)) / coalesce(sum(q2_PYHC.'Co_Prime'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Co_Prime Growth', ((coalesce(sum(q3_CYHC.'Co_Prime'), 0) - coalesce(sum(q3_PYHC.'Co_Prime'), 0)) / coalesce(sum(q3_PYHC.'Co_Prime'), 0)) * 100 as 'YTD Co_Prime Growth',(power(coalesce(sum(q2_CYHC.'Co_Prime'), 0) / coalesce(sum(q2_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR',(power(coalesce(sum(q3_CYHC.'Co_Prime'), 0) / coalesce(sum(q3_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as 'YTD Co_Prime CAGR', coalesce(sum(q2_CYSW.'SWE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE Absolute', coalesce(sum(q3_CYSW.'SWE'), 0) as 'YTD SWE Absolute', ((coalesce(sum(q2_CYSW.'SWE'), 0) - coalesce(sum(q2_PYSW.'SWE'), 0)) / coalesce(sum(q2_PYSW.'SWE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth', ((coalesce(sum(q3_CYSW.'SWE'), 0) - coalesce(sum(q3_PYSW.'SWE'), 0)) / coalesce(sum(q3_PYSW.'SWE'), 0)) * 100 as 'YTD SWE Growth',(power(coalesce(sum(q2_CYSW.'SWE'), 0) / coalesce(sum(q2_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE CAGR',(power(coalesce(sum(q3_CYSW.'SWE'), 0) / coalesce(sum(q3_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as 'YTD SWE CAGR', coalesce(sum(q2_CYSW.'INFRA'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA Absolute', coalesce(sum(q3_CYSW.'INFRA'), 0) as 'YTD INFRA Absolute', ((coalesce(sum(q2_CYSW.'INFRA'), 0) - coalesce(sum(q2_PYSW.'INFRA'), 0)) / coalesce(sum(q2_PYSW.'INFRA'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth', ((coalesce(sum(q3_CYSW.'INFRA'), 0) - coalesce(sum(q3_PYSW.'INFRA'), 0)) / coalesce(sum(q3_PYSW.'INFRA'), 0)) * 100 as 'YTD INFRA Growth',(power(coalesce(sum(q2_CYSW.'INFRA'), 0) / coalesce(sum(q2_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA CAGR',(power(coalesce(sum(q3_CYSW.'INFRA'), 0) / coalesce(sum(q3_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as 'YTD INFRA CAGR',last(MasterHierarchy.'Level_3_Sort_Code')  as 'Sort_Code',\"          \" + coalesce(last(MasterHierarchy.'Level_2'), last(q2_CYACV.'Subcloud'), last(q2_PYACV.'Subcloud'), last(q3_CYACV.'Subcloud'), last(q3_PYACV.'Subcloud'), last(q2_CYAOV.'Subcloud'), last(q2_PYAOV.'Subcloud'), last(q3_CYAOV.'Subcloud'), last(q3_PYAOV.'Subcloud')) as 'ParentCloud';\nresult_Cloud_Level3 = filter result_Cloud_Level3 by 'Cloud' != 'ParentCloud';\nline =  group MasterHierarchy by 'all';line= foreach line generate \"----------------------------------------------------\" as 'Cloud',\"{{cell(Selector_Quarter.selection,0,\"Line_Rank\").asString()}}\"  as 'Sort_Code';\nnFinal = union result, result_SubCloud, result_Cloud_Level3,line;\nnFinal = filter Final by 'Sort_Code' != \"\";\nFinal = filter Final by 'Cloud' not in {{cell(Selector_Quarter.selection,0,\"Filter_Table_2\").asString()}};\nFinal = order Final by ('Sort_Code' asc,  'Cloud' asc);\nFinal = foreach Final generate 'Cloud'+\"                      \" as 'Cloud', '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE','YTD SWE Absolute' as 'YTD SWE Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth','YTD SWE Growth' as 'YTD SWE Growth','{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA','YTD INFRA Absolute' as 'YTD INFRA Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth','YTD INFRA Growth' as 'YTD INFRA Growth', '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute','YTD CTS Absolute' as 'YTD CTS Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth',   'YTD CTS Growth' as  'YTD CTS Growth', '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute',\"\" as 'YTD Availability Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth',   \"\" as  'YTD Availability Growth', '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute','YTD Transactions Absolute' as 'YTD Transactions Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth',   'YTD Transactions Growth' as  'YTD Transactions Growth';;\n",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      },
      "Table_Level_2_Measures_2": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Level_2_Measures_2",
        "numbers": [],
        "query": "MasterHierarchy = load \"Master_Hierarchy\";\nMasterHierarchy = filter MasterHierarchy by 'Level_1' in   {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\n\n---------------------LOAD/FILTER ACV---------------------\nACV = load \"APM_ACV\";\nACV = filter ACV by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nACV = filter ACV by {{column(Filter_Lead_1.selection,[\"Lead_1\"]).asEquality('Lead_1')}};\nACV = filter ACV by {{column(Filter_Segment.selection,[\"Segment\"]).asEquality('Segment')}};\nACV = filter ACV by {{column(Filter_Industry.selection,[\"Industry\"]).asEquality('Industry')}};\nACV = filter ACV by {{column(Filter_Lead.selection,[\"Lead\"]).asEquality('Lead')}};\nACV = filter ACV by {{column(Filter_Cloud.selection,[\"Cloud\"]).asEquality('Cloud')}};\nACV = filter ACV by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nACV = group ACV by ('Cloud','Cloud_2','Subcloud', 'Quarter','Month', 'Fiscal_Year', 'Region' , 'Country');\n\nACV = foreach ACV generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year' ,'Month' as 'Month',sum('ACV') as 'ACV', 'Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; ACV = filter ACV by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\n\nq2_CYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}} ;\n\n-----------------LOAD /FILTER HC-----------------------\nHC = load \"APM_HC\";\nHC = filter HC by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nHC = foreach HC generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('SE') as 'SE', sum('AE') as 'AE', sum('Co_Prime') as 'Co_Prime','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; HC = filter HC by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nHC = filter HC by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYHC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYHC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_HC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYHC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYHC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_HC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n\n----------------------AE PARTICIPATION-----------------------------\nPARTICIPATION = load \"APM_AE\";\nPARTICIPATION = filter PARTICIPATION by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nPARTICIPATION = filter PARTICIPATION by 'Region' == \"N/A\";\nPARTICIPATION = filter PARTICIPATION by 'Lead' == \"N/A\";\nPARTICIPATION = foreach PARTICIPATION generate 'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Cloud_m1') as 'Cloud_m1', sum('Cloud_m2') as 'Cloud_m2', sum('Cloud_m3') as 'Cloud_m3', 'Region' as 'Region',  {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; \nPARTICIPATION = filter PARTICIPATION by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nPARTICIPATION = filter PARTICIPATION by 'Cloud' in {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\n\nq2_CYPARTICIPATION = filter PARTICIPATION by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYPARTICIPATION = filter PARTICIPATION by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq2_PY_2_PARTICIPATION = filter PARTICIPATION by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\nq3_CYPARTICIPATION = filter PARTICIPATION by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYPARTICIPATION = filter PARTICIPATION by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_PY_2_PARTICIPATION = filter PARTICIPATION by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}};\n\n------------------------GROUPING LEVEL_1 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult = group \nq2_CYACV by 'Cloud' full, \nq2_PYACV by 'Cloud' full, \nq3_CYACV by 'Cloud' full, \nq3_PYACV by 'Cloud' full, \n\nq2_CYHC by 'Cloud' full, \nq2_PYHC by 'Cloud' full,\nq2_PY_2_HC by 'Cloud' full, \nq3_CYHC by 'Cloud' full, \nq3_PYHC by 'Cloud' full,\nq3_PY_2_HC by 'Cloud' full,\n\nq2_CYPARTICIPATION by 'Cloud' full, \nq2_PYPARTICIPATION by 'Cloud' full, \nq2_PY_2_PARTICIPATION by 'Cloud' full, \nq3_CYPARTICIPATION by 'Cloud' full, \nq3_PYPARTICIPATION by 'Cloud' full, \nq3_PY_2_PARTICIPATION by 'Cloud' full, \n\nMasterHierarchy by 'Level_1';\n\n-------------------PROJECTION CLOUD-----------------------------------\nresult = foreach result generate \n\"☁ \" + coalesce(MasterHierarchy.'Level_1', q2_CYACV.'Cloud', q2_PYACV.'Cloud', q3_CYACV.'Cloud', q3_PYACV.'Cloud') as 'Cloud',  \n\ncoalesce(sum(q2_CYACV.'ACV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute', coalesce(sum(q3_CYACV.'ACV'), 0) as 'YTD ACV Absolute', ((coalesce(sum(q2_CYACV.'ACV'), 0) - coalesce(sum(q2_PYACV.'ACV'), 0)) / coalesce(sum(q2_PYACV.'ACV'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth', ((coalesce(sum(q3_CYACV.'ACV'), 0) - coalesce(sum(q3_PYACV.'ACV'), 0)) / coalesce(sum(q3_PYACV.'ACV'), 0)) * 100 as 'YTD ACV Growth',\n\ncoalesce(sum(q2_CYHC.'SE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE Absolute', \ncoalesce(sum(q3_CYHC.'SE'), 0) as 'YTD SE Absolute', \n((coalesce(sum(q2_CYHC.'SE'), 0) - coalesce(sum(q2_PYHC.'SE'), 0)) / coalesce(sum(q2_PYHC.'SE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SE Growth', \n((coalesce(sum(q3_CYHC.'SE'), 0) - coalesce(sum(q3_PYHC.'SE'), 0)) / coalesce(sum(q3_PYHC.'SE'), 0)) * 100 as 'YTD SE Growth',\n(power(coalesce(sum(q2_CYHC.'SE'), 0) / coalesce(sum(q2_PY_2_HC.'SE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR',\n(power(coalesce(sum(q3_CYHC.'SE'), 0) / coalesce(sum(q3_PY_2_HC.'SE'), 0),(1/2))-1)*100 as 'YTD SE CAGR', \n\ncoalesce(sum(q2_CYHC.'AE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE Absolute', \ncoalesce(sum(q3_CYHC.'AE'), 0) as 'YTD AE Absolute', \n((coalesce(sum(q2_CYHC.'AE'), 0) - coalesce(sum(q2_PYHC.'AE'), 0)) / coalesce(sum(q2_PYHC.'AE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AE Growth', \n((coalesce(sum(q3_CYHC.'AE'), 0) - coalesce(sum(q3_PYHC.'AE'), 0)) / coalesce(sum(q3_PYHC.'AE'), 0)) * 100 as 'YTD AE Growth', \n(power(coalesce(sum(q2_CYHC.'AE'), 0) / coalesce(sum(q2_PY_2_HC.'AE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR',\n(power(coalesce(sum(q3_CYHC.'AE'), 0) / coalesce(sum(q3_PY_2_HC.'AE'), 0),(1/2))-1)*100 as 'YTD AE CAGR',\n\ncoalesce(sum(q2_CYHC.'Co_Prime'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime Absolute', coalesce(sum(q3_CYHC.'Co_Prime'), 0) as 'YTD Co_Prime Absolute', \n((coalesce(sum(q2_CYHC.'Co_Prime'), 0) - coalesce(sum(q2_PYHC.'Co_Prime'), 0)) / coalesce(sum(q2_PYHC.'Co_Prime'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Co_Prime Growth', \n((coalesce(sum(q3_CYHC.'Co_Prime'), 0) - coalesce(sum(q3_PYHC.'Co_Prime'), 0)) / coalesce(sum(q3_PYHC.'Co_Prime'), 0)) * 100 as 'YTD Co_Prime Growth',\n(power(coalesce(sum(q2_CYHC.'Co_Prime'), 0) / coalesce(sum(q2_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR',\n(power(coalesce(sum(q3_CYHC.'Co_Prime'), 0) / coalesce(sum(q3_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as 'YTD Co_Prime CAGR',\n\ncoalesce(sum(q2_CYPARTICIPATION.'Cloud_m1'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Participation Absolute', \ncoalesce(sum(q3_CYPARTICIPATION.'Cloud_m1'), 0) as 'YTD Participation Absolute', \n((coalesce(sum(q2_CYPARTICIPATION.'Cloud_m1'), 0) - coalesce(sum(q2_PYPARTICIPATION.'Cloud_m1'), 0)) / coalesce(sum(q2_PYPARTICIPATION.'Cloud_m1'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Participation Growth', \n((coalesce(sum(q3_CYPARTICIPATION.'Cloud_m1'), 0) - coalesce(sum(q3_PYPARTICIPATION.'Cloud_m1'), 0)) / coalesce(sum(q3_PYPARTICIPATION.'Cloud_m1'), 0)) * 100 as 'YTD Participation Growth'\n\n;\n\n-------------------------------GROUPING LEVEL_2-------------------\nresult_SubCloud = group \nq2_CYACV by ('Cloud', 'Subcloud') full, \nq2_PYACV by ('Cloud', 'Subcloud') full, \nq3_CYACV by ('Cloud', 'Subcloud') full, \nq3_PYACV by ('Cloud', 'Subcloud') full, \n\nq2_CYHC by ('Cloud', 'Subcloud') full, \nq2_PYHC by ('Cloud', 'Subcloud') full,\nq2_PY_2_HC by ('Cloud', 'Subcloud') full, \nq3_CYHC by ('Cloud', 'Subcloud') full, \nq3_PYHC by ('Cloud', 'Subcloud') full, \nq3_PY_2_HC by ('Cloud', 'Subcloud') full ,\n\nq2_CYPARTICIPATION by ('Cloud', 'Subcloud') full, \nq2_PYPARTICIPATION by ('Cloud', 'Subcloud') full, \nq2_PY_2_PARTICIPATION by ('Cloud', 'Subcloud') full, \nq3_CYPARTICIPATION by ('Cloud', 'Subcloud') full, \nq3_PYPARTICIPATION by ('Cloud', 'Subcloud') full, \nq3_PY_2_PARTICIPATION by ('Cloud', 'Subcloud') full, \n\nMasterHierarchy by ('Level_1', 'Level_2') ;\n\n--------------------------------PROJECTION LEVEL_2------------------------------------\nresult_SubCloud = foreach result_SubCloud generate \n\"    ↳  \" + coalesce(MasterHierarchy.'Level_2', q2_CYACV.'Subcloud', q2_PYACV.'Subcloud', q3_CYACV.'Subcloud', q3_PYACV.'Subcloud') as 'Cloud',  \n\ncoalesce(sum(q2_CYACV.'ACV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute', coalesce(sum(q3_CYACV.'ACV'), 0) as 'YTD ACV Absolute', ((coalesce(sum(q2_CYACV.'ACV'), 0) - coalesce(sum(q2_PYACV.'ACV'), 0)) / coalesce(sum(q2_PYACV.'ACV'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth', ((coalesce(sum(q3_CYACV.'ACV'), 0) - coalesce(sum(q3_PYACV.'ACV'), 0)) / coalesce(sum(q3_PYACV.'ACV'), 0)) * 100 as 'YTD ACV Growth', \n\ncoalesce(sum(q2_CYHC.'SE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE Absolute', \ncoalesce(sum(q3_CYHC.'SE'), 0) as 'YTD SE Absolute', \n((coalesce(sum(q2_CYHC.'SE'), 0) - coalesce(sum(q2_PYHC.'SE'), 0)) / coalesce(sum(q2_PYHC.'SE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SE Growth', \n((coalesce(sum(q3_CYHC.'SE'), 0) - coalesce(sum(q3_PYHC.'SE'), 0)) / coalesce(sum(q3_PYHC.'SE'), 0)) * 100 as 'YTD SE Growth',\n(power(coalesce(sum(q2_CYHC.'SE'), 0) / coalesce(sum(q2_PY_2_HC.'SE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR',\n(power(coalesce(sum(q3_CYHC.'SE'), 0) / coalesce(sum(q3_PY_2_HC.'SE'), 0),(1/2))-1)*100 as 'YTD SE CAGR', \n\ncoalesce(sum(q2_CYHC.'AE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE Absolute', \ncoalesce(sum(q3_CYHC.'AE'), 0) as 'YTD AE Absolute', \n((coalesce(sum(q2_CYHC.'AE'), 0) - coalesce(sum(q2_PYHC.'AE'), 0)) / coalesce(sum(q2_PYHC.'AE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AE Growth', \n((coalesce(sum(q3_CYHC.'AE'), 0) - coalesce(sum(q3_PYHC.'AE'), 0)) / coalesce(sum(q3_PYHC.'AE'), 0)) * 100 as 'YTD AE Growth', \n(power(coalesce(sum(q2_CYHC.'AE'), 0) / coalesce(sum(q2_PY_2_HC.'AE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR',\n(power(coalesce(sum(q3_CYHC.'AE'), 0) / coalesce(sum(q3_PY_2_HC.'AE'), 0),(1/2))-1)*100 as 'YTD AE CAGR',\n\ncoalesce(sum(q2_CYHC.'Co_Prime'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime Absolute', \ncoalesce(sum(q3_CYHC.'Co_Prime'), 0) as 'YTD Co_Prime Absolute', \n((coalesce(sum(q2_CYHC.'Co_Prime'), 0) - coalesce(sum(q2_PYHC.'Co_Prime'), 0)) / coalesce(sum(q2_PYHC.'Co_Prime'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Co_Prime Growth', \n((coalesce(sum(q3_CYHC.'Co_Prime'), 0) - coalesce(sum(q3_PYHC.'Co_Prime'), 0)) / coalesce(sum(q3_PYHC.'Co_Prime'), 0)) * 100 as 'YTD Co_Prime Growth',\n(power(coalesce(sum(q2_CYHC.'Co_Prime'), 0) / coalesce(sum(q2_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR',\n(power(coalesce(sum(q3_CYHC.'Co_Prime'), 0) / coalesce(sum(q3_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as 'YTD Co_Prime CAGR', \n\ncoalesce(sum(q2_CYPARTICIPATION.'Cloud_m2'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Participation Absolute', \ncoalesce(sum(q3_CYPARTICIPATION.'Cloud_m2'), 0) as 'YTD Participation Absolute', \n((coalesce(sum(q2_CYPARTICIPATION.'Cloud_m2'), 0) - coalesce(sum(q2_PYPARTICIPATION.'Cloud_m2'), 0)) / coalesce(sum(q2_PYPARTICIPATION.'Cloud_m2'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Participation Growth', \n((coalesce(sum(q3_CYPARTICIPATION.'Cloud_m2'), 0) - coalesce(sum(q3_PYPARTICIPATION.'Cloud_m2'), 0)) / coalesce(sum(q3_PYPARTICIPATION.'Cloud_m2'), 0)) * 100 as 'YTD Participation Growth',\n\nlast(MasterHierarchy.'Level_2_Sort_Code')  as 'Sort_Code';\nnresult_Cloud_Level3 = group  \nq2_CYACV by ('Cloud', 'Subcloud', 'Cloud_2') full, \nq2_PYACV by ('Cloud', 'Subcloud', 'Cloud_2') full, \nq3_CYACV by ('Cloud', 'Subcloud', 'Cloud_2') full, \nq3_PYACV by ('Cloud', 'Subcloud', 'Cloud_2') full, \n\nq2_CYHC by ('Cloud', 'Subcloud','Cloud_2') full, \nq2_PYHC by ('Cloud', 'Subcloud','Cloud_2') full,\nq2_PY_2_HC by ('Cloud', 'Subcloud','Cloud_2') full, \nq3_CYHC by ('Cloud', 'Subcloud','Cloud_2') full, \nq3_PYHC by ('Cloud', 'Subcloud','Cloud_2') full,  \nq3_PY_2_HC by ('Cloud', 'Subcloud','Cloud_2') full,\n\nq2_CYPARTICIPATION by ('Cloud', 'Subcloud','Cloud_2') full, \nq2_PYPARTICIPATION by ('Cloud', 'Subcloud','Cloud_2') full, \nq2_PY_2_PARTICIPATION by ('Cloud', 'Subcloud','Cloud_2') full, \nq3_CYPARTICIPATION by ('Cloud', 'Subcloud','Cloud_2') full, \nq3_PYPARTICIPATION by ('Cloud', 'Subcloud','Cloud_2') full, \nq3_PY_2_PARTICIPATION by ('Cloud', 'Subcloud','Cloud_2') full,  \n\nMasterHierarchy by ('Level_1', 'Level_2','Level_3')  ;\nn\nresult_Cloud_Level3 = foreach result_Cloud_Level3 generate \n\"          \" + coalesce(MasterHierarchy.'Level_3', q2_CYACV.'Cloud_2', q2_PYACV.'Cloud_2', q3_CYACV.'Cloud_2', q3_PYACV.'Cloud_2') as 'Cloud',  \n\ncoalesce(sum(q2_CYACV.'ACV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute', coalesce(sum(q3_CYACV.'ACV'), 0) as 'YTD ACV Absolute', ((coalesce(sum(q2_CYACV.'ACV'), 0) - coalesce(sum(q2_PYACV.'ACV'), 0)) / coalesce(sum(q2_PYACV.'ACV'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth', ((coalesce(sum(q3_CYACV.'ACV'), 0) - coalesce(sum(q3_PYACV.'ACV'), 0)) / coalesce(sum(q3_PYACV.'ACV'), 0)) * 100 as 'YTD ACV Growth', \n\ncoalesce(sum(q2_CYHC.'SE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE Absolute', \ncoalesce(sum(q3_CYHC.'SE'), 0) as 'YTD SE Absolute', \n((coalesce(sum(q2_CYHC.'SE'), 0) - coalesce(sum(q2_PYHC.'SE'), 0)) / coalesce(sum(q2_PYHC.'SE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SE Growth', \n((coalesce(sum(q3_CYHC.'SE'), 0) - coalesce(sum(q3_PYHC.'SE'), 0)) / coalesce(sum(q3_PYHC.'SE'), 0)) * 100 as 'YTD SE Growth',\n(power(coalesce(sum(q2_CYHC.'SE'), 0) / coalesce(sum(q2_PY_2_HC.'SE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR',\n(power(coalesce(sum(q3_CYHC.'SE'), 0) / coalesce(sum(q3_PY_2_HC.'SE'), 0),(1/2))-1)*100 as 'YTD SE CAGR', \n\ncoalesce(sum(q2_CYHC.'AE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE Absolute', \ncoalesce(sum(q3_CYHC.'AE'), 0) as 'YTD AE Absolute', \n((coalesce(sum(q2_CYHC.'AE'), 0) - coalesce(sum(q2_PYHC.'AE'), 0)) / coalesce(sum(q2_PYHC.'AE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AE Growth', \n((coalesce(sum(q3_CYHC.'AE'), 0) - coalesce(sum(q3_PYHC.'AE'), 0)) / coalesce(sum(q3_PYHC.'AE'), 0)) * 100 as 'YTD AE Growth', \n(power(coalesce(sum(q2_CYHC.'AE'), 0) / coalesce(sum(q2_PY_2_HC.'AE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR',\n(power(coalesce(sum(q3_CYHC.'AE'), 0) / coalesce(sum(q3_PY_2_HC.'AE'), 0),(1/2))-1)*100 as 'YTD AE CAGR',\n\ncoalesce(sum(q2_CYHC.'Co_Prime'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime Absolute', \ncoalesce(sum(q3_CYHC.'Co_Prime'), 0) as 'YTD Co_Prime Absolute', \n((coalesce(sum(q2_CYHC.'Co_Prime'), 0) - coalesce(sum(q2_PYHC.'Co_Prime'), 0)) / coalesce(sum(q2_PYHC.'Co_Prime'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Co_Prime Growth', \n((coalesce(sum(q3_CYHC.'Co_Prime'), 0) - coalesce(sum(q3_PYHC.'Co_Prime'), 0)) / coalesce(sum(q3_PYHC.'Co_Prime'), 0)) * 100 as 'YTD Co_Prime Growth',\n(power(coalesce(sum(q2_CYHC.'Co_Prime'), 0) / coalesce(sum(q2_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR',\n(power(coalesce(sum(q3_CYHC.'Co_Prime'), 0) / coalesce(sum(q3_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as 'YTD Co_Prime CAGR',\n\ncoalesce(sum(q2_CYPARTICIPATION.'Cloud_m3'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Participation Absolute', \ncoalesce(sum(q3_CYPARTICIPATION.'Cloud_m3'), 0) as 'YTD Participation Absolute', \n((coalesce(sum(q2_CYPARTICIPATION.'Cloud_m3'), 0) - coalesce(sum(q2_PYPARTICIPATION.'Cloud_m3'), 0)) / coalesce(sum(q2_PYPARTICIPATION.'Cloud_m3'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Participation Growth', \n((coalesce(sum(q3_CYPARTICIPATION.'Cloud_m3'), 0) - coalesce(sum(q3_PYPARTICIPATION.'Cloud_m3'), 0)) / coalesce(sum(q3_PYPARTICIPATION.'Cloud_m3'), 0)) * 100 as 'YTD Participation Growth',\n\nlast(MasterHierarchy.'Level_3_Sort_Code')  as 'Sort_Code',\n\"          \" + coalesce(last(MasterHierarchy.'Level_2'), last(q2_CYACV.'Subcloud'), last(q2_PYACV.'Subcloud'), last(q3_CYACV.'Subcloud'), last(q3_PYACV.'Subcloud') ) as 'ParentCloud';\n\nresult_Cloud_Level3 = filter result_Cloud_Level3 by 'Cloud' != 'ParentCloud';\n\nline = group MasterHierarchy by 'all';\nline = foreach line generate \"----------------------------------------------------\" as 'Cloud',\n\"{{cell(Selector_Quarter.selection,0,\"Line_Rank\").asString()}}\" as 'Sort_Code';\n\n-----------UNION-----------\nFinal = union result, result_SubCloud, result_Cloud_Level3,line;\n\n----------------------------FINAL PROJECTION ---------------------------\nFinal = filter Final by 'Sort_Code' != \"\";\nFinal = filter Final by 'Cloud' not in {{cell(Selector_Quarter.selection,0,\"Filter_Table_2\").asString()}};\nFinal = order Final by ('Sort_Code' asc,  'Cloud' asc);\nFinal = foreach Final generate \n'Cloud'+\"                      \" as 'Cloud',\n\n'{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AEs',\n'YTD AE Absolute' as 'YTD AE Absolute',\n'{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR',\n'YTD AE CAGR' as 'YTD AE CAGR',\n\n'{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime',\n'YTD Co_Prime Absolute' as 'YTD Co_Prime Absolute',\n'{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR',\n'YTD Co_Prime CAGR' as 'YTD Co_Prime CAGR' , \n\n'{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SEs',\n'YTD SE Absolute' as 'YTD SE Absolute',\n'{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR',\n'YTD SE CAGR' as 'YTD SE CAGR',\n\n'{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Participation Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Participation Absolute',\n'YTD Participation Absolute' as 'YTD Participation Absolute',\n'{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Participation Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Participation Growth',\n'YTD Participation Growth' as 'YTD Participation Growth' ;\n",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      },
      "Table_Level_2_Measures_1": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Level_2_Measures_1",
        "numbers": [],
        "query": "MasterHierarchy = load \"Master_Hierarchy\";\nMasterHierarchy = filter MasterHierarchy by 'Level_1' in   {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nnACV = load \"APM_ACV\";\nACV = filter ACV by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nACV = filter ACV by {{column(Filter_Lead_1.selection,[\"Lead_1\"]).asEquality('Lead_1')}};\nACV = filter ACV by {{column(Filter_Segment.selection,[\"Segment\"]).asEquality('Segment')}};\nACV = filter ACV by {{column(Filter_Industry.selection,[\"Industry\"]).asEquality('Industry')}};\nACV = filter ACV by {{column(Filter_Lead.selection,[\"Lead\"]).asEquality('Lead')}};\nACV = filter ACV by {{column(Filter_Cloud.selection,[\"Cloud\"]).asEquality('Cloud')}};\nACV = filter ACV by 'Cloud' in {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nACV = group ACV by ('Cloud','Cloud_2','Subcloud', 'Quarter','Month', 'Fiscal_Year', 'Region' , 'Country');\nACV = foreach ACV generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year' ,'Month' as 'Month',sum('ACV') as 'ACV', 'Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; ACV = filter ACV by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nq2_CYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYACV = filter ACV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}} ;\nnAOV = load \"APM_AOV\";\nAOV = filter AOV by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nAOV = filter AOV by 'Cloud' in{{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nAOV = group AOV by ('Cloud','Subcloud', 'Cloud_2', 'Quarter', 'Month', 'Fiscal_Year', 'Region' , 'Country');\nAOV = foreach AOV generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('AOV') as 'AOV','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; AOV = filter AOV by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nq2_CYAOV = filter AOV by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYAOV = filter AOV by 'Month' in   {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYAOV = filter AOV by 'Month' in {{cell(Selector_Quarter.selection,0,\"YTD_Month_cum\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYAOV = filter AOV by 'Month' in{{cell(Selector_Quarter.selection,0,\"YTD_Month_cum\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nnAttrition = load \"APM_Attrition\";\nAttrition = filter Attrition by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\n--Attrition = filter Attrition by 'Segment' != \"CSG\";\nAttrition = filter Attrition by 'Cloud' in   {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nAttrition = group Attrition by ('Fiscal_Year','Quarter', 'Region', 'Cloud', 'Month','Subcloud', 'Cloud_2','Country');\nAttrition = foreach Attrition generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Attrition_Product')*-1 as 'Attrition_Product', sum('TTM_Product')*-1 as 'TTM_Product',sum('AOV_twelve_month_ago_Product') as 'AOV_twelve_month_ago','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; Attrition = filter Attrition by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}} ;\nq2_CYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq2_PYATT = filter Attrition by 'Month' in   {{cell(Selector_Quarter.selection,0,\"Month\").asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq3_CYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\nq3_PYATT = filter Attrition by 'Month' in {{cell(Selector_Quarter.selection,0,\"YTD_Month\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}};\nq4_CYATT = filter Attrition by 'Month' in  {{cell(Selector_Quarter.selection,0,\"YTD_Month_cum_attrit\").asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}};\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD /FILTER PIPEGEN-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nPipegen = load \"APM_Pipegen1\";\nPipegen = filter Pipegen by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nPipegen = group Pipegen by ('Fiscal_Year','Quarter', 'Region', 'Cloud', 'Month','Subcloud', 'Cloud_2','Country');\nPipegen = foreach Pipegen generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Pipegen') as 'Pipegen','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; Pipegen = filter Pipegen by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nPipegen = filter Pipegen by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYPipegen = filter Pipegen by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYPipegen = filter Pipegen by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_CYPipegen = filter Pipegen by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_pipegen\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYPipegen = filter Pipegen by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_pipegen\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nnHC = load \"APM_HC\";\nHC = filter HC by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nHC = foreach HC generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('SE') as 'SE',sum('AE') as 'AE',sum('Co_Prime') as 'Co_Prime','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; HC = filter HC by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nHC = filter HC by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYHC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYHC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_HC = filter HC by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYHC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYHC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_HC = filter HC by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_HC\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD SWE INFRA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSW = load \"APM_SWE_INFRA\";\nSW = filter SW by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nSW = foreach SW generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('SWE') as 'SWE',sum('INFRA') as 'INFRA','Region' as 'Region',{{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; SW = filter SW by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};;\nSW = filter SW by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYSW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYSW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_SW = filter SW by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYSW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYSW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_SW = filter SW by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter_SW\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD REDACCOUNTS------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nREDACCOUNTS = load \"APM_REDACCOUNTS\";\nREDACCOUNTS = filter REDACCOUNTS by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nREDACCOUNTS = foreach REDACCOUNTS generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Red_Accounts') as 'Red_Accounts','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country'; REDACCOUNTS = filter REDACCOUNTS by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nREDACCOUNTS = filter REDACCOUNTS by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYREDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYREDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_REDACCOUNTS = filter REDACCOUNTS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYREDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYREDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_REDACCOUNTS = filter REDACCOUNTS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD T_P T&amp;P Cost to Serve------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nT_P = load \"APM_T_P\";\nT_P = filter T_P by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nT_P = foreach T_P generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('CTS') as 'CTS','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; T_P = filter T_P by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nT_P = filter T_P by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYT_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYT_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_T_P = filter T_P by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYT_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYT_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_T_P = filter T_P by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD AVAILABILITY------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nAVAILABILITY = load \"APM_TECH_AVAILABILITY\";\nAVAILABILITY = filter AVAILABILITY by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nAVAILABILITY = foreach AVAILABILITY generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Availability') as 'Availability','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; AVAILABILITY = filter AVAILABILITY by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nAVAILABILITY = filter AVAILABILITY by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYAVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYAVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_AVAILABILITY = filter AVAILABILITY by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYAVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYAVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_AVAILABILITY = filter AVAILABILITY by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD TRANSACTIONS------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nTRANSACTIONS = load \"APM_T_P_Transactions\";\nTRANSACTIONS = filter TRANSACTIONS by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nTRANSACTIONS = foreach TRANSACTIONS generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Transactions') as 'Transactions','Region' as 'Region',{{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; TRANSACTIONS = filter TRANSACTIONS by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nTRANSACTIONS = filter TRANSACTIONS by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYTRANSACTIONS = filter TRANSACTIONS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYTRANSACTIONS = filter TRANSACTIONS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_TRANSACTIONS = filter TRANSACTIONS by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYTRANSACTIONS = filter TRANSACTIONS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYTRANSACTIONS = filter TRANSACTIONS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_TRANSACTIONS = filter TRANSACTIONS by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD MARKET CUSTOMER------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nCUSTOMER = load \"APM_MARKET_CUSTOMER\";\nCUSTOMER = filter CUSTOMER by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nCUSTOMER = foreach CUSTOMER generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('Customer') as 'Customer','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; CUSTOMER = filter CUSTOMER by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nCUSTOMER = filter CUSTOMER by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYCUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYCUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_CUSTOMER = filter CUSTOMER by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYCUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYCUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_CUSTOMER = filter CUSTOMER by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD MARKET SHARE------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSHARE= load \"APM_MARKET_SHARE\";\nSHARE= filter SHARE by {{column(lens_2.selection,[\"Region\"]).asEquality('Region')}};\nSHARE= foreach SHARE generate  'Cloud' as 'Cloud', 'Subcloud' as 'Subcloud','Cloud_2' as 'Cloud_2', 'Quarter' as 'Quarter', 'Fiscal_Year' as 'Fiscal_Year','Month' as 'Month' ,sum('TAM') as 'TAM','Region' as 'Region', {{cell(Static_Cloud_Filter.selection,0,\"static_country_logic\").asString()}} as 'Country' ; SHARE= filter SHARE by  {{column(lens_1.selection,[\"Country\"]).asEquality('Country')}};\nSHARE = filter SHARE by 'Cloud' in  {{cell(Static_Cloud_Filter.selection,0,\"filter\").asString()}};\nq2_CYSHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq2_PYSHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq2_PY_2_SHARE = filter SHARE by 'Quarter' in {{cell(Selector_Quarter.selection,0,\"Quarter\").asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\nq3_CYSHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"CY\").asEquality('Fiscal_Year')}});\nq3_PYSHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY\").asEquality('Fiscal_Year')}});\nq3_PY_2_SHARE = filter SHARE by ('Quarter' in {{cell(Selector_Quarter.selection,0,\"YTD_Quarter\").asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,\"PY_2\").asEquality('Fiscal_Year')}});\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------GROUPING LEVEL_1 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult = group  q2_CYACV by 'Cloud' full, q2_PYACV by 'Cloud' full, q3_CYACV by 'Cloud' full, q3_PYACV by 'Cloud' full, q2_CYAOV by 'Cloud' full, q2_PYAOV by 'Cloud' full, q3_CYAOV by 'Cloud' full, q3_PYAOV by 'Cloud' full,  q2_CYATT by 'Cloud' full, q2_PYATT by 'Cloud' full, q3_CYATT by 'Cloud' full, q3_PYATT by 'Cloud' full,q4_CYATT by 'Cloud' full, q2_CYPipegen by 'Cloud' full, q2_PYPipegen by 'Cloud' full, q3_CYPipegen by 'Cloud' full, q3_PYPipegen by 'Cloud'full,q2_CYHC by 'Cloud' full, q2_PYHC by 'Cloud' full,q2_PY_2_HC by 'Cloud' full, q3_CYHC by 'Cloud' full, q3_PYHC by 'Cloud' full,q3_PY_2_HC by 'Cloud' full, q2_CYSW by 'Cloud' full, q2_PYSW by 'Cloud' full,q2_PY_2_SW by 'Cloud' full, q3_CYSW by 'Cloud' full, q3_PYSW by 'Cloud' full,q3_PY_2_SW by 'Cloud'full, q2_CYREDACCOUNTS by 'Cloud' full, q2_PYREDACCOUNTS by 'Cloud' full,q2_PY_2_REDACCOUNTS by 'Cloud' full, q3_CYREDACCOUNTS by 'Cloud' full, q3_PYREDACCOUNTS by 'Cloud' full,q3_PY_2_REDACCOUNTS by 'Cloud' full, q2_CYT_P by 'Cloud' full, q2_PYT_P by 'Cloud' full,q2_PY_2_T_P by 'Cloud' full, q3_CYT_P by 'Cloud' full, q3_PYT_P by 'Cloud' full,q3_PY_2_T_P by 'Cloud' full, q2_CYAVAILABILITY by 'Cloud' full, q2_PYAVAILABILITY by 'Cloud' full,q2_PY_2_AVAILABILITY by 'Cloud' full, q3_CYAVAILABILITY by 'Cloud' full, q3_PYAVAILABILITY by 'Cloud' full,q3_PY_2_AVAILABILITY by 'Cloud' full, q2_CYTRANSACTIONS by 'Cloud' full, q2_PYTRANSACTIONS by 'Cloud' full,q2_PY_2_TRANSACTIONS by 'Cloud' full, q3_CYTRANSACTIONS by 'Cloud' full, q3_PYTRANSACTIONS by 'Cloud' full,q3_PY_2_TRANSACTIONS by 'Cloud'  full, q2_CYCUSTOMER by 'Cloud' full, q2_PYCUSTOMER by 'Cloud' full,q2_PY_2_CUSTOMER by 'Cloud' full, q3_CYCUSTOMER by 'Cloud' full, q3_PYCUSTOMER by 'Cloud' full,q3_PY_2_CUSTOMER by 'Cloud'full, q2_CYSHARE by 'Cloud' full, q2_PYSHARE by 'Cloud' full,q2_PY_2_SHARE by 'Cloud' full, q3_CYSHARE by 'Cloud' full, q3_PYSHARE by 'Cloud' full,q3_PY_2_SHARE by 'Cloud',MasterHierarchy by 'Level_1';\nn;\nresult = foreach result generate  \"☁ \" + coalesce(MasterHierarchy.'Level_1', q2_CYACV.'Cloud', q2_PYACV.'Cloud', q3_CYACV.'Cloud', q3_PYACV.'Cloud', q2_CYAOV.'Cloud', q2_PYAOV.'Cloud', q3_CYAOV.'Cloud', q3_PYAOV.'Cloud',q2_PYATT.'Cloud',q2_CYATT.'Cloud',q3_PYATT.'Cloud',q3_CYATT.'Cloud',q2_CYPipegen.'Cloud', q2_PYPipegen.'Cloud', q3_CYPipegen.'Cloud', q3_PYPipegen.'Cloud',q2_CYREDACCOUNTS.'Cloud', q2_PYREDACCOUNTS.'Cloud', q3_CYREDACCOUNTS.'Cloud', q3_PYREDACCOUNTS.'Cloud', q2_CYT_P.'Cloud', q2_PYT_P.'Cloud', q3_CYT_P.'Cloud', q3_PYT_P.'Cloud', q2_CYAVAILABILITY.'Cloud', q2_PYAVAILABILITY.'Cloud', q3_CYAVAILABILITY.'Cloud', q3_PYAVAILABILITY.'Cloud', q2_CYTRANSACTIONS.'Cloud', q2_PYTRANSACTIONS.'Cloud', q3_CYTRANSACTIONS.'Cloud', q3_PYTRANSACTIONS.'Cloud', q2_CYAVAILABILITY.'Cloud', q2_PYAVAILABILITY.'Cloud', q3_CYAVAILABILITY.'Cloud', q3_PYAVAILABILITY.'Cloud', q2_CYCUSTOMER.'Cloud', q2_PYCUSTOMER.'Cloud', q3_CYCUSTOMER.'Cloud', q3_PYCUSTOMER.'Cloud', q2_CYSHARE.'Cloud', q2_PYSHARE.'Cloud', q3_CYSHARE.'Cloud', q3_PYSHARE.'Cloud') as 'Cloud',  coalesce(sum(q2_CYACV.'ACV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute', coalesce(sum(q3_CYACV.'ACV'), 0) as 'YTD ACV Absolute', ((coalesce(sum(q2_CYACV.'ACV'), 0) - coalesce(sum(q2_PYACV.'ACV'), 0)) / coalesce(sum(q2_PYACV.'ACV'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth', ((coalesce(sum(q3_CYACV.'ACV'), 0) - coalesce(sum(q3_PYACV.'ACV'), 0)) / coalesce(sum(q3_PYACV.'ACV'), 0)) * 100 as 'YTD ACV Growth', coalesce(sum(q2_CYAOV.'AOV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AOV Absolute', coalesce(sum(q3_CYAOV.'AOV'), 0) as 'YTD AOV Absolute', ((coalesce(sum(q2_CYAOV.'AOV'), 0) - coalesce(sum(q2_PYAOV.'AOV'), 0)) / coalesce(sum(q2_PYAOV.'AOV'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AOV Growth', ((coalesce(sum(q3_CYAOV.'AOV'), 0) - coalesce(sum(q3_PYAOV.'AOV'), 0)) / coalesce(sum(q3_PYAOV.'AOV'), 0)) * 100 as 'YTD AOV Growth',last(MasterHierarchy.'Level_1_Ranking') as 'Sort_Code', coalesce(sum(q2_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q2',coalesce(sum(q3_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q3',coalesce(round(sum(q2_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q2' ,coalesce(round(sum(q2_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q2',coalesce(round(sum(q4_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q3' ,coalesce(round(sum(q4_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q3',(coalesce(round(sum(q2_CYATT.'TTM_Product'), 0), 0) / coalesce(round(sum(q2_CYATT.'AOV_twelve_month_ago'), 0), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Attrition TTM Rate', (coalesce(round(sum(q4_CYATT.'TTM_Product'), 0), 0) / coalesce(round(sum(q4_CYATT.'AOV_twelve_month_ago'), 0), 0)) * 100 as 'YTD Attrition TTM Rate', coalesce(sum(q2_CYPipegen.'Pipegen'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Pipegen Absolute', coalesce(sum(q3_CYPipegen.'Pipegen'), 0) as 'YTD Pipegen Absolute', ((coalesce(sum(q2_CYPipegen.'Pipegen'), 0) - coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Pipegen Growth', ((coalesce(sum(q3_CYPipegen.'Pipegen'), 0) - coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) * 100 as 'YTD Pipegen Growth', coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute', coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) as 'YTD Red_Accounts Absolute', ((coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth', ((coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as 'YTD Red_Accounts Growth', coalesce(sum(q2_CYT_P.'CTS'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute', coalesce(sum(q3_CYT_P.'CTS'), 0) as 'YTD CTS Absolute', ((coalesce(sum(q2_CYT_P.'CTS'), 0) - coalesce(sum(q2_PYT_P.'CTS'), 0)) / coalesce(sum(q2_PYT_P.'CTS'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth', ((coalesce(sum(q3_CYT_P.'CTS'), 0) - coalesce(sum(q3_PYT_P.'CTS'), 0)) / coalesce(sum(q3_PYT_P.'CTS'), 0)) * 100 as 'YTD CTS Growth', coalesce(sum(q2_CYAVAILABILITY.'Availability'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute', coalesce(sum(q3_CYAVAILABILITY.'Availability'), 0) as 'YTD Availability Absolute', ((coalesce(sum(q2_CYAVAILABILITY.'Availability'), 0) - coalesce(sum(q2_PYAVAILABILITY.'Availability'), 0)) / coalesce(sum(q2_PYAVAILABILITY.'Availability'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth', ((coalesce(sum(q3_CYAVAILABILITY.'Availability'), 0) - coalesce(sum(q3_PYAVAILABILITY.'Availability'), 0)) / coalesce(sum(q3_PYAVAILABILITY.'Availability'), 0)) * 100 as 'YTD Availability Growth', coalesce(sum(q2_CYTRANSACTIONS.'Transactions'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute', coalesce(sum(q3_CYTRANSACTIONS.'Transactions'), 0) as 'YTD Transactions Absolute', ((coalesce(sum(q2_CYTRANSACTIONS.'Transactions'), 0) - coalesce(sum(q2_PYTRANSACTIONS.'Transactions'), 0)) / coalesce(sum(q2_PYTRANSACTIONS.'Transactions'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth', ((coalesce(sum(q3_CYTRANSACTIONS.'Transactions'), 0) - coalesce(sum(q3_PYTRANSACTIONS.'Transactions'), 0)) / coalesce(sum(q3_PYTRANSACTIONS.'Transactions'), 0)) * 100 as 'YTD Transactions Growth', coalesce(sum(q2_CYCUSTOMER.'Customer'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute', coalesce(sum(q3_CYCUSTOMER.'Customer'), 0) as 'YTD Customer Absolute', ((coalesce(sum(q2_CYCUSTOMER.'Customer'), 0) - coalesce(sum(q2_PYCUSTOMER.'Customer'), 0)) / coalesce(sum(q2_PYCUSTOMER.'Customer'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth', ((coalesce(sum(q3_CYCUSTOMER.'Customer'), 0) - coalesce(sum(q3_PYCUSTOMER.'Customer'), 0)) / coalesce(sum(q3_PYCUSTOMER.'Customer'), 0)) * 100 as 'YTD Customer Growth', coalesce(sum(q2_CYSHARE.'TAM'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute', coalesce(sum(q3_CYSHARE.'TAM'), 0) as 'YTD TAM Absolute', ((coalesce(sum(q2_CYSHARE.'TAM'), 0) - coalesce(sum(q2_PYSHARE.'TAM'), 0)) / coalesce(sum(q2_PYSHARE.'TAM'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth', ((coalesce(sum(q3_CYSHARE.'TAM'), 0) - coalesce(sum(q3_PYSHARE.'TAM'), 0)) / coalesce(sum(q3_PYSHARE.'TAM'), 0)) * 100 as 'YTD TAM Growth',coalesce(sum(q2_CYHC.'SE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE Absolute', coalesce(sum(q3_CYHC.'SE'), 0) as 'YTD SE Absolute', ((coalesce(sum(q2_CYHC.'SE'), 0) - coalesce(sum(q2_PYHC.'SE'), 0)) / coalesce(sum(q2_PYHC.'SE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SE Growth', ((coalesce(sum(q3_CYHC.'SE'), 0) - coalesce(sum(q3_PYHC.'SE'), 0)) / coalesce(sum(q3_PYHC.'SE'), 0)) * 100 as 'YTD SE Growth',(power(coalesce(sum(q2_CYHC.'SE'), 0) / coalesce(sum(q2_PY_2_HC.'SE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR',(power(coalesce(sum(q3_CYHC.'SE'), 0) / coalesce(sum(q3_PY_2_HC.'SE'), 0),(1/2))-1)*100 as 'YTD SE CAGR', coalesce(sum(q2_CYHC.'AE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE Absolute', coalesce(sum(q3_CYHC.'AE'), 0) as 'YTD AE Absolute', ((coalesce(sum(q2_CYHC.'AE'), 0) - coalesce(sum(q2_PYHC.'AE'), 0)) / coalesce(sum(q2_PYHC.'AE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AE Growth', ((coalesce(sum(q3_CYHC.'AE'), 0) - coalesce(sum(q3_PYHC.'AE'), 0)) / coalesce(sum(q3_PYHC.'AE'), 0)) * 100 as 'YTD AE Growth', (power(coalesce(sum(q2_CYHC.'AE'), 0) / coalesce(sum(q2_PY_2_HC.'AE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR',(power(coalesce(sum(q3_CYHC.'AE'), 0) / coalesce(sum(q3_PY_2_HC.'AE'), 0),(1/2))-1)*100 as 'YTD AE CAGR',coalesce(sum(q2_CYHC.'Co_Prime'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime Absolute', coalesce(sum(q3_CYHC.'Co_Prime'), 0) as 'YTD Co_Prime Absolute', ((coalesce(sum(q2_CYHC.'Co_Prime'), 0) - coalesce(sum(q2_PYHC.'Co_Prime'), 0)) / coalesce(sum(q2_PYHC.'Co_Prime'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Co_Prime Growth', ((coalesce(sum(q3_CYHC.'Co_Prime'), 0) - coalesce(sum(q3_PYHC.'Co_Prime'), 0)) / coalesce(sum(q3_PYHC.'Co_Prime'), 0)) * 100 as 'YTD Co_Prime Growth',(power(coalesce(sum(q2_CYHC.'Co_Prime'), 0) / coalesce(sum(q2_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR',(power(coalesce(sum(q3_CYHC.'Co_Prime'), 0) / coalesce(sum(q3_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as 'YTD Co_Prime CAGR', coalesce(sum(q2_CYSW.'SWE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE Absolute', coalesce(sum(q3_CYSW.'SWE'), 0) as 'YTD SWE Absolute', ((coalesce(sum(q2_CYSW.'SWE'), 0) - coalesce(sum(q2_PYSW.'SWE'), 0)) / coalesce(sum(q2_PYSW.'SWE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth', ((coalesce(sum(q3_CYSW.'SWE'), 0) - coalesce(sum(q3_PYSW.'SWE'), 0)) / coalesce(sum(q3_PYSW.'SWE'), 0)) * 100 as 'YTD SWE Growth',(power(coalesce(sum(q2_CYSW.'SWE'), 0) / coalesce(sum(q2_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE CAGR',(power(coalesce(sum(q3_CYSW.'SWE'), 0) / coalesce(sum(q3_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as 'YTD SWE CAGR', coalesce(sum(q2_CYSW.'INFRA'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA Absolute', coalesce(sum(q3_CYSW.'INFRA'), 0) as 'YTD INFRA Absolute', ((coalesce(sum(q2_CYSW.'INFRA'), 0) - coalesce(sum(q2_PYSW.'INFRA'), 0)) / coalesce(sum(q2_PYSW.'INFRA'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth', ((coalesce(sum(q3_CYSW.'INFRA'), 0) - coalesce(sum(q3_PYSW.'INFRA'), 0)) / coalesce(sum(q3_PYSW.'INFRA'), 0)) * 100 as 'YTD INFRA Growth',(power(coalesce(sum(q2_CYSW.'INFRA'), 0) / coalesce(sum(q2_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA CAGR',(power(coalesce(sum(q3_CYSW.'INFRA'), 0) / coalesce(sum(q3_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as 'YTD INFRA CAGR';\nnresult_SubCloud = group q2_CYACV by ('Cloud', 'Subcloud') full, q2_PYACV by ('Cloud', 'Subcloud') full, q3_CYACV by ('Cloud', 'Subcloud') full, q3_PYACV by ('Cloud', 'Subcloud') full, q2_CYAOV by ('Cloud', 'Subcloud') full, q2_PYAOV by ('Cloud', 'Subcloud') full, q3_CYAOV by ('Cloud', 'Subcloud') full, q3_PYAOV by ('Cloud', 'Subcloud') full,q2_CYATT by ('Cloud', 'Subcloud') full, q2_PYATT by ('Cloud', 'Subcloud') full, q3_CYATT by ('Cloud', 'Subcloud') full, q3_PYATT by ('Cloud', 'Subcloud') full,q4_CYATT by ('Cloud', 'Subcloud') full, q2_CYPipegen by ('Cloud', 'Subcloud') full, q2_PYPipegen by ('Cloud', 'Subcloud') full, q3_CYPipegen by ('Cloud', 'Subcloud') full, q3_PYPipegen by ('Cloud', 'Subcloud') full,q2_CYHC by ('Cloud', 'Subcloud') full, q2_PYHC by ('Cloud', 'Subcloud') full,q2_PY_2_HC by ('Cloud', 'Subcloud') full, q3_CYHC by ('Cloud', 'Subcloud') full, q3_PYHC by ('Cloud', 'Subcloud') full, q3_PY_2_HC by ('Cloud', 'Subcloud') full ,q2_CYSW by ('Cloud', 'Subcloud') full, q2_PYSW by ('Cloud', 'Subcloud') full,q2_PY_2_SW by ('Cloud', 'Subcloud') full, q3_CYSW by ('Cloud', 'Subcloud') full, q3_PYSW by ('Cloud', 'Subcloud') full, q3_PY_2_SW by ('Cloud', 'Subcloud')full, q2_CYREDACCOUNTS by ('Cloud', 'Subcloud') full, q2_PYREDACCOUNTS by ('Cloud', 'Subcloud') full,q2_PY_2_REDACCOUNTS by ('Cloud', 'Subcloud') full, q3_CYREDACCOUNTS by ('Cloud', 'Subcloud') full, q3_PYREDACCOUNTS by ('Cloud', 'Subcloud') full,q3_PY_2_REDACCOUNTS by ('Cloud', 'Subcloud') full, q2_CYT_P by ('Cloud', 'Subcloud') full, q2_PYT_P by ('Cloud', 'Subcloud') full,q2_PY_2_T_P by ('Cloud', 'Subcloud') full, q3_CYT_P by ('Cloud', 'Subcloud') full, q3_PYT_P by ('Cloud', 'Subcloud') full,q3_PY_2_T_P by ('Cloud', 'Subcloud') full, q2_CYAVAILABILITY by ('Cloud', 'Subcloud') full, q2_PYAVAILABILITY by ('Cloud', 'Subcloud') full,q2_PY_2_AVAILABILITY by ('Cloud', 'Subcloud') full, q3_CYAVAILABILITY by ('Cloud', 'Subcloud') full, q3_PYAVAILABILITY by ('Cloud', 'Subcloud') full,q3_PY_2_AVAILABILITY by ('Cloud', 'Subcloud') full, q2_CYTRANSACTIONS by ('Cloud', 'Subcloud') full, q2_PYTRANSACTIONS by ('Cloud', 'Subcloud') full,q2_PY_2_TRANSACTIONS by ('Cloud', 'Subcloud') full, q3_CYTRANSACTIONS by ('Cloud', 'Subcloud') full, q3_PYTRANSACTIONS by ('Cloud', 'Subcloud') full,q3_PY_2_TRANSACTIONS by ('Cloud', 'Subcloud')  full, q2_CYCUSTOMER by ('Cloud', 'Subcloud') full, q2_PYCUSTOMER by ('Cloud', 'Subcloud') full,q2_PY_2_CUSTOMER by ('Cloud', 'Subcloud') full, q3_CYCUSTOMER by ('Cloud', 'Subcloud') full, q3_PYCUSTOMER by ('Cloud', 'Subcloud') full,q3_PY_2_CUSTOMER by ('Cloud', 'Subcloud')full, q2_CYSHARE by ('Cloud', 'Subcloud') full, q2_PYSHARE by ('Cloud', 'Subcloud') full,q2_PY_2_SHARE by ('Cloud', 'Subcloud') full, q3_CYSHARE by ('Cloud', 'Subcloud') full, q3_PYSHARE by ('Cloud', 'Subcloud') full,q3_PY_2_SHARE by ('Cloud', 'Subcloud'),MasterHierarchy by ('Level_1', 'Level_2') ;\nn\nresult_SubCloud = foreach result_SubCloud generate \"    ↳  \" + coalesce(MasterHierarchy.'Level_2', q2_CYACV.'Subcloud', q2_PYACV.'Subcloud', q3_CYACV.'Subcloud', q3_PYACV.'Subcloud', q2_CYAOV.'Subcloud', q2_PYAOV.'Subcloud', q3_CYAOV.'Subcloud', q3_PYAOV.'Subcloud',q2_CYREDACCOUNTS.'Subcloud', q2_PYREDACCOUNTS.'Subcloud', q3_CYREDACCOUNTS.'Subcloud', q3_PYREDACCOUNTS.'Subcloud', q2_CYT_P.'Subcloud', q2_PYT_P.'Subcloud', q3_CYT_P.'Subcloud', q3_PYT_P.'Subcloud', q2_CYAVAILABILITY.'Subcloud', q2_PYAVAILABILITY.'Subcloud', q3_CYAVAILABILITY.'Subcloud', q3_PYAVAILABILITY.'Subcloud', q2_CYTRANSACTIONS.'Subcloud', q2_PYTRANSACTIONS.'Subcloud', q3_CYTRANSACTIONS.'Subcloud', q3_PYTRANSACTIONS.'Subcloud', q2_CYAVAILABILITY.'Subcloud', q2_PYAVAILABILITY.'Subcloud', q3_CYAVAILABILITY.'Subcloud', q3_PYAVAILABILITY.'Subcloud', q2_CYCUSTOMER.'Subcloud', q2_PYCUSTOMER.'Subcloud', q3_CYCUSTOMER.'Subcloud', q3_PYCUSTOMER.'Subcloud', q2_CYSHARE.'Subcloud', q2_PYSHARE.'Subcloud', q3_CYSHARE.'Subcloud', q3_PYSHARE.'Subcloud') as 'Cloud',  coalesce(sum(q2_CYACV.'ACV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute', coalesce(sum(q3_CYACV.'ACV'), 0) as 'YTD ACV Absolute', ((coalesce(sum(q2_CYACV.'ACV'), 0) - coalesce(sum(q2_PYACV.'ACV'), 0)) / coalesce(sum(q2_PYACV.'ACV'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth', ((coalesce(sum(q3_CYACV.'ACV'), 0) - coalesce(sum(q3_PYACV.'ACV'), 0)) / coalesce(sum(q3_PYACV.'ACV'), 0)) * 100 as 'YTD ACV Growth', coalesce(sum(q2_CYAOV.'AOV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AOV Absolute', coalesce(sum(q3_CYAOV.'AOV'), 0) as 'YTD AOV Absolute', ((coalesce(sum(q2_CYAOV.'AOV'), 0) - coalesce(sum(q2_PYAOV.'AOV'), 0)) / coalesce(sum(q2_PYAOV.'AOV'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AOV Growth', ((coalesce(sum(q3_CYAOV.'AOV'), 0) - coalesce(sum(q3_PYAOV.'AOV'), 0)) / coalesce(sum(q3_PYAOV.'AOV'), 0)) * 100 as 'YTD AOV Growth', coalesce(sum(q2_CYPipegen.'Pipegen'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Pipegen Absolute', coalesce(sum(q3_CYPipegen.'Pipegen'), 0) as 'YTD Pipegen Absolute', ((coalesce(sum(q2_CYPipegen.'Pipegen'), 0) - coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Pipegen Growth', ((coalesce(sum(q3_CYPipegen.'Pipegen'), 0) - coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) * 100 as 'YTD Pipegen Growth',coalesce(sum(q2_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q2',coalesce(sum(q3_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q3',coalesce(round(sum(q2_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q2' ,coalesce(round(sum(q2_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q2',coalesce(round(sum(q4_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q3' ,coalesce(round(sum(q4_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q3',(coalesce(round(sum(q2_CYATT.'TTM_Product'), 0), 0) / coalesce(round(sum(q2_CYATT.'AOV_twelve_month_ago'), 0), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Attrition TTM Rate', (coalesce(round(sum(q4_CYATT.'TTM_Product'), 0), 0) / coalesce(round(sum(q4_CYATT.'AOV_twelve_month_ago'), 0), 0)) * 100 as 'YTD Attrition TTM Rate', coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute', coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) as 'YTD Red_Accounts Absolute', ((coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth', ((coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as 'YTD Red_Accounts Growth', coalesce(sum(q2_CYT_P.'CTS'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute', coalesce(sum(q3_CYT_P.'CTS'), 0) as 'YTD CTS Absolute', ((coalesce(sum(q2_CYT_P.'CTS'), 0) - coalesce(sum(q2_PYT_P.'CTS'), 0)) / coalesce(sum(q2_PYT_P.'CTS'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth', ((coalesce(sum(q3_CYT_P.'CTS'), 0) - coalesce(sum(q3_PYT_P.'CTS'), 0)) / coalesce(sum(q3_PYT_P.'CTS'), 0)) * 100 as 'YTD CTS Growth', coalesce(sum(q2_CYAVAILABILITY.'Availability'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute', coalesce(sum(q3_CYAVAILABILITY.'Availability'), 0) as 'YTD Availability Absolute', ((coalesce(sum(q2_CYAVAILABILITY.'Availability'), 0) - coalesce(sum(q2_PYAVAILABILITY.'Availability'), 0)) / coalesce(sum(q2_PYAVAILABILITY.'Availability'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth', ((coalesce(sum(q3_CYAVAILABILITY.'Availability'), 0) - coalesce(sum(q3_PYAVAILABILITY.'Availability'), 0)) / coalesce(sum(q3_PYAVAILABILITY.'Availability'), 0)) * 100 as 'YTD Availability Growth', coalesce(sum(q2_CYTRANSACTIONS.'Transactions'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute', coalesce(sum(q3_CYTRANSACTIONS.'Transactions'), 0) as 'YTD Transactions Absolute', ((coalesce(sum(q2_CYTRANSACTIONS.'Transactions'), 0) - coalesce(sum(q2_PYTRANSACTIONS.'Transactions'), 0)) / coalesce(sum(q2_PYTRANSACTIONS.'Transactions'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth', ((coalesce(sum(q3_CYTRANSACTIONS.'Transactions'), 0) - coalesce(sum(q3_PYTRANSACTIONS.'Transactions'), 0)) / coalesce(sum(q3_PYTRANSACTIONS.'Transactions'), 0)) * 100 as 'YTD Transactions Growth', coalesce(sum(q2_CYCUSTOMER.'Customer'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute', coalesce(sum(q3_CYCUSTOMER.'Customer'), 0) as 'YTD Customer Absolute', ((coalesce(sum(q2_CYCUSTOMER.'Customer'), 0) - coalesce(sum(q2_PYCUSTOMER.'Customer'), 0)) / coalesce(sum(q2_PYCUSTOMER.'Customer'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth', ((coalesce(sum(q3_CYCUSTOMER.'Customer'), 0) - coalesce(sum(q3_PYCUSTOMER.'Customer'), 0)) / coalesce(sum(q3_PYCUSTOMER.'Customer'), 0)) * 100 as 'YTD Customer Growth', coalesce(sum(q2_CYSHARE.'TAM'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute', coalesce(sum(q3_CYSHARE.'TAM'), 0) as 'YTD TAM Absolute', ((coalesce(sum(q2_CYSHARE.'TAM'), 0) - coalesce(sum(q2_PYSHARE.'TAM'), 0)) / coalesce(sum(q2_PYSHARE.'TAM'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth', ((coalesce(sum(q3_CYSHARE.'TAM'), 0) - coalesce(sum(q3_PYSHARE.'TAM'), 0)) / coalesce(sum(q3_PYSHARE.'TAM'), 0)) * 100 as 'YTD TAM Growth', coalesce(sum(q2_CYHC.'SE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE Absolute', coalesce(sum(q3_CYHC.'SE'), 0) as 'YTD SE Absolute', ((coalesce(sum(q2_CYHC.'SE'), 0) - coalesce(sum(q2_PYHC.'SE'), 0)) / coalesce(sum(q2_PYHC.'SE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SE Growth', ((coalesce(sum(q3_CYHC.'SE'), 0) - coalesce(sum(q3_PYHC.'SE'), 0)) / coalesce(sum(q3_PYHC.'SE'), 0)) * 100 as 'YTD SE Growth',(power(coalesce(sum(q2_CYHC.'SE'), 0) / coalesce(sum(q2_PY_2_HC.'SE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR',(power(coalesce(sum(q3_CYHC.'SE'), 0) / coalesce(sum(q3_PY_2_HC.'SE'), 0),(1/2))-1)*100 as 'YTD SE CAGR', coalesce(sum(q2_CYHC.'AE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE Absolute', coalesce(sum(q3_CYHC.'AE'), 0) as 'YTD AE Absolute', ((coalesce(sum(q2_CYHC.'AE'), 0) - coalesce(sum(q2_PYHC.'AE'), 0)) / coalesce(sum(q2_PYHC.'AE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AE Growth', ((coalesce(sum(q3_CYHC.'AE'), 0) - coalesce(sum(q3_PYHC.'AE'), 0)) / coalesce(sum(q3_PYHC.'AE'), 0)) * 100 as 'YTD AE Growth', (power(coalesce(sum(q2_CYHC.'AE'), 0) / coalesce(sum(q2_PY_2_HC.'AE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR',(power(coalesce(sum(q3_CYHC.'AE'), 0) / coalesce(sum(q3_PY_2_HC.'AE'), 0),(1/2))-1)*100 as 'YTD AE CAGR',coalesce(sum(q2_CYHC.'Co_Prime'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime Absolute', coalesce(sum(q3_CYHC.'Co_Prime'), 0) as 'YTD Co_Prime Absolute', ((coalesce(sum(q2_CYHC.'Co_Prime'), 0) - coalesce(sum(q2_PYHC.'Co_Prime'), 0)) / coalesce(sum(q2_PYHC.'Co_Prime'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Co_Prime Growth', ((coalesce(sum(q3_CYHC.'Co_Prime'), 0) - coalesce(sum(q3_PYHC.'Co_Prime'), 0)) / coalesce(sum(q3_PYHC.'Co_Prime'), 0)) * 100 as 'YTD Co_Prime Growth',(power(coalesce(sum(q2_CYHC.'Co_Prime'), 0) / coalesce(sum(q2_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR',(power(coalesce(sum(q3_CYHC.'Co_Prime'), 0) / coalesce(sum(q3_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as 'YTD Co_Prime CAGR', coalesce(sum(q2_CYSW.'SWE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE Absolute', coalesce(sum(q3_CYSW.'SWE'), 0) as 'YTD SWE Absolute', ((coalesce(sum(q2_CYSW.'SWE'), 0) - coalesce(sum(q2_PYSW.'SWE'), 0)) / coalesce(sum(q2_PYSW.'SWE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth', ((coalesce(sum(q3_CYSW.'SWE'), 0) - coalesce(sum(q3_PYSW.'SWE'), 0)) / coalesce(sum(q3_PYSW.'SWE'), 0)) * 100 as 'YTD SWE Growth',(power(coalesce(sum(q2_CYSW.'SWE'), 0) / coalesce(sum(q2_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE CAGR',(power(coalesce(sum(q3_CYSW.'SWE'), 0) / coalesce(sum(q3_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as 'YTD SWE CAGR', coalesce(sum(q2_CYSW.'INFRA'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA Absolute', coalesce(sum(q3_CYSW.'INFRA'), 0) as 'YTD INFRA Absolute', ((coalesce(sum(q2_CYSW.'INFRA'), 0) - coalesce(sum(q2_PYSW.'INFRA'), 0)) / coalesce(sum(q2_PYSW.'INFRA'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth', ((coalesce(sum(q3_CYSW.'INFRA'), 0) - coalesce(sum(q3_PYSW.'INFRA'), 0)) / coalesce(sum(q3_PYSW.'INFRA'), 0)) * 100 as 'YTD INFRA Growth',(power(coalesce(sum(q2_CYSW.'INFRA'), 0) / coalesce(sum(q2_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA CAGR',(power(coalesce(sum(q3_CYSW.'INFRA'), 0) / coalesce(sum(q3_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as 'YTD INFRA CAGR',last(MasterHierarchy.'Level_2_Sort_Code')  as 'Sort_Code';\nnresult_Cloud_Level3 = group  q2_CYACV by ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYACV by ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYACV by ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYACV by ('Cloud', 'Subcloud', 'Cloud_2') full, q2_CYAOV by ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYAOV by ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYAOV by ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYAOV by ('Cloud', 'Subcloud', 'Cloud_2') full,  q2_CYPipegen by ('Cloud', 'Subcloud','Cloud_2') full, q2_PYPipegen by ('Cloud', 'Subcloud','Cloud_2') full, q3_CYPipegen by ('Cloud', 'Subcloud','Cloud_2') full, q3_PYPipegen by ('Cloud', 'Subcloud','Cloud_2') full, q2_CYHC by ('Cloud', 'Subcloud','Cloud_2') full, q2_PYHC by ('Cloud', 'Subcloud','Cloud_2') full,q2_PY_2_HC by ('Cloud', 'Subcloud','Cloud_2') full, q3_CYHC by ('Cloud', 'Subcloud','Cloud_2') full, q3_PYHC by ('Cloud', 'Subcloud','Cloud_2') full,  q3_PY_2_HC by ('Cloud', 'Subcloud','Cloud_2') full, q2_CYSW by ('Cloud', 'Subcloud','Cloud_2') full, q2_PYSW by ('Cloud', 'Subcloud','Cloud_2') full,q2_PY_2_SW by ('Cloud', 'Subcloud','Cloud_2') full, q3_CYSW by ('Cloud', 'Subcloud','Cloud_2') full, q3_PYSW by ('Cloud', 'Subcloud','Cloud_2') full,  q3_PY_2_SW by ('Cloud', 'Subcloud','Cloud_2') full,q2_CYATT by ('Cloud', 'Subcloud','Cloud_2') full, q2_PYATT by ('Cloud', 'Subcloud','Cloud_2') full, q3_CYATT by ('Cloud', 'Subcloud','Cloud_2') full, q3_PYATT by ('Cloud', 'Subcloud','Cloud_2') full,q4_CYATT by ('Cloud', 'Subcloud','Cloud_2') full, q2_CYREDACCOUNTS by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYREDACCOUNTS by  ('Cloud', 'Subcloud', 'Cloud_2') full,q2_PY_2_REDACCOUNTS by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYREDACCOUNTS by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYREDACCOUNTS by  ('Cloud', 'Subcloud', 'Cloud_2') full,q3_PY_2_REDACCOUNTS by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_CYT_P by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYT_P by  ('Cloud', 'Subcloud', 'Cloud_2') full,q2_PY_2_T_P by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYT_P by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYT_P by  ('Cloud', 'Subcloud', 'Cloud_2') full,q3_PY_2_T_P by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_CYAVAILABILITY by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYAVAILABILITY by  ('Cloud', 'Subcloud', 'Cloud_2') full,q2_PY_2_AVAILABILITY by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYAVAILABILITY by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYAVAILABILITY by  ('Cloud', 'Subcloud', 'Cloud_2') full,q3_PY_2_AVAILABILITY by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_CYTRANSACTIONS by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYTRANSACTIONS by  ('Cloud', 'Subcloud', 'Cloud_2') full,q2_PY_2_TRANSACTIONS by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYTRANSACTIONS by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYTRANSACTIONS by  ('Cloud', 'Subcloud', 'Cloud_2') full,q3_PY_2_TRANSACTIONS by  ('Cloud', 'Subcloud', 'Cloud_2')  full, q2_CYCUSTOMER by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYCUSTOMER by  ('Cloud', 'Subcloud', 'Cloud_2') full,q2_PY_2_CUSTOMER by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYCUSTOMER by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYCUSTOMER by  ('Cloud', 'Subcloud', 'Cloud_2') full,q3_PY_2_CUSTOMER by  ('Cloud', 'Subcloud', 'Cloud_2')full, q2_CYSHARE by  ('Cloud', 'Subcloud', 'Cloud_2') full, q2_PYSHARE by  ('Cloud', 'Subcloud', 'Cloud_2') full,q2_PY_2_SHARE by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_CYSHARE by  ('Cloud', 'Subcloud', 'Cloud_2') full, q3_PYSHARE by  ('Cloud', 'Subcloud', 'Cloud_2') full,q3_PY_2_SHARE by  ('Cloud', 'Subcloud', 'Cloud_2'),MasterHierarchy by ('Level_1', 'Level_2','Level_3')  ;\nn\nresult_Cloud_Level3 = foreach result_Cloud_Level3 generate \"          \" + coalesce(MasterHierarchy.'Level_3', q2_CYACV.'Cloud_2', q2_PYACV.'Cloud_2', q3_CYACV.'Cloud_2', q3_PYACV.'Cloud_2', q2_CYAOV.'Cloud_2', q2_PYAOV.'Cloud_2', q3_CYAOV.'Cloud_2', q3_PYAOV.'Cloud_2',q2_CYREDACCOUNTS.'Cloud_2', q2_PYREDACCOUNTS.'Cloud_2', q3_CYREDACCOUNTS.'Cloud_2', q3_PYREDACCOUNTS.'Cloud_2', q2_CYT_P.'Cloud_2', q2_PYT_P.'Cloud_2', q3_CYT_P.'Cloud_2', q3_PYT_P.'Cloud_2', q2_CYAVAILABILITY.'Cloud_2', q2_PYAVAILABILITY.'Cloud_2', q3_CYAVAILABILITY.'Cloud_2', q3_PYAVAILABILITY.'Cloud_2', q2_CYTRANSACTIONS.'Cloud_2', q2_PYTRANSACTIONS.'Cloud_2', q3_CYTRANSACTIONS.'Cloud_2', q3_PYTRANSACTIONS.'Cloud_2', q2_CYAVAILABILITY.'Cloud_2', q2_PYAVAILABILITY.'Cloud_2', q3_CYAVAILABILITY.'Cloud_2', q3_PYAVAILABILITY.'Cloud_2', q2_CYCUSTOMER.'Cloud_2', q2_PYCUSTOMER.'Cloud_2', q3_CYCUSTOMER.'Cloud_2', q3_PYCUSTOMER.'Cloud_2', q2_CYSHARE.'Cloud_2', q2_PYSHARE.'Cloud_2', q3_CYSHARE.'Cloud_2', q3_PYSHARE.'Cloud_2',q2_CYATT.'Cloud_2', q2_PYATT.'Cloud_2', q3_CYATT.'Cloud_2', q3_PYATT.'Cloud_2') as 'Cloud',  coalesce(sum(q2_CYACV.'ACV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute', coalesce(sum(q3_CYACV.'ACV'), 0) as 'YTD ACV Absolute', ((coalesce(sum(q2_CYACV.'ACV'), 0) - coalesce(sum(q2_PYACV.'ACV'), 0)) / coalesce(sum(q2_PYACV.'ACV'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth', ((coalesce(sum(q3_CYACV.'ACV'), 0) - coalesce(sum(q3_PYACV.'ACV'), 0)) / coalesce(sum(q3_PYACV.'ACV'), 0)) * 100 as 'YTD ACV Growth', coalesce(sum(q2_CYAOV.'AOV'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AOV Absolute', coalesce(sum(q3_CYAOV.'AOV'), 0) as 'YTD AOV Absolute', ((coalesce(sum(q2_CYAOV.'AOV'), 0) - coalesce(sum(q2_PYAOV.'AOV'), 0)) / coalesce(sum(q2_PYAOV.'AOV'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AOV Growth', ((coalesce(sum(q3_CYAOV.'AOV'), 0) - coalesce(sum(q3_PYAOV.'AOV'), 0)) / coalesce(sum(q3_PYAOV.'AOV'), 0)) * 100 as 'YTD AOV Growth', coalesce(sum(q2_CYPipegen.'Pipegen'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Pipegen Absolute', coalesce(sum(q3_CYPipegen.'Pipegen'), 0) as 'YTD Pipegen Absolute', ((coalesce(sum(q2_CYPipegen.'Pipegen'), 0) - coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q2_PYPipegen.'Pipegen'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Pipegen Growth', ((coalesce(sum(q3_CYPipegen.'Pipegen'), 0) - coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) / coalesce(sum(q3_PYPipegen.'Pipegen'), 0)) * 100 as 'YTD Pipegen Growth', coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Red_Accounts Absolute', coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) as 'YTD Red_Accounts Absolute', ((coalesce(sum(q2_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q2_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Red_Accounts Growth', ((coalesce(sum(q3_CYREDACCOUNTS.'Red_Accounts'), 0) - coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) / coalesce(sum(q3_PYREDACCOUNTS.'Red_Accounts'), 0)) * 100 as 'YTD Red_Accounts Growth', coalesce(sum(q2_CYT_P.'CTS'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} CTS Absolute', coalesce(sum(q3_CYT_P.'CTS'), 0) as 'YTD CTS Absolute', ((coalesce(sum(q2_CYT_P.'CTS'), 0) - coalesce(sum(q2_PYT_P.'CTS'), 0)) / coalesce(sum(q2_PYT_P.'CTS'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} CTS Growth', ((coalesce(sum(q3_CYT_P.'CTS'), 0) - coalesce(sum(q3_PYT_P.'CTS'), 0)) / coalesce(sum(q3_PYT_P.'CTS'), 0)) * 100 as 'YTD CTS Growth', coalesce(sum(q2_CYAVAILABILITY.'Availability'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Availability Absolute', coalesce(sum(q3_CYAVAILABILITY.'Availability'), 0) as 'YTD Availability Absolute', ((coalesce(sum(q2_CYAVAILABILITY.'Availability'), 0) - coalesce(sum(q2_PYAVAILABILITY.'Availability'), 0)) / coalesce(sum(q2_PYAVAILABILITY.'Availability'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Availability Growth', ((coalesce(sum(q3_CYAVAILABILITY.'Availability'), 0) - coalesce(sum(q3_PYAVAILABILITY.'Availability'), 0)) / coalesce(sum(q3_PYAVAILABILITY.'Availability'), 0)) * 100 as 'YTD Availability Growth', coalesce(sum(q2_CYTRANSACTIONS.'Transactions'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Transactions Absolute', coalesce(sum(q3_CYTRANSACTIONS.'Transactions'), 0) as 'YTD Transactions Absolute', ((coalesce(sum(q2_CYTRANSACTIONS.'Transactions'), 0) - coalesce(sum(q2_PYTRANSACTIONS.'Transactions'), 0)) / coalesce(sum(q2_PYTRANSACTIONS.'Transactions'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Transactions Growth', ((coalesce(sum(q3_CYTRANSACTIONS.'Transactions'), 0) - coalesce(sum(q3_PYTRANSACTIONS.'Transactions'), 0)) / coalesce(sum(q3_PYTRANSACTIONS.'Transactions'), 0)) * 100 as 'YTD Transactions Growth', coalesce(sum(q2_CYCUSTOMER.'Customer'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Customer Absolute', coalesce(sum(q3_CYCUSTOMER.'Customer'), 0) as 'YTD Customer Absolute', ((coalesce(sum(q2_CYCUSTOMER.'Customer'), 0) - coalesce(sum(q2_PYCUSTOMER.'Customer'), 0)) / coalesce(sum(q2_PYCUSTOMER.'Customer'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Customer Growth', ((coalesce(sum(q3_CYCUSTOMER.'Customer'), 0) - coalesce(sum(q3_PYCUSTOMER.'Customer'), 0)) / coalesce(sum(q3_PYCUSTOMER.'Customer'), 0)) * 100 as 'YTD Customer Growth', coalesce(sum(q2_CYSHARE.'TAM'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} TAM Absolute', coalesce(sum(q3_CYSHARE.'TAM'), 0) as 'YTD TAM Absolute', ((coalesce(sum(q2_CYSHARE.'TAM'), 0) - coalesce(sum(q2_PYSHARE.'TAM'), 0)) / coalesce(sum(q2_PYSHARE.'TAM'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} TAM Growth', ((coalesce(sum(q3_CYSHARE.'TAM'), 0) - coalesce(sum(q3_PYSHARE.'TAM'), 0)) / coalesce(sum(q3_PYSHARE.'TAM'), 0)) * 100 as 'YTD TAM Growth', coalesce(sum(q2_CYHC.'SE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE Absolute', coalesce(sum(q3_CYHC.'SE'), 0) as 'YTD SE Absolute', ((coalesce(sum(q2_CYHC.'SE'), 0) - coalesce(sum(q2_PYHC.'SE'), 0)) / coalesce(sum(q2_PYHC.'SE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SE Growth', ((coalesce(sum(q3_CYHC.'SE'), 0) - coalesce(sum(q3_PYHC.'SE'), 0)) / coalesce(sum(q3_PYHC.'SE'), 0)) * 100 as 'YTD SE Growth',(power(coalesce(sum(q2_CYHC.'SE'), 0) / coalesce(sum(q2_PY_2_HC.'SE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SE CAGR',(power(coalesce(sum(q3_CYHC.'SE'), 0) / coalesce(sum(q3_PY_2_HC.'SE'), 0),(1/2))-1)*100 as 'YTD SE CAGR', coalesce(sum(q2_CYHC.'AE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE Absolute', coalesce(sum(q3_CYHC.'AE'), 0) as 'YTD AE Absolute', ((coalesce(sum(q2_CYHC.'AE'), 0) - coalesce(sum(q2_PYHC.'AE'), 0)) / coalesce(sum(q2_PYHC.'AE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AE Growth', ((coalesce(sum(q3_CYHC.'AE'), 0) - coalesce(sum(q3_PYHC.'AE'), 0)) / coalesce(sum(q3_PYHC.'AE'), 0)) * 100 as 'YTD AE Growth', (power(coalesce(sum(q2_CYHC.'AE'), 0) / coalesce(sum(q2_PY_2_HC.'AE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AE CAGR',(power(coalesce(sum(q3_CYHC.'AE'), 0) / coalesce(sum(q3_PY_2_HC.'AE'), 0),(1/2))-1)*100 as 'YTD AE CAGR',coalesce(sum(q2_CYHC.'Co_Prime'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime Absolute', coalesce(sum(q3_CYHC.'Co_Prime'), 0) as 'YTD Co_Prime Absolute', ((coalesce(sum(q2_CYHC.'Co_Prime'), 0) - coalesce(sum(q2_PYHC.'Co_Prime'), 0)) / coalesce(sum(q2_PYHC.'Co_Prime'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Co_Prime Growth', ((coalesce(sum(q3_CYHC.'Co_Prime'), 0) - coalesce(sum(q3_PYHC.'Co_Prime'), 0)) / coalesce(sum(q3_PYHC.'Co_Prime'), 0)) * 100 as 'YTD Co_Prime Growth',(power(coalesce(sum(q2_CYHC.'Co_Prime'), 0) / coalesce(sum(q2_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Co_Prime CAGR',(power(coalesce(sum(q3_CYHC.'Co_Prime'), 0) / coalesce(sum(q3_PY_2_HC.'Co_Prime'), 0),(1/2))-1)*100 as 'YTD Co_Prime CAGR', coalesce(sum(q2_CYSW.'SWE'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE Absolute', coalesce(sum(q3_CYSW.'SWE'), 0) as 'YTD SWE Absolute', ((coalesce(sum(q2_CYSW.'SWE'), 0) - coalesce(sum(q2_PYSW.'SWE'), 0)) / coalesce(sum(q2_PYSW.'SWE'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} SWE Growth', ((coalesce(sum(q3_CYSW.'SWE'), 0) - coalesce(sum(q3_PYSW.'SWE'), 0)) / coalesce(sum(q3_PYSW.'SWE'), 0)) * 100 as 'YTD SWE Growth',(power(coalesce(sum(q2_CYSW.'SWE'), 0) / coalesce(sum(q2_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} SWE CAGR',(power(coalesce(sum(q3_CYSW.'SWE'), 0) / coalesce(sum(q3_PY_2_SW.'SWE'), 0),(1/2))-1)*100 as 'YTD SWE CAGR', coalesce(sum(q2_CYSW.'INFRA'), 0) as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA Absolute', coalesce(sum(q3_CYSW.'INFRA'), 0) as 'YTD INFRA Absolute', ((coalesce(sum(q2_CYSW.'INFRA'), 0) - coalesce(sum(q2_PYSW.'INFRA'), 0)) / coalesce(sum(q2_PYSW.'INFRA'), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} INFRA Growth', ((coalesce(sum(q3_CYSW.'INFRA'), 0) - coalesce(sum(q3_PYSW.'INFRA'), 0)) / coalesce(sum(q3_PYSW.'INFRA'), 0)) * 100 as 'YTD INFRA Growth',(power(coalesce(sum(q2_CYSW.'INFRA'), 0) / coalesce(sum(q2_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} INFRA CAGR',(power(coalesce(sum(q3_CYSW.'INFRA'), 0) / coalesce(sum(q3_PY_2_SW.'INFRA'), 0),(1/2))-1)*100 as 'YTD INFRA CAGR',coalesce(sum(q2_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q2',coalesce(sum(q3_CYATT.'Attrition_Product'),0) as 'Attrition_CY_Q3',coalesce(round(sum(q2_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q2' ,coalesce(round(sum(q2_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q2',coalesce(round(sum(q4_CYATT.'TTM_Product'), 0), 0) as 'TTM_Product_CY_Q3' ,coalesce(round(sum(q4_CYATT.'AOV_twelve_month_ago'), 0), 0) as 'AOV_twelve_month_ago_CY_Q3',(coalesce(round(sum(q2_CYATT.'TTM_Product'), 0), 0) / coalesce(round(sum(q2_CYATT.'AOV_twelve_month_ago'), 0), 0)) * 100 as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Attrition TTM Rate', (coalesce(round(sum(q4_CYATT.'TTM_Product'), 0), 0) / coalesce(round(sum(q4_CYATT.'AOV_twelve_month_ago'), 0), 0)) * 100 as 'YTD Attrition TTM Rate',last(MasterHierarchy.'Level_3_Sort_Code')  as 'Sort_Code',\"          \" + coalesce(last(MasterHierarchy.'Level_2'), last(q2_CYACV.'Subcloud'), last(q2_PYACV.'Subcloud'), last(q3_CYACV.'Subcloud'), last(q3_PYACV.'Subcloud'), last(q2_CYAOV.'Subcloud'), last(q2_PYAOV.'Subcloud'), last(q3_CYAOV.'Subcloud'), last(q3_PYAOV.'Subcloud')) as 'ParentCloud';\nresult_Cloud_Level3 = filter result_Cloud_Level3 by 'Cloud' != 'ParentCloud';\nline =  group MasterHierarchy by 'all';line= foreach line generate \"--------------------------------------------------------------------------\" as 'Cloud',\"{{cell(Selector_Quarter.selection,0,\"Line_Rank\").asString()}}\"  as 'Sort_Code';\nnFinal = union result, result_SubCloud, result_Cloud_Level3,line;\nnFinal = filter Final by 'Sort_Code' != \"\";\nFinal = filter Final by 'Cloud' not in {{cell(Selector_Quarter.selection,0,\"Filter_Table_2\").asString()}};\nFinal = order Final by ('Sort_Code' asc,  'Cloud' asc);\nFinal = foreach Final generate 'Cloud'+\"                      \" as 'Cloud', '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} ACV Absolute', 'YTD ACV Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} ACV Growth', 'YTD ACV Growth', '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} AOV Absolute', 'YTD AOV Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} AOV Growth','YTD AOV Growth', sum('Attrition_CY_Q2') as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Attrition Absolute', sum('Attrition_CY_Q3') as 'YTD Attrition Absolute',sum('{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Attrition TTM Rate') as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Attrition TTM Rate', sum('YTD Attrition TTM Rate') as 'YTD Attrition TTM Rate', '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} Pipegen Absolute' as '{{cell(Selector_Quarter.selection,0,\"Header_name_absolute\").asString()}} PipeGen Absolute','YTD Pipegen Absolute' as 'YTD PipeGen Absolute','{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} Pipegen Growth' as '{{cell(Selector_Quarter.selection,0,\"Header_name_rate\").asString()}} PipeGen Growth',   'YTD Pipegen Growth' as  'YTD PipeGen Growth';\n",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      },
      "Table_Page_3_Header_Top": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Page_3_Header_Top",
        "numbers": [],
        "query": "MasterHierarchy = load \"Master_Hierarchy\";\nresult_Total = group MasterHierarchy by all;\nresult_Total = foreach result_Total generate \"   \" as '$ values in millions', \"SWE                     \" as 'SWE',\"INFRA                     \" as 'INFRA',\"T&amp;P Cost to Serve                     \" as 'T&amp;P Cost to Serve', \"Availability %                     \" as 'Availability %', \"Transactions / Requests                     \" as 'Transactions / Requests';",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart",
          "visualizationType": "hbar"
        }
      },
      "Filter_Segment": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.EdgeMarts.APM_ACV.Alias}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Segment\"]}",
          "version": -1
        },
        "receiveFacet": true,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {}
      },
      "Filter_Industry": {
        "broadcastFacet": true,
        "datasets": [
          {
            "name": "${App.EdgeMarts.APM_ACV.Alias}"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": "{\"measures\":[[\"count\",\"*\"]],\"groups\":[\"Industry\"]}",
          "version": -1
        },
        "receiveFacet": true,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {}
      },
      "lens_1": {
        "broadcastFacet": true,
        "groups": [
          "Country"
        ],
        "label": "Country logic",
        "numbers": [],
        "query": "q = load \"Master_Hierarchy\";\nq = filter q by 'Level_1' in  {{cell(Static_Region_Filter.selection,0,\"filter\").asString()}};\nq = filter q by {{column(lens_2.selection,[\"Region\"]).asEquality('Level_1')}};\nq = group q by ('Level_1', 'Level_2');\n\nq = foreach q generate \ncase when ('Level_1' == \"AMER\" &amp;&amp; ('Level_2' ==  \"Canada\" )) then \"Canada\" \nwhen ('Level_1' == \"AMER\" &amp;&amp; ('Level_2' ==  \"United States\" )) then \"United States\" \nwhen ('Level_1' == \"AMER\")then \"RO AMER\" \nwhen ('Level_1' == \"EMEA\" &amp;&amp; ('Level_2' ==  \"United Kingdom\" )) then \"United Kingdom\"  \nwhen ('Level_1' == \"EMEA\" &amp;&amp; ('Level_2' ==  \"France\" )) then \"France\" \nwhen ('Level_1' == \"EMEA\" &amp;&amp; ('Level_2' ==  \"Germany\" )) then \"Germany\" \nwhen ('Level_1' == \"EMEA\" &amp;&amp; ('Level_2' ==  \"Netherlands\" )) then \"Netherlands\" \nwhen ('Level_1' == \"EMEA\" ) then \"RO EMEA\" \nwhen ('Level_1' == \"APAC\" &amp;&amp; ('Level_2' ==  \"Australia\" )) then \"ANZ\"  \nwhen ('Level_1' == \"APAC\" &amp;&amp; ('Level_2' ==  \"ANZ\" )) then \"ANZ\"  \nwhen ('Level_1' == \"APAC\" &amp;&amp; ('Level_2' ==  \"India\" )) then \"India\" \nwhen ('Level_1' == \"APAC\" ) then \"RO APAC\" \nwhen ('Level_1' == \"APAC\" ) then \"RO APAC\"  \nwhen ('Level_1' == \"JP\" &amp;&amp; ('Level_2' == \"Japan\" )) then \"Japan\"\nwhen ('Level_1' == \"JP\" &amp;&amp; ('Level_2' == \"South Korea\")) then \"South Korea\"\nwhen ('Level_1' == \"JP\") then \"RO JP\"  \nwhen ('Level_1' == \"LACA\" &amp;&amp; ('Level_2' ==  \"Brazil\" )) then \"Brazil\" \nwhen ('Level_1' == \"LACA\" ) then \"RO LACA\" \nwhen ('Level_1' == \"Other\" ) then \"Other\" else \"ERROR\" end as 'Country';\n\nq = group q by 'Country'; \nq = foreach q generate 'Country'; \nq = order q by ('Country' asc);",
        "receiveFacet": true,
        "selectMode": "multi",
        "strings": [
          "Country"
        ],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      },
      "Table_Dimension_Header": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Dimension_Header",
        "numbers": [],
        "query": "MasterHierarchy = load \"Master_Hierarchy\"; q= group MasterHierarchy by 'all';\nq = foreach q generate \"    TOTAL    \" as 'Cloud';",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        }
      },
      "lens_2": {
        "broadcastFacet": true,
        "groups": [
          "Region"
        ],
        "numbers": [],
        "query": "q = load \"Master_Hierarchy\";\nq = filter q by 'Level_1' in  {{cell(Static_Region_Filter.selection,0,\"filter\").asString()}};q = group q by 'Level_1' ;q = foreach q generate 'Level_1' as 'Region'; ; q = order q by ('Region' asc) ;",
        "receiveFacet": false,
        "selectMode": "multi",
        "strings": [
          "Region"
        ],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      }
    },
    "widgetStyle": {
      "backgroundColor": "#FFFFFF",
      "borderColor": "#E6ECF2",
      "borderEdges": [],
      "borderRadius": 0,
      "borderWidth": 1
    },
    "widgets": {
      "link_18": {
        "parameters": {
          "destinationLink": {
            "name": "db7c532f-d5f4-4511-a109-e262585c6082"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Market Details and Red Accounts",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_19": {
        "parameters": {
          "destinationLink": {
            "name": "a32a622b-f247-47ef-92af-1ce8fe739626"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "▼ Show Filters ▼",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_16": {
        "parameters": {
          "destinationLink": {
            "name": "a32a622b-f247-47ef-92af-1ce8fe739626"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Distribution HC",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_17": {
        "parameters": {
          "destinationLink": {
            "name": "20eda594-98ea-486b-aa1c-9d12c3aa2b7a"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "T&amp;P HC and Measures",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_14": {
        "parameters": {
          "destinationLink": {
            "name": "328a689d-17a8-489e-b41c-d6dbaedbf3ac"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Financial Measures and Pipeline",
          "textAlignment": "center",
          "textColor": "#7D98B3"
        },
        "type": "link"
      },
      "link_15": {
        "parameters": {
          "destinationLink": {
            "name": "4fad4e26-13b7-4d45-bae5-fa096fab3892"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "▲ Hide Filters ▲",
          "textAlignment": "center",
          "textColor": "rgb(225, 243, 251)"
        },
        "type": "link"
      },
      "link_12": {
        "parameters": {
          "destinationLink": {
            "name": "328a689d-17a8-489e-b41c-d6dbaedbf3ac"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "▼ Show Filters ▼",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_13": {
        "parameters": {
          "destinationLink": {
            "name": "APM_Cloud_Summary_Dashboard_Level_1"
          },
          "destinationType": "dashboard",
          "fontSize": 14,
          "includeState": true,
          "text": "Cloud",
          "textAlignment": "center",
          "textColor": "rgb(0, 135, 255)"
        },
        "type": "link"
      },
      "link_10": {
        "parameters": {
          "destinationLink": {
            "name": "APM_Cloud_Summary_Dashboard_Level_1"
          },
          "destinationType": "dashboard",
          "fontSize": 14,
          "includeState": true,
          "text": "Cloud",
          "textAlignment": "center",
          "textColor": "rgb(0, 135, 255)"
        },
        "type": "link"
      },
      "table_12": {
        "parameters": {
          "borderColor": "rgba(255, 255, 255, 0.2)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "rgb(43, 71, 114)",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#ffffff",
            "fontSize": 10
          },
          "innerMajorBorderColor": "rgba(255, 255, 255, 0.2)",
          "innerMinorBorderColor": "rgba(255, 255, 255, 0.2)",
          "maxColumnWidth": 260,
          "minColumnWidth": 60,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showRowIndexColumn": false,
          "step": "Table_Page_2_Header",
          "totals": true,
          "verticalPadding": 4
        },
        "type": "table"
      },
      "container_2": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "stretch"
        },
        "type": "container"
      },
      "table_14": {
        "parameters": {
          "borderColor": "rgb(230, 236, 242)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(244, 246, 249)",
            "fontColor": "rgb(244, 246, 249)",
            "fontSize": 0
          },
          "innerMajorBorderColor": "rgb(230, 236, 242)",
          "innerMinorBorderColor": "rgb(230, 236, 242)",
          "maxColumnWidth": 250,
          "minColumnWidth": 77,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showRowIndexColumn": false,
          "step": "Table_Level_2_Measures_1",
          "verticalPadding": 8
        },
        "type": "table"
      },
      "container_3": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "table_15": {
        "parameters": {
          "borderColor": "#e0e5ee",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#FFFFFF",
            "fontSize": 14
          },
          "innerMajorBorderColor": "#a8b7c7",
          "innerMinorBorderColor": "#e0e5ee",
          "maxColumnWidth": 260,
          "minColumnWidth": 240,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "step": "Table_Page_2_Header_Top",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "table_16": {
        "parameters": {
          "borderColor": "rgba(255, 255, 255, 0.2)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "rgb(43, 71, 114)",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#ffffff",
            "fontSize": 10
          },
          "innerMajorBorderColor": "rgba(255, 255, 255, 0.2)",
          "innerMinorBorderColor": "rgba(255, 255, 255, 0.2)",
          "maxColumnWidth": 175,
          "minColumnWidth": 67,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showRowIndexColumn": false,
          "step": "Table_Page_3_Header",
          "totals": true,
          "verticalPadding": 4
        },
        "type": "table"
      },
      "text_3": {
        "parameters": {
          "fontSize": 20,
          "text": "↳",
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "table_19": {
        "parameters": {
          "borderColor": "rgb(230, 236, 242)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(244, 246, 249)",
            "fontColor": "#091A3E",
            "fontSize": 0
          },
          "innerMajorBorderColor": "rgb(230, 236, 242)",
          "innerMinorBorderColor": "rgb(230, 236, 242)",
          "maxColumnWidth": 175,
          "minColumnWidth": 67,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showRowIndexColumn": false,
          "step": "Table_Level_2_Measures_3",
          "verticalPadding": 8
        },
        "type": "table"
      },
      "container_7": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "text_2": {
        "parameters": {
          "fontSize": 12,
          "text": "** DATA WILL BE UPDATED AS A PART OF THE REGULAR REFRESH BY MID AUGUST **\n\"Core Premier (A la Carte) &amp; Priority\" &amp; \"Signature\" are included in  \"☁ Total\" \nCustomer = regional parent company excluding non-profit and zero-AOV customers\nAddressable Market = Market size defined by Gartner/SFDC and does not sum across sub-products. Marketshare = AOV / Total Addressable Market.\nRed Accounts: Account escalations that represent attriton risk (AOV)",
          "textAlignment": "left",
          "textColor": "#5C7A99"
        },
        "type": "text"
      },
      "text_5": {
        "parameters": {
          "fontSize": 12,
          "text": "** DATA (T&amp;P Cost to Serve, Availability% and Transactions/requests) WILL BE UPDATED AS A PART OF THE REGULAR REFRESH BY MID AUGUST **\n\"Core Premier (A la Carte) &amp; Priority\" &amp; \"Signature\" are included in  \"☁ Total\"\nSWE = Software Engineering IC's. Excludes SWE's Product Trust and Infra that are not working on product.\nInfra: Represents total HC in the infrastructure organization\nT&amp;P Cost to Serve: Includes Infra, 3rd party royalty, and R&amp;D + Products. Metric has 1 quarter lag (Q4 numbers are indicative of Q3 ending)\nAvailability %: Reflects core data centers onlyCPM total reflects core data centers only. Availability for sub-products may reflect total core data centers as well.",
          "textAlignment": "left",
          "textColor": "#5C7A99"
        },
        "type": "text"
      },
      "text_4": {
        "parameters": {
          "fontSize": 20,
          "text": "↳",
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "container_9": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "text_6": {
        "parameters": {
          "fontSize": 12,
          "text": "\"Core Premier (A la Carte) &amp; Priority\" &amp; \"Signature\" are included in  \"☁ Total\" \nACV: Availability of information in org62 can effect historical trends.\nAOV: Availability of information in org62 can effect historical trends\nAttrition: Trailing 12 months (TTM) attrition. Core only prior to FY15Q1. FY18 total attrition reflects SFDC excluding CC, Krux, and Heroku online business\n** ATTRITION DATA AS OF MARCH FY19\nPipeline: Pipe numbers exclude CSG pipePipe Gen = Sum of $ amount of opportunities that moved to Stage 2. Note: Core pipe gen includes Premiere a-la-carte. The rest of CSG pipe gen is reported within CSG cut. \n",
          "textAlignment": "left",
          "textColor": "#5C7A99"
        },
        "type": "text"
      },
      "text_8": {
        "parameters": {
          "fontSize": 12,
          "text": "\"Core Premier (A la Carte) &amp; Priority\" &amp; \"Signature\" are included in  \"☁ Total\" \nWithin the AE, Co Prime, SE sections, % columns 3 &amp; 4 represent 24 month CAGR (quarterly and YTD)\nAEs: Includes ECS, Marketing Cloud (Messaging/Journies), and Commerce Cloud AE's\nSEs: Excludes Q Branch, Spark, IPD, and SE Management\nCo Prime: CSG Coprime = APs (account partners) that worked through the Qtr\n",
          "textAlignment": "left",
          "textColor": "#5C7A99"
        },
        "type": "text"
      },
      "link_29": {
        "parameters": {
          "destinationLink": {
            "name": "db7c532f-d5f4-4511-a109-e262585c6082"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "▼ Show Filters ▼",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_27": {
        "parameters": {
          "destinationLink": {
            "name": "20eda594-98ea-486b-aa1c-9d12c3aa2b7a"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "▼ Show Filters ▼",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "image_4": {
        "parameters": {
          "alignmentX": "center",
          "alignmentY": "center",
          "fit": "fitheight",
          "image": {
            "name": "FSpng5png",
            "namespace": ""
          }
        },
        "type": "image"
      },
      "link_28": {
        "parameters": {
          "destinationLink": {
            "name": "34f375e9-4d4a-41f6-8d43-a7a27c89a90f"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "▲ Hide Filters ▲",
          "textAlignment": "center",
          "textColor": "rgb(225, 243, 251)"
        },
        "type": "link"
      },
      "text_1": {
        "parameters": {
          "fontSize": 20,
          "text": "↳",
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "link_25": {
        "parameters": {
          "destinationLink": {
            "name": "20eda594-98ea-486b-aa1c-9d12c3aa2b7a"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "T&amp;P HC and Measures",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_26": {
        "parameters": {
          "destinationLink": {
            "name": "db7c532f-d5f4-4511-a109-e262585c6082"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Market Details and Red Accounts",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_23": {
        "parameters": {
          "destinationLink": {
            "name": "328a689d-17a8-489e-b41c-d6dbaedbf3ac"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Financial Measures and Pipeline",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_24": {
        "parameters": {
          "destinationLink": {
            "name": "a32a622b-f247-47ef-92af-1ce8fe739626"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Distribution HC",
          "textAlignment": "center",
          "textColor": "#7D98B3"
        },
        "type": "link"
      },
      "link_21": {
        "parameters": {
          "destinationLink": {
            "name": "4fad4e26-13b7-4d45-bae5-fa096fab3892"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Distribution HC",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_22": {
        "parameters": {
          "destinationLink": {
            "name": "fb908427-d26f-49fe-94a4-3ae9d59e11df"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Financial Measures and Pipeline",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_20": {
        "parameters": {
          "destinationLink": {
            "name": "d00384c1-6182-44f8-9c73-d72c18c67e14"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "▲ Hide Filters ▲",
          "textAlignment": "center",
          "textColor": "rgb(225, 243, 251)"
        },
        "type": "link"
      },
      "image_1": {
        "parameters": {
          "alignmentX": "center",
          "alignmentY": "center",
          "fit": "fitwidth",
          "image": {
            "name": "campfirepng1png",
            "namespace": ""
          }
        },
        "type": "image"
      },
      "listselector_12": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": false,
          "measureField": "none",
          "step": "Filter_Lead_1",
          "title": "Lead+1"
        },
        "type": "listselector"
      },
      "image_3": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "stretch",
          "image": {
            "name": "FS2_Footerpngpng",
            "namespace": ""
          }
        },
        "type": "image"
      },
      "listselector_10": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": false,
          "measureField": "none",
          "step": "Filter_Industry",
          "title": "Industry"
        },
        "type": "listselector"
      },
      "image_2": {
        "parameters": {
          "alignmentX": "center",
          "alignmentY": "center",
          "fit": "fitheight",
          "image": {
            "name": "einsteinsectionpredictIOpng2png",
            "namespace": ""
          }
        },
        "type": "image"
      },
      "link_30": {
        "parameters": {
          "destinationLink": {
            "name": "d00384c1-6182-44f8-9c73-d72c18c67e14"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "T&amp;P HC and Measures",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_31": {
        "parameters": {
          "destinationLink": {
            "name": "34f375e9-4d4a-41f6-8d43-a7a27c89a90f"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Market Details and Red Accounts",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "listselector_7": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "step": "Selector_Quarter",
          "title": "Quarter"
        },
        "type": "listselector"
      },
      "listselector_8": {
        "parameters": {
          "compact": false,
          "displayTemplate": "[Region]",
          "exploreLink": false,
          "instant": false,
          "measureField": "none",
          "step": "lens_2",
          "title": "Region "
        },
        "type": "listselector"
      },
      "listselector_3": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": false,
          "measureField": "none",
          "step": "Filter_Segment",
          "title": "Segment"
        },
        "type": "listselector"
      },
      "listselector_2": {
        "parameters": {
          "compact": false,
          "displayTemplate": "[Cloud] ",
          "exploreLink": false,
          "instant": false,
          "measureField": "none",
          "step": "Filter_Cloud",
          "title": "Cloud"
        },
        "type": "listselector"
      },
      "listselector_5": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "measureField": "none",
          "step": "Fiscal_Year_1",
          "title": "Fiscal Year"
        },
        "type": "listselector"
      },
      "listselector_4": {
        "parameters": {
          "compact": false,
          "displayTemplate": "[Country] ",
          "exploreLink": false,
          "instant": false,
          "measureField": "none",
          "step": "lens_1",
          "title": "Country"
        },
        "type": "listselector"
      },
      "link_3": {
        "parameters": {
          "destinationLink": {
            "name": "a32a622b-f247-47ef-92af-1ce8fe739626"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Distribution HC",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_4": {
        "parameters": {
          "destinationLink": {
            "name": "20eda594-98ea-486b-aa1c-9d12c3aa2b7a"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "T&amp;P HC and Measures",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_1": {
        "parameters": {
          "destinationLink": {
            "name": "APM_Landing_Page"
          },
          "destinationType": "dashboard",
          "fontSize": 12,
          "includeState": false,
          "text": "APM Views Landing Page",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_2": {
        "parameters": {
          "destinationLink": {
            "name": "328a689d-17a8-489e-b41c-d6dbaedbf3ac"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Financial Measures and Pipeline",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "table_20": {
        "parameters": {
          "borderColor": "#e0e5ee",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#FFFFFF",
            "fontSize": 14
          },
          "innerMajorBorderColor": "#a8b7c7",
          "innerMinorBorderColor": "#e0e5ee",
          "maxColumnWidth": 320,
          "minColumnWidth": 260,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "step": "Table_Page_4_Header_Top",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "table_21": {
        "parameters": {
          "borderColor": "rgba(255, 255, 255, 0.2)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "rgb(43, 71, 114)",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#ffffff",
            "fontSize": 10
          },
          "innerMajorBorderColor": "rgba(255, 255, 255, 0.2)",
          "innerMinorBorderColor": "rgba(255, 255, 255, 0.2)",
          "maxColumnWidth": 260,
          "minColumnWidth": 80,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showRowIndexColumn": false,
          "step": "Table_Page_4_Header",
          "totals": true,
          "verticalPadding": 4
        },
        "type": "table"
      },
      "table_3": {
        "parameters": {
          "borderColor": "#e0e5ee",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "fixedColumnWidth": 125,
          "header": {
            "backgroundColor": "rgb(244, 246, 249)",
            "fontColor": "rgb(244, 246, 249)",
            "fontSize": 0
          },
          "innerMajorBorderColor": "#a8b7c7",
          "innerMinorBorderColor": "#e0e5ee",
          "mode": "fixed",
          "numberOfLines": 1,
          "pivoted": false,
          "showRowIndexColumn": false,
          "step": "Table_Level_1_Measures_1",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "table_23": {
        "parameters": {
          "borderColor": "rgb(230, 236, 242)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(244, 246, 249)",
            "fontColor": "#091A3E",
            "fontSize": 0
          },
          "innerMajorBorderColor": "rgb(230, 236, 242)",
          "innerMinorBorderColor": "rgb(230, 236, 242)",
          "maxColumnWidth": 260,
          "minColumnWidth": 80,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showRowIndexColumn": false,
          "step": "Table_Level_2_Measures_4",
          "verticalPadding": 8
        },
        "type": "table"
      },
      "link_9": {
        "parameters": {
          "destinationLink": {
            "name": "328a689d-17a8-489e-b41c-d6dbaedbf3ac"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Financial Measures and Pipeline",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "table_4": {
        "parameters": {
          "borderColor": "#e0e5ee",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#FFFFFF",
            "fontSize": 14
          },
          "innerMajorBorderColor": "#a8b7c7",
          "innerMinorBorderColor": "#e0e5ee",
          "maxColumnWidth": 308,
          "minColumnWidth": 250,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "step": "Table_Page_1_Header_Top",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "table_5": {
        "parameters": {
          "borderColor": "#a8b7c7",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#091A3E",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "fixedColumnWidth": 125,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#ffffff",
            "fontSize": 12
          },
          "innerMajorBorderColor": "#54698d",
          "innerMinorBorderColor": "#a8b7c7",
          "mode": "fixed",
          "numberOfLines": 1,
          "pivoted": false,
          "showRowIndexColumn": false,
          "step": "Table_Dimension_Header",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "link_7": {
        "parameters": {
          "destinationLink": {
            "name": "20eda594-98ea-486b-aa1c-9d12c3aa2b7a"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "T&amp;P HC and Measures",
          "textAlignment": "center",
          "textColor": "#7D98B3"
        },
        "type": "link"
      },
      "pillbox_1": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "step": "Static_Cloud_Filter"
        },
        "type": "pillbox"
      },
      "link_8": {
        "parameters": {
          "destinationLink": {
            "name": "a32a622b-f247-47ef-92af-1ce8fe739626"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Distribution HC",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "table_7": {
        "parameters": {
          "borderColor": "rgba(255, 255, 255, 0.2)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "rgb(43, 71, 114)",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#ffffff",
            "fontSize": 10
          },
          "innerMajorBorderColor": "rgba(255, 255, 255, 0.2)",
          "innerMinorBorderColor": "rgba(255, 255, 255, 0.2)",
          "maxColumnWidth": 250,
          "minColumnWidth": 77,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showRowIndexColumn": false,
          "step": "Table_Page_1_Header",
          "totals": true,
          "verticalPadding": 4
        },
        "type": "table"
      },
      "link_5": {
        "parameters": {
          "destinationLink": {
            "name": "db7c532f-d5f4-4511-a109-e262585c6082"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Market Details and Red Accounts",
          "textAlignment": "center",
          "textColor": "#7D98B3"
        },
        "type": "link"
      },
      "table_8": {
        "parameters": {
          "borderColor": "#e0e5ee",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#FFFFFF",
            "fontSize": 14
          },
          "innerMajorBorderColor": "#a8b7c7",
          "innerMinorBorderColor": "#e0e5ee",
          "maxColumnWidth": 268,
          "minColumnWidth": 176,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "step": "Table_Page_3_Header_Top",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "link_6": {
        "parameters": {
          "destinationLink": {
            "name": "db7c532f-d5f4-4511-a109-e262585c6082"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Market Details and Red Accounts",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "table_9": {
        "parameters": {
          "borderColor": "#E6ECF2",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(244, 246, 249)",
            "fontColor": "rgb(244, 246, 249)",
            "fontSize": 0
          },
          "innerMajorBorderColor": "#E6ECF2",
          "innerMinorBorderColor": "#E6ECF2",
          "maxColumnWidth": 260,
          "minColumnWidth": 60,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showRowIndexColumn": false,
          "step": "Table_Level_2_Measures_2",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "listselector_1": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": false,
          "step": "Filter_Lead",
          "title": "Lead"
        },
        "type": "listselector"
      }
    }
  },
  "type": "dashboard",
  "url": "/services/data/v42.0/wave/dashboards/0FKf2000000MKxyGAG"
}