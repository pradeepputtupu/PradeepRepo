{
  "allowPreview": true,
  "assetSharingUrl": "https://apmsandbox.my.salesforce.com/analytics/wave/dashboard?assetId=0FKf2000000oRyTGAU&orgId=00Df2000001LxAD&loginHost=na53.salesforce.com&urlType=sharing",
  "createdBy": {
    "id": "005f20000090XxRAAU",
    "name": "Yuvaraj Krishanan",
    "profilePhotoUrl": "https://apmsandbox--c.na53.content.force.com/profilephoto/005/T"
  },
  "createdDate": "2018-08-05T02:50:25.000Z",
  "datasets": [
    {
      "id": "0Fbf2000000HtY7CAK",
      "label": "APM_ACV1",
      "name": "APM_ACV",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtY7CAK"
    },
    {
      "id": "0Fbf2000000HtYVCA0",
      "label": "APM_AOV",
      "name": "APM_AOV",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtYVCA0"
    },
    {
      "id": "0Fbf2000000HtYaCAK",
      "label": "APM_Attrition",
      "name": "APM_Attrition",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtYaCAK"
    },
    {
      "id": "0Fbf2000000HtZMCA0",
      "label": "APM_DEALS",
      "name": "APM_DEALS",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtZMCA0"
    },
    {
      "id": "0Fbf2000000HtZRCA0",
      "label": "APM_HC",
      "name": "APM_HC",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtZRCA0"
    },
    {
      "id": "0Fbf2000000HtZbCAK",
      "label": "APM_LOGO",
      "name": "APM_LOGO",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtZbCAK"
    },
    {
      "id": "0Fbf2000000HtZgCAK",
      "label": "APM_LOST_LOGO",
      "name": "APM_LOST_LOGO",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtZgCAK"
    },
    {
      "id": "0Fbf2000000HtaPCAS",
      "label": "APM_Pipegen1",
      "name": "APM_Pipegen1",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtaPCAS"
    },
    {
      "id": "0Fbf2000000HtaeCAC",
      "label": "APM_SWE_INFRA",
      "name": "APM_SWE_INFRA",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtaeCAC"
    },
    {
      "id": "0Fbf2000000Htc6CAC",
      "label": "Master_Hierarchy_GM",
      "name": "Master_Hierarchy_GM",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000Htc6CAC"
    },
    {
      "id": "0Fbf2000000HteBCAS",
      "label": "Master_Hierarchy",
      "name": "Master_Hierarchy",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HteBCAS"
    }
  ],
  "dateVersion": 1,
  "files": [
    {
      "contentType": "image/png",
      "fileLength": 18410,
      "fileName": "assetPreviewThumb",
      "id": "0FJf2000000TnfkGAC",
      "lastModifiedDate": "2018-08-05T02:50:32.000Z",
      "url": "/services/data/v44.0/wave/lenses/0FKf2000000oRyTGAU/files/0FJf2000000TnfkGAC"
    }
  ],
  "folder": {
    "id": "00lf2000002UDezAAG",
    "label": "WIP APM FY19 Q4",
    "name": "APM",
    "url": "/services/data/v44.0/wave/folders/00lf2000002UDezAAG"
  },
  "id": "0FKf2000000oRyTGAU",
  "label": "APM - Sales Leader Summary Dashboard (Level 2) - Show/Hide Filters Enabled",
  "lastModifiedBy": {
    "id": "005f20000090XxRAAU",
    "name": "Yuvaraj Krishanan",
    "profilePhotoUrl": "https://apmsandbox--c.na53.content.force.com/profilephoto/005/T"
  },
  "lastModifiedDate": "2018-08-05T02:50:25.000Z",
  "mobileDisabled": true,
  "name": "APM_Sales_Leader_Summary_Dashboard_Level_2_Show_Hide_Filters_Enabled",
  "permissions": {
    "manage": true,
    "modify": true,
    "view": true
  },
  "refreshDate": "2019-01-16T20:36:11.000Z",
  "state": {
    "dataSourceLinks": [
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_DEALS",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "AMP_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_LOST_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Country"
          }
        ],
        "label": "Country",
        "name": "Link_1336"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_DEALS",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "AMP_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_LOST_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          }
        ],
        "label": "Segment",
        "name": "Link_55"
      },
      {
        "fields": [
          {
            "dataSourceName": "Master_Hierarchy",
            "dataSourceType": "saql",
            "fieldName": "Level_2"
          },
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_DEALS",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "AMP_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_LOST_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          }
        ],
        "label": "Sub Cloud Connection",
        "name": "Link_1389"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_DEALS",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "AMP_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_LOST_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          }
        ],
        "label": "Cloud Connection",
        "name": "Link_1340"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "Master_Hierarchy",
            "dataSourceType": "saql",
            "fieldName": "Level_1"
          },
          {
            "dataSourceName": "APM_DEALS",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "AMP_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_LOST_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Region"
          }
        ],
        "label": "Region",
        "name": "Link_1318"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "Master_Hierarchy_GM",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_DEALS",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "AMP_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_LOST_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          }
        ],
        "label": "Lead",
        "name": "Link_1018"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_DEALS",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "AMP_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_LOST_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          }
        ],
        "label": "Lead+1",
        "name": "Link_3761"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_DEALS",
            "dataSourceType": "saql",
            "fieldName": "Industries"
          },
          {
            "dataSourceName": "AMP_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Industries"
          },
          {
            "dataSourceName": "APM_LOST_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          }
        ],
        "label": "Industry",
        "name": "Link_1302"
      }
    ],
    "filters": [],
    "gridLayouts": [
      {
        "maxWidth": 1540,
        "name": "Default",
        "numColumns": 36,
        "pages": [
          {
            "label": "Financial Measures",
            "name": "328a689d-17a8-489e-b41c-d6dbaedbf3ac",
            "navigationHidden": false,
            "widgets": [
              {
                "colspan": 4,
                "column": 13,
                "name": "listselector_8",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 0,
                "name": "link_1",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 14,
                "name": "listselector_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_7",
                "row": 22,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 13,
                "name": "text_3",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 18,
                "name": "listselector_3",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 8,
                "name": "text_1",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_2",
                "row": 15,
                "rowspan": 57,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_3",
                "row": 0,
                "rowspan": 12,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "image_1",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "image_2",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "image_3",
                "row": 72,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_14",
                "row": 26,
                "rowspan": 37,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 3,
                "name": "link_13",
                "row": 6,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "rgba(242, 246, 250, 0)",
                  "borderColor": "rgba(0, 135, 255, 0)",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 16,
                  "borderWidth": 2
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_8",
                "row": 19,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 23,
                "name": "listselector_10",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 28,
                "name": "listselector_7",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 1,
                "column": 3,
                "name": "text_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 8,
                "name": "listselector_2",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 9,
                "name": "listselector_1",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 3,
                "name": "listselector_12",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_8",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 7,
                "column": 8,
                "name": "link_11",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_12",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 22,
                "name": "link_14",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 28,
                "name": "listselector_5",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 30,
                "column": 0,
                "name": "text_2",
                "row": 64,
                "rowspan": 8,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 2,
                "column": 34,
                "name": "image_5",
                "row": 69,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 7,
                "column": 29,
                "name": "link_4",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_15",
                "row": 8,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          },
          {
            "label": "Hide Filters - Financial Measures",
            "name": "8eb068cf-416c-4468-8531-6475f58f7a19",
            "navigationHidden": false,
            "widgets": [
              {
                "colspan": 8,
                "column": 0,
                "name": "link_1",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_7",
                "row": 15,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_2",
                "row": 8,
                "rowspan": 57,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_3",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "image_1",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "image_2",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "image_3",
                "row": 65,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_14",
                "row": 19,
                "rowspan": 37,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_8",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_8",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 30,
                "column": 0,
                "name": "text_2",
                "row": 57,
                "rowspan": 8,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 2,
                "column": 34,
                "name": "image_5",
                "row": 62,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_17",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 8,
                "name": "link_24",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_25",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 22,
                "name": "link_26",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 29,
                "name": "link_27",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          },
          {
            "label": "Headcount",
            "name": "a32a622b-f247-47ef-92af-1ce8fe739626",
            "navigationHidden": false,
            "widgets": [
              {
                "colspan": 1,
                "column": 13,
                "name": "text_3",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 28,
                "name": "listselector_5",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 14,
                "name": "listselector_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 13,
                "name": "listselector_8",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_12",
                "row": 22,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 8,
                "name": "text_1",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 18,
                "name": "listselector_3",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_2",
                "row": 15,
                "rowspan": 57,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "image_1",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "image_2",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "image_3",
                "row": 72,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 4,
                "name": "link_10",
                "row": 6,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "rgba(242, 246, 250, 0)",
                  "borderColor": "rgba(0, 135, 255, 0.01)",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 16,
                  "borderWidth": 2
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_9",
                "row": 26,
                "rowspan": 37,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_16",
                "row": 19,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 28,
                "name": "listselector_7",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 23,
                "name": "listselector_10",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 3,
                "name": "text_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 8,
                "name": "listselector_2",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 9,
                "name": "listselector_1",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 3,
                "name": "listselector_12",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "text_6",
                "row": 64,
                "rowspan": 8,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_6",
                "row": 0,
                "rowspan": 12,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_7",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 0,
                "name": "link_3",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 8,
                "name": "link_7",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_8",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 22,
                "name": "link_9",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 29,
                "name": "link_4",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_18",
                "row": 8,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          },
          {
            "label": "Hide Filters - Headcount",
            "name": "5ebc0793-feb8-4a12-9c50-49d091a53857",
            "navigationHidden": false,
            "widgets": [
              {
                "colspan": 36,
                "column": 0,
                "name": "table_12",
                "row": 15,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_2",
                "row": 8,
                "rowspan": 57,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "image_1",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "image_2",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "image_3",
                "row": 65,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_9",
                "row": 19,
                "rowspan": 37,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_16",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "text_6",
                "row": 57,
                "rowspan": 8,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_6",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_7",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderEdges": []
                }
              },
              {
                "colspan": 8,
                "column": 0,
                "name": "link_3",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_8",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_19",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 22,
                "name": "link_26",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 29,
                "name": "link_27",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 8,
                "name": "link_28",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          },
          {
            "label": "Sales Details",
            "name": "0ac38e06-d0e1-4058-b374-a44482ccc3f4",
            "navigationHidden": false,
            "widgets": [
              {
                "colspan": 4,
                "column": 13,
                "name": "listselector_8",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 28,
                "name": "listselector_5",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 8,
                "column": 0,
                "name": "link_1",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 14,
                "name": "listselector_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 13,
                "name": "text_3",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 18,
                "name": "listselector_3",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 8,
                "name": "text_1",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_2",
                "row": 15,
                "rowspan": 61,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_3",
                "row": 0,
                "rowspan": 12,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "image_1",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "image_2",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "image_3",
                "row": 76,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 3,
                "name": "link_13",
                "row": 6,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "rgba(242, 246, 250, 0)",
                  "borderColor": "rgba(0, 135, 255, 0)",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 16,
                  "borderWidth": 2
                }
              },
              {
                "colspan": 4,
                "column": 23,
                "name": "listselector_10",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 28,
                "name": "listselector_7",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 1,
                "column": 3,
                "name": "text_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 8,
                "name": "listselector_2",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 9,
                "name": "listselector_1",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 3,
                "name": "listselector_12",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_17",
                "row": 19,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_19",
                "row": 22,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_21",
                "row": 26,
                "rowspan": 37,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_8",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 7,
                "column": 8,
                "name": "link_2",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_5",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 22,
                "name": "link_6",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 33,
                "column": 0,
                "name": "text_7",
                "row": 64,
                "rowspan": 12,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 7,
                "column": 29,
                "name": "link_4",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_20",
                "row": 8,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          },
          {
            "label": "Hide Filters - Sales Details",
            "name": "64ab5d9b-26f7-4446-8723-cd4e0ec050bc",
            "navigationHidden": false,
            "widgets": [
              {
                "colspan": 8,
                "column": 0,
                "name": "link_1",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_2",
                "row": 8,
                "rowspan": 61,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_3",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "image_1",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "image_2",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "image_3",
                "row": 69,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_17",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_19",
                "row": 15,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_21",
                "row": 19,
                "rowspan": 37,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_8",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 7,
                "column": 22,
                "name": "link_6",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 33,
                "column": 0,
                "name": "text_7",
                "row": 57,
                "rowspan": 12,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_21",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_25",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 29,
                "name": "link_27",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 8,
                "name": "link_28",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          },
          {
            "label": "CSG Metrics",
            "name": "79809e29-5862-4dc4-9436-df82a567beb8",
            "navigationHidden": false,
            "widgets": [
              {
                "colspan": 8,
                "column": 0,
                "name": "link_1",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_2",
                "row": 15,
                "rowspan": 57,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_3",
                "row": 0,
                "rowspan": 12,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "image_1",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "image_2",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "image_3",
                "row": 72,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 3,
                "name": "link_13",
                "row": 6,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "rgba(242, 246, 250, 0)",
                  "borderColor": "rgba(0, 135, 255, 0)",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 16,
                  "borderWidth": 2
                }
              },
              {
                "colspan": 4,
                "column": 18,
                "name": "listselector_7",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 1,
                "column": 3,
                "name": "text_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 3,
                "name": "listselector_12",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_8",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_12",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 22,
                "name": "link_14",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 13,
                "name": "listselector_5",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 30,
                "column": 0,
                "name": "text_2",
                "row": 64,
                "rowspan": 8,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 2,
                "column": 34,
                "name": "image_5",
                "row": 69,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_1",
                "row": 26,
                "rowspan": 37,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_2",
                "row": 22,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_4",
                "row": 19,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 29,
                "name": "link_16",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 8,
                "name": "link_2",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_22",
                "row": 8,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 8,
                "name": "listselector_6",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          },
          {
            "label": "Hide Filters - CSG Metrics",
            "name": "54a3bb51-05f1-4c1c-a59c-93cdb3e6f67b",
            "navigationHidden": false,
            "widgets": [
              {
                "colspan": 8,
                "column": 0,
                "name": "link_1",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_2",
                "row": 8,
                "rowspan": 57,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_3",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "image_1",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "image_2",
                "row": 0,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "image_3",
                "row": 65,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_8",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 30,
                "column": 0,
                "name": "text_2",
                "row": 57,
                "rowspan": 8,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 2,
                "column": 34,
                "name": "image_5",
                "row": 62,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_1",
                "row": 19,
                "rowspan": 37,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_2",
                "row": 15,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_4",
                "row": 12,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 29,
                "name": "link_16",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_23",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 15,
                "name": "link_25",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 22,
                "name": "link_26",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 7,
                "column": 8,
                "name": "link_28",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          }
        ],
        "rowHeight": "fine",
        "selectors": [],
        "style": {
          "alignmentX": "left",
          "alignmentY": "top",
          "backgroundColor": "#E6ECF2",
          "cellSpacingX": 0,
          "cellSpacingY": 0,
          "fit": "original",
          "gutterColor": "#E6ECF2"
        },
        "version": 1
      }
    ],
    "layouts": [],
    "steps": {
      "CSG_Totals_Header": {
        "broadcastFacet": false,
        "groups": [],
        "label": "CSG_Totals_Header",
        "numbers": [],
        "query": "--CSG QUERY \n\nMasterHierarchy = load &quot;Master_Hierarchy_GM&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;Master_l1&quot;).asString()}}&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\n-------------------LOAD ACV-------------------------------------\n\nACV = load &quot;APM_ACV&quot;;\nACV = filter ACV by {{column(Cloud_2_1.selection,[&quot;Cloud_2&quot;]).asEquality(&#39;Cloud_2&#39;)}};\nACV = filter ACV by {{column(Filter_Lead.selection,[&quot;Lead&quot;]).asEquality(&#39;Lead&#39;)}};\n\nACV = filter ACV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nACV = group ACV by (&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;,&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39;, &#39;Month&#39;, &#39;Fiscal_Year&#39;, &#39;Region&#39;, &#39;Country&#39;, &#39;Subcloud&#39;, &#39;Cloud_2&#39;);\n\nACV = foreach ACV generate &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, \n&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39;, \n&#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39; , &#39;Month&#39; as &#39;Month&#39;, &#39;Region&#39; as &#39;Region&#39;, &#39;Subcloud&#39;, &#39;Cloud_2&#39;, sum(&#39;ACV&#39;) as &#39;ACV&#39;,\n{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;  \n\n--ACV = filter ACV by  {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nACV_SuccessPlans = filter ACV by &#39;Subcloud&#39; == &quot;Success Plans&quot;;\nAdvisory_Bookings = filter ACV by &#39;Subcloud&#39; == &quot;Advisory&quot;;\nProject_Bookings = filter ACV by &#39;Subcloud&#39; == &quot;Projects&quot;;\n\n----------------------------FILTER ACV--------------------------------------------\nq2_CYACV = filter ACV_SuccessPlans by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYACV = filter ACV_SuccessPlans by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYACV = filter ACV_SuccessPlans by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYACV = filter ACV_SuccessPlans by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n\nq2_CYACV_a = filter Advisory_Bookings by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYACV_a = filter Advisory_Bookings by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYACV_a = filter Advisory_Bookings by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYACV_a = filter Advisory_Bookings by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n\nq2_CYACV_p = filter Project_Bookings by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYACV_p = filter Project_Bookings by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYACV_p = filter Project_Bookings by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYACV_p = filter Project_Bookings by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n\n\n---------------------LOAD AOV----------------------------------------\nAOV = load &quot;APM_AOV&quot;;\nAOV = filter AOV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nAOV = filter AOV by {{column(Filter_Lead.selection,[&quot;Lead&quot;]).asEquality(&#39;Lead&#39;)}};\nAOV = filter AOV by {{column(Cloud_2_1.selection,[&quot;Cloud_2&quot;]).asEquality(&#39;Cloud_2&#39;)}};\n\n--SPECIFIC FILTER FOR SUCCESS PLAN AOV\nAOV = filter AOV by &#39;Subcloud&#39; == &quot;Success Plans&quot;;\n\nAOV = foreach AOV generate &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, \n&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39;, \n&#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39;, &#39;Region&#39; as &#39;Region&#39;, sum(&#39;AOV&#39;) as &#39;AOV&#39;,\n{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \n\n--AOV = filter AOV by  {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}}\n\n-----------------------------FILTER AOV ---------------------------------------\nq2_CYAOV = filter AOV by &#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYAOV = filter AOV by &#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYAOV = filter AOV by &#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYAOV = filter AOV by &#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n\n\n---------------------------------Grouping-------------------------------------------------------------------------------------------------------------------------------------------\nresult = group \nq2_CYACV by all full, \nq2_PYACV by all full, \nq3_CYACV by all full, \nq3_PYACV by all full, \n\nq2_CYAOV by all full, \nq2_PYAOV by all full, \nq3_CYAOV by all full, \nq3_PYAOV by all full,\n\nq2_CYACV_a by all full,\nq2_PYACV_a by all full,\nq3_CYACV_a by all full,\nq3_PYACV_a by all full,\n\nq2_CYACV_p by all full,\nq2_PYACV_p by all full,\nq3_CYACV_p by all full,\nq3_PYACV_p by all\n;\n\n\n\n------------------------PROJECTION------------------------\n\nresult = foreach result generate  \n\ncoalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan ACV Absolute&#39;, \ncoalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) as &#39;YTD Success Plan ACV Absolute&#39;, \n((coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Success Plan ACV Growth&#39;, \n((coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YTD Success Plan ACV Growth&#39;, \n\ncoalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan AOV Absolute&#39;, \ncoalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) as &#39;YTD Success Plan AOV Absolute&#39;, \n((coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Success Plan AOV Growth&#39;, \n((coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YTD Success Plan AOV Growth&#39;,\n\ncoalesce(sum(q2_CYACV_a.&#39;ACV&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Advisory ACV Absolute&#39;, \ncoalesce(sum(q3_CYACV_a.&#39;ACV&#39;), 0) as &#39;YTD Advisory ACV Absolute&#39;, \n((coalesce(sum(q2_CYACV_a.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV_a.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV_a.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Advisory ACV Growth&#39;, \n((coalesce(sum(q3_CYACV_a.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV_a.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV_a.&#39;ACV&#39;), 0)) * 100 as &#39;YTD Advisory ACV Growth&#39;,\n\ncoalesce(sum(q2_CYACV_p.&#39;ACV&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Project ACV Absolute&#39;, \ncoalesce(sum(q3_CYACV_p.&#39;ACV&#39;), 0) as &#39;YTD Project ACV Absolute&#39;, \n((coalesce(sum(q2_CYACV_p.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV_p.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV_p.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Project ACV Growth&#39;, \n((coalesce(sum(q3_CYACV_p.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV_p.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV_p.&#39;ACV&#39;), 0)) * 100 as &#39;YTD Project ACV Growth&#39;\n\n;\n\n\n------------FINAL PROJECTION----------------------------------------------------------------------\n\nresult = foreach result generate &quot;TOTAL                   &quot; as &#39;Lead_1&#39;, \n\n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan ACV Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan ACV Absolute&#39;, \n&#39;YTD Success Plan ACV Absolute&#39; as &#39;YTD Success Plan ACV Absolute&#39;, \n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Success Plan ACV Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan ACV Growth&#39;, \n&#39;YTD Success Plan ACV Growth&#39; as &#39;YTD Success Plan ACV Growth&#39;, \n\n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan AOV Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan AOV Absolute&#39;,\n&#39;YTD Success Plan AOV Absolute&#39; as &#39;YTD Success Plan AOV Absolute&#39;, \n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Success Plan AOV Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan AOV Growth&#39;, \n&#39;YTD Success Plan AOV Growth&#39; as &#39;YTD Success Plan AOV Growth&#39;,\n\n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Advisory ACV Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Advisory ACV Absolute&#39;, \n&#39;YTD Advisory ACV Absolute&#39; as &#39;YTD Advisory ACV Absolute&#39;, \n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Advisory ACV Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Advisory ACV Growth&#39;, \n&#39;YTD Advisory ACV Growth&#39; as &#39;YTD Advisory ACV Growth&#39;,\n\n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Project ACV Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Project ACV Absolute&#39;, \n&#39;YTD Project ACV Absolute&#39; as &#39;YTD Project ACV Absolute&#39;, \n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Project ACV Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Project ACV Growth&#39;, \n&#39;YTD Project ACV Growth&#39; as &#39;YTD Project ACV Growth&#39;\n\n;",
        "receiveFacet": false,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": false,
        "visualizationParameters": {
          "visualizationType": "hbar"
        }
      },
      "Static_Cloud_Filter": {
        "broadcastFacet": true,
        "label": "Cloud_Filter",
        "selectMode": "singlerequired",
        "start": "{&quot;display&quot;:[&quot;Parameters&quot;]}",
        "type": "staticflex",
        "values": [
          "{&quot;display&quot;:&quot;Parameters&quot;,&quot;filter&quot;:&quot;[&#92;&quot;Warren Wick&#92;&quot;, &#92;&quot;Andrew Kofoid&#92;&quot;, &#92;&quot;Tony Owens&#92;&quot;, &#92;&quot;Dave Rey&#92;&quot;, &#92;&quot;Mark Innes&#92;&quot;, &#92;&quot;Miguel Milano&#92;&quot;, &#92;&quot;Shinichi Koide&#92;&quot;,&#92;&quot;Enrique Ortegon&#92;&quot;,&#92;&quot;Other&#92;&quot;]&quot;,&quot;level_1&quot;:&quot;Lead&quot;,&quot;level_2&quot;:&quot;Lead_1&quot;,&quot;level_3&quot;:&quot;City&quot;,&quot;Master_l1&quot;:&quot;Lead&quot;,&quot;Master_l1_Rank&quot;:&quot;Lead_Rank&quot;,&quot;static_country_logic&quot;:&quot;case when (&#39;Region&#39; == &#92;&quot;AMER&#92;&quot; &amp;&amp; (&#39;Country&#39; ==  &#92;&quot;Canada&#92;&quot; ))then &#92;&quot;Canada&#92;&quot; when (&#39;Region&#39; == &#92;&quot;AMER&#92;&quot; &amp;&amp; (&#39;Country&#39; ==  &#92;&quot;United States&#92;&quot; ))then &#92;&quot;United States&#92;&quot; when (&#39;Region&#39; == &#92;&quot;AMER&#92;&quot;)then &#92;&quot;RO AMER&#92;&quot; when  (&#39;Region&#39; == &#92;&quot;EMEA&#92;&quot; &amp;&amp; (&#39;Country&#39; ==  &#92;&quot;United Kingdom&#92;&quot; ))then &#92;&quot;United Kingdom&#92;&quot;  when  (&#39;Region&#39; == &#92;&quot;EMEA&#92;&quot; &amp;&amp; (&#39;Country&#39; ==  &#92;&quot;France&#92;&quot; ))then &#92;&quot;France&#92;&quot; when (&#39;Region&#39; == &#92;&quot;EMEA&#92;&quot; &amp;&amp; (&#39;Country&#39; ==  &#92;&quot;Germany&#92;&quot; ))then &#92;&quot;Germany&#92;&quot; when  (&#39;Region&#39; == &#92;&quot;EMEA&#92;&quot; &amp;&amp; (&#39;Country&#39; ==  &#92;&quot;Netherlands&#92;&quot; ))then &#92;&quot;Netherlands&#92;&quot; when (&#39;Region&#39; == &#92;&quot;EMEA&#92;&quot; ) then &#92;&quot;RO EMEA&#92;&quot; when  (&#39;Region&#39; == &#92;&quot;APAC&#92;&quot; &amp;&amp; (&#39;Country&#39; ==  &#92;&quot;Australia&#92;&quot; ))then &#92;&quot;ANZ&#92;&quot;  when  (&#39;Region&#39; == &#92;&quot;APAC&#92;&quot; &amp;&amp; (&#39;Country&#39; ==  &#92;&quot;ANZ&#92;&quot; ))then &#92;&quot;ANZ&#92;&quot;when  (&#39;Region&#39; == &#92;&quot;APAC&#92;&quot; &amp;&amp; (&#39;Country&#39; ==  &#92;&quot;India&#92;&quot; ))then &#92;&quot;India&#92;&quot;  when  (&#39;Region&#39; == &#92;&quot;APAC&#92;&quot; )then &#92;&quot;RO APAC&#92;&quot;  when  (&#39;Region&#39; == &#92;&quot;APAC&#92;&quot; )then &#92;&quot;RO APAC&#92;&quot;  when  (&#39;Region&#39; == &#92;&quot;JP&#92;&quot; &amp;&amp; (&#39;Country&#39; ==  &#92;&quot;Japan&#92;&quot; ))then &#92;&quot;Japan&#92;&quot; when (&#39;Region&#39; == &#92;&quot;JP&#92;&quot; &amp;&amp; (&#39;Country&#39; == &#92;&quot;South Korea&#92;&quot;)) then &#92;&quot;South Korea&#92;&quot; when  (&#39;Region&#39; == &#92;&quot;JP&#92;&quot;  )then &#92;&quot;RO JP&#92;&quot;  when  (&#39;Region&#39; == &#92;&quot;LACA&#92;&quot; &amp;&amp; (&#39;Country&#39; ==  &#92;&quot;Brazil&#92;&quot; ))then &#92;&quot;Brazil&#92;&quot; when (&#39;Region&#39; == &#92;&quot;LACA&#92;&quot; )then &#92;&quot;RO LACA&#92;&quot; when (&#39;Region&#39; == &#92;&quot;Other&#92;&quot; )then &#92;&quot;Other&#92;&quot; else &#92;&quot;ERROR&#92;&quot; end&quot;}"
        ]
      },
      "Filter_Lead": {
        "broadcastFacet": true,
        "groups": [
          "Lead"
        ],
        "numbers": [],
        "query": "q = load &quot;APM_ACV&quot;;\nq = group q by (&#39;Lead&#39;);\nq = foreach q generate case when &#39;Lead&#39; == &quot;Tony Owens&quot; then &quot;1. Tony Owens&quot; when &#39;Lead&#39; == &quot;Warren Wick&quot; then &quot;2. Warren Wick&quot; when &#39;Lead&#39; == &quot;Andrew Kofoid&quot; then &quot;3. Andrew Kofoid&quot; when &#39;Lead&#39; == &quot;Miguel Milano&quot; then &quot;4. Miguel Milano&quot; when &#39;Lead&#39; == &quot;Mark Innes&quot; then &quot;5. Mark Innes&quot; when &#39;Lead&#39; == &quot;Shinichi Koide&quot; then &quot;6. Shinichi Koide&quot; when &#39;Lead&#39; == &quot;Dave Rey&quot; then &quot;7. Dave Rey&quot; when &#39;Lead&#39; == &quot;Enrique Ortegon&quot; then &quot;8. Enrique Ortegon&quot;else &quot;9. unkown&quot; end as Lead_Rank  ,&#39;Lead&#39; as &#39;Lead&#39;, count() as &#39;count&#39;;\nq = order q by &#39;Lead_Rank&#39; asc;\nq = limit q 2000;",
        "receiveFacet": true,
        "selectMode": "multi",
        "strings": [
          "Lead"
        ],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      },
      "Table_Measures_1_Header_Top": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Measures_1_Header_Top",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy_GM&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;Master_l1&quot;).asString()}}&#39; in {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nresult_Total = group MasterHierarchy by all;\nresult_Total = foreach result_Total generate &quot;  &quot; as &#39;$ values in millions&#39;, &quot;ACV                                                                                                                                                                                                                                                                                                                                                                                                                                            &quot; as &#39;ACV&#39;, &quot;AOV                                                                                                                                                                                                                                                                                                                                                                                                                                            &quot; as &#39;AOV&#39;, &quot;ATTRITION                                                                                                                                                                                                                                                                                                                                                                                                                                            &quot; as &#39;ATTRITION&#39;, &quot;PipeGen                                                                                                                                                                                                                                                                                                                                                                                                                                            &quot; as &#39;Pipeline&#39;;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart",
          "visualizationType": "hbar"
        }
      },
      "Selector_Quarter": {
        "broadcastFacet": true,
        "label": "Quarter",
        "selectMode": "single",
        "start": "{&quot;display&quot;:[&quot;Q2&quot;]}",
        "type": "staticflex",
        "values": [
          "{&quot;display&quot;:&quot;Q1&quot;,&quot;Quarter&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;Month&quot;:&quot;[&#92;&quot;February&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;April&#92;&quot;]&quot;,&quot;YTD_Month&quot;:&quot;[&#92;&quot;February&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;April&#92;&quot;,&#92;&quot;May&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;July&#92;&quot;]&quot;,&quot;YTD_Month_cum&quot;:&quot;[&#92;&quot;July&#92;&quot;]&quot;,&quot;YTD_Quarter&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_Quarter_cum&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;YTD_Quarter_pipegen&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_Quarter_HC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;YTD_Quarter_SW&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;Unit_Month&quot;:&quot;Month&quot;,&quot;Unit_Quarter&quot;:&quot;Quarter&quot;,&quot;Header_name_absolute&quot;:&quot;Q1&quot;,&quot;Header_name_rate&quot;:&quot;YoY Q1&quot;}",
          "{&quot;display&quot;:&quot;Q2&quot;,&quot;Quarter&quot;:&quot;[&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Month&quot;:&quot;[&#92;&quot;May&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;July&#92;&quot;]&quot;,&quot;YTD_Month&quot;:&quot;[&#92;&quot;February&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;April&#92;&quot;,&#92;&quot;May&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;July&#92;&quot;]&quot;,&quot;YTD_Month_cum&quot;:&quot;[&#92;&quot;July&#92;&quot;]&quot;,&quot;YTD_Quarter&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_Quarter_cum&quot;:&quot;[&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_Quarter_pipegen&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_Quarter_HC&quot;:&quot;[&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_Quarter_SW&quot;:&quot;[&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Unit_Month&quot;:&quot;Month&quot;,&quot;Unit_Quarter&quot;:&quot;Quarter&quot;,&quot;Header_name_absolute&quot;:&quot;Q2&quot;,&quot;Header_name_rate&quot;:&quot;YoY Q2&quot;}"
        ]
      },
      "Filter_Cloud": {
        "broadcastFacet": true,
        "groups": [
          "Cloud"
        ],
        "numbers": [],
        "query": "q = load &quot;APM_ACV&quot;;\nq = group q by (&#39;Cloud&#39;);\nq = foreach q generate case when &#39;Cloud&#39; == &quot;Sales Cloud &amp; Sales Platform&quot; then &quot;A. Sales Cloud &amp; Sales Platform&quot; when &#39;Cloud&#39; == &quot;Service Cloud &amp; Service Cloud Platform&quot; then &quot;B. Service Cloud &amp; Service Cloud Platform&quot; when &#39;Cloud&#39; == &quot;Marketing Cloud &amp; Marketing Platform&quot; then &quot;C. Marketing Cloud &amp; Marketing Platform&quot; when &#39;Cloud&#39; == &quot;Commerce Cloud&quot; then &quot;D. Commerce Cloud&quot; when &#39;Cloud&#39; == &quot;Salesforce Platform(s)&quot; then &quot;E. Salesforce Platform(s)&quot; when &#39;Cloud&#39; == &quot;Quip&quot; then &quot;F. Quip&quot; when &#39;Cloud&#39; == &quot;Other&quot; then &quot;G. Other&quot;when &#39;Cloud&#39; == &quot;Other CSG&quot; then &quot;H. Other CSG&quot; when &#39;Cloud&#39; == &quot;Premier (a la carte)&quot; then &quot;I. Premier (a la carte)&quot;  when &#39;Cloud&#39; == &quot;Success Cloud&quot; then &quot;J. Success Cloud&quot;else &quot;K. unkown&quot; end as Cloud_Rank  ,&#39;Cloud&#39; as &#39;Cloud&#39;, count() as &#39;count&#39;;\nq = order q by &#39;Cloud_Rank&#39; asc;\nq = limit q 2000;",
        "receiveFacet": true,
        "selectMode": "multi",
        "strings": [
          "Cloud"
        ],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      },
      "CSG_Header_Top": {
        "broadcastFacet": true,
        "groups": [],
        "label": "CSG_Header_Top",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy_GM&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;Master_l1&quot;).asString()}}&#39; in {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nresult_Total = group MasterHierarchy by all;\nresult_Total = foreach result_Total generate &quot;  &quot; as &#39;$ values in millions&#39;, &quot;Success Plans ACV                                                                                                                                                                                                                                                                                                                                                                                                                                            &quot; as &#39;Success Plans ACV&#39;, &quot;Success Plans AOV                                                                                                                                                                                                                                                                                                                                                                                                                                            &quot; as &#39;Success Plans AOV&#39;, &quot;Advisory Bookings                                                                                                                                                                                                                                                                                                                                                                                                                                            &quot; as &#39;Advisory Bookings&#39;, &quot;Projects Bookings                                                                                                                                                                                                                                                                                                                                                                                                                                            &quot; as &#39;Projects Bookings&#39;;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart",
          "visualizationType": "hbar"
        }
      },
      "Static_Region_Filter": {
        "broadcastFacet": true,
        "label": "Static_Cloud_Filter",
        "selectMode": "singlerequired",
        "type": "staticflex",
        "values": [
          "{&quot;display&quot;:&quot;Region&quot;,&quot;filter&quot;:&quot;[&#92;&quot;AMER&#92;&quot;, &#92;&quot;EMEA&#92;&quot;, &#92;&quot;APAC&#92;&quot;, &#92;&quot;JP&#92;&quot;, &#92;&quot;LACA&#92;&quot;,&#92;&quot;LACA&#92;&quot;,&#92;&quot;Other&#92;&quot;]&quot;}"
        ]
      },
      "Table_Level_1_Measures_1": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Level_1_Measures_1",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy_GM&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;Master_l1&quot;).asString()}}&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD ACV----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nACV = load &quot;APM_ACV&quot;;\nACV = filter ACV by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nACV = filter ACV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nACV = group ACV by (&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;,&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39;,&#39;Month&#39;, &#39;Fiscal_Year&#39;,&#39;Region&#39;,&#39;Country&#39;);\nACV = foreach ACV generate  &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39; ,&#39;Month&#39; as &#39;Month&#39;,sum(&#39;ACV&#39;) as &#39;ACV&#39;,&#39;Region&#39; as &#39;Region&#39;,  case when (&#39;Region&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Canada&quot; ))then &quot;Canada&quot; when (&#39;Region&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;United States&quot; ))then &quot;United States&quot; when (&#39;Region&#39; == &quot;AMER&quot;)then &quot;RO AMER&quot; when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;United Kingdom&quot; ))then &quot;United Kingdom&quot;  when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;France&quot; ))then &quot;France&quot; when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Germany&quot; ))then &quot;Germany&quot; when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Netherlands&quot; ))then &quot;Netherlands&quot; when (&#39;Region&#39; == &quot;EMEA&quot; ) then &quot;RO EMEA&quot; when  (&#39;Region&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Australia&quot; ))then &quot;ANZ&quot; when  (&#39;Region&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;ANZ&quot; ))then &quot;ANZ&quot; when  (&#39;Region&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;India&quot; ))then &quot;India&quot;  when  (&#39;Region&#39; == &quot;APAC&quot; )then &quot;RO APAC&quot;  when  (&#39;Region&#39; == &quot;APAC&quot; )then &quot;RO APAC&quot;  when  (&#39;Region&#39; == &quot;JP&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Japan&quot; ))then &quot;Japan&quot;  when  (&#39;Region&#39; == &quot;JP&quot;  )then &quot;RO JP&quot;  when  (&#39;Region&#39; == &quot;LACA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Brazil&quot; ))then &quot;Brazil&quot; when (&#39;Region&#39; == &quot;LACA&quot; )then &quot;RO LACA&quot; when (&#39;Region&#39; == &quot;Other&quot; )then &quot;Other&quot; else &quot;ERROR&quot; end as &#39;Country&#39; ; ACV = filter ACV by  {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}}; ;\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER ACV----------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYACV = filter ACV by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYACV = filter ACV by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnAOV = load &quot;APM_AOV&quot;;\nAOV = filter AOV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nAOV = filter AOV by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nAOV = foreach AOV generate  &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;AOV&#39;) as &#39;AOV&#39;,&#39;Region&#39; as &#39;Region&#39;, case when (&#39;Region&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Canada&quot; ))then &quot;Canada&quot; when (&#39;Region&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;United States&quot; ))then &quot;United States&quot; when (&#39;Region&#39; == &quot;AMER&quot;)then &quot;RO AMER&quot; when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;United Kingdom&quot; ))then &quot;United Kingdom&quot;  when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;France&quot; ))then &quot;France&quot; when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Germany&quot; ))then &quot;Germany&quot; when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Netherlands&quot; ))then &quot;Netherlands&quot; when (&#39;Region&#39; == &quot;EMEA&quot; ) then &quot;RO EMEA&quot; when  (&#39;Region&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Australia&quot; ))then &quot;ANZ&quot; when  (&#39;Region&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;ANZ&quot; ))then &quot;ANZ&quot; when  (&#39;Region&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;India&quot; ))then &quot;India&quot;  when  (&#39;Region&#39; == &quot;APAC&quot; )then &quot;RO APAC&quot;  when  (&#39;Region&#39; == &quot;APAC&quot; )then &quot;RO APAC&quot;  when  (&#39;Region&#39; == &quot;JP&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Japan&quot; ))then &quot;Japan&quot;  when  (&#39;Region&#39; == &quot;JP&quot;  )then &quot;RO JP&quot;  when  (&#39;Region&#39; == &quot;LACA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Brazil&quot; ))then &quot;Brazil&quot; when (&#39;Region&#39; == &quot;LACA&quot; )then &quot;RO LACA&quot; when (&#39;Region&#39; == &quot;Other&quot; )then &quot;Other&quot; else &quot;ERROR&quot; end as &#39;Country&#39;  ; AOV = filter AOV by  {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER AOV ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYAOV = filter AOV by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYAOV = filter AOV by &#39;Month&#39; in   {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYAOV = filter AOV by &#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYAOV = filter AOV by &#39;Month&#39; in{{cell(Selector_Quarter.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------/////////////////////////////-----------LOAD ATTRITION ----------------/////////////////////////////////////////\nAttrition = load &quot;APM_Attrition&quot;;\nAttrition = filter Attrition by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nAttrition = filter Attrition by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nAttrition = foreach Attrition generate  &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;,&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Attrition&#39;)*-1 as &#39;Attrition_Product&#39;, sum(&#39;TTM&#39;)*-1 as &#39;TTM_Product&#39;,sum(&#39;AOV_twelve_month_ago&#39;) as &#39;AOV_twelve_month_ago&#39;,&#39;Region&#39; as &#39;Region&#39;,  case when (&#39;Region&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Canada&quot; ))then &quot;Canada&quot; when (&#39;Region&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;United States&quot; ))then &quot;United States&quot; when (&#39;Region&#39; == &quot;AMER&quot;)then &quot;RO AMER&quot; when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;United Kingdom&quot; ))then &quot;United Kingdom&quot;  when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;France&quot; ))then &quot;France&quot; when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Germany&quot; ))then &quot;Germany&quot; when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Netherlands&quot; ))then &quot;Netherlands&quot; when (&#39;Region&#39; == &quot;EMEA&quot; ) then &quot;RO EMEA&quot; when  (&#39;Region&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Australia&quot; ))then &quot;ANZ&quot; when  (&#39;Region&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;ANZ&quot; ))then &quot;ANZ&quot; when  (&#39;Region&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;India&quot; ))then &quot;India&quot;  when  (&#39;Region&#39; == &quot;APAC&quot; )then &quot;RO APAC&quot;  when  (&#39;Region&#39; == &quot;APAC&quot; )then &quot;RO APAC&quot;  when  (&#39;Region&#39; == &quot;JP&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Japan&quot; ))then &quot;Japan&quot;  when  (&#39;Region&#39; == &quot;JP&quot;  )then &quot;RO JP&quot;  when  (&#39;Region&#39; == &quot;LACA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Brazil&quot; ))then &quot;Brazil&quot; when (&#39;Region&#39; == &quot;LACA&quot; )then &quot;RO LACA&quot; when (&#39;Region&#39; == &quot;Other&quot; )then &quot;Other&quot; else &quot;ERROR&quot; end as &#39;Country&#39;  ; Attrition = filter Attrition by  {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}}  ;\n----------------------------------------------------------------------------------------------FILTER ATTRITION -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYATT = filter Attrition by &#39;Month&#39; in   {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYATT = filter Attrition by &#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq4_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n----------------------------------------------------------------------------------------------------------------------------------LOAD/FILTER PIPEGEN-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nPipegen = load &quot;APM_Pipegen1&quot;;\nPipegen = filter Pipegen by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nPipegen = foreach Pipegen generate  &#39;Lead&#39; as &#39;Lead&#39;, &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Pipegen&#39;) as &#39;Pipegen&#39;,&#39;Region&#39; as &#39;Region&#39;, case when (&#39;Region&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Canada&quot; ))then &quot;Canada&quot; when (&#39;Region&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;United States&quot; ))then &quot;United States&quot; when (&#39;Region&#39; == &quot;AMER&quot;)then &quot;RO AMER&quot; when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;United Kingdom&quot; ))then &quot;United Kingdom&quot;  when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;France&quot; ))then &quot;France&quot; when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Germany&quot; ))then &quot;Germany&quot; when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Netherlands&quot; ))then &quot;Netherlands&quot; when (&#39;Region&#39; == &quot;EMEA&quot; ) then &quot;RO EMEA&quot; when  (&#39;Region&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Australia&quot; ))then &quot;ANZ&quot; when  (&#39;Region&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;ANZ&quot; ))then &quot;ANZ&quot; when  (&#39;Region&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;India&quot; ))then &quot;India&quot;  when  (&#39;Region&#39; == &quot;APAC&quot; )then &quot;RO APAC&quot;  when  (&#39;Region&#39; == &quot;APAC&quot; )then &quot;RO APAC&quot;  when  (&#39;Region&#39; == &quot;JP&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Japan&quot; ))then &quot;Japan&quot;  when  (&#39;Region&#39; == &quot;JP&quot;  )then &quot;RO JP&quot;  when  (&#39;Region&#39; == &quot;LACA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Brazil&quot; ))then &quot;Brazil&quot; when (&#39;Region&#39; == &quot;LACA&quot; )then &quot;RO LACA&quot; when (&#39;Region&#39; == &quot;Other&quot; )then &quot;Other&quot; else &quot;ERROR&quot; end as &#39;Country&#39; ; Pipegen = filter Pipegen by  {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\nPipegen = filter Pipegen by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnHC = load &quot;APM_HC&quot;;\n\nHC = filter HC by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};;HC = foreach HC generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Subcloud&#39; as &#39;Subcloud&#39;,&#39;Lead&#39; as &#39;Lead&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;SE&#39;) as &#39;SE&#39;,sum(&#39;AE&#39;) as &#39;AE&#39;,sum(&#39;Co_Prime&#39;) as &#39;Co_Prime&#39;,&#39;Region&#39; as &#39;Region&#39;,  case when (&#39;Region&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Canada&quot; ))then &quot;Canada&quot; when (&#39;Region&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;United States&quot; ))then &quot;United States&quot; when (&#39;Region&#39; == &quot;AMER&quot;)then &quot;RO AMER&quot; when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;United Kingdom&quot; ))then &quot;United Kingdom&quot;  when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;France&quot; ))then &quot;France&quot; when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Germany&quot; ))then &quot;Germany&quot; when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Netherlands&quot; ))then &quot;Netherlands&quot; when (&#39;Region&#39; == &quot;EMEA&quot; ) then &quot;RO EMEA&quot; when  (&#39;Region&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Australia&quot; ))then &quot;ANZ&quot; when  (&#39;Region&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;ANZ&quot; ))then &quot;ANZ&quot; when  (&#39;Region&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;India&quot; ))then &quot;India&quot;  when  (&#39;Region&#39; == &quot;APAC&quot; )then &quot;RO APAC&quot;  when  (&#39;Region&#39; == &quot;APAC&quot; )then &quot;RO APAC&quot;  when  (&#39;Region&#39; == &quot;JP&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Japan&quot; ))then &quot;Japan&quot;  when  (&#39;Region&#39; == &quot;JP&quot;  )then &quot;RO JP&quot;  when  (&#39;Region&#39; == &quot;LACA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Brazil&quot; ))then &quot;Brazil&quot; when (&#39;Region&#39; == &quot;LACA&quot; )then &quot;RO LACA&quot; when (&#39;Region&#39; == &quot;Other&quot; )then &quot;Other&quot; else &quot;ERROR&quot; end as &#39;Country&#39; ; HC = filter HC by  {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\nHC = filter HC by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nHC = filter HC by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYHC = filter HC by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYHC = filter HC by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_HC = filter HC by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYHC = filter HC by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYHC = filter HC by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD SWE INFRA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSW = load &quot;APM_SWE_INFRA&quot;;\nSW = filter SW by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nSW = filter SW by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nSW = foreach SW generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Subcloud&#39; as &#39;Subcloud&#39;,&#39;Lead&#39; as &#39;Lead&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;SWE&#39;) as &#39;SWE&#39;,sum(&#39;INFRA&#39;) as &#39;INFRA&#39;,&#39;Region&#39; as &#39;Region&#39;,  case when (&#39;Region&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Canada&quot; ))then &quot;Canada&quot; when (&#39;Region&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;United States&quot; ))then &quot;United States&quot; when (&#39;Region&#39; == &quot;AMER&quot;)then &quot;RO AMER&quot; when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;United Kingdom&quot; ))then &quot;United Kingdom&quot;  when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;France&quot; ))then &quot;France&quot; when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Germany&quot; ))then &quot;Germany&quot; when  (&#39;Region&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Netherlands&quot; ))then &quot;Netherlands&quot; when (&#39;Region&#39; == &quot;EMEA&quot; ) then &quot;RO EMEA&quot; when  (&#39;Region&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Australia&quot; ))then &quot;ANZ&quot; when  (&#39;Region&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;ANZ&quot; ))then &quot;ANZ&quot; when  (&#39;Region&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;India&quot; ))then &quot;India&quot;  when  (&#39;Region&#39; == &quot;APAC&quot; )then &quot;RO APAC&quot;  when  (&#39;Region&#39; == &quot;APAC&quot; )then &quot;RO APAC&quot;  when  (&#39;Region&#39; == &quot;JP&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Japan&quot; ))then &quot;Japan&quot;  when  (&#39;Region&#39; == &quot;JP&quot;  )then &quot;RO JP&quot;  when  (&#39;Region&#39; == &quot;LACA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Brazil&quot; ))then &quot;Brazil&quot; when (&#39;Region&#39; == &quot;LACA&quot; )then &quot;RO LACA&quot; when (&#39;Region&#39; == &quot;Other&quot; )then &quot;Other&quot; else &quot;ERROR&quot; end as &#39;Country&#39;  ; SW = filter SW by  {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\nq2_CYSW = filter SW by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYSW = filter SW by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_SW = filter SW by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYSW = filter SW by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYSW = filter SW by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_SW = filter SW by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Grouping------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult = group  q2_CYACV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYACV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYACV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYACV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYAOV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYAOV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYAOV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYAOV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full,  q2_CYATT by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYATT by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYATT by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYATT by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q4_CYATT by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full,  q2_CYPipegen by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYPipegen by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYPipegen by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYPipegen by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q2_CYHC by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYHC by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q2_PY_2_HC by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYHC by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYHC by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q3_PY_2_HC by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYSW by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYSW by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q2_PY_2_SW by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYSW by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYSW by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q3_PY_2_SW by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;,MasterHierarchy by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;Master_l1&quot;).asString()}}&#39;;\n----------------------------------------------/////////////////////////////////////////------PROJECTION----- -////////////////////////////////////////////////-----------------------------------------------------------------------------------------------------------------------------------------------------\nresult = foreach result generate coalesce(MasterHierarchy.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;Master_l1&quot;).asString()}}&#39;, q2_CYACV.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYACV.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYACV.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYACV.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYAOV.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYAOV.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYAOV.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYAOV.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYPipegen.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYPipegen.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYPipegen.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYPipegen.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYHC.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYHC.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;,q2_PY_2_HC.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYHC.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYHC.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;,q3_PY_2_HC.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYSW.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYSW.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;,q2_PY_2_SW.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYSW.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYSW.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;,q3_PY_2_SW.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;) as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, last(MasterHierarchy.&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;Master_l1_Rank&quot;).asString()}}&#39;) as &#39;SortOrder&#39;, coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) as &#39;YTD ACV Absolute&#39;, ((coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;, ((coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YTD ACV Growth&#39;, coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) as &#39;YTD AOV Absolute&#39;, ((coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, ((coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YTD AOV Growth&#39;, coalesce(sum(q2_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q2&#39;,coalesce(sum(q3_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q3&#39;,coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q2&#39; ,coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q2&#39;,coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q3&#39; ,coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------FINAL PROJECTION-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult = order result by &#39;SortOrder&#39; asc;\nresult = foreach result generate &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;, &#39;YTD ACV Absolute&#39; as &#39;YTD ACV Absolute&#39;, &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;, &#39;YTD ACV Growth&#39; as &#39;YTD ACV Growth&#39;, &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, &#39;YTD AOV Absolute&#39; as &#39;YTD AOV Absolute&#39;, &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, &#39;YTD AOV Growth&#39; as &#39;YTD AOV Growth&#39;, coalesce(sum(&#39;Attrition_CY_Q2&#39;),0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Attrition Absolute&#39;, coalesce(sum(&#39;Attrition_CY_Q3&#39;),0) as &#39;YTD Attrition Absolute&#39;,(coalesce(round(sum(&#39;TTM_Product_CY_Q2&#39;), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q2), 0), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, (coalesce(round(sum(&#39;TTM_Product_CY_Q3&#39;), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q3), 0), 0)) * 100 as &#39;YTD Attrition TTM Rate&#39;, &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} PipeGen Absolute&#39;,&#39;YTD Pipegen Absolute&#39; as &#39;YTD PipeGen Absolute&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} PipeGen Growth&#39;,   &#39;YTD Pipegen Growth&#39; as  &#39;YTD PipeGen Growth&#39;;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true
      },
      "Fiscal_Year_1": {
        "broadcastFacet": true,
        "label": "Fiscal_Year",
        "selectMode": "singlerequired",
        "type": "staticflex",
        "values": [
          "{&quot;display&quot;:&quot;2019&quot;,&quot;value&quot;:2019,&quot;CY&quot;:&quot;2019&quot;,&quot;PY&quot;:&quot;2018&quot;,&quot;PY_2&quot;:&quot;2017&quot;}"
        ]
      },
      "Table_Measures_2_Header_Top": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Measures_2_Header_Top",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nresult_Total = group MasterHierarchy by all;\nresult_Total = foreach result_Total generate &quot;    &quot; as &#39;    &#39;, &quot;AE                                                                                          &quot; as &#39;AE&#39;, &quot;Co Prime                                                                                          &quot; as &#39;Co Prime&#39;,&quot;SE                                                                                          &quot; as &#39;SE&#39;;\n--, &quot;SWE                                                                                          &quot; as &#39;SWE&#39;,&quot;INFRA                                                                                          &quot; as &#39;INFRA&#39;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart",
          "visualizationType": "hbar"
        }
      },
      "CSG_MEASURES": {
        "broadcastFacet": false,
        "groups": [],
        "label": "CSG_MEASURES",
        "numbers": [],
        "query": "--CSG LEADER PLUS 1\n\nMasterHierarchy = load &quot;Master_Hierarchy_GM&quot;;\nMasterHierarchy = filter MasterHierarchy by&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;  in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\n\n-------------------LOAD ACV-------------------------------------\nACV = load &quot;APM_ACV&quot;;\nACV = filter ACV by {{column(Filter_Lead.selection,[&quot;Lead&quot;]).asEquality(&#39;Lead&#39;)}};\nACV = filter ACV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\n\nACV = group ACV by (&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;,&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39;, &#39;Month&#39;, &#39;Fiscal_Year&#39;, &#39;Region&#39;, &#39;Country&#39;, &#39;Subcloud&#39;, &#39;Cloud_2&#39;);\n\nACV = foreach ACV generate &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, \n&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39;, \n&#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39; , &#39;Month&#39; as &#39;Month&#39;, &#39;Region&#39; as &#39;Region&#39;, &#39;Subcloud&#39;, &#39;Cloud_2&#39;, sum(&#39;ACV&#39;) as &#39;ACV&#39;,\n{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \n\nACV = filter ACV by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nACV_SuccessPlans = filter ACV by &#39;Subcloud&#39; == &quot;Success Plans&quot;;\nACV_SuccessPlans = filter ACV_SuccessPlans by {{column(Cloud_2_1.selection,[&quot;Cloud_2&quot;]).asEquality(&#39;Cloud_2&#39;)}};\n\nAdvisory_Bookings = filter ACV by &#39;Subcloud&#39; == &quot;Advisory&quot;;\nAdvisory_Bookings = filter Advisory_Bookings by {{column(Cloud_2_1.selection,[&quot;Cloud_2&quot;]).asEquality(&#39;Cloud_2&#39;)}};\n\nProject_Bookings = filter ACV by &#39;Subcloud&#39; == &quot;Projects&quot;;\nProject_Bookings = filter Project_Bookings by {{column(Cloud_2_1.selection,[&quot;Cloud_2&quot;]).asEquality(&#39;Cloud_2&#39;)}};\n\n----------------------------FILTER ACV--------------------------------------------\nq2_CYACV = filter ACV_SuccessPlans by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYACV = filter ACV_SuccessPlans by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYACV = filter ACV_SuccessPlans by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYACV = filter ACV_SuccessPlans by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n\nq2_CYACV_a = filter Advisory_Bookings by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYACV_a = filter Advisory_Bookings by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYACV_a = filter Advisory_Bookings by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYACV_a = filter Advisory_Bookings by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n\nq2_CYACV_p = filter Project_Bookings by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYACV_p = filter Project_Bookings by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYACV_p = filter Project_Bookings by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYACV_p = filter Project_Bookings by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n\n\n---------------------LOAD AOV----------------------------------------\nAOV = load &quot;APM_AOV&quot;;\nAOV = filter AOV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nAOV = filter AOV by {{column(Filter_Lead.selection,[&quot;Lead&quot;]).asEquality(&#39;Lead&#39;)}};\n\n--SPECIFIC FILTER FOR SUCCESS PLAN AOV\nAOV = filter AOV by &#39;Subcloud&#39; == &quot;Success Plans&quot;;\nAOV = filter AOV by {{column(Cloud_2_1.selection,[&quot;Cloud_2&quot;]).asEquality(&#39;Cloud_2&#39;)}};\n\nAOV = foreach AOV generate &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, \n&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39;, \n&#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39;, &#39;Region&#39; as &#39;Region&#39;, sum(&#39;AOV&#39;) as &#39;AOV&#39;,\n{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;  \n\nAOV = filter AOV by  {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\n-----------------------------FILTER AOV ---------------------------------------\nq2_CYAOV = filter AOV by &#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYAOV = filter AOV by &#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYAOV = filter AOV by &#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYAOV = filter AOV by &#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n\n\n\n--------------------------------------------------GROUPING LEVEL1-------------------------------------------------------------------------------------------\n\nresult = group \nq2_CYACV by &#39;Lead&#39; full, \nq2_PYACV by &#39;Lead&#39; full, \nq3_CYACV by &#39;Lead&#39; full, \nq3_PYACV by &#39;Lead&#39; full, \n\nq2_CYAOV by &#39;Lead&#39; full, \nq2_PYAOV by &#39;Lead&#39; full, \nq3_CYAOV by &#39;Lead&#39; full, \nq3_PYAOV by &#39;Lead&#39; full,  \n\nq2_CYACV_a by &#39;Lead&#39; full, \nq2_PYACV_a by &#39;Lead&#39; full, \nq3_CYACV_a by &#39;Lead&#39; full, \nq3_PYACV_a by &#39;Lead&#39; full, \n\nq2_CYACV_p by &#39;Lead&#39; full, \nq2_PYACV_p by &#39;Lead&#39; full, \nq3_CYACV_p by &#39;Lead&#39; full, \nq3_PYACV_p by &#39;Lead&#39; full, \n\nMasterHierarchy by &#39;Lead&#39;;\n\n\n-----------------PROJECTION LEVEL 1 ----------------------------------------------\n\nresult = foreach result generate \n&quot;☁ &quot; + coalesce(q2_CYACV.&#39;Lead&#39;, q2_PYACV.&#39;Lead&#39;, q3_CYACV.&#39;Lead&#39;, q3_PYACV.&#39;Lead&#39;, q2_CYAOV.&#39;Lead&#39;, q2_PYAOV.&#39;Lead&#39;, q3_CYAOV.&#39;Lead&#39;, q3_PYAOV.&#39;Lead&#39;, q2_CYACV_a.&#39;Lead&#39;, q2_PYACV_a.&#39;Lead&#39;, q3_CYACV_a.&#39;Lead&#39;, q3_PYACV_a.&#39;Lead&#39;, q2_CYACV_p.&#39;Lead&#39;, q2_PYACV_p.&#39;Lead&#39;, q3_CYACV_p.&#39;Lead&#39;, q3_PYACV_p.&#39;Lead&#39;) as &#39;Lead&#39;, \n\n&quot; ☁ &quot; + coalesce(q2_CYACV.&#39;Lead&#39;, q2_PYACV.&#39;Lead&#39;, q3_CYACV.&#39;Lead&#39;, q3_PYACV.&#39;Lead&#39;, q2_CYAOV.&#39;Lead&#39;, q2_PYAOV.&#39;Lead&#39;, q3_CYAOV.&#39;Lead&#39;, q3_PYAOV.&#39;Lead&#39;, q2_CYACV_a.&#39;Lead&#39;, q2_PYACV_a.&#39;Lead&#39;, q3_CYACV_a.&#39;Lead&#39;, q3_PYACV_a.&#39;Lead&#39;, q2_CYACV_p.&#39;Lead&#39;, q2_PYACV_p.&#39;Lead&#39;, q3_CYACV_p.&#39;Lead&#39;, q3_PYACV_p.&#39;Lead&#39;) as &#39;Lead_1&#39;, \n\nlast(MasterHierarchy.&#39;Lead_Rank&#39;) as &#39;Sort_Code&#39;,\n\ncoalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan ACV Absolute&#39;, \ncoalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) as &#39;YTD Success Plan ACV Absolute&#39;, \n((coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Success Plan ACV Growth&#39;, \n((coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YTD Success Plan ACV Growth&#39;, \n\ncoalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan AOV Absolute&#39;, \ncoalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) as &#39;YTD Success Plan AOV Absolute&#39;, \n((coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Success Plan AOV Growth&#39;, \n((coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YTD Success Plan AOV Growth&#39;,\n\ncoalesce(sum(q2_CYACV_a.&#39;ACV&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Advisory ACV Absolute&#39;, \ncoalesce(sum(q3_CYACV_a.&#39;ACV&#39;), 0) as &#39;YTD Advisory ACV Absolute&#39;, \n((coalesce(sum(q2_CYACV_a.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV_a.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV_a.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Advisory ACV Growth&#39;, \n((coalesce(sum(q3_CYACV_a.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV_a.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV_a.&#39;ACV&#39;), 0)) * 100 as &#39;YTD Advisory ACV Growth&#39;,\n\ncoalesce(sum(q2_CYACV_p.&#39;ACV&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Project ACV Absolute&#39;, \ncoalesce(sum(q3_CYACV_p.&#39;ACV&#39;), 0) as &#39;YTD Project ACV Absolute&#39;, \n((coalesce(sum(q2_CYACV_p.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV_p.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV_p.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Project ACV Growth&#39;, \n((coalesce(sum(q3_CYACV_p.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV_p.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV_p.&#39;ACV&#39;), 0)) * 100 as &#39;YTD Project ACV Growth&#39;\n;\n\n--------------------------GROUPING LEVEL2-----------------------------------------------\n\nresult_SubCloud = group \nq2_CYACV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, \nq2_PYACV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, \nq3_CYACV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, \nq3_PYACV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, \n\nq2_CYAOV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, \nq2_PYAOV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, \nq3_CYAOV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, \nq3_PYAOV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, \n\nq2_CYACV_a by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, \nq2_PYACV_a by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, \nq3_CYACV_a by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, \nq3_PYACV_a by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, \n\nq2_CYACV_p by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, \nq2_PYACV_p by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, \nq3_CYACV_p by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, \nq3_PYACV_p by (&#39;Lead&#39;, &#39;Lead_1&#39;)\n;\n\n\n-------------------------------PROJECTION LEVEL2----------------------------------\n\nresult_SubCloud = foreach result_SubCloud generate \n&quot;    ↳ &quot; + coalesce(q2_CYACV.&#39;Lead_1&#39;, q2_PYACV.&#39;Lead_1&#39;, q3_CYACV.&#39;Lead_1&#39;, q3_PYACV.&#39;Lead_1&#39;, q2_CYAOV.&#39;Lead_1&#39;, q2_PYAOV.&#39;Lead_1&#39;, q3_CYAOV.&#39;Lead_1&#39;, q3_PYAOV.&#39;Lead_1&#39;, q2_CYACV_a.&#39;Lead_1&#39;, q2_PYACV_a.&#39;Lead_1&#39;, q3_CYACV_a.&#39;Lead_1&#39;, q3_PYACV_a.&#39;Lead_1&#39;, q2_CYACV_p.&#39;Lead_1&#39;, q2_PYACV_p.&#39;Lead_1&#39;, q3_CYACV_p.&#39;Lead_1&#39;, q3_PYACV_p.&#39;Lead_1&#39;) as &#39;Lead_1&#39;, \n\n&quot;☁ &quot; + coalesce(q2_CYACV.&#39;Lead&#39;, q2_PYACV.&#39;Lead&#39;, q3_CYACV.&#39;Lead&#39;, q3_PYACV.&#39;Lead&#39;, q2_CYAOV.&#39;Lead&#39;, q2_PYAOV.&#39;Lead&#39;, q3_CYAOV.&#39;Lead&#39;, q3_PYAOV.&#39;Lead&#39;, q2_CYACV_a.&#39;Lead&#39;, q2_PYACV_a.&#39;Lead&#39;, q3_CYACV_a.&#39;Lead&#39;, q3_PYACV_a.&#39;Lead&#39;, q2_CYACV_p.&#39;Lead&#39;, q2_PYACV_p.&#39;Lead&#39;, q3_CYACV_p.&#39;Lead&#39;, q3_PYACV_p.&#39;Lead&#39;) as &#39;Lead&#39;, \n\ncoalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan ACV Absolute&#39;, \ncoalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) as &#39;YTD Success Plan ACV Absolute&#39;, \n((coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Success Plan ACV Growth&#39;, \n((coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YTD Success Plan ACV Growth&#39;, \n\ncoalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan AOV Absolute&#39;, \ncoalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) as &#39;YTD Success Plan AOV Absolute&#39;, \n((coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Success Plan AOV Growth&#39;, \n((coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YTD Success Plan AOV Growth&#39;,\n\ncoalesce(sum(q2_CYACV_a.&#39;ACV&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Advisory ACV Absolute&#39;, \ncoalesce(sum(q3_CYACV_a.&#39;ACV&#39;), 0) as &#39;YTD Advisory ACV Absolute&#39;, \n((coalesce(sum(q2_CYACV_a.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV_a.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV_a.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Advisory ACV Growth&#39;, \n((coalesce(sum(q3_CYACV_a.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV_a.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV_a.&#39;ACV&#39;), 0)) * 100 as &#39;YTD Advisory ACV Growth&#39;,\n\ncoalesce(sum(q2_CYACV_p.&#39;ACV&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Project ACV Absolute&#39;, \ncoalesce(sum(q3_CYACV_p.&#39;ACV&#39;), 0) as &#39;YTD Project ACV Absolute&#39;, \n((coalesce(sum(q2_CYACV_p.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV_p.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV_p.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Project ACV Growth&#39;, \n((coalesce(sum(q3_CYACV_p.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV_p.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV_p.&#39;ACV&#39;), 0)) * 100 as &#39;YTD Project ACV Growth&#39;;\n\n\n----------------------FINAL UNION-------------------------------\n\nFinal = union result, result_SubCloud;\nFinal = foreach Final generate \n\n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan ACV Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan ACV Absolute&#39;, \n&#39;YTD Success Plan ACV Absolute&#39; as &#39;YTD Success Plan ACV Absolute&#39;, \n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Success Plan ACV Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan ACV Growth&#39;, \n&#39;YTD Success Plan ACV Growth&#39; as &#39;YTD Success Plan ACV Growth&#39;, \n\n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan AOV Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan AOV Absolute&#39;,\n&#39;YTD Success Plan AOV Absolute&#39; as &#39;YTD Success Plan AOV Absolute&#39;, \n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Success Plan AOV Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan AOV Growth&#39;, \n&#39;YTD Success Plan AOV Growth&#39; as &#39;YTD Success Plan AOV Growth&#39;,\n\n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Advisory ACV Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Advisory ACV Absolute&#39;, \n&#39;YTD Advisory ACV Absolute&#39; as &#39;YTD Advisory ACV Absolute&#39;, \n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Advisory ACV Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Advisory ACV Growth&#39;, \n&#39;YTD Advisory ACV Growth&#39; as &#39;YTD Advisory ACV Growth&#39;,\n\n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Project ACV Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Project ACV Absolute&#39;, \n&#39;YTD Project ACV Absolute&#39; as &#39;YTD Project ACV Absolute&#39;, \n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Project ACV Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Project ACV Growth&#39;, \n&#39;YTD Project ACV Growth&#39; as &#39;YTD Project ACV Growth&#39;,\n\n&#39;Lead&#39; as &#39;Lead&#39;, \n&#39;Lead_1&#39; as &#39;Lead_1&#39;, \ncase when (&#39;Lead&#39; == &quot;☁ Tony Owens&quot;) then &quot;1. Tony Owens&quot; \nwhen (&#39;Lead&#39; == &quot;☁ Warren Wick&quot;) then &quot;2. Warren Wick&quot;  \nwhen (&#39;Lead&#39; == &quot;☁ Andrew Kofoid&quot;) then &quot;3. Andrew Kofoid&quot; \nwhen (&#39;Lead&#39; == &quot;☁ Miguel Milano&quot;) then &quot;4. Miguel Milano&quot; \nwhen (&#39;Lead&#39; == &quot;☁ Mark Innes&quot;) then &quot;5. Mark Innes&quot; \nwhen (&#39;Lead&#39; == &quot;☁ Shinichi Koide&quot;) then &quot;6. Shinichi Koide&quot; \nwhen (&#39;Lead&#39; == &quot;☁ Dave Rey&quot;) then &quot;7. Dave Rey&quot; \nwhen (&#39;Lead&#39; == &quot;☁ Enrique Ortegon&quot;) then &quot;8. Enrique Ortegon&quot; \nwhen (&#39;Lead&#39; == &quot;☁ Other&quot;) then &quot;9. Other&quot; else &quot;10. unkown&quot; end as &#39;Lead_Rank&#39;,\n\ncase when(&#39;Lead_1&#39; == &quot;    ↳ Other&quot;) then &quot;    ↳ Z.Other&quot; else &#39;Lead_1&#39; end as &#39;Lead_1_Rank&#39;\n\n;\n\n\n--------------------------ORDERING LEAD RANK------------------\nFinal = order Final by (&#39;Lead_Rank&#39; asc, &#39;Lead_1_Rank&#39; asc);\n\n------------------IMPLEMENT FAKE NONE FOR UNION ----------------------------------------------------------\n\nNone = foreach Final generate \n0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan ACV Absolute&#39;, \n0 as &#39;YTD Success Plan ACV Absolute&#39;, \n0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan ACV Growth&#39;, \n0 as &#39;YTD Success Plan ACV Growth&#39;, \n\n0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan AOV Absolute&#39;,\n0 as &#39;YTD Success Plan AOV Absolute&#39;, \n0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan AOV Growth&#39;, \n0 as &#39;YTD Success Plan AOV Growth&#39;,\n\n0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Advisory ACV Absolute&#39;, \n0 as &#39;YTD Advisory ACV Absolute&#39;, \n0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Advisory ACV Growth&#39;, \n0 as &#39;YTD Advisory ACV Growth&#39;,\n\n0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Project ACV Absolute&#39;, \n0 as &#39;YTD Project ACV Absolute&#39;, \n0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Project ACV Growth&#39;, \n0 as &#39;YTD Project ACV Growth&#39;,\n&quot;None&quot; as &#39;Lead&#39;, \n&quot;None&quot; as &#39;Lead_1&#39;,\n&quot;None&quot; as &#39;Lead_Rank&#39;;\n\n----------------------------FINAL UNION--------------------------------\n\nResult = union Final, None;\nResult = filter Result by &#39;Lead&#39; != &quot;None&quot;;\nResult = filter Result by &#39;Lead_1&#39; != &quot;    ↳ N/A&quot;;\n\nResult = foreach Result generate \n&#39;Lead_1&#39;+&quot;                  &quot; as &#39;Lead_1&#39;, \n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan ACV Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan ACV Absolute&#39;, \n&#39;YTD Success Plan ACV Absolute&#39; as &#39;YTD Success Plan ACV Absolute&#39;, \n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan ACV Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan ACV Growth&#39;, \n&#39;YTD Success Plan ACV Growth&#39; as &#39;YTD Success Plan ACV Growth&#39;, \n\n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan AOV Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan AOV Absolute&#39;,\n&#39;YTD Success Plan AOV Absolute&#39; as &#39;YTD Success Plan AOV Absolute&#39;, \n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan AOV Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Success Plan AOV Growth&#39;, \n&#39;YTD Success Plan AOV Growth&#39; as &#39;YTD Success Plan AOV Growth&#39;,\n\n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Advisory ACV Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Advisory ACV Absolute&#39;, \n&#39;YTD Advisory ACV Absolute&#39; as &#39;YTD Advisory ACV Absolute&#39;, \n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Advisory ACV Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Advisory ACV Growth&#39;, \n&#39;YTD Advisory ACV Growth&#39; as &#39;YTD Advisory ACV Growth&#39;,\n\n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Project ACV Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Project ACV Absolute&#39;, \n&#39;YTD Project ACV Absolute&#39; as &#39;YTD Project ACV Absolute&#39;, \n&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Project ACV Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Project ACV Growth&#39;, \n&#39;YTD Project ACV Growth&#39; as &#39;YTD Project ACV Growth&#39;;\n\n",
        "receiveFacet": false,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": false
      },
      "Table_Level_2_Measures_3": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Level_2_Measures_3",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy_GM&quot;;\nMasterHierarchy = filter MasterHierarchy by&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;  in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nnACV = load &quot;APM_ACV&quot;;\nACV = filter ACV by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nACV = group ACV by (&#39;Cloud&#39;,&#39;Lead&#39;,&#39;Lead_1&#39;, &#39;Quarter&#39;,&#39;Month&#39;, &#39;Fiscal_Year&#39;, &#39;Region&#39; , &#39;Country&#39;);\nACV = foreach ACV generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Lead&#39; as &#39;Lead&#39;,&#39;Lead_1&#39; as &#39;Lead_1&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39; ,&#39;Month&#39; as &#39;Month&#39;,sum(&#39;ACV&#39;) as &#39;ACV&#39;, &#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nACV = filter ACV by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nACV = filter ACV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;  in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYACV = filter ACV by (&#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}} ) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYACV = filter ACV by (&#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}} ) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYACV = filter ACV by (&#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}} ) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYACV = filter ACV by (&#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}} ) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nn\nAOV = load &quot;APM_AOV&quot;;\nAOV = filter AOV by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nAOV = group AOV by (&#39;Cloud&#39;,&#39;Lead&#39;, &#39;Lead_1&#39;, &#39;Quarter&#39;, &#39;Month&#39;, &#39;Fiscal_Year&#39;, &#39;Region&#39; , &#39;Country&#39;);\nAOV = foreach AOV generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Lead&#39; as &#39;Lead&#39;,&#39;Lead_1&#39; as &#39;Lead_1&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;AOV&#39;) as &#39;AOV&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nAOV = filter AOV by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nAOV = filter AOV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;  in {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYAOV = filter AOV by (&#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYAOV = filter AOV by (&#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYAOV = filter AOV by (&#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month_cum&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYAOV = filter AOV by (&#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month_cum&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD Attrition AOV-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nAttrition = load &quot;APM_Attrition&quot;;\nAttrition = filter Attrition by &#39;Segment&#39; != &quot;CSG&quot;;\nAttrition = filter Attrition by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;  in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nAttrition = filter Attrition by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nAttrition = foreach Attrition generate &#39;Lead&#39; as &#39;Lead&#39;, &#39;Lead_1&#39; as &#39;Lead_1&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, &#39;Month&#39; as &#39;Month&#39;, sum(&#39;Attrition&#39;) * -1 as &#39;Attrition_Product&#39;, sum(&#39;TTM&#39;) * -1 as &#39;TTM_Product&#39;, sum(&#39;AOV_twelve_month_ago&#39;) as &#39;AOV_twelve_month_ago&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nAttrition = filter Attrition by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nq2_CYATT = filter Attrition by (&#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYATT = filter Attrition by (&#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYATT = filter Attrition by (&#39;Month&#39; in{{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYATT = filter Attrition by (&#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq4_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD APM PipeGen-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nPipegen = load &quot;APM_Pipegen1&quot;;\nPipegen = filter Pipegen by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\n Pipegen = group Pipegen by (&#39;Fiscal_Year&#39;,&#39;Quarter&#39;,&#39;Region&#39;,&#39;Cloud&#39;,&#39;Month&#39;,&#39;Lead&#39;,&#39;Lead_1&#39;,&#39;Country&#39;);\nPipegen = foreach Pipegen generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Lead&#39; as &#39;Lead&#39;,&#39;Lead_1&#39; as &#39;Lead_1&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Pipegen&#39;) as &#39;Pipegen&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nPipegen = filter Pipegen by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nPipegen = filter Pipegen by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;  in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nn\nHC = load &quot;APM_HC&quot;;\nHC = filter HC by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nHC = foreach HC generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Lead&#39; as &#39;Lead&#39;,&#39;Lead_1&#39; as &#39;Lead_1&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;SE&#39;) as &#39;SE&#39;,sum(&#39;AE&#39;) as &#39;AE&#39;,sum(&#39;Co_Prime&#39;) as &#39;Co_Prime&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nHC = filter HC by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nHC = filter HC by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;  in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYHC = filter HC by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYHC = filter HC by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYHC = filter HC by (&#39;Quarter&#39; in{{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYHC = filter HC by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nn\nSW = load &quot;APM_SWE_INFRA&quot;;\nSW = filter SW by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nSW = foreach SW generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Lead&#39; as &#39;Lead&#39;,&#39;Lead_1&#39; as &#39;Lead_1&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;SWE&#39;) as &#39;SWE&#39;,sum(&#39;INFRA&#39;) as &#39;INFRA&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nSW = filter SW by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nSW = filter SW by&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_SW = filter SW by (&#39;Quarter&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYSW = filter SW by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYSW = filter SW by (&#39;Quarter&#39; in{{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_SW = filter SW by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnDEALS = load &quot;APM_DEALS&quot;;\nDEALS = filter DEALS by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nDEALS = filter DEALS by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nDEALS = foreach DEALS generate  &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;X10M_Deals&#39;) as &#39;X10M_Deals&#39;, sum(&#39;X10M&#39;) as &#39;X10M&#39;, sum(&#39;Runrate_Volume&#39;) as &#39;Runrate_Volume&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nDEALS = filter DEALS by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER DEALS ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYDEALS = filter DEALS by &#39;Quarter&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYDEALS = filter DEALS by &#39;Quarter&#39; in   {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYDEALS = filter DEALS by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYDEALS = filter DEALS by &#39;Quarter&#39; in{{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------////////////////////////---------LOAD LOGOS-------///////////////////////////////////////////// -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nLOGOS = load &quot;APM_LOGO&quot;;\nLOGOS = filter LOGOS by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nLOGOS = filter LOGOS by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nLOGOS = foreach LOGOS generate  &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;New_Logos&#39;) as &#39;New_Logos&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;  LOGOS = filter LOGOS by  {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER LOGOS ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYLOGOS = filter LOGOS by &#39;Quarter&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYLOGOS = filter LOGOS by &#39;Quarter&#39; in   {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYLOGOS = filter LOGOS by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYLOGOS = filter LOGOS by &#39;Quarter&#39; in{{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnLOGOSLOST = load &quot;APM_LOST_LOGO&quot;;\nLOGOSLOST = filter LOGOSLOST by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nLOGOSLOST = filter LOGOSLOST by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nLOGOSLOST = foreach LOGOSLOST generate  &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Lost_Logo_Count&#39;) as &#39;Lost_Logo_Count&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;;\nLOGOSLOST = filter LOGOSLOST by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER LOGOSLOST ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYLOGOSLOST = filter LOGOSLOST by &#39;Quarter&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYLOGOSLOST = filter LOGOSLOST by &#39;Quarter&#39; in   {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYLOGOSLOST = filter LOGOSLOST by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYLOGOSLOST = filter LOGOSLOST by &#39;Quarter&#39; in{{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nn\nresult = group q2_CYACV by &#39;Lead&#39; full, q2_PYACV by &#39;Lead&#39; full, q3_CYACV by &#39;Lead&#39; full, q3_PYACV by &#39;Lead&#39; full, q2_CYAOV by &#39;Lead&#39; full, q2_PYAOV by &#39;Lead&#39; full, q3_CYAOV by &#39;Lead&#39; full, q3_PYAOV by &#39;Lead&#39; full, q2_CYATT by &#39;Lead&#39; full, q2_PYATT by &#39;Lead&#39; full, q3_CYATT by &#39;Lead&#39; full, q4_CYATT by &#39;Lead&#39; full, q3_PYATT by &#39;Lead&#39; full, q2_CYPipegen by &#39;Lead&#39; full, q2_PYPipegen by &#39;Lead&#39; full, q3_CYPipegen by &#39;Lead&#39; full, q3_PYPipegen by &#39;Lead&#39; full, q2_CYHC by &#39;Lead&#39; full, q2_PYHC by &#39;Lead&#39; full, q2_PY_2_HC by &#39;Lead&#39; full, q3_CYHC by &#39;Lead&#39; full, q3_PYHC by &#39;Lead&#39; full, q3_PY_2_HC by &#39;Lead&#39; full, q2_CYSW by &#39;Lead&#39; full, q2_PYSW by &#39;Lead&#39; full, q2_PY_2_SW by &#39;Lead&#39; full, q3_CYSW by &#39;Lead&#39; full, q3_PYSW by &#39;Lead&#39; full, q3_PY_2_SW by &#39;Lead&#39; full ,q2_CYDEALS by &#39;Lead&#39; full, q2_PYDEALS by &#39;Lead&#39; full, q3_CYDEALS by &#39;Lead&#39; full, q3_PYDEALS by &#39;Lead&#39; full,q2_CYLOGOS by &#39;Lead&#39; full, q2_PYLOGOS by &#39;Lead&#39; full, q3_CYLOGOS by &#39;Lead&#39; full, q3_PYLOGOS by &#39;Lead&#39; full,q2_CYLOGOSLOST by &#39;Lead&#39; full, q2_PYLOGOSLOST by &#39;Lead&#39; full, q3_CYLOGOSLOST by &#39;Lead&#39; full, q3_PYLOGOSLOST by &#39;Lead&#39;  , MasterHierarchy by &#39;Lead&#39;;\nn\nresult = foreach result generate &quot;☁ &quot; + coalesce(q2_CYACV.&#39;Lead&#39;, q2_PYACV.&#39;Lead&#39;, q3_CYACV.&#39;Lead&#39;, q3_PYACV.&#39;Lead&#39;, q2_CYAOV.&#39;Lead&#39;, q2_PYAOV.&#39;Lead&#39;, q3_CYAOV.&#39;Lead&#39;, q3_PYAOV.&#39;Lead&#39;, q2_PYATT.&#39;Lead&#39;, q2_CYATT.&#39;Lead&#39;, q3_PYATT.&#39;Lead&#39;, q3_CYATT.&#39;Lead&#39;, q2_CYPipegen.&#39;Lead&#39;, q2_PYPipegen.&#39;Lead&#39;, q3_CYPipegen.&#39;Lead&#39;, q3_PYPipegen.&#39;Lead&#39;, q2_CYHC.&#39;Lead&#39;, q2_PYHC.&#39;Lead&#39;, q3_CYHC.&#39;Lead&#39;, q3_PYHC.&#39;Lead&#39;, q2_CYSW.&#39;Lead&#39;, q2_PYSW.&#39;Lead&#39;, q3_CYSW.&#39;Lead&#39;, q3_PYSW.&#39;Lead&#39;,q2_CYDEALS.&#39;Lead&#39;, q2_PYDEALS.&#39;Lead&#39;, q3_CYDEALS.&#39;Lead&#39;, q3_PYDEALS.&#39;Lead&#39;,q2_CYLOGOS.&#39;Lead&#39;, q2_PYLOGOS.&#39;Lead&#39;, q3_CYLOGOS.&#39;Lead&#39;, q3_PYLOGOS.&#39;Lead&#39;,q2_CYLOGOSLOST.&#39;Lead&#39;, q2_PYLOGOSLOST.&#39;Lead&#39;, q3_CYLOGOSLOST.&#39;Lead&#39;, q3_PYLOGOSLOST.&#39;Lead&#39;) as &#39;Lead&#39;, &quot; ☁ &quot; + coalesce(q2_CYACV.&#39;Lead&#39;, q2_PYACV.&#39;Lead&#39;, q3_CYACV.&#39;Lead&#39;, q3_PYACV.&#39;Lead&#39;, q2_CYAOV.&#39;Lead&#39;, q2_PYAOV.&#39;Lead&#39;, q3_CYAOV.&#39;Lead&#39;, q3_PYAOV.&#39;Lead&#39;, q2_PYATT.&#39;Lead&#39;, q2_CYATT.&#39;Lead&#39;, q3_PYATT.&#39;Lead&#39;, q3_CYATT.&#39;Lead&#39;, q2_CYPipegen.&#39;Lead&#39;, q2_PYPipegen.&#39;Lead&#39;, q3_CYPipegen.&#39;Lead&#39;, q3_PYPipegen.&#39;Lead&#39;, q2_CYHC.&#39;Lead&#39;, q2_PYHC.&#39;Lead&#39;, q3_CYHC.&#39;Lead&#39;, q3_PYHC.&#39;Lead&#39;, q2_CYSW.&#39;Lead&#39;, q2_PYSW.&#39;Lead&#39;, q3_CYSW.&#39;Lead&#39;, q3_PYSW.&#39;Lead&#39;,q2_CYDEALS.&#39;Lead&#39;, q2_PYDEALS.&#39;Lead&#39;, q3_CYDEALS.&#39;Lead&#39;, q3_PYDEALS.&#39;Lead&#39;,q2_CYLOGOS.&#39;Lead&#39;, q2_PYLOGOS.&#39;Lead&#39;, q3_CYLOGOS.&#39;Lead&#39;, q3_PYLOGOS.&#39;Lead&#39;,q2_CYLOGOSLOST.&#39;Lead&#39;, q2_PYLOGOSLOST.&#39;Lead&#39;, q3_CYLOGOSLOST.&#39;Lead&#39;, q3_PYLOGOSLOST.&#39;Lead&#39;) as &#39;Lead_1&#39;, coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) as &#39;Q2 ACV Absolute&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) as &#39;YTD ACV Absolute&#39;, ((coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY Q2 ACV Growth&#39;, ((coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YTD ACV Growth&#39;, coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) as &#39;Q2 AOV Absolute&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) as &#39;YTD AOV Absolute&#39;, ((coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY Q2 AOV Growth&#39;, ((coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YTD AOV Growth&#39;, last(MasterHierarchy.&#39;Lead_Rank&#39;) as &#39;Sort_Code&#39;, coalesce(sum(q2_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;Attrition_CY_Q2&#39;, coalesce(sum(q3_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;Attrition_CY_Q3&#39;, coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q2&#39;, coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q2&#39;, coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q3&#39;, coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;, (coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;YoY Q2 Attrition TTM Rate&#39;, (coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;YTD Attrition TTM Rate&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;Q2 Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY Q2 Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;,coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;Q2 X10M_Deals Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;YTD X10M_Deals Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YoY Q2 X10M_Deals Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YTD X10M_Deals Growth&#39;,coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) as &#39;Q2 X10M Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) as &#39;YTD X10M Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YoY Q2 X10M Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YTD X10M Growth&#39;,coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;Q2 Runrate_Volume Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;YTD Runrate_Volume Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YoY Q2 Runrate_Volume Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YTD Runrate_Volume Growth&#39;,coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;Q2 New_Logos Absolute&#39;, coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;YTD New_Logos Absolute&#39;, ((coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;YoY Q2 New_Logos Growth&#39;, ((coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;YTD New_Logos Growth&#39;,coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;Q2 Lost_Logo_Count Absolute&#39;, coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;YTD Lost_Logo_Count Absolute&#39;, ((coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;YoY Q2 Lost_Logo_Count Growth&#39;, ((coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;YTD Lost_Logo_Count Growth&#39;;\nn\nresult_SubCloud = group q2_CYACV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PYACV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_CYACV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PYACV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_CYATT by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PYATT by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_CYATT by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PYATT by (&#39;Lead&#39;, &#39;Lead_1&#39;) full,  q4_CYATT by (&#39;Lead&#39;, &#39;Lead_1&#39;) full,q2_CYAOV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PYAOV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_CYAOV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PYAOV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_CYPipegen by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PYPipegen by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_CYPipegen by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PYPipegen by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_CYHC by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PYHC by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PY_2_HC by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_CYHC by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PYHC by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PY_2_HC by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_CYSW by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PYSW by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PY_2_SW by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_CYSW by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PYSW by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PY_2_SW by (&#39;Lead&#39;, &#39;Lead_1&#39;) full,q2_CYDEALS by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PYDEALS by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_CYDEALS by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PYDEALS by (&#39;Lead&#39;, &#39;Lead_1&#39;) full,q2_CYLOGOS by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PYLOGOS by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_CYLOGOS by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PYLOGOS by (&#39;Lead&#39;, &#39;Lead_1&#39;) full,q2_CYLOGOSLOST by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PYLOGOSLOST by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_CYLOGOSLOST by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PYLOGOSLOST by (&#39;Lead&#39;, &#39;Lead_1&#39;);\nn\nresult_SubCloud = foreach result_SubCloud generate &quot;    ↳ &quot; + coalesce(q2_CYACV.&#39;Lead_1&#39;, q2_PYACV.&#39;Lead_1&#39;, q3_CYACV.&#39;Lead_1&#39;, q3_PYACV.&#39;Lead_1&#39;, q2_CYAOV.&#39;Lead_1&#39;, q2_PYAOV.&#39;Lead_1&#39;, q3_CYAOV.&#39;Lead_1&#39;, q3_PYAOV.&#39;Lead_1&#39;, q2_CYPipegen.&#39;Lead_1&#39;, q2_PYPipegen.&#39;Lead_1&#39;, q3_CYPipegen.&#39;Lead_1&#39;, q3_PYPipegen.&#39;Lead_1&#39;, q2_CYHC.&#39;Lead_1&#39;, q2_PYHC.&#39;Lead_1&#39;, q3_CYHC.&#39;Lead_1&#39;, q3_PYHC.&#39;Lead_1&#39;, q2_CYSW.&#39;Lead_1&#39;, q2_PYSW.&#39;Lead_1&#39;, q3_CYSW.&#39;Lead_1&#39;, q3_PYSW.&#39;Lead_1&#39;, q2_CYATT.&#39;Lead_1&#39;, q2_PYATT.&#39;Lead_1&#39;, q3_CYATT.&#39;Lead_1&#39;) as &#39;Lead_1&#39;, &quot;☁ &quot; + coalesce(q2_CYACV.&#39;Lead&#39;, q2_PYACV.&#39;Lead&#39;, q3_CYACV.&#39;Lead&#39;, q3_PYACV.&#39;Lead&#39;, q2_CYAOV.&#39;Lead&#39;, q2_PYAOV.&#39;Lead&#39;, q3_CYAOV.&#39;Lead&#39;, q3_PYAOV.&#39;Lead&#39;, q2_PYATT.&#39;Lead&#39;, q2_CYATT.&#39;Lead&#39;, q3_PYATT.&#39;Lead&#39;, q3_CYATT.&#39;Lead&#39;, q2_CYPipegen.&#39;Lead&#39;, q2_PYPipegen.&#39;Lead&#39;, q3_CYPipegen.&#39;Lead&#39;, q3_PYPipegen.&#39;Lead&#39;, q2_CYHC.&#39;Lead&#39;, q2_PYHC.&#39;Lead&#39;, q3_CYHC.&#39;Lead&#39;, q3_PYHC.&#39;Lead&#39;, q2_CYSW.&#39;Lead&#39;, q2_PYSW.&#39;Lead&#39;, q3_CYSW.&#39;Lead&#39;, q3_PYSW.&#39;Lead&#39;,q2_CYDEALS.&#39;Lead_1&#39;, q2_PYDEALS.&#39;Lead_1&#39;, q3_CYDEALS.&#39;Lead_1&#39;, q3_PYDEALS.&#39;Lead_1&#39;,q2_CYLOGOS.&#39;Lead_1&#39;, q2_PYLOGOS.&#39;Lead_1&#39;, q3_CYLOGOS.&#39;Lead_1&#39;, q3_PYLOGOS.&#39;Lead_1&#39;,q2_CYLOGOSLOST.&#39;Lead_1&#39;, q2_PYLOGOSLOST.&#39;Lead_1&#39;, q3_CYLOGOSLOST.&#39;Lead_1&#39;, q3_PYLOGOSLOST.&#39;Lead_1&#39;) as &#39;Lead&#39;, coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) as &#39;Q2 ACV Absolute&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) as &#39;YTD ACV Absolute&#39;, ((coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY Q2 ACV Growth&#39;, ((coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YTD ACV Growth&#39;, coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) as &#39;Q2 AOV Absolute&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) as &#39;YTD AOV Absolute&#39;, ((coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY Q2 AOV Growth&#39;, ((coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YTD AOV Growth&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;Q2 Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY Q2 Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;, coalesce(sum(q2_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;Attrition_CY_Q2&#39;, coalesce(sum(q3_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;Attrition_CY_Q3&#39;, coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q2&#39;, coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q2&#39;, coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q3&#39;, coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;, (coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;YoY Q2 Attrition TTM Rate&#39;, (coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;YTD Attrition TTM Rate&#39;, coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;Q2 X10M_Deals Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;YTD X10M_Deals Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YoY Q2 X10M_Deals Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YTD X10M_Deals Growth&#39;,coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) as &#39;Q2 X10M Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) as &#39;YTD X10M Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YoY Q2 X10M Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YTD X10M Growth&#39;,coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;Q2 Runrate_Volume Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;YTD Runrate_Volume Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YoY Q2 Runrate_Volume Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YTD Runrate_Volume Growth&#39;,coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;Q2 New_Logos Absolute&#39;, coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;YTD New_Logos Absolute&#39;, ((coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;YoY Q2 New_Logos Growth&#39;, ((coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;YTD New_Logos Growth&#39;,coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;Q2 Lost_Logo_Count Absolute&#39;, coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;YTD Lost_Logo_Count Absolute&#39;, ((coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;YoY Q2 Lost_Logo_Count Growth&#39;, ((coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;YTD Lost_Logo_Count Growth&#39;;\nn\nFinal = union result, result_SubCloud;\nFinal = foreach Final generate &#39;Q2 ACV Absolute&#39; as &#39;Q2 ACV Absolute&#39;, &#39;YTD ACV Absolute&#39; as &#39;YTD ACV Absolute&#39;, &#39;YoY Q2 ACV Growth&#39; as &#39;YoY Q2 ACV Growth&#39;, &#39;YTD ACV Growth&#39; as &#39;YTD ACV Growth&#39;, &#39;Q2 AOV Absolute&#39; as &#39;Q2 AOV Absolute&#39;, &#39;YTD AOV Absolute&#39; as &#39;YTD AOV Absolute&#39;, &#39;YoY Q2 AOV Growth&#39; as &#39;YoY Q2 AOV Growth&#39;, &#39;YTD AOV Growth&#39; as &#39;YTD AOV Growth&#39;, sum(&#39;Attrition_CY_Q2&#39;) as &#39;Q2 Attrition Absolute&#39;, sum(&#39;Attrition_CY_Q3&#39;) as &#39;YTD Attrition Absolute&#39;, sum(&#39;YoY Q2 Attrition TTM Rate&#39;) as &#39;YoY Q2 Attrition TTM Rate&#39;, sum(&#39;YTD Attrition TTM Rate&#39;) as &#39;YTD Attrition TTM Rate&#39;, &#39;Q2 Pipegen Absolute&#39; as &#39;Q2 PipeGen Absolute&#39;, &#39;YTD Pipegen Absolute&#39; as &#39;YTD PipeGen Absolute&#39;, &#39;YoY Q2 Pipegen Growth&#39; as &#39;YoY Q2 PipeGen Growth&#39;, &#39;YTD Pipegen Growth&#39; as &#39;YTD PipeGen Growth&#39;,&#39;Q2 X10M_Deals Absolute&#39; as &#39;Q2 X10M_Deals Absolute&#39;, &#39;YTD X10M_Deals Absolute&#39; as &#39;YTD X10M_Deals Absolute&#39;, &#39;YoY Q2 X10M_Deals Growth&#39; as &#39;YoY Q2 X10M_Deals Growth&#39;, &#39;YTD X10M_Deals Growth&#39; as &#39;YTD X10M_Deals Growth&#39;, &#39;Q2 X10M Absolute&#39; as &#39;Q2 X10M Absolute&#39;, &#39;YTD X10M Absolute&#39; as &#39;YTD X10M Absolute&#39;, &#39;YoY Q2 X10M Growth&#39; as &#39;YoY Q2 X10M Growth&#39;, &#39;YTD X10M Growth&#39; as &#39;YTD X10M Growth&#39;,&#39;Q2 Runrate_Volume Absolute&#39; as &#39;Q2 Runrate_Volume Absolute&#39;, &#39;YTD Runrate_Volume Absolute&#39; as &#39;YTD Runrate_Volume Absolute&#39;, &#39;YoY Q2 Runrate_Volume Growth&#39; as &#39;YoY Q2 Runrate_Volume Growth&#39;, &#39;YTD Runrate_Volume Growth&#39; as &#39;YTD Runrate_Volume Growth&#39;,&#39;Q2 New_Logos Absolute&#39; as &#39;Q2 New_Logos Absolute&#39;, &#39;YTD New_Logos Absolute&#39; as &#39;YTD New_Logos Absolute&#39;, &#39;YoY Q2 New_Logos Growth&#39; as &#39;YoY Q2 New_Logos Growth&#39;, &#39;YTD New_Logos Growth&#39; as &#39;YTD New_Logos Growth&#39;,&#39;Q2 Lost_Logo_Count Absolute&#39; as &#39;Q2 Lost_Logo_Count Absolute&#39;, &#39;YTD Lost_Logo_Count Absolute&#39; as &#39;YTD Lost_Logo_Count Absolute&#39;, &#39;YoY Q2 Lost_Logo_Count Growth&#39; as &#39;YoY Q2 Lost_Logo_Count Growth&#39;, &#39;YTD Lost_Logo_Count Growth&#39; as &#39;YTD Lost_Logo_Count Growth&#39;,&#39;Lead&#39; as &#39;Lead&#39;, &#39;Lead_1&#39; as &#39;Lead_1&#39;, case when (&#39;Lead&#39; == &quot;☁ Tony Owens&quot;) then &quot;1. Tony Owens&quot; when (&#39;Lead&#39; == &quot;☁ Warren Wick&quot;) then &quot;2. Warren Wick&quot;  when (&#39;Lead&#39; == &quot;☁ Andrew Kofoid&quot;) then &quot;3. Andrew Kofoid&quot; when (&#39;Lead&#39; == &quot;☁ Miguel Milano&quot;) then &quot;4. Miguel Milano&quot; when (&#39;Lead&#39; == &quot;☁ Mark Innes&quot;) then &quot;5. Mark Innes&quot; when (&#39;Lead&#39; == &quot;☁ Shinichi Koide&quot;) then &quot;6. Shinichi Koide&quot; when (&#39;Lead&#39; == &quot;☁ Dave Rey&quot;) then &quot;7. Dave Rey&quot; when (&#39;Lead&#39; == &quot;☁ Enrique Ortegon&quot;) then &quot;8. Enrique Ortegon&quot; when (&#39;Lead&#39; == &quot;☁ Other&quot;) then &quot;9. Other&quot; else &quot;10. unkown&quot; end as &#39;Lead_Rank&#39;,case when(&#39;Lead_1&#39; == &quot;    ↳ Other&quot;) then &quot;    ↳ Z.Other&quot; else &#39;Lead_1&#39; end as &#39;Lead_1_Rank&#39;;\nnFinal = order Final by (&#39;Lead_Rank&#39; asc, &#39;Lead_1_Rank&#39; asc);\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------IMPLEMENT FAKE NONE FOR UNION -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nNone = foreach Final  generate 0 as &#39;Q2 ACV Absolute&#39;, 0 as &#39;YTD ACV Absolute&#39;, 0 as &#39;YoY Q2 ACV Growth&#39;, 0 as &#39;YTD ACV Growth&#39;, 0 as &#39;Q2 AOV Absolute&#39;, 0 as &#39;YTD AOV Absolute&#39;, 0 as &#39;YoY Q2 AOV Growth&#39;, 0 as &#39;YTD AOV Growth&#39;, 0 as &#39;Q2 Attrition Absolute&#39;, 0 as &#39;YTD Attrition Absolute&#39;, 0 as &#39;YoY Q2 Attrition TTM Rate&#39;, 0 as &#39;YTD Attrition TTM Rate&#39;, 0 as &#39;Q2 PipeGen Absolute&#39;, 0 as &#39;YTD PipeGen Absolute&#39;, 0 as &#39;YoY Q2 PipeGen Growth&#39;, 0 as &#39;YTD PipeGen Growth&#39;,0 as &#39;Q2 X10M_Deals Absolute&#39;, 0 as &#39;YTD X10M_Deals Absolute&#39;, 0 as &#39;YoY Q2 X10M_Deals Growth&#39;, 0 as &#39;YTD X10M_Deals Growth&#39;,  0 as &#39;Q2 X10M Absolute&#39;, 0 as &#39;YTD X10M Absolute&#39;, 0 as &#39;YoY Q2 X10M Growth&#39;, 0 as &#39;YTD X10M Growth&#39;, 0 as &#39;Q2 Runrate_Volume Absolute&#39;, 0 as &#39;YTD Runrate_Volume Absolute&#39;, 0 as &#39;YoY Q2 Runrate_Volume Growth&#39;, 0 as &#39;YTD Runrate_Volume Growth&#39;, 0 as &#39;Q2 New_Logos Absolute&#39;, 0 as &#39;YTD New_Logos Absolute&#39;, 0 as &#39;YoY Q2 New_Logos Growth&#39;, 0 as &#39;YTD New_Logos Growth&#39;, 0 as &#39;Q2 Lost_Logo_Count Absolute&#39;, 0 as &#39;YTD Lost_Logo_Count Absolute&#39;, 0 as &#39;YoY Q2 Lost_Logo_Count Growth&#39;, 0 as &#39;YTD Lost_Logo_Count Growth&#39;,&quot;None&quot; as &#39;Lead&#39;, &quot;None&quot; as &#39;Lead_1&#39;,&quot;None&quot; as &#39;Lead_Rank&#39;;\nn\nResult = union Final, None;\nResult = filter Result by &#39;Lead&#39; != &quot;None&quot;;Result = filter Result by &#39;Lead_1&#39; != &quot;    ↳ N/A&quot;;\n--Final = group result by(Lead, Lead_1,Lead_Rank);\n--Final = order Final by &#39;Lead_Rank&#39; asc;\nResult = foreach Result generate &#39;Lead_1&#39;+&quot;                  &quot; as &#39;Lead_1&#39;, sum(&#39;Q2 X10M_Deals Absolute&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;, sum(&#39;YTD X10M_Deals Absolute&#39;) as &#39;YTD X10M_Deals Absolute&#39;, sum(&#39;YoY Q2 X10M_Deals Growth&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;, sum(&#39;YTD X10M_Deals Growth&#39;) as &#39;YTD X10M_Deals Growth&#39;, sum(&#39;Q2 X10M Absolute&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;, sum(&#39;YTD X10M Absolute&#39;) as &#39;YTD X10M Absolute&#39;, sum(&#39;YoY Q2 X10M Growth&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;, sum(&#39;YTD X10M Growth&#39;) as &#39;YTD X10M Growth&#39;, sum(&#39;Q2 Runrate_Volume Absolute&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;, sum(&#39;YTD Runrate_Volume Absolute&#39;) as &#39;YTD Runrate_Volume Absolute&#39;, sum(&#39;YoY Q2 Runrate_Volume Growth&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;, sum(&#39;YTD Runrate_Volume Growth&#39;) as &#39;YTD Runrate_Volume Growth&#39;,sum(&#39;Q2 New_Logos Absolute&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;, sum(&#39;YTD New_Logos Absolute&#39;) as &#39;YTD New_Logos Absolute&#39;, sum(&#39;YoY Q2 New_Logos Growth&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;, sum(&#39;YTD New_Logos Growth&#39;) as &#39;YTD New_Logos Growth&#39;,sum(&#39;Q2 Lost_Logo_Count Absolute&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;, sum(&#39;YTD Lost_Logo_Count Absolute&#39;) as &#39;YTD Lost_Logo_Count Absolute&#39;, sum(&#39;YoY Q2 Lost_Logo_Count Growth&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;, sum(&#39;YTD Lost_Logo_Count Growth&#39;) as &#39;YTD Lost_Logo_Count Growth&#39;;\n\n",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      },
      "Table_Level_2_Measures_2": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Level_2_Measures_2",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy_GM&quot;;\nMasterHierarchy = filter MasterHierarchy by&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;  in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nnACV = load &quot;APM_ACV&quot;; \nACV = filter ACV by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nACV = group ACV by (&#39;Cloud&#39;,&#39;Lead&#39;,&#39;Lead_1&#39;, &#39;Quarter&#39;,&#39;Month&#39;, &#39;Fiscal_Year&#39;, &#39;Region&#39; , &#39;Country&#39;);\nACV = foreach ACV generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Lead&#39; as &#39;Lead&#39;,&#39;Lead_1&#39; as &#39;Lead_1&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39; ,&#39;Month&#39; as &#39;Month&#39;,sum(&#39;ACV&#39;) as &#39;ACV&#39;, &#39;Region&#39; as &#39;Region&#39;,  {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;  \nACV = filter ACV by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nACV = filter ACV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;  in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYACV = filter ACV by (&#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}} ) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYACV = filter ACV by (&#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}} ) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYACV = filter ACV by (&#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}} ) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYACV = filter ACV by (&#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}} ) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nn\nAOV = load &quot;APM_AOV&quot;;\nAOV = filter AOV by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nAOV = group AOV by (&#39;Cloud&#39;,&#39;Lead&#39;, &#39;Lead_1&#39;, &#39;Quarter&#39;, &#39;Month&#39;, &#39;Fiscal_Year&#39;, &#39;Region&#39; , &#39;Country&#39;);\nAOV = foreach AOV generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Lead&#39; as &#39;Lead&#39;,&#39;Lead_1&#39; as &#39;Lead_1&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;AOV&#39;) as &#39;AOV&#39;,&#39;Region&#39; as &#39;Region&#39;,  {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nAOV = filter AOV by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nAOV = filter AOV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;  in {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYAOV = filter AOV by (&#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYAOV = filter AOV by (&#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYAOV = filter AOV by (&#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month_cum&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYAOV = filter AOV by (&#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month_cum&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD Attrition AOV-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nAttrition = load &quot;APM_Attrition&quot;;\nAttrition = filter Attrition by &#39;Segment&#39; != &quot;CSG&quot;;\nAttrition = filter Attrition by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;  in {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nAttrition = filter Attrition by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nAttrition = foreach Attrition generate &#39;Lead&#39; as &#39;Lead&#39;, &#39;Lead_1&#39; as &#39;Lead_1&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, &#39;Month&#39; as &#39;Month&#39;, sum(&#39;Attrition&#39;) * -1 as &#39;Attrition_Product&#39;, sum(&#39;TTM&#39;) * -1 as &#39;TTM_Product&#39;, sum(&#39;AOV_twelve_month_ago&#39;) as &#39;AOV_twelve_month_ago&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nAttrition = filter Attrition by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nq2_CYATT = filter Attrition by (&#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYATT = filter Attrition by (&#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYATT = filter Attrition by (&#39;Month&#39; in{{cell(Selector_Quarter.selection,0,&quot;YTD_Month_cum&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYATT = filter Attrition by (&#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Month_cum&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD APM PipeGen-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nPipegen = load &quot;APM_Pipegen1&quot;;\nPipegen = filter Pipegen by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\n Pipegen = group Pipegen by (&#39;Fiscal_Year&#39;,&#39;Quarter&#39;,&#39;Region&#39;,&#39;Cloud&#39;,&#39;Month&#39;,&#39;Lead&#39;,&#39;Lead_1&#39;,&#39;Country&#39;);\nPipegen = foreach Pipegen generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Lead&#39; as &#39;Lead&#39;,&#39;Lead_1&#39; as &#39;Lead_1&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Pipegen&#39;) as &#39;Pipegen&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nPipegen = filter Pipegen by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nPipegen = filter Pipegen by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;  in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nn\nHC = load &quot;APM_HC&quot;;\nHC = filter HC by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nHC = foreach HC generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Lead&#39; as &#39;Lead&#39;,&#39;Lead_1&#39; as &#39;Lead_1&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;SE&#39;) as &#39;SE&#39;,sum(&#39;AE&#39;) as &#39;AE&#39;,sum(&#39;Co_Prime&#39;) as &#39;Co_Prime&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nHC = filter HC by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nHC = filter HC by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;  in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYHC = filter HC by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYHC = filter HC by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYHC = filter HC by (&#39;Quarter&#39; in{{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYHC = filter HC by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD APM SW-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nSW = load &quot;APM_SWE_INFRA&quot;;\nSW = filter SW by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nSW = foreach SW generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Lead&#39; as &#39;Lead&#39;,&#39;Lead_1&#39; as &#39;Lead_1&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;SWE&#39;) as &#39;SWE&#39;,sum(&#39;INFRA&#39;) as &#39;INFRA&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nSW = filter SW by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nSW = filter SW by&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_SW = filter SW by (&#39;Quarter&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYSW = filter SW by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYSW = filter SW by (&#39;Quarter&#39; in{{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_SW = filter SW by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nn\nresult = group q2_CYACV by &#39;Lead&#39; full, q2_PYACV by &#39;Lead&#39; full, q3_CYACV by &#39;Lead&#39; full, q3_PYACV by &#39;Lead&#39; full, q2_CYAOV by &#39;Lead&#39; full, q2_PYAOV by &#39;Lead&#39; full, q3_CYAOV by &#39;Lead&#39; full, q3_PYAOV by &#39;Lead&#39; full, q2_CYATT by &#39;Lead&#39; full, q2_PYATT by &#39;Lead&#39; full, q3_CYATT by &#39;Lead&#39; full, q3_PYATT by &#39;Lead&#39; full, q2_CYPipegen by &#39;Lead&#39; full, q2_PYPipegen by &#39;Lead&#39; full, q3_CYPipegen by &#39;Lead&#39; full, q3_PYPipegen by &#39;Lead&#39; full, q2_CYHC by &#39;Lead&#39; full, q2_PYHC by &#39;Lead&#39; full, q2_PY_2_HC by &#39;Lead&#39; full, q3_CYHC by &#39;Lead&#39; full, q3_PYHC by &#39;Lead&#39; full, q3_PY_2_HC by &#39;Lead&#39; full, q2_CYSW by &#39;Lead&#39; full, q2_PYSW by &#39;Lead&#39; full, q2_PY_2_SW by &#39;Lead&#39; full, q3_CYSW by &#39;Lead&#39; full, q3_PYSW by &#39;Lead&#39; full, q3_PY_2_SW by &#39;Lead&#39;, MasterHierarchy by &#39;Lead&#39;;\nn\n\nresult = foreach result generate &quot;☁ &quot; + coalesce(q2_CYACV.&#39;Lead&#39;, q2_PYACV.&#39;Lead&#39;, q3_CYACV.&#39;Lead&#39;, q3_PYACV.&#39;Lead&#39;, q2_CYAOV.&#39;Lead&#39;, q2_PYAOV.&#39;Lead&#39;, q3_CYAOV.&#39;Lead&#39;, q3_PYAOV.&#39;Lead&#39;, q2_PYATT.&#39;Lead&#39;, q2_CYATT.&#39;Lead&#39;, q3_PYATT.&#39;Lead&#39;, q3_CYATT.&#39;Lead&#39;, q2_CYPipegen.&#39;Lead&#39;, q2_PYPipegen.&#39;Lead&#39;, q3_CYPipegen.&#39;Lead&#39;, q3_PYPipegen.&#39;Lead&#39;, q2_CYHC.&#39;Lead&#39;, q2_PYHC.&#39;Lead&#39;, q3_CYHC.&#39;Lead&#39;, q3_PYHC.&#39;Lead&#39;, q2_CYSW.&#39;Lead&#39;, q2_PYSW.&#39;Lead&#39;, q3_CYSW.&#39;Lead&#39;, q3_PYSW.&#39;Lead&#39;) as &#39;Lead&#39;, &quot; ☁ &quot; + coalesce(q2_CYACV.&#39;Lead&#39;, q2_PYACV.&#39;Lead&#39;, q3_CYACV.&#39;Lead&#39;, q3_PYACV.&#39;Lead&#39;, q2_CYAOV.&#39;Lead&#39;, q2_PYAOV.&#39;Lead&#39;, q3_CYAOV.&#39;Lead&#39;, q3_PYAOV.&#39;Lead&#39;, q2_PYATT.&#39;Lead&#39;, q2_CYATT.&#39;Lead&#39;, q3_PYATT.&#39;Lead&#39;, q3_CYATT.&#39;Lead&#39;, q2_CYPipegen.&#39;Lead&#39;, q2_PYPipegen.&#39;Lead&#39;, q3_CYPipegen.&#39;Lead&#39;, q3_PYPipegen.&#39;Lead&#39;, q2_CYHC.&#39;Lead&#39;, q2_PYHC.&#39;Lead&#39;, q3_CYHC.&#39;Lead&#39;, q3_PYHC.&#39;Lead&#39;, q2_CYSW.&#39;Lead&#39;, q2_PYSW.&#39;Lead&#39;, q3_CYSW.&#39;Lead&#39;, q3_PYSW.&#39;Lead&#39;) as &#39;Lead_1&#39;,  coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;, coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE Absolute&#39;, coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) as &#39;YTD SE Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) - coalesce(sum(q2_PYHC.&#39;SE&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;SE&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} SE Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) - coalesce(sum(q3_PYHC.&#39;SE&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;SE&#39;), 0)) * 100 as &#39;YTD SE Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YTD SE CAGR&#39;, coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE Absolute&#39;, coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) as &#39;YTD AE Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) - coalesce(sum(q2_PYHC.&#39;AE&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;AE&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} AE Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) - coalesce(sum(q3_PYHC.&#39;AE&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;AE&#39;), 0)) * 100 as &#39;YTD AE Growth&#39;, (power(coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;YTD AE CAGR&#39;,coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime Absolute&#39;, coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) as &#39;YTD Co_Prime Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) - coalesce(sum(q2_PYHC.&#39;Co_Prime&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;Co_Prime&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Co_Prime Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) - coalesce(sum(q3_PYHC.&#39;Co_Prime&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;Co_Prime&#39;), 0)) * 100 as &#39;YTD Co_Prime Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YTD Co_Prime CAGR&#39;, coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE Absolute&#39;, coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) as &#39;YTD SWE Absolute&#39;, ((coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(q2_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(q2_PYSW.&#39;SWE&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39;, ((coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(q3_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(q3_PYSW.&#39;SWE&#39;), 0)) * 100 as &#39;YTD SWE Growth&#39;,(power(coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) / coalesce(sum(q2_PY_2_SW.&#39;SWE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE CAGR&#39;,(power(coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) / coalesce(sum(q3_PY_2_SW.&#39;SWE&#39;), 0),(1/2))-1)*100 as &#39;YTD SWE CAGR&#39;, coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA Absolute&#39;, coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) as &#39;YTD INFRA Absolute&#39;, ((coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) - coalesce(sum(q2_PYSW.&#39;INFRA&#39;), 0)) / coalesce(sum(q2_PYSW.&#39;INFRA&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;, ((coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) - coalesce(sum(q3_PYSW.&#39;INFRA&#39;), 0)) / coalesce(sum(q3_PYSW.&#39;INFRA&#39;), 0)) * 100 as &#39;YTD INFRA Growth&#39;,(power(coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) / coalesce(sum(q2_PY_2_SW.&#39;INFRA&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA CAGR&#39;,(power(coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) / coalesce(sum(q3_PY_2_SW.&#39;INFRA&#39;), 0),(1/2))-1)*100 as &#39;YTD INFRA CAGR&#39;;\nn\nresult_SubCloud = group q2_CYACV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PYACV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_CYACV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PYACV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_CYATT by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PYATT by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_CYATT by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PYATT by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_CYAOV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PYAOV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_CYAOV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PYAOV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_CYPipegen by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PYPipegen by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_CYPipegen by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PYPipegen by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_CYHC by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PYHC by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PY_2_HC by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_CYHC by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PYHC by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PY_2_HC by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_CYSW by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PYSW by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PY_2_SW by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_CYSW by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PYSW by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PY_2_SW by (&#39;Lead&#39;, &#39;Lead_1&#39;);\n-------------------------------------------------------------------------------------------------------------------------------------------------------FILTER OUT N/A----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;result_SubCloud = filter result_SubCloud  by &#39;Lead_1&#39; != &quot;N/A&quot;;\nn\nresult_SubCloud = foreach result_SubCloud generate &quot;    ↳ &quot; + coalesce(q2_CYACV.&#39;Lead_1&#39;, q2_PYACV.&#39;Lead_1&#39;, q3_CYACV.&#39;Lead_1&#39;, q3_PYACV.&#39;Lead_1&#39;, q2_CYAOV.&#39;Lead_1&#39;, q2_PYAOV.&#39;Lead_1&#39;, q3_CYAOV.&#39;Lead_1&#39;, q3_PYAOV.&#39;Lead_1&#39;, q2_CYPipegen.&#39;Lead_1&#39;, q2_PYPipegen.&#39;Lead_1&#39;, q3_CYPipegen.&#39;Lead_1&#39;, q3_PYPipegen.&#39;Lead_1&#39;, q2_CYHC.&#39;Lead_1&#39;, q2_PYHC.&#39;Lead_1&#39;, q3_CYHC.&#39;Lead_1&#39;, q3_PYHC.&#39;Lead_1&#39;, q2_CYSW.&#39;Lead_1&#39;, q2_PYSW.&#39;Lead_1&#39;, q3_CYSW.&#39;Lead_1&#39;, q3_PYSW.&#39;Lead_1&#39;, q2_CYATT.&#39;Lead_1&#39;, q2_PYATT.&#39;Lead_1&#39;, q3_CYATT.&#39;Lead_1&#39;) as &#39;Lead_1&#39;, &quot;☁ &quot; + coalesce(q2_CYACV.&#39;Lead&#39;, q2_PYACV.&#39;Lead&#39;, q3_CYACV.&#39;Lead&#39;, q3_PYACV.&#39;Lead&#39;, q2_CYAOV.&#39;Lead&#39;, q2_PYAOV.&#39;Lead&#39;, q3_CYAOV.&#39;Lead&#39;, q3_PYAOV.&#39;Lead&#39;, q2_PYATT.&#39;Lead&#39;, q2_CYATT.&#39;Lead&#39;, q3_PYATT.&#39;Lead&#39;, q3_CYATT.&#39;Lead&#39;, q2_CYPipegen.&#39;Lead&#39;, q2_PYPipegen.&#39;Lead&#39;, q3_CYPipegen.&#39;Lead&#39;, q3_PYPipegen.&#39;Lead&#39;, q2_CYHC.&#39;Lead&#39;, q2_PYHC.&#39;Lead&#39;, q3_CYHC.&#39;Lead&#39;, q3_PYHC.&#39;Lead&#39;, q2_CYSW.&#39;Lead&#39;, q2_PYSW.&#39;Lead&#39;, q3_CYSW.&#39;Lead&#39;, q3_PYSW.&#39;Lead&#39;) as &#39;Lead&#39;,  coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;, coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE Absolute&#39;, coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) as &#39;YTD SE Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) - coalesce(sum(q2_PYHC.&#39;SE&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;SE&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} SE Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) - coalesce(sum(q3_PYHC.&#39;SE&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;SE&#39;), 0)) * 100 as &#39;YTD SE Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YTD SE CAGR&#39;, coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE Absolute&#39;, coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) as &#39;YTD AE Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) - coalesce(sum(q2_PYHC.&#39;AE&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;AE&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} AE Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) - coalesce(sum(q3_PYHC.&#39;AE&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;AE&#39;), 0)) * 100 as &#39;YTD AE Growth&#39;, (power(coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;YTD AE CAGR&#39;,coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime Absolute&#39;, coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) as &#39;YTD Co_Prime Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) - coalesce(sum(q2_PYHC.&#39;Co_Prime&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;Co_Prime&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Co_Prime Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) - coalesce(sum(q3_PYHC.&#39;Co_Prime&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;Co_Prime&#39;), 0)) * 100 as &#39;YTD Co_Prime Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YTD Co_Prime CAGR&#39;, coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE Absolute&#39;, coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) as &#39;YTD SWE Absolute&#39;, ((coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(q2_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(q2_PYSW.&#39;SWE&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39;, ((coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(q3_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(q3_PYSW.&#39;SWE&#39;), 0)) * 100 as &#39;YTD SWE Growth&#39;,(power(coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) / coalesce(sum(q2_PY_2_SW.&#39;SWE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE CAGR&#39;,(power(coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) / coalesce(sum(q3_PY_2_SW.&#39;SWE&#39;), 0),(1/2))-1)*100 as &#39;YTD SWE CAGR&#39;, coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA Absolute&#39;, coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) as &#39;YTD INFRA Absolute&#39;, ((coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) - coalesce(sum(q2_PYSW.&#39;INFRA&#39;), 0)) / coalesce(sum(q2_PYSW.&#39;INFRA&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;, ((coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) - coalesce(sum(q3_PYSW.&#39;INFRA&#39;), 0)) / coalesce(sum(q3_PYSW.&#39;INFRA&#39;), 0)) * 100 as &#39;YTD INFRA Growth&#39;,(power(coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) / coalesce(sum(q2_PY_2_SW.&#39;INFRA&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA CAGR&#39;,(power(coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) / coalesce(sum(q3_PY_2_SW.&#39;INFRA&#39;), 0),(1/2))-1)*100 as &#39;YTD INFRA CAGR&#39;;\nnFinal = union result, result_SubCloud;\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nFinal = foreach Final generate &#39;YTD SE Absolute&#39; as &#39;YTD SE Absolute&#39;,  &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE Absolute&#39; as  &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE Absolute&#39;, &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;, &#39;YTD SE CAGR&#39; as &#39;YTD SE CAGR&#39;, &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE Absolute&#39; as  &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE Absolute&#39;,  &#39;YTD AE Absolute&#39; as  &#39;YTD AE Absolute&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;, &#39;YTD AE CAGR&#39; as &#39;YTD AE CAGR&#39;, &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime Absolute&#39;, &#39;YTD Co_Prime Absolute&#39; as &#39;YTD Co_Prime Absolute&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;,&#39;YTD Co_Prime CAGR&#39; as &#39;YTD Co_Prime CAGR&#39;, &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE Absolute&#39;, &#39;YTD SWE Absolute&#39; as &#39;YTD SWE Absolute&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39;, &#39;YTD SWE Growth&#39;  as &#39;YTD SWE Growth&#39; ,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA Absolute&#39;,&#39;YTD INFRA Absolute&#39; as &#39;YTD INFRA Absolute&#39; ,  &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39; as  &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;, &#39;YTD INFRA Growth&#39; as &#39;YTD INFRA Growth&#39; , &#39;Lead&#39; as &#39;Lead&#39;, &#39;Lead_1&#39; as &#39;Lead_1&#39;, case when (&#39;Lead&#39; == &quot;☁ Tony Owens&quot;) then &quot;1. Tony Owens&quot; when (&#39;Lead&#39; == &quot;☁ Warren Wick&quot;) then &quot;2. Warren Wick&quot;  when (&#39;Lead&#39; == &quot;☁ Andrew Kofoid&quot;) then &quot;3. Andrew Kofoid&quot; when (&#39;Lead&#39; == &quot;☁ Miguel Milano&quot;) then &quot;4. Miguel Milano&quot; when (&#39;Lead&#39; == &quot;☁ Mark Innes&quot;) then &quot;5. Mark Innes&quot; when (&#39;Lead&#39; == &quot;☁ Shinichi Koide&quot;) then &quot;6. Shinichi Koide&quot; when (&#39;Lead&#39; == &quot;☁ Dave Rey&quot;) then &quot;7. Dave Rey&quot; when (&#39;Lead&#39; == &quot;☁ Enrique Ortegon&quot;) then &quot;8. Enrique Ortegon&quot; when (&#39;Lead&#39; == &quot;☁ Other&quot;) then &quot;9. Other&quot; else &quot;10. unkown&quot; end as &#39;Lead_Rank&#39;,case when(&#39;Lead_1&#39; == &quot;    ↳ Other&quot;) then &quot;    ↳ Z.Other&quot; else &#39;Lead_1&#39; end as &#39;Lead_1_Rank&#39;;\n\nnFinal = order Final by (&#39;Lead_Rank&#39; asc, &#39;Lead_1_Rank&#39; asc);\nn\nNone = foreach Final  generate 0 as &#39;YTD SE Absolute&#39;,   &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE Absolute&#39;, 0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;, 0 as &#39;YTD SE CAGR&#39;, 0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE Absolute&#39;,0 as &#39;YTD AE Absolute&#39;, 0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39; ,0 as &#39;YTD AE CAGR&#39;, 0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime Absolute&#39;, 0 as &#39;YTD Co_Prime Absolute&#39;, 0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;, 0 as &#39;YTD Co_Prime CAGR&#39;, 0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE Absolute&#39;, 0 as &#39;YTD SWE Absolute&#39;, 0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39; , 0 as &#39;YTD SWE Growth&#39; ,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA Absolute&#39;, 0 as &#39;YTD INFRA Absolute&#39;, 0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;, 0 as &#39;YTD INFRA Growth&#39; , &quot;None&quot; as &#39;Lead&#39;, &quot;None&quot; as &#39;Lead_1&#39;,&quot;None&quot; as &#39;Lead_Rank&#39;;\nn\nResult = union Final, None;\nResult = filter Result by &#39;Lead&#39; != &quot;None&quot;;Result = filter Result by &#39;Lead_1&#39; != &quot;    ↳ N/A&quot;;\n--Final = group result by(Lead, Lead_1,Lead_Rank);\n--Final = order Final by &#39;Lead_Rank&#39; asc;\nResult = foreach Result generate &#39;Lead_1&#39;+&quot;                  &quot; as &#39;Lead_1&#39;, &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AEs&#39;,&#39;YTD AE Absolute&#39; as &#39;YTD AE Absolute&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;,&#39;YTD AE CAGR&#39; as &#39;YTD AE CAGR&#39; ,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime&#39;,&#39;YTD Co_Prime Absolute&#39; as &#39;YTD Co_Prime Absolute&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;,&#39;YTD Co_Prime CAGR&#39; as &#39;YTD Co_Prime CAGR&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SEs&#39;,&#39;YTD SE Absolute&#39; as &#39;YTD SE Absolute&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;,&#39;YTD SE CAGR&#39; as &#39;YTD SE CAGR&#39;   ;\n--,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE&#39;,&#39;YTD SWE Absolute&#39; as &#39;YTD SWE Absolute&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39;,&#39;YTD SWE Growth&#39; as &#39;YTD SWE Growth&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA&#39;,&#39;YTD INFRA Absolute&#39; as &#39;YTD INFRA Absolute&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;,&#39;YTD INFRA Growth&#39; as &#39;YTD INFRA Growth&#39;;\n\n",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      },
      "Table_Level_2_Measures_1": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Level_2_Measures_1",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy_GM&quot;;\nMasterHierarchy = filter MasterHierarchy by&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;  in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD APM ACV-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nACV = load &quot;APM_ACV&quot;;\nACV = filter ACV by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nACV = group ACV by (&#39;Cloud&#39;,&#39;Lead&#39;,&#39;Lead_1&#39;, &#39;Quarter&#39;,&#39;Month&#39;, &#39;Fiscal_Year&#39;, &#39;Region&#39; , &#39;Country&#39;);\nACV = foreach ACV generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Lead&#39; as &#39;Lead&#39;,&#39;Lead_1&#39; as &#39;Lead_1&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39; ,&#39;Month&#39; as &#39;Month&#39;,sum(&#39;ACV&#39;) as &#39;ACV&#39;, &#39;Region&#39; as &#39;Region&#39;,  {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nACV = filter ACV by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nACV = filter ACV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;  in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYACV = filter ACV by (&#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}} ) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYACV = filter ACV by (&#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}} ) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYACV = filter ACV by (&#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}} ) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYACV = filter ACV by (&#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}} ) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nn\nAOV = load &quot;APM_AOV&quot;;\nAOV = filter AOV by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nAOV = group AOV by (&#39;Cloud&#39;,&#39;Lead&#39;,&#39;Lead_1&#39;, &#39;Quarter&#39;,&#39;Month&#39;, &#39;Fiscal_Year&#39;, &#39;Region&#39; , &#39;Country&#39;);\nAOV = foreach AOV generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Lead&#39; as &#39;Lead&#39;,&#39;Lead_1&#39; as &#39;Lead_1&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;AOV&#39;) as &#39;AOV&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nAOV = filter AOV by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nAOV = filter AOV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYAOV = filter AOV by (&#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYAOV = filter AOV by (&#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYAOV = filter AOV by (&#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month_cum&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYAOV = filter AOV by (&#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month_cum&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD Attrition AOV-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nAttrition = load &quot;APM_Attrition&quot;;\nAttrition = filter Attrition by &#39;Segment&#39; != &quot;CSG&quot;;\nAttrition = filter Attrition by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;  in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nAttrition = filter Attrition by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nAttrition = foreach Attrition generate &#39;Lead&#39; as &#39;Lead&#39;, &#39;Lead_1&#39; as &#39;Lead_1&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, &#39;Month&#39; as &#39;Month&#39;, sum(&#39;Attrition&#39;) * -1 as &#39;Attrition_Product&#39;, sum(&#39;TTM&#39;) * -1 as &#39;TTM_Product&#39;, sum(&#39;AOV_twelve_month_ago&#39;) as &#39;AOV_twelve_month_ago&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nAttrition = filter Attrition by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nq2_CYATT = filter Attrition by (&#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYATT = filter Attrition by (&#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYATT = filter Attrition by (&#39;Month&#39; in{{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYATT = filter Attrition by (&#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq4_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD APM PipeGen-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nPipegen = load &quot;APM_Pipegen1&quot;;\nPipegen = filter Pipegen by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\n Pipegen = group Pipegen by (&#39;Fiscal_Year&#39;,&#39;Quarter&#39;,&#39;Region&#39;,&#39;Cloud&#39;,&#39;Month&#39;,&#39;Lead&#39;,&#39;Lead_1&#39;,&#39;Country&#39;);\nPipegen = foreach Pipegen generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Lead&#39; as &#39;Lead&#39;,&#39;Lead_1&#39; as &#39;Lead_1&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Pipegen&#39;) as &#39;Pipegen&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nPipegen = filter Pipegen by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nPipegen = filter Pipegen by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;  in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nn\nHC = load &quot;APM_HC&quot;;\nHC = filter HC by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nHC = foreach HC generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Lead&#39; as &#39;Lead&#39;,&#39;Lead_1&#39; as &#39;Lead_1&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;SE&#39;) as &#39;SE&#39;,sum(&#39;AE&#39;) as &#39;AE&#39;,sum(&#39;Co_Prime&#39;) as &#39;Co_Prime&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nHC = filter HC by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nHC = filter HC by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;  in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYHC = filter HC by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYHC = filter HC by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYHC = filter HC by (&#39;Quarter&#39; in{{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYHC = filter HC by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nn\nSW = load &quot;APM_SWE_INFRA&quot;;\nSW = filter SW by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nSW = foreach SW generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Lead&#39; as &#39;Lead&#39;,&#39;Lead_1&#39; as &#39;Lead_1&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;SWE&#39;) as &#39;SWE&#39;,sum(&#39;INFRA&#39;) as &#39;INFRA&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nSW = filter SW by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nSW = filter SW by&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_SW = filter SW by (&#39;Quarter&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYSW = filter SW by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYSW = filter SW by (&#39;Quarter&#39; in{{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_SW = filter SW by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------GROUPING LEVEL1-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nresult = group q2_CYACV by &#39;Lead&#39; full, q2_PYACV by &#39;Lead&#39; full, q3_CYACV by &#39;Lead&#39; full, q3_PYACV by &#39;Lead&#39; full, q2_CYAOV by &#39;Lead&#39; full, q2_PYAOV by &#39;Lead&#39; full, q3_CYAOV by &#39;Lead&#39; full, q3_PYAOV by &#39;Lead&#39; full, q2_CYATT by &#39;Lead&#39; full, q2_PYATT by &#39;Lead&#39; full, q3_CYATT by &#39;Lead&#39; full, q4_CYATT by &#39;Lead&#39; full, q3_PYATT by &#39;Lead&#39; full, q2_CYPipegen by &#39;Lead&#39; full, q2_PYPipegen by &#39;Lead&#39; full, q3_CYPipegen by &#39;Lead&#39; full, q3_PYPipegen by &#39;Lead&#39; full, q2_CYHC by &#39;Lead&#39; full, q2_PYHC by &#39;Lead&#39; full, q2_PY_2_HC by &#39;Lead&#39; full, q3_CYHC by &#39;Lead&#39; full, q3_PYHC by &#39;Lead&#39; full, q3_PY_2_HC by &#39;Lead&#39; full, q2_CYSW by &#39;Lead&#39; full, q2_PYSW by &#39;Lead&#39; full, q2_PY_2_SW by &#39;Lead&#39; full, q3_CYSW by &#39;Lead&#39; full, q3_PYSW by &#39;Lead&#39; full, q3_PY_2_SW by &#39;Lead&#39;, MasterHierarchy by &#39;Lead&#39;;\nn\nresult = foreach result generate &quot;☁ &quot; + coalesce(q2_CYACV.&#39;Lead&#39;, q2_PYACV.&#39;Lead&#39;, q3_CYACV.&#39;Lead&#39;, q3_PYACV.&#39;Lead&#39;, q2_CYAOV.&#39;Lead&#39;, q2_PYAOV.&#39;Lead&#39;, q3_CYAOV.&#39;Lead&#39;, q3_PYAOV.&#39;Lead&#39;, q2_PYATT.&#39;Lead&#39;, q2_CYATT.&#39;Lead&#39;, q3_PYATT.&#39;Lead&#39;, q3_CYATT.&#39;Lead&#39;, q2_CYPipegen.&#39;Lead&#39;, q2_PYPipegen.&#39;Lead&#39;, q3_CYPipegen.&#39;Lead&#39;, q3_PYPipegen.&#39;Lead&#39;, q2_CYHC.&#39;Lead&#39;, q2_PYHC.&#39;Lead&#39;, q3_CYHC.&#39;Lead&#39;, q3_PYHC.&#39;Lead&#39;, q2_CYSW.&#39;Lead&#39;, q2_PYSW.&#39;Lead&#39;, q3_CYSW.&#39;Lead&#39;, q3_PYSW.&#39;Lead&#39;) as &#39;Lead&#39;, &quot; ☁ &quot; + coalesce(q2_CYACV.&#39;Lead&#39;, q2_PYACV.&#39;Lead&#39;, q3_CYACV.&#39;Lead&#39;, q3_PYACV.&#39;Lead&#39;, q2_CYAOV.&#39;Lead&#39;, q2_PYAOV.&#39;Lead&#39;, q3_CYAOV.&#39;Lead&#39;, q3_PYAOV.&#39;Lead&#39;, q2_PYATT.&#39;Lead&#39;, q2_CYATT.&#39;Lead&#39;, q3_PYATT.&#39;Lead&#39;, q3_CYATT.&#39;Lead&#39;, q2_CYPipegen.&#39;Lead&#39;, q2_PYPipegen.&#39;Lead&#39;, q3_CYPipegen.&#39;Lead&#39;, q3_PYPipegen.&#39;Lead&#39;, q2_CYHC.&#39;Lead&#39;, q2_PYHC.&#39;Lead&#39;, q3_CYHC.&#39;Lead&#39;, q3_PYHC.&#39;Lead&#39;, q2_CYSW.&#39;Lead&#39;, q2_PYSW.&#39;Lead&#39;, q3_CYSW.&#39;Lead&#39;, q3_PYSW.&#39;Lead&#39;) as &#39;Lead_1&#39;, coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) as &#39;Q2 ACV Absolute&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) as &#39;YTD ACV Absolute&#39;, ((coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY Q2 ACV Growth&#39;, ((coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YTD ACV Growth&#39;, coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) as &#39;Q2 AOV Absolute&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) as &#39;YTD AOV Absolute&#39;, ((coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY Q2 AOV Growth&#39;, ((coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YTD AOV Growth&#39;, last(MasterHierarchy.&#39;Lead_Rank&#39;) as &#39;Sort_Code&#39;, coalesce(sum(q2_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;Attrition_CY_Q2&#39;, coalesce(sum(q3_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;Attrition_CY_Q3&#39;, coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q2&#39;, coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q2&#39;, coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q3&#39;, coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;, (coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;YoY Q2 Attrition TTM Rate&#39;, (coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;YTD Attrition TTM Rate&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;Q2 Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY Q2 Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;;\nn\nresult_SubCloud = group q2_CYACV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PYACV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_CYACV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PYACV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_CYATT by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PYATT by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_CYATT by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PYATT by (&#39;Lead&#39;, &#39;Lead_1&#39;) full,  q4_CYATT by (&#39;Lead&#39;, &#39;Lead_1&#39;) full,q2_CYAOV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PYAOV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_CYAOV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PYAOV by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_CYPipegen by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PYPipegen by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_CYPipegen by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PYPipegen by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_CYHC by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PYHC by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PY_2_HC by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_CYHC by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PYHC by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PY_2_HC by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_CYSW by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PYSW by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q2_PY_2_SW by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_CYSW by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PYSW by (&#39;Lead&#39;, &#39;Lead_1&#39;) full, q3_PY_2_SW by (&#39;Lead&#39;, &#39;Lead_1&#39;);\nn\nresult_SubCloud = foreach result_SubCloud generate &quot;    ↳ &quot; + coalesce(q2_CYACV.&#39;Lead_1&#39;, q2_PYACV.&#39;Lead_1&#39;, q3_CYACV.&#39;Lead_1&#39;, q3_PYACV.&#39;Lead_1&#39;, q2_CYAOV.&#39;Lead_1&#39;, q2_PYAOV.&#39;Lead_1&#39;, q3_CYAOV.&#39;Lead_1&#39;, q3_PYAOV.&#39;Lead_1&#39;, q2_CYPipegen.&#39;Lead_1&#39;, q2_PYPipegen.&#39;Lead_1&#39;, q3_CYPipegen.&#39;Lead_1&#39;, q3_PYPipegen.&#39;Lead_1&#39;, q2_CYHC.&#39;Lead_1&#39;, q2_PYHC.&#39;Lead_1&#39;, q3_CYHC.&#39;Lead_1&#39;, q3_PYHC.&#39;Lead_1&#39;, q2_CYSW.&#39;Lead_1&#39;, q2_PYSW.&#39;Lead_1&#39;, q3_CYSW.&#39;Lead_1&#39;, q3_PYSW.&#39;Lead_1&#39;, q2_CYATT.&#39;Lead_1&#39;, q2_PYATT.&#39;Lead_1&#39;, q3_CYATT.&#39;Lead_1&#39;) as &#39;Lead_1&#39;, &quot;☁ &quot; + coalesce(q2_CYACV.&#39;Lead&#39;, q2_PYACV.&#39;Lead&#39;, q3_CYACV.&#39;Lead&#39;, q3_PYACV.&#39;Lead&#39;, q2_CYAOV.&#39;Lead&#39;, q2_PYAOV.&#39;Lead&#39;, q3_CYAOV.&#39;Lead&#39;, q3_PYAOV.&#39;Lead&#39;, q2_PYATT.&#39;Lead&#39;, q2_CYATT.&#39;Lead&#39;, q3_PYATT.&#39;Lead&#39;, q3_CYATT.&#39;Lead&#39;, q2_CYPipegen.&#39;Lead&#39;, q2_PYPipegen.&#39;Lead&#39;, q3_CYPipegen.&#39;Lead&#39;, q3_PYPipegen.&#39;Lead&#39;, q2_CYHC.&#39;Lead&#39;, q2_PYHC.&#39;Lead&#39;, q3_CYHC.&#39;Lead&#39;, q3_PYHC.&#39;Lead&#39;, q2_CYSW.&#39;Lead&#39;, q2_PYSW.&#39;Lead&#39;, q3_CYSW.&#39;Lead&#39;, q3_PYSW.&#39;Lead&#39;) as &#39;Lead&#39;, coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) as &#39;Q2 ACV Absolute&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) as &#39;YTD ACV Absolute&#39;, ((coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY Q2 ACV Growth&#39;, ((coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YTD ACV Growth&#39;, coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) as &#39;Q2 AOV Absolute&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) as &#39;YTD AOV Absolute&#39;, ((coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY Q2 AOV Growth&#39;, ((coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YTD AOV Growth&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;Q2 Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY Q2 Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;, coalesce(sum(q2_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;Attrition_CY_Q2&#39;, coalesce(sum(q3_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;Attrition_CY_Q3&#39;, coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q2&#39;, coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q2&#39;, coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q3&#39;, coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;, (coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;YoY Q2 Attrition TTM Rate&#39;, (coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;YTD Attrition TTM Rate&#39;;\nn\nFinal = union result, result_SubCloud;\nFinal = foreach Final generate &#39;Q2 ACV Absolute&#39; as &#39;Q2 ACV Absolute&#39;, &#39;YTD ACV Absolute&#39; as &#39;YTD ACV Absolute&#39;, &#39;YoY Q2 ACV Growth&#39; as &#39;YoY Q2 ACV Growth&#39;, &#39;YTD ACV Growth&#39; as &#39;YTD ACV Growth&#39;, &#39;Q2 AOV Absolute&#39; as &#39;Q2 AOV Absolute&#39;, &#39;YTD AOV Absolute&#39; as &#39;YTD AOV Absolute&#39;, &#39;YoY Q2 AOV Growth&#39; as &#39;YoY Q2 AOV Growth&#39;, &#39;YTD AOV Growth&#39; as &#39;YTD AOV Growth&#39;, sum(&#39;Attrition_CY_Q2&#39;) as &#39;Q2 Attrition Absolute&#39;, sum(&#39;Attrition_CY_Q3&#39;) as &#39;YTD Attrition Absolute&#39;, sum(&#39;YoY Q2 Attrition TTM Rate&#39;) as &#39;YoY Q2 Attrition TTM Rate&#39;, sum(&#39;YTD Attrition TTM Rate&#39;) as &#39;YTD Attrition TTM Rate&#39;, &#39;Q2 Pipegen Absolute&#39; as &#39;Q2 PipeGen Absolute&#39;, &#39;YTD Pipegen Absolute&#39; as &#39;YTD PipeGen Absolute&#39;, &#39;YoY Q2 Pipegen Growth&#39; as &#39;YoY Q2 PipeGen Growth&#39;, &#39;YTD Pipegen Growth&#39; as &#39;YTD PipeGen Growth&#39;, &#39;Lead&#39; as &#39;Lead&#39;, &#39;Lead_1&#39; as &#39;Lead_1&#39;, case when (&#39;Lead&#39; == &quot;☁ Tony Owens&quot;) then &quot;1. Tony Owens&quot; when (&#39;Lead&#39; == &quot;☁ Warren Wick&quot;) then &quot;2. Warren Wick&quot;  when (&#39;Lead&#39; == &quot;☁ Andrew Kofoid&quot;) then &quot;3. Andrew Kofoid&quot; when (&#39;Lead&#39; == &quot;☁ Miguel Milano&quot;) then &quot;4. Miguel Milano&quot; when (&#39;Lead&#39; == &quot;☁ Mark Innes&quot;) then &quot;5. Mark Innes&quot; when (&#39;Lead&#39; == &quot;☁ Shinichi Koide&quot;) then &quot;6. Shinichi Koide&quot; when (&#39;Lead&#39; == &quot;☁ Dave Rey&quot;) then &quot;7. Dave Rey&quot; when (&#39;Lead&#39; == &quot;☁ Enrique Ortegon&quot;) then &quot;8. Enrique Ortegon&quot; when (&#39;Lead&#39; == &quot;☁ Other&quot;) then &quot;9. Other&quot; else &quot;10. unkown&quot; end as &#39;Lead_Rank&#39;,case when(&#39;Lead_1&#39; == &quot;    ↳ Other&quot;) then &quot;    ↳ Z.Other&quot; else &#39;Lead_1&#39; end as &#39;Lead_1_Rank&#39;;\nnFinal = order Final by (&#39;Lead_Rank&#39; asc, &#39;Lead_1_Rank&#39; asc);\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------IMPLEMENT FAKE NONE FOR UNION -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nNone = foreach Final  generate 0 as &#39;Q2 ACV Absolute&#39;, 0 as &#39;YTD ACV Absolute&#39;, 0 as &#39;YoY Q2 ACV Growth&#39;, 0 as &#39;YTD ACV Growth&#39;, 0 as &#39;Q2 AOV Absolute&#39;, 0 as &#39;YTD AOV Absolute&#39;, 0 as &#39;YoY Q2 AOV Growth&#39;, 0 as &#39;YTD AOV Growth&#39;, 0 as &#39;Q2 Attrition Absolute&#39;, 0 as &#39;YTD Attrition Absolute&#39;, 0 as &#39;YoY Q2 Attrition TTM Rate&#39;, 0 as &#39;YTD Attrition TTM Rate&#39;, 0 as &#39;Q2 PipeGen Absolute&#39;, 0 as &#39;YTD PipeGen Absolute&#39;, 0 as &#39;YoY Q2 PipeGen Growth&#39;, 0 as &#39;YTD PipeGen Growth&#39;, &quot;None&quot; as &#39;Lead&#39;, &quot;None&quot; as &#39;Lead_1&#39;,&quot;None&quot; as &#39;Lead_Rank&#39;;\nn\nResult = union Final, None;\nResult = filter Result by &#39;Lead&#39; != &quot;None&quot;;Result = filter Result by &#39;Lead_1&#39; != &quot;    ↳ N/A&quot;;\n--Final = group result by(Lead, Lead_1,Lead_Rank);\n--Final = order Final by &#39;Lead_Rank&#39; asc;\nResult = foreach Result generate &#39;Lead_1&#39;+&quot;                  &quot; as &#39;Lead_1&#39;, sum(&#39;Q2 ACV Absolute&#39;) as &#39;Q2 ACV Absolute&#39;, sum(&#39;YTD ACV Absolute&#39;) as &#39;YTD ACV Absolute&#39;, sum(&#39;YoY Q2 ACV Growth&#39;) as &#39;YoY Q2 ACV Growth&#39;, sum(&#39;YTD ACV Growth&#39;) as &#39;YTD ACV Growth&#39;, sum(&#39;Q2 AOV Absolute&#39;) as &#39;Q2 AOV Absolute&#39;, sum(&#39;YTD AOV Absolute&#39;) as &#39;YTD AOV Absolute&#39;, sum(&#39;YoY Q2 AOV Growth&#39;) as &#39;YoY Q2 AOV Growth&#39;, sum(&#39;YTD AOV Growth&#39;) as &#39;YTD AOV Growth&#39;, sum(&#39;Q2 Attrition Absolute&#39;) as &#39;Q2 Attrition Absolute&#39;, sum(&#39;YTD Attrition Absolute&#39;) as &#39;YTD Attrition Absolute&#39;, sum(&#39;YoY Q2 Attrition TTM Rate&#39;) as &#39;YoY Q2 Attrition TTM Rate&#39;, sum(&#39;YTD Attrition TTM Rate&#39;) as &#39;YTD Attrition TTM Rate&#39;, sum(&#39;Q2 PipeGen Absolute&#39;) as &#39;Q2 PipeGen Absolute&#39;, sum(&#39;YTD PipeGen Absolute&#39;) as &#39;YTD PipeGen Absolute&#39;,sum( &#39;YoY Q2 PipeGen Growth&#39;) as &#39;YoY Q2 PipeGen Growth&#39;, sum(&#39;YTD PipeGen Growth&#39;) as &#39;YTD PipeGen Growth&#39;;\n\n",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      },
      "Cloud_2_1": {
        "broadcastFacet": false,
        "datasets": [
          {
            "id": "0Fbf2000000HtY7CAK",
            "label": "APM_ACV1",
            "name": "APM_ACV",
            "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtY7CAK"
          }
        ],
        "isGlobal": false,
        "label": "Cloud_2_1",
        "query": {
          "query": "{&quot;measures&quot;:[[&quot;count&quot;,&quot;*&quot;]],&quot;groups&quot;:[&quot;Cloud_2&quot;],&quot;filters&quot;:[[&quot;Cloud&quot;,[&quot;Success Cloud&quot;],&quot;in&quot;]]}",
          "version": -1
        },
        "receiveFacet": false,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": false,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "Table_Measures_3_Header_Top": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Measures_3_Header_Top",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy_GM&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;Master_l1&quot;).asString()}}&#39; in {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nresult_Total = group MasterHierarchy by all;\nresult_Total = foreach result_Total generate &quot;    &quot; as &#39;$ values in millions&#39;, &quot;$10M+ Deals                    &quot; as &#39;$10M+ Deals&#39;, &quot;$1M+ Deals                    &quot; as &#39;$1M+ Deals&#39;, &quot;Run Rate Volume                    &quot; as &#39;Run Rate Volume&#39;, &quot;New Logos                    &quot; as &#39;New Logos&#39;,&quot;Lost Logos                    &quot; as &#39;Lost Logos&#39;;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart",
          "visualizationType": "hbar"
        }
      },
      "Filter_Subcloud": {
        "broadcastFacet": true,
        "datasets": [
          {
            "id": "0Fbf2000000HtY7CAK",
            "label": "APM_ACV1",
            "name": "APM_ACV",
            "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtY7CAK"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": "{&quot;measures&quot;:[[&quot;count&quot;,&quot;*&quot;]],&quot;groups&quot;:[&quot;Subcloud&quot;]}",
          "version": -1
        },
        "receiveFacet": true,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {}
      },
      "Table_Measures_3_Header": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Measures_3_Header",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;Level_1&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nACV = load &quot;APM_ACV&quot;;\nACV = filter ACV by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nACV = filter ACV by &#39;Segment&#39; != &quot;CSG&quot;;\n--ACV = filter ACV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};;\nACV = group ACV by (&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;,&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39;,&#39;Month&#39;, &#39;Fiscal_Year&#39;, &#39;Region&#39; , &#39;Country&#39;);\nACV = foreach ACV generate  &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39; ,&#39;Month&#39; as &#39;Month&#39;,sum(&#39;ACV&#39;) as &#39;ACV&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nACV = filter ACV by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD NONE For Fake Header line----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nAPM_None = load &quot;APM_ACV&quot;;\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER ACV----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYACV = filter ACV by &#39;Month&#39; in   {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYACV = filter ACV by &#39;Month&#39; in   {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nn\nAOV = load &quot;APM_AOV&quot;;\nAOV = filter AOV by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nAOV = filter AOV by &#39;Segment&#39; != &quot;CSG&quot;;\n--AOV = filter AOV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nAOV = foreach AOV generate  &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;,  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;AOV&#39;) as &#39;AOV&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nAOV = filter AOV by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER AOV ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYAOV = filter AOV by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYAOV = filter AOV by &#39;Month&#39; in   {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYAOV = filter AOV by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month_cum&quot;).asString()}}&amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYAOV = filter AOV by &#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------/////////////////////////////-----------LOAD ATTRITION ----------------/////////////////////////////////////////\n\nAttrition = load &quot;APM_Attrition&quot;; Attrition = filter Attrition by  {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\nAttrition = filter Attrition by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nAttrition = filter Attrition by &#39;Segment&#39; != &quot;CSG&quot;;\n--Attrition = filter Attrition by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nAttrition = foreach Attrition generate  &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Attrition&#39;)*-1 as &#39;Attrition_Product&#39;, sum(&#39;TTM&#39;)*-1 as &#39;TTM_Product&#39;,sum(&#39;AOV_twelve_month_ago&#39;) as &#39;AOV_twelve_month_ago&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nAttrition = filter Attrition by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\n----------------------------------------------------------------------------------------------FILTER ATTRITION -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYATT = filter Attrition by &#39;Month&#39; in   {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYATT = filter Attrition by &#39;Month&#39; in   {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYATT = filter Attrition by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq4_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n------------------------------------------------------------------------------------------------------------------------------------------------LOAD PIPEGEN--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nPipegen = load &quot;APM_Pipegen1&quot;;\nPipegen = filter Pipegen by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};Pipegen = filter Pipegen by &#39;Segment&#39; != &quot;CSG&quot;;\n--Pipegen = filter Pipegen by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\n Pipegen = group Pipegen by (&#39;Fiscal_Year&#39;,&#39;Quarter&#39;,&#39;Region&#39;,&#39;Cloud&#39;,&#39;Month&#39;,&#39;Lead&#39;,&#39;Lead_1&#39;,&#39;Country&#39;);\nPipegen = foreach Pipegen generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Pipegen&#39;) as &#39;Pipegen&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;  Pipegen = filter Pipegen by  {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nq2_CYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n------------------------------------------------------------------------------------------------------------------------------------------------LOAD DEALS--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nDEALS = load &quot;APM_DEALS&quot;;\nDEALS = filter DEALS by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};DEALS = filter DEALS by &#39;Segment&#39; != &quot;CSG&quot;;\n--DEALS = filter DEALS by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nDEALS = foreach DEALS generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;X10M_Deals&#39;) as &#39;X10M_Deals&#39;,sum(&#39;X10M&#39;) as &#39;X10M&#39;,sum(&#39;Runrate_Volume&#39;) as &#39;Runrate_Volume&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;  DEALS = filter DEALS by  {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nq2_CYDEALS = filter DEALS by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYDEALS = filter DEALS by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYDEALS = filter DEALS by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYDEALS = filter DEALS by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n------------------------------------------------------------------------------------------------------------------------------------------------LOAD LOGOS--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nLOGOS = load &quot;APM_LOGO&quot;;\nLOGOS = filter LOGOS by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};LOGOS = filter LOGOS by &#39;Segment&#39; != &quot;CSG&quot;;\n--LOGOS = filter LOGOS by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nLOGOS = foreach LOGOS generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;New_Logos&#39;) as &#39;New_Logos&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;  LOGOS = filter LOGOS by  {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nq2_CYLOGOS = filter LOGOS by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYLOGOS = filter LOGOS by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYLOGOS = filter LOGOS by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYLOGOS = filter LOGOS by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n------------------------------------------------------------------------------------------------------------------------------------------------LOAD LOST LOGOS--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nLOGOSLOST = load &quot;APM_LOST_LOGO&quot;;\nLOGOSLOST = filter LOGOSLOST by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};LOGOSLOST = filter LOGOSLOST by &#39;Segment&#39; != &quot;CSG&quot;;\n--LOGOSLOST = filter LOGOSLOST by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nLOGOSLOST = foreach LOGOSLOST generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Lost_Logo_Count&#39;) as &#39;Lost_Logo_Count&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;  LOGOSLOST = filter LOGOSLOST by  {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nq2_CYLOGOSLOST = filter LOGOSLOST by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYLOGOSLOST = filter LOGOSLOST by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYLOGOSLOST = filter LOGOSLOST by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYLOGOSLOST = filter LOGOSLOST by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Grouping------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nresult_Total = group q2_CYACV by all full, q2_PYACV by all full, q3_CYACV by all full, q3_PYACV by all full, q2_CYAOV by all full, q2_PYAOV by all full, q3_CYAOV by all full, q3_PYAOV by all full, q2_CYATT by all full, q2_PYATT by all full, q3_CYATT by all full, q3_PYATT by all full,q4_CYATT by all full,  q2_CYPipegen by all full, q2_PYPipegen by all full, q3_CYPipegen by all full, q3_PYPipegen by all full ,q2_CYDEALS by all full, q2_PYDEALS by all full, q3_CYDEALS by all full, q3_PYDEALS by all full, q2_CYLOGOS by all full, q2_PYLOGOS by all full, q3_CYLOGOS by all full, q3_PYLOGOS by all full,q2_CYLOGOSLOST by all full, q2_PYLOGOSLOST by all full, q3_CYLOGOSLOST by all full, q3_PYLOGOSLOST by all ;\n----------------------------------------------/////////////////////////////////////////------PROJECTION----- -////////////////////////////////////////////////-----------------------------------------------------------------------------------------------------------------------------------------------------\n\nresult_Total = foreach result_Total generate &quot;TOTAL&quot; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, coalesce(sum(q2_CYACV.&#39;ACV&#39;),0) as &#39;A&#39;, coalesce(sum(q2_PYACV.&#39;ACV&#39;),0) as &#39;B&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;),0) as &#39;C&#39;, coalesce(sum(q3_PYACV.&#39;ACV&#39;),0) as &#39;D&#39;,coalesce(sum(q2_CYAOV.&#39;AOV&#39;),0) as &#39;E&#39;, coalesce(sum(q2_PYAOV.&#39;AOV&#39;),0) as &#39;F&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;),0) as &#39;G&#39;, coalesce(sum(q3_PYAOV.&#39;AOV&#39;),0) as &#39;H&#39;,coalesce(sum(q2_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q2&#39;,coalesce(sum(q3_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q3&#39;,coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q2&#39; ,coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q2&#39;,coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q3&#39; ,coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;,coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;YTD X10M_Deals Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YTD X10M_Deals Growth&#39;,coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) as &#39;YTD X10M Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YTD X10M Growth&#39;,coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;YTD Runrate_Volume Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YTD Runrate_Volume Growth&#39; ,coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;, coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;YTD New_Logos Absolute&#39;, ((coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;, ((coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;YTD New_Logos Growth&#39;,coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;, coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;YTD Lost_Logo_Count Absolute&#39;, ((coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;, ((coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;YTD Lost_Logo_Count Growth&#39;;\nnresult_Total = foreach result_Total generate &#39;A&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;,  &#39;C&#39; as  &#39;YTD ACV Absolute&#39;, ((A -B) / B) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;,((C - D) / D) * 100 as &#39;YTD ACV Growth&#39;,&#39;E&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;,  &#39;G&#39; as  &#39;YTD AOV Absolute&#39;, ((E -F) / F) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;,  ((G - H) / H) * 100  as &#39;YTD AOV Growth&#39;, coalesce(sum(&#39;Attrition_CY_Q2&#39;),0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Attrition Absolute&#39;, coalesce(sum(&#39;Attrition_CY_Q3&#39;),0) as &#39;YTD Attrition Absolute&#39;,(coalesce(round(sum(&#39;TTM_Product_CY_Q2&#39;), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q2), 0), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, (coalesce(round(sum(&#39;TTM_Product_CY_Q3&#39;), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q3), 0), 0)) * 100 as &#39;YTD Attrition TTM Rate&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} PipeGen Absolute&#39;,&#39;YTD Pipegen Absolute&#39; as &#39;YTD PipeGen Absolute&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} PipeGen Growth&#39;,&#39;YTD Pipegen Growth&#39; as &#39;YTD PipeGen Growth&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;,&#39;YTD X10M_Deals Absolute&#39; as &#39;YTD X10M_Deals Absolute&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;,&#39;YTD X10M_Deals Growth&#39; as &#39;YTD X10M_Deals Growth&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;,&#39;YTD X10M Absolute&#39; as &#39;YTD X10M Absolute&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;,&#39;YTD X10M Growth&#39; as &#39;YTD X10M Growth&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;,&#39;YTD Runrate_Volume Absolute&#39; as &#39;YTD Runrate_Volume Absolute&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;,&#39;YTD Runrate_Volume Growth&#39; as &#39;YTD Runrate_Volume Growth&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;,&#39;YTD New_Logos Absolute&#39; as &#39;YTD New_Logos Absolute&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;,&#39;YTD New_Logos Growth&#39; as &#39;YTD New_Logos Growth&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;,&#39;YTD Lost_Logo_Count Absolute&#39; as &#39;YTD Lost_Logo_Count Absolute&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;,&#39;YTD Lost_Logo_Count Growth&#39; as &#39;YTD Lost_Logo_Count Growth&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------NONE for Fake HEADER--------------------------------------------------------------------------------------------------------------\n;result_none = group APM_None by &#39;all&#39;; result_none = foreach result_none generate 0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;,  0 as  &#39;YTD ACV Absolute&#39;, 0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;,0 as &#39;YTD ACV Growth&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, 0 as  &#39;YTD AOV Absolute&#39;, 0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, 0 as &#39;YTD AOV Growth&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Attrition Absolute&#39;,0 as &#39;YTD Attrition Absolute&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, 0 as &#39;YTD Attrition TTM Rate&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} PipeGen Absolute&#39;,0 as &#39;YTD PipeGen Absolute&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} PipeGen Growth&#39;,0 as &#39;YTD PipeGen Growth&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;,0 as &#39;YTD X10M_Deals Absolute&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;,0 as &#39;YTD X10M_Deals Growth&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;,0 as &#39;YTD X10M Absolute&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;,0 as &#39;YTD X10M Growth&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;,0 as &#39;YTD Runrate_Volume Absolute&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;,0 as &#39;YTD Runrate_Volume Growth&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;,0 as &#39;YTD New_Logos Absolute&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;,0 as &#39;YTD New_Logos Growth&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;,0 as &#39;YTD Lost_Logo_Count Absolute&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;,0 as &#39;YTD Lost_Logo_Count Growth&#39;; \n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------UNION--------------------------------------------------------------------------------------------------------------\n;result_union = union result_none, result_Total;result_union = group result_union by &#39;all&#39;;  final_result = foreach result_union generate &quot;TOTAL                                &quot; as &#39;Lead_1&#39;, sum (&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;, sum( &#39;YTD X10M_Deals Absolute&#39;) as  &#39;YTD X10M_Deals Absolute&#39;, sum( &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;, sum(&#39;YTD X10M_Deals Growth&#39;) as &#39;YTD X10M_Deals Growth&#39;,sum (&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} (#)&#39;, sum( &#39;YTD X10M Absolute&#39;) as  &#39;YTD X10M Absolute&#39;, sum( &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;, sum(&#39;YTD X10M Growth&#39;) as &#39;YTD X10M Growth&#39;,sum (&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;, sum( &#39;YTD Runrate_Volume Absolute&#39;) as  &#39;YTD Runrate_Volume Absolute&#39;, sum( &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;, sum(&#39;YTD Runrate_Volume Growth&#39;) as &#39;YTD Runrate_Volume Growth&#39;,sum (&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;, sum( &#39;YTD New_Logos Absolute&#39;) as  &#39;YTD New_Logos Absolute&#39;, sum( &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;, sum(&#39;YTD New_Logos Growth&#39;) as &#39;YTD New_Logos Growth&#39;,sum (&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;, sum( &#39;YTD Lost_Logo_Count Absolute&#39;) as  &#39;YTD Lost_Logo_Count Absolute&#39;, sum( &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;, sum(&#39;YTD Lost_Logo_Count Growth&#39;) as &#39;YTD Lost_Logo_Count Growth&#39;  ; ",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        }
      },
      "Table_Measures_2_Header": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Measures_2_Header",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;Level_1&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\n------------------------------------------------------------------------------------------------------------------------------------------------LOAD PIPEGEN--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nPipegen = load &quot;APM_Pipegen1&quot;;Pipegen = filter Pipegen by &#39;Segment&#39; != &quot;CSG&quot;;\nPipegen = filter Pipegen by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\n\nq2_CYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD NONE For Fake Header line----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nAPM_None = load &quot;APM_ACV&quot;;\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD HC------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nHC = load &quot;APM_HC&quot;;HC = filter HC by &#39;Segment&#39; != &quot;CSG&quot;;\nHC = filter HC by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nHC = filter HC by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nHC = foreach HC generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Subcloud&#39; as &#39;Subcloud&#39;,&#39;Cloud_2&#39; as &#39;Cloud_2&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;SE&#39;) as &#39;SE&#39;,sum(&#39;AE&#39;) as &#39;AE&#39;,sum(&#39;Co_Prime&#39;) as &#39;Co_Prime&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;  HC = filter HC by  {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\nq2_CYHC = filter HC by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYHC = filter HC by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_HC = filter HC by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYHC = filter HC by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYHC = filter HC by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD SWE INFRA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSW = load &quot;APM_SWE_INFRA&quot;;SW = filter SW by &#39;Segment&#39; != &quot;CSG&quot;;\nSW = filter SW by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYSW = filter SW by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYSW = filter SW by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_SW = filter SW by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYSW = filter SW by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYSW = filter SW by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_SW = filter SW by (&#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}}nresult_Total = group q2_CYPipegen by all full, q2_PYPipegen by all full, q3_CYPipegen by all full, q3_PYPipegen by all full, q2_CYHC by all full, q2_PYHC by all full,q2_PY_2_HC by all full, q3_CYHC by all full, q3_PYHC by all full,q3_PY_2_HC by all full, q2_CYSW by all full, q2_PYSW by all full,q2_PY_2_SW by all full, q3_CYSW by all full, q3_PYSW by all full,q3_PY_2_SW by all ;\nresult_Total = foreach result_Total generate &quot;TOTAL&quot; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;),0) as &#39;A&#39;, coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;),0) as &#39;B&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;),0) as &#39;C&#39;, coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;),0) as &#39;D&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;),0) as &#39;YTD Pipegen absolute&#39;, coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE Absolute&#39;, coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) as &#39;YTD SE Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) - coalesce(sum(q2_PYHC.&#39;SE&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;SE&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} SE Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YTD SE CAGR&#39;, ((coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) - coalesce(sum(q3_PYHC.&#39;SE&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;SE&#39;), 0)) * 100 as &#39;YTD SE Growth&#39;, coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE Absolute&#39;, coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) as &#39;YTD AE Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) - coalesce(sum(q2_PYHC.&#39;AE&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;AE&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} AE Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) - coalesce(sum(q3_PYHC.&#39;AE&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;AE&#39;), 0)) * 100 as &#39;YTD AE Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;YTD AE CAGR&#39;, coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime Absolute&#39;, coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) as &#39;YTD Co_Prime Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) - coalesce(sum(q2_PYHC.&#39;Co_Prime&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;Co_Prime&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Co_Prime Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) - coalesce(sum(q3_PYHC.&#39;Co_Prime&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;Co_Prime&#39;), 0)) * 100 as &#39;YTD Co_Prime Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YTD Co_Prime CAGR&#39;, coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE Absolute&#39;, coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) as &#39;YTD SWE Absolute&#39;, ((coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(q2_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(q2_PYSW.&#39;SWE&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39;, ((coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(q3_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(q3_PYSW.&#39;SWE&#39;), 0)) * 100 as &#39;YTD SWE Growth&#39;,(power(coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) / coalesce(sum(q2_PY_2_SW.&#39;SWE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE CAGR&#39;,(power(coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) / coalesce(sum(q3_PY_2_SW.&#39;SWE&#39;), 0),(1/2))-1)*100 as &#39;YTD SWE CAGR&#39;, coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA Absolute&#39;, coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) as &#39;YTD INFRA Absolute&#39;, ((coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) - coalesce(sum(q2_PYSW.&#39;INFRA&#39;), 0)) / coalesce(sum(q2_PYSW.&#39;INFRA&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;, ((coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) - coalesce(sum(q3_PYSW.&#39;INFRA&#39;), 0)) / coalesce(sum(q3_PYSW.&#39;INFRA&#39;), 0)) * 100 as &#39;YTD INFRA Growth&#39;,(power(coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) / coalesce(sum(q2_PY_2_SW.&#39;INFRA&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA CAGR&#39;,(power(coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) / coalesce(sum(q3_PY_2_SW.&#39;INFRA&#39;), 0),(1/2))-1)*100 as &#39;YTD INFRA CAGR&#39;;\n-----------------------------------------------------------------------------------------------------FINAL PROJECTION-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_Total = foreach result_Total generate   &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AEs&#39;,&#39;YTD AE Absolute&#39; as &#39;YTD AE Absolute&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;,&#39;YTD AE CAGR&#39; as &#39;YTD AE CAGR&#39; ,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime&#39;,&#39;YTD Co_Prime Absolute&#39; as &#39;YTD Co_Prime Absolute&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;,&#39;YTD Co_Prime CAGR&#39; as &#39;YTD Co_Prime CAGR&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SEs&#39;,&#39;YTD SE Absolute&#39; as &#39;YTD SE Absolute&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;,&#39;YTD SE CAGR&#39; as &#39;YTD SE CAGR&#39; ;\n--,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE&#39;,&#39;YTD SWE Absolute&#39; as &#39;YTD SWE Absolute&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39;,&#39;YTD SWE Growth&#39; as &#39;YTD SWE Growth&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA&#39;,&#39;YTD INFRA Absolute&#39; as &#39;YTD INFRA Absolute&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;,&#39;YTD INFRA Growth&#39; as &#39;YTD INFRA Growth&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------NONE for Fake HEADER--------------------------------------------------------------------------------------------------------------\n;result_none = group APM_None by &#39;all&#39;; result_none = foreach result_none generate 0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AEs&#39;,0 as &#39;YTD AE Absolute&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;,0 as &#39;YTD AE CAGR&#39; ,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime&#39;,0 as &#39;YTD Co_Prime Absolute&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;,0 as &#39;YTD Co_Prime CAGR&#39;, 0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SEs&#39;,0 as &#39;YTD SE Absolute&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;,0 as &#39;YTD SE CAGR&#39; ,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE&#39;,0 as &#39;YTD SWE Absolute&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39;,0 as &#39;YTD SWE Growth&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA&#39;,0 as &#39;YTD INFRA Absolute&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;,0 as &#39;YTD INFRA Growth&#39;; \n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------UNION--------------------------------------------------------------------------------------------------------------\n;result_union = union result_none, result_Total;result_union = group result_union by &#39;all&#39;;  final_result = foreach result_union generate &quot;TOTAL                                &quot; as &#39;Lead_1&#39;, sum(&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AEs&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AEs&#39;,sum(&#39;YTD AE Absolute&#39;) as &#39;YTD AE Absolute&#39;,sum(&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;,sum(&#39;YTD AE CAGR&#39;) as &#39;YTD AE CAGR&#39; ,sum(&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime&#39;,sum(&#39;YTD Co_Prime Absolute&#39;) as &#39;YTD Co_Prime Absolute&#39;,sum(&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;,sum(&#39;YTD Co_Prime CAGR&#39;) as &#39;YTD Co_Prime CAGR&#39;,sum(&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SEs&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SEs&#39;,sum(&#39;YTD SE Absolute&#39;) as &#39;YTD SE Absolute&#39;,sum(&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;,sum(&#39;YTD SE CAGR&#39;) as &#39;YTD SE CAGR&#39; ;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        }
      },
      "Filter_Segment": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Filter_Segment",
        "numbers": [],
        "query": "q = load &quot;APM_AOV&quot;;\nb = load &quot;APM_LOST_LOGO&quot;;\nq = group q by &#39;Segment&#39; full, b by &#39;Segment&#39;;\nq = foreach q generate coalesce(q.&#39;Segment&#39;,b.&#39;Segment&#39;) as &#39;Segment&#39;;\nq = order q by &#39;Segment&#39; asc;\nq = limit q 2000;",
        "receiveFacet": true,
        "selectMode": "multi",
        "start": "[&quot;B2C&quot;,&quot;CBU&quot;,&quot;EBU&quot;,&quot;GOV&quot;,&quot;Other&quot;,&quot;NA&quot;]",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "options": {},
          "visualizationType": "hbar"
        }
      },
      "Filter_Industry": {
        "broadcastFacet": true,
        "datasets": [
          {
            "id": "0Fbf2000000HtaPCAS",
            "label": "APM_Pipegen1",
            "name": "APM_Pipegen1",
            "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtaPCAS"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": "{&quot;measures&quot;:[[&quot;count&quot;,&quot;*&quot;]],&quot;groups&quot;:[&quot;Industry&quot;]}",
          "version": -1
        },
        "receiveFacet": true,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {}
      },
      "Table_Measures_1_Header": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Measures_1_Header",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;Level_1&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nACV = load &quot;APM_ACV&quot;;\nACV = filter ACV by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nACV = filter ACV by &#39;Segment&#39; != &quot;CSG&quot;;\n--ACV = filter ACV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};;\nACV = group ACV by (&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;,&#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39;,&#39;Month&#39;, &#39;Fiscal_Year&#39;, &#39;Region&#39; , &#39;Country&#39;);\nACV = foreach ACV generate  &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39; ,&#39;Month&#39; as &#39;Month&#39;,sum(&#39;ACV&#39;) as &#39;ACV&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nACV = filter ACV by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD NONE For Fake Header line----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nAPM_None = load &quot;APM_ACV&quot;;\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER ACV----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYACV = filter ACV by &#39;Month&#39; in   {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYACV = filter ACV by &#39;Month&#39; in   {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nn\nAOV = load &quot;APM_AOV&quot;;\nAOV = filter AOV by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nAOV = filter AOV by &#39;Segment&#39; != &quot;CSG&quot;;\n--AOV = filter AOV by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nAOV = foreach AOV generate  &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;,  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;AOV&#39;) as &#39;AOV&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nAOV = filter AOV by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER AOV ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYAOV = filter AOV by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYAOV = filter AOV by &#39;Month&#39; in   {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYAOV = filter AOV by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month_cum&quot;).asString()}}&amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYAOV = filter AOV by &#39;Month&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------/////////////////////////////-----------LOAD ATTRITION ----------------/////////////////////////////////////////\n\nAttrition = load &quot;APM_Attrition&quot;; Attrition = filter Attrition by  {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\nAttrition = filter Attrition by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nAttrition = filter Attrition by &#39;Segment&#39; != &quot;CSG&quot;;\n--Attrition = filter Attrition by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nAttrition = foreach Attrition generate  &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Attrition&#39;)*-1 as &#39;Attrition_Product&#39;, sum(&#39;TTM&#39;)*-1 as &#39;TTM_Product&#39;,sum(&#39;AOV_twelve_month_ago&#39;) as &#39;AOV_twelve_month_ago&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nAttrition = filter Attrition by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\n----------------------------------------------------------------------------------------------FILTER ATTRITION -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYATT = filter Attrition by &#39;Month&#39; in   {{cell(Selector_Quarter.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYATT = filter Attrition by &#39;Month&#39; in   {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYATT = filter Attrition by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq4_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Selector_Quarter.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n------------------------------------------------------------------------------------------------------------------------------------------------LOAD PIPEGEN--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nPipegen = load &quot;APM_Pipegen1&quot;;\nPipegen = filter Pipegen by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};Pipegen = filter Pipegen by &#39;Segment&#39; != &quot;CSG&quot;;\n--Pipegen = filter Pipegen by &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\n Pipegen = group Pipegen by (&#39;Fiscal_Year&#39;,&#39;Quarter&#39;,&#39;Region&#39;,&#39;Cloud&#39;,&#39;Month&#39;,&#39;Lead&#39;,&#39;Lead_1&#39;,&#39;Country&#39;);\nPipegen = foreach Pipegen generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Pipegen&#39;) as &#39;Pipegen&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \n\nPipegen = filter Pipegen by {{column(lens_1.selection,[&quot;Country&quot;]).asEquality(&#39;Country&#39;)}};\n\nq2_CYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Selector_Quarter.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Grouping------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nresult_Total = group q2_CYACV by all full, q2_PYACV by all full, q3_CYACV by all full, q3_PYACV by all full, q2_CYAOV by all full, q2_PYAOV by all full, q3_CYAOV by all full, q3_PYAOV by all full, q2_CYATT by all full, q2_PYATT by all full, q3_CYATT by all full, q3_PYATT by all full,q4_CYATT by all full,  q2_CYPipegen by all full, q2_PYPipegen by all full, q3_CYPipegen by all full, q3_PYPipegen by all ;\n----------------------------------------------/////////////////////////////////////////------PROJECTION----- -////////////////////////////////////////////////-----------------------------------------------------------------------------------------------------------------------------------------------------\n\nresult_Total = foreach result_Total generate &quot;TOTAL&quot; as &#39;{{cell(Static_Cloud_Filter.selection,0,&quot;level_1&quot;).asString()}}&#39;, coalesce(sum(q2_CYACV.&#39;ACV&#39;),0) as &#39;A&#39;, coalesce(sum(q2_PYACV.&#39;ACV&#39;),0) as &#39;B&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;),0) as &#39;C&#39;, coalesce(sum(q3_PYACV.&#39;ACV&#39;),0) as &#39;D&#39;,coalesce(sum(q2_CYAOV.&#39;AOV&#39;),0) as &#39;E&#39;, coalesce(sum(q2_PYAOV.&#39;AOV&#39;),0) as &#39;F&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;),0) as &#39;G&#39;, coalesce(sum(q3_PYAOV.&#39;AOV&#39;),0) as &#39;H&#39;,coalesce(sum(q2_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q2&#39;,coalesce(sum(q3_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q3&#39;,coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q2&#39; ,coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q2&#39;,coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q3&#39; ,coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;;\nnresult_Total = foreach result_Total generate &#39;A&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;,  &#39;C&#39; as  &#39;YTD ACV Absolute&#39;, ((A -B) / B) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;,((C - D) / D) * 100 as &#39;YTD ACV Growth&#39;,&#39;E&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;,  &#39;G&#39; as  &#39;YTD AOV Absolute&#39;, ((E -F) / F) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;,  ((G - H) / H) * 100  as &#39;YTD AOV Growth&#39;, coalesce(sum(&#39;Attrition_CY_Q2&#39;),0) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Attrition Absolute&#39;, coalesce(sum(&#39;Attrition_CY_Q3&#39;),0) as &#39;YTD Attrition Absolute&#39;,(coalesce(round(sum(&#39;TTM_Product_CY_Q2&#39;), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q2), 0), 0)) * 100 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, (coalesce(round(sum(&#39;TTM_Product_CY_Q3&#39;), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q3), 0), 0)) * 100 as &#39;YTD Attrition TTM Rate&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} PipeGen Absolute&#39;,&#39;YTD Pipegen Absolute&#39; as &#39;YTD PipeGen Absolute&#39;,&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39; as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} PipeGen Growth&#39;,&#39;YTD Pipegen Growth&#39; as &#39;YTD PipeGen Growth&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------NONE for Fake HEADER--------------------------------------------------------------------------------------------------------------\n;result_none = group APM_None by &#39;all&#39;; result_none = foreach result_none generate 0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;,  0 as  &#39;YTD ACV Absolute&#39;, 0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;,0 as &#39;YTD ACV Growth&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, 0 as  &#39;YTD AOV Absolute&#39;, 0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, 0 as &#39;YTD AOV Growth&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Attrition Absolute&#39;,0 as &#39;YTD Attrition Absolute&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, 0 as &#39;YTD Attrition TTM Rate&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} PipeGen Absolute&#39;,0 as &#39;YTD PipeGen Absolute&#39;,0 as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} PipeGen Growth&#39;,0 as &#39;YTD PipeGen Growth&#39;; \n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------UNION--------------------------------------------------------------------------------------------------------------\n;result_union = union result_none, result_Total;result_union = group result_union by &#39;all&#39;;  final_result = foreach result_union generate &quot;TOTAL                                &quot; as &#39;Lead_1&#39;, sum(&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;) as  &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;, sum(&#39;YTD ACV Absolute&#39;) as&#39;YTD ACV Absolute&#39; , sum(&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;, sum(&#39;YTD ACV Growth&#39;) as  &#39;YTD ACV Growth&#39;,sum (&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, sum( &#39;YTD AOV Absolute&#39;) as  &#39;YTD AOV Absolute&#39;, sum( &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, sum(&#39;YTD AOV Growth&#39;) as &#39;YTD AOV Growth&#39;, sum(&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Attrition Absolute&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} Attrition Absolute&#39;, sum(&#39;YTD Attrition Absolute&#39;) as &#39;YTD Attrition Absolute&#39;, sum(&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, sum(&#39;YTD Attrition TTM Rate&#39;) as  &#39;YTD Attrition TTM Rate&#39;, sum(&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} PipeGen Absolute&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_absolute&quot;).asString()}} PipeGen Absolute&#39;, sum(&#39;YTD PipeGen Absolute&#39;) as &#39;YTD PipeGen Absolute&#39;, sum(&#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} PipeGen Growth&#39;) as &#39;{{cell(Selector_Quarter.selection,0,&quot;Header_name_rate&quot;).asString()}} PipeGen Growth&#39;, sum(&#39;YTD PipeGen Growth&#39;) as  &#39;YTD PipeGen Growth&#39; ; ",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        }
      },
      "lens_1": {
        "broadcastFacet": true,
        "groups": [
          "Country"
        ],
        "numbers": [],
        "query": "q = load &quot;Master_Hierarchy&quot;;\nq = filter q by &#39;Level_1&#39; in  {{cell(Static_Region_Filter.selection,0,&quot;filter&quot;).asString()}};\nq = filter q by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Level_1&#39;)}};\nq = group q by (&#39;Level_1&#39;, &#39;Level_2&#39;);\n\nq = foreach q generate \ncase when (&#39;Level_1&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Level_2&#39; ==  &quot;Canada&quot; )) then &quot;Canada&quot; \nwhen (&#39;Level_1&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Level_2&#39; ==  &quot;United States&quot; )) then &quot;United States&quot; \nwhen (&#39;Level_1&#39; == &quot;AMER&quot;)then &quot;RO AMER&quot; \nwhen (&#39;Level_1&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Level_2&#39; ==  &quot;United Kingdom&quot; )) then &quot;United Kingdom&quot;  \nwhen (&#39;Level_1&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Level_2&#39; ==  &quot;France&quot; )) then &quot;France&quot; \nwhen (&#39;Level_1&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Level_2&#39; ==  &quot;Germany&quot; )) then &quot;Germany&quot; \nwhen (&#39;Level_1&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Level_2&#39; ==  &quot;Netherlands&quot; )) then &quot;Netherlands&quot; \nwhen (&#39;Level_1&#39; == &quot;EMEA&quot; ) then &quot;RO EMEA&quot; \nwhen (&#39;Level_1&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Level_2&#39; ==  &quot;Australia&quot; )) then &quot;ANZ&quot;  \nwhen (&#39;Level_1&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Level_2&#39; ==  &quot;ANZ&quot; )) then &quot;ANZ&quot;  \nwhen (&#39;Level_1&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Level_2&#39; ==  &quot;India&quot; )) then &quot;India&quot; \nwhen (&#39;Level_1&#39; == &quot;APAC&quot; ) then &quot;RO APAC&quot; \nwhen (&#39;Level_1&#39; == &quot;APAC&quot; ) then &quot;RO APAC&quot;  \nwhen (&#39;Level_1&#39; == &quot;JP&quot; &amp;&amp; (&#39;Level_2&#39; == &quot;Japan&quot; )) then &quot;Japan&quot;\nwhen (&#39;Level_1&#39; == &quot;JP&quot; &amp;&amp; (&#39;Level_2&#39; == &quot;South Korea&quot;)) then &quot;South Korea&quot;\nwhen (&#39;Level_1&#39; == &quot;JP&quot;) then &quot;RO JP&quot;  \nwhen (&#39;Level_1&#39; == &quot;LACA&quot; &amp;&amp; (&#39;Level_2&#39; ==  &quot;Brazil&quot; )) then &quot;Brazil&quot; \nwhen (&#39;Level_1&#39; == &quot;LACA&quot; ) then &quot;RO LACA&quot; \nwhen (&#39;Level_1&#39; == &quot;Other&quot; ) then &quot;Other&quot; else &quot;ERROR&quot; end as &#39;Country&#39;;\n\nq = group q by &#39;Country&#39;; \nq = foreach q generate &#39;Country&#39;; \nq = order q by (&#39;Country&#39; asc);",
        "receiveFacet": true,
        "selectMode": "multi",
        "strings": [
          "Country"
        ],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      },
      "Table_Dimension_Header": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Dimension_Header",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy_GM&quot;; q= group MasterHierarchy by &#39;all&#39;;\nq = foreach q generate &quot;    TOTAL    &quot; as &#39;Sales Leader&#39;;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        }
      },
      "lens_2": {
        "broadcastFacet": true,
        "groups": [
          "Region"
        ],
        "numbers": [],
        "query": "q = load &quot;Master_Hierarchy&quot;;\nq = filter q by &#39;Level_1&#39; in  {{cell(Static_Region_Filter.selection,0,&quot;filter&quot;).asString()}};q = group q by &#39;Level_1&#39; ;q = foreach q generate &#39;Level_1&#39; as &#39;Region&#39;; ; q = order q by (&#39;Region&#39; asc) ;",
        "receiveFacet": false,
        "selectMode": "multi",
        "strings": [
          "Region"
        ],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      }
    },
    "widgetStyle": {
      "backgroundColor": "#FFFFFF",
      "borderColor": "#E6ECF2",
      "borderEdges": [],
      "borderRadius": 0,
      "borderWidth": 1
    },
    "widgets": {
      "link_18": {
        "parameters": {
          "destinationLink": {
            "name": "5ebc0793-feb8-4a12-9c50-49d091a53857"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "▲ Hide Filters ▲",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_19": {
        "parameters": {
          "destinationLink": {
            "name": "a32a622b-f247-47ef-92af-1ce8fe739626"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "▼ Show Filters ▼",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_16": {
        "parameters": {
          "destinationLink": {
            "name": "79809e29-5862-4dc4-9436-df82a567beb8"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "CSG Metrics",
          "textAlignment": "center",
          "textColor": "#7D98B3"
        },
        "type": "link"
      },
      "link_17": {
        "parameters": {
          "destinationLink": {
            "name": "328a689d-17a8-489e-b41c-d6dbaedbf3ac"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "▼ Show Filters ▼",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_14": {
        "parameters": {
          "destinationLink": {
            "name": "0ac38e06-d0e1-4058-b374-a44482ccc3f4"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Sales Details",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_15": {
        "parameters": {
          "destinationLink": {
            "name": "8eb068cf-416c-4468-8531-6475f58f7a19"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "▲ Hide Filters ▲",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_12": {
        "parameters": {
          "destinationLink": {
            "name": "a32a622b-f247-47ef-92af-1ce8fe739626"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Distribution HC",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_13": {
        "parameters": {
          "destinationLink": {
            "name": "APM_Sales_Leader_Summary_Dashboard_Level_1"
          },
          "destinationType": "dashboard",
          "fontSize": 14,
          "includeState": true,
          "text": "Lead",
          "textAlignment": "center",
          "textColor": "rgb(0, 135, 255)"
        },
        "type": "link"
      },
      "link_10": {
        "parameters": {
          "destinationLink": {
            "name": "APM_Sales_Leader_Summary_Dashboard_Level_1"
          },
          "destinationType": "dashboard",
          "fontSize": 14,
          "includeState": true,
          "text": "Lead",
          "textAlignment": "center",
          "textColor": "rgba(0, 135, 255, 0.71)"
        },
        "type": "link"
      },
      "link_11": {
        "parameters": {
          "destinationLink": {
            "name": "328a689d-17a8-489e-b41c-d6dbaedbf3ac"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Financial Measures and Pipeline",
          "textAlignment": "center",
          "textColor": "#7D98B3"
        },
        "type": "link"
      },
      "table_12": {
        "parameters": {
          "borderColor": "rgba(255, 255, 255, 0.2)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "rgb(43, 71, 114)",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#ffffff",
            "fontSize": 10
          },
          "innerMajorBorderColor": "rgba(255, 255, 255, 0.2)",
          "innerMinorBorderColor": "rgba(255, 255, 255, 0.2)",
          "maxColumnWidth": 245,
          "minColumnWidth": 65,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Measures_2_Header",
          "totals": true,
          "verticalPadding": 4
        },
        "type": "table"
      },
      "container_2": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "stretch"
        },
        "type": "container"
      },
      "table_14": {
        "parameters": {
          "borderColor": "rgb(230, 236, 242)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(244, 246, 249)",
            "fontColor": "rgb(244, 246, 249)",
            "fontSize": 0
          },
          "innerMajorBorderColor": "rgb(230, 236, 242)",
          "innerMinorBorderColor": "rgb(230, 236, 242)",
          "maxColumnWidth": 245,
          "minColumnWidth": 75,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Level_2_Measures_1",
          "verticalPadding": 8
        },
        "type": "table"
      },
      "container_3": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "table_16": {
        "parameters": {
          "borderColor": "#e0e5ee",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#FFFFFF",
            "fontSize": 14
          },
          "innerMajorBorderColor": "#a8b7c7",
          "innerMinorBorderColor": "#e0e5ee",
          "maxColumnWidth": 260,
          "minColumnWidth": 245,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "step": "Table_Measures_2_Header_Top",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "table_17": {
        "parameters": {
          "borderColor": "#e0e5ee",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#FFFFFF",
            "fontSize": 14
          },
          "innerMajorBorderColor": "#a8b7c7",
          "innerMinorBorderColor": "#e0e5ee",
          "maxColumnWidth": 264,
          "minColumnWidth": 180,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "step": "Table_Measures_3_Header_Top",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "text_3": {
        "parameters": {
          "fontSize": 20,
          "showActionMenu": true,
          "text": "↳",
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "container_6": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "table_19": {
        "parameters": {
          "borderColor": "rgba(255, 255, 255, 0.2)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "rgb(43, 71, 114)",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#ffffff",
            "fontSize": 9
          },
          "innerMajorBorderColor": "rgba(255, 255, 255, 0.2)",
          "innerMinorBorderColor": "rgba(255, 255, 255, 0.2)",
          "maxColumnWidth": 180,
          "minColumnWidth": 66,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Measures_3_Header",
          "totals": true,
          "verticalPadding": 4
        },
        "type": "table"
      },
      "container_7": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "text_2": {
        "parameters": {
          "fontSize": 12,
          "showActionMenu": true,
          "text": "Footnotes... ",
          "textAlignment": "left",
          "textColor": "#5C7A99"
        },
        "type": "text"
      },
      "container_8": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "text_4": {
        "parameters": {
          "fontSize": 20,
          "showActionMenu": true,
          "text": "↳",
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "text_7": {
        "parameters": {
          "fontSize": 12,
          "showActionMenu": true,
          "text": "** DATA WILL BE UPDATED AS A PART OF THE REGULAR REFRESH BY MID MAY **\n$10M+ Deals: Deals at the global company level with ACV value &gt;= $10M\n$1M+ deals: Deals at the global company level with ACV value &gt;= $1M (inclusive of the above)\nRun Rate Volume: Count of deals at global company level below a specific ACV threshold (i.e., high transaction volume) dependent on region and segment.\nFor example, AMER Run Rate thresholds: ENTR &gt;$500k, CMRCL &gt;$50K, ESMB &gt;$5K, USPS &gt;$50K\nNew Logos: Customer crosses the AOV threshold (beg AOV + ACV): ESMB: $0, CMRCL: $10K, EBU: $50K\nLost Logos: When a customer AOV goes to decreases to $0 and is not clawed back\n\n",
          "textAlignment": "left",
          "textColor": "#5C7A99"
        },
        "type": "text"
      },
      "text_6": {
        "parameters": {
          "fontSize": 12,
          "showActionMenu": true,
          "text": "Within the AE, Co Prime, SE sections, % columns 3 &amp; 4 represent 24 month CAGR (quarterly and YTD)\nAEs: Includes ECS, Marketing Cloud (Messaging/Journies), and Commerce Cloud AE&#39;s\nSEs: Excludes Q Branch, Spark, IPD, and SE Management\nCo Prime: CSG Coprime = APs (account partners) that worked through the Qtr",
          "textAlignment": "left",
          "textColor": "#5C7A99"
        },
        "type": "text"
      },
      "image_5": {
        "parameters": {
          "alignmentX": "center",
          "alignmentY": "center",
          "fit": "fitheight",
          "image": {
            "name": "FSpng5png",
            "namespace": ""
          }
        },
        "type": "image"
      },
      "link_27": {
        "parameters": {
          "destinationLink": {
            "name": "79809e29-5862-4dc4-9436-df82a567beb8"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "CSG Metrics",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_28": {
        "parameters": {
          "destinationLink": {
            "name": "8eb068cf-416c-4468-8531-6475f58f7a19"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Financial Measures and Pipeline",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "text_1": {
        "parameters": {
          "fontSize": 20,
          "showActionMenu": true,
          "text": "↳",
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "link_25": {
        "parameters": {
          "destinationLink": {
            "name": "a32a622b-f247-47ef-92af-1ce8fe739626"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Distribution HC",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_26": {
        "parameters": {
          "destinationLink": {
            "name": "0ac38e06-d0e1-4058-b374-a44482ccc3f4"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Sales Details",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_23": {
        "parameters": {
          "destinationLink": {
            "name": "79809e29-5862-4dc4-9436-df82a567beb8"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "▼ Show Filters ▼",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_24": {
        "parameters": {
          "destinationLink": {
            "name": "328a689d-17a8-489e-b41c-d6dbaedbf3ac"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Financial Measures and Pipeline",
          "textAlignment": "center",
          "textColor": "#7D98B3"
        },
        "type": "link"
      },
      "link_21": {
        "parameters": {
          "destinationLink": {
            "name": "0ac38e06-d0e1-4058-b374-a44482ccc3f4"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "▼ Show Filters ▼",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_22": {
        "parameters": {
          "destinationLink": {
            "name": "54a3bb51-05f1-4c1c-a59c-93cdb3e6f67b"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "▲ Hide Filters ▲",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_20": {
        "parameters": {
          "destinationLink": {
            "name": "64ab5d9b-26f7-4446-8723-cd4e0ec050bc"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "▲ Hide Filters ▲",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "image_1": {
        "parameters": {
          "alignmentX": "center",
          "alignmentY": "center",
          "fit": "fitwidth",
          "image": {
            "name": "campfirepng1png",
            "namespace": ""
          }
        },
        "type": "image"
      },
      "listselector_12": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": false,
          "showActionMenu": false,
          "step": "Filter_Lead",
          "title": "Lead"
        },
        "type": "listselector"
      },
      "image_3": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "stretch",
          "image": {
            "name": "FS2_Footerpngpng",
            "namespace": ""
          }
        },
        "type": "image"
      },
      "listselector_10": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": false,
          "measureField": "count",
          "showActionMenu": false,
          "step": "Filter_Industry",
          "title": "Industry"
        },
        "type": "listselector"
      },
      "image_2": {
        "parameters": {
          "alignmentX": "center",
          "alignmentY": "center",
          "fit": "fitheight",
          "image": {
            "name": "einsteinsectionpredictIOpng2png1",
            "namespace": ""
          }
        },
        "type": "image"
      },
      "listselector_7": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "showActionMenu": false,
          "step": "Selector_Quarter",
          "title": "Quarter"
        },
        "type": "listselector"
      },
      "listselector_6": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": false,
          "measureField": "none",
          "showActionMenu": false,
          "step": "Cloud_2_1",
          "title": "Cloud Level 3"
        },
        "type": "listselector"
      },
      "listselector_8": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": false,
          "showActionMenu": false,
          "step": "lens_2",
          "title": "Region"
        },
        "type": "listselector"
      },
      "listselector_3": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": false,
          "measureField": "none",
          "showActionMenu": false,
          "step": "Filter_Segment",
          "title": "Segment"
        },
        "type": "listselector"
      },
      "listselector_2": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": false,
          "showActionMenu": false,
          "step": "Filter_Cloud",
          "title": "Cloud"
        },
        "type": "listselector"
      },
      "listselector_5": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "measureField": "none",
          "showActionMenu": false,
          "step": "Fiscal_Year_1",
          "title": "Fiscal Year"
        },
        "type": "listselector"
      },
      "listselector_4": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": false,
          "showActionMenu": false,
          "step": "lens_1",
          "title": "Country"
        },
        "type": "listselector"
      },
      "link_3": {
        "parameters": {
          "destinationLink": {
            "name": "APM_Landing_Page"
          },
          "destinationType": "dashboard",
          "fontSize": 12,
          "includeState": false,
          "text": "APM Views Landing Page",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_4": {
        "parameters": {
          "destinationLink": {
            "name": "79809e29-5862-4dc4-9436-df82a567beb8"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "CSG Metrics",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_1": {
        "parameters": {
          "destinationLink": {
            "name": "APM_Landing_Page"
          },
          "destinationType": "dashboard",
          "fontSize": 12,
          "includeState": false,
          "text": "APM Views Landing Page",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_2": {
        "parameters": {
          "destinationLink": {
            "name": "328a689d-17a8-489e-b41c-d6dbaedbf3ac"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Financial Measures and Pipeline",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "table_21": {
        "parameters": {
          "borderColor": "rgb(230, 236, 242)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(244, 246, 249)",
            "fontColor": "rgb(244, 246, 249)",
            "fontSize": 0
          },
          "innerMajorBorderColor": "rgb(230, 236, 242)",
          "innerMinorBorderColor": "rgb(230, 236, 242)",
          "maxColumnWidth": 180,
          "minColumnWidth": 66,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Level_2_Measures_3",
          "verticalPadding": 8
        },
        "type": "table"
      },
      "table_1": {
        "parameters": {
          "borderColor": "rgb(230, 236, 242)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(244, 246, 249)",
            "fontColor": "rgb(244, 246, 249)",
            "fontSize": 0
          },
          "innerMajorBorderColor": "rgb(230, 236, 242)",
          "innerMinorBorderColor": "rgb(230, 236, 242)",
          "maxColumnWidth": 245,
          "minColumnWidth": 75,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "CSG_MEASURES",
          "verticalPadding": 8
        },
        "type": "table"
      },
      "table_2": {
        "parameters": {
          "borderColor": "rgba(255, 255, 255, 0.2)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "rgb(43, 71, 114)",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#ffffff",
            "fontSize": 10
          },
          "innerMajorBorderColor": "rgba(255, 255, 255, 0.2)",
          "innerMinorBorderColor": "rgba(255, 255, 255, 0.2)",
          "maxColumnWidth": 245,
          "minColumnWidth": 75,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "CSG_Totals_Header",
          "totals": true,
          "verticalPadding": 4
        },
        "type": "table"
      },
      "table_3": {
        "parameters": {
          "borderColor": "#e0e5ee",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "fixedColumnWidth": 125,
          "header": {
            "backgroundColor": "rgb(244, 246, 249)",
            "fontColor": "rgb(244, 246, 249)",
            "fontSize": 0
          },
          "innerMajorBorderColor": "#a8b7c7",
          "innerMinorBorderColor": "#e0e5ee",
          "mode": "fixed",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Level_1_Measures_1",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "link_9": {
        "parameters": {
          "destinationLink": {
            "name": "0ac38e06-d0e1-4058-b374-a44482ccc3f4"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Sales Details",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "table_4": {
        "parameters": {
          "borderColor": "#e0e5ee",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#FFFFFF",
            "fontSize": 1
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#FFFFFF",
            "fontSize": 14
          },
          "innerMajorBorderColor": "#a8b7c7",
          "innerMinorBorderColor": "#e0e5ee",
          "maxColumnWidth": 300,
          "minColumnWidth": 245,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "step": "CSG_Header_Top",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "table_5": {
        "parameters": {
          "borderColor": "#a8b7c7",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#091A3E",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "fixedColumnWidth": 125,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#ffffff",
            "fontSize": 12
          },
          "innerMajorBorderColor": "#54698d",
          "innerMinorBorderColor": "#a8b7c7",
          "mode": "fixed",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Dimension_Header",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "link_7": {
        "parameters": {
          "destinationLink": {
            "name": "328a689d-17a8-489e-b41c-d6dbaedbf3ac"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Financial Measures and Pipeline",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "pillbox_1": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "showActionMenu": true,
          "step": "Static_Cloud_Filter"
        },
        "type": "pillbox"
      },
      "link_8": {
        "parameters": {
          "destinationLink": {
            "name": "a32a622b-f247-47ef-92af-1ce8fe739626"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Distribution HC",
          "textAlignment": "center",
          "textColor": "#7D98B3"
        },
        "type": "link"
      },
      "table_7": {
        "parameters": {
          "borderColor": "rgba(255, 255, 255, 0.2)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "rgb(43, 71, 114)",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#ffffff",
            "fontSize": 10
          },
          "innerMajorBorderColor": "rgba(255, 255, 255, 0.2)",
          "innerMinorBorderColor": "rgba(255, 255, 255, 0.2)",
          "maxColumnWidth": 245,
          "minColumnWidth": 75,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Measures_1_Header",
          "totals": true,
          "verticalPadding": 4
        },
        "type": "table"
      },
      "link_5": {
        "parameters": {
          "destinationLink": {
            "name": "a32a622b-f247-47ef-92af-1ce8fe739626"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Distribution HC",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "table_8": {
        "parameters": {
          "borderColor": "#e0e5ee",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#FFFFFF",
            "fontSize": 1
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#FFFFFF",
            "fontSize": 14
          },
          "innerMajorBorderColor": "#a8b7c7",
          "innerMinorBorderColor": "#e0e5ee",
          "maxColumnWidth": 300,
          "minColumnWidth": 245,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "step": "Table_Measures_1_Header_Top",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "link_6": {
        "parameters": {
          "destinationLink": {
            "name": "0ac38e06-d0e1-4058-b374-a44482ccc3f4"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Sales Details",
          "textAlignment": "center",
          "textColor": "#7D98B3"
        },
        "type": "link"
      },
      "table_9": {
        "parameters": {
          "borderColor": "#E6ECF2",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(244, 246, 249)",
            "fontColor": "rgb(244, 246, 249)",
            "fontSize": 0
          },
          "innerMajorBorderColor": "#E6ECF2",
          "innerMinorBorderColor": "#E6ECF2",
          "maxColumnWidth": 245,
          "minColumnWidth": 65,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Level_2_Measures_2",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "listselector_1": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": false,
          "measureField": "count",
          "showActionMenu": false,
          "step": "Filter_Subcloud",
          "title": "Subcloud"
        },
        "type": "listselector"
      }
    }
  },
  "type": "dashboard",
  "url": "/services/data/v44.0/wave/dashboards/0FKf2000000oRyTGAU"
}