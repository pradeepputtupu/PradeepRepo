{
  "allowPreview": true,
  "assetSharingUrl": "https://apmsandbox.my.salesforce.com/analytics/wave/dashboard?assetId=0FKf2000000nnCmGAI&orgId=00Df2000001LxAD&loginHost=na53.salesforce.com&urlType=sharing",
  "createdBy": {
    "id": "005f20000090YTVAA2",
    "name": "Abhishek Gupta",
    "profilePhotoUrl": "https://apmsandbox--c.na53.content.force.com/profilephoto/005/T"
  },
  "createdDate": "2018-07-28T02:46:36.000Z",
  "datasets": [
    {
      "id": "0Fbf2000000HtYVCA0",
      "label": "APM_AOV",
      "name": "APM_AOV",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtYVCA0"
    },
    {
      "id": "0Fbf2000000HtYaCAK",
      "label": "APM_Attrition",
      "name": "APM_Attrition",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtYaCAK"
    },
    {
      "id": "0Fbf2000000HtZMCA0",
      "label": "APM_DEALS",
      "name": "APM_DEALS",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtZMCA0"
    },
    {
      "id": "0Fbf2000000HtZRCA0",
      "label": "APM_HC",
      "name": "APM_HC",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtZRCA0"
    },
    {
      "id": "0Fbf2000000HtZbCAK",
      "label": "APM_LOGO",
      "name": "APM_LOGO",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtZbCAK"
    },
    {
      "id": "0Fbf2000000HtZgCAK",
      "label": "APM_LOST_LOGO",
      "name": "APM_LOST_LOGO",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtZgCAK"
    },
    {
      "id": "0Fbf2000000HtZlCAK",
      "label": "APM_MARKET_CUSTOMER",
      "name": "APM_MARKET_CUSTOMER",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtZlCAK"
    },
    {
      "id": "0Fbf2000000HtZqCAK",
      "label": "APM_MARKET_SHARE",
      "name": "APM_MARKET_SHARE",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtZqCAK"
    },
    {
      "id": "0Fbf2000000HtZvCAK",
      "label": "APM_MARKETING_EBC",
      "name": "APM_MARKETING_EBC",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtZvCAK"
    },
    {
      "id": "0Fbf2000000Hta0CAC",
      "label": "APM_MARKETING_OTHER",
      "name": "APM_MARKETING_OTHER",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000Hta0CAC"
    },
    {
      "id": "0Fbf2000000Hta5CAC",
      "label": "APM_MARKETING_EVENTS",
      "name": "APM_MARKETING_EVENTS",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000Hta5CAC"
    },
    {
      "id": "0Fbf2000000HtaPCAS",
      "label": "APM_Pipegen1",
      "name": "APM_Pipegen1",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtaPCAS"
    },
    {
      "id": "0Fbf2000000HtaZCAS",
      "label": "APM_REDACCOUNTS",
      "name": "APM_REDACCOUNTS",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtaZCAS"
    },
    {
      "id": "0Fbf2000000HtaeCAC",
      "label": "APM_SWE_INFRA",
      "name": "APM_SWE_INFRA",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtaeCAC"
    },
    {
      "id": "0Fbf2000000HtajCAC",
      "label": "APM_T_P",
      "name": "APM_T_P",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtajCAC"
    },
    {
      "id": "0Fbf2000000HtaoCAC",
      "label": "APM_T_P__Transactions",
      "name": "APM_T_P_Transactions",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtaoCAC"
    },
    {
      "id": "0Fbf2000000HtatCAC",
      "label": "APM_TECH_AVAILABILITY",
      "name": "APM_TECH_AVAILABILITY",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtatCAC"
    },
    {
      "id": "0Fbf2000000Htc1CAC",
      "label": "CSM_PSM_HC",
      "name": "CSM_PSM_HC",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000Htc1CAC"
    },
    {
      "id": "0Fbf2000000HteBCAS",
      "label": "Master_Hierarchy",
      "name": "Master_Hierarchy",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HteBCAS"
    },
    {
      "id": "0Fbf2000000TY0CCAW",
      "label": "APM_ACV_AUTO1",
      "name": "APM_ACV_AUTO1",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000TY0CCAW"
    }
  ],
  "dateVersion": 1,
  "files": [
    {
      "contentType": "image/png",
      "fileLength": 18973,
      "fileName": "assetPreviewThumb",
      "id": "0FJf2000000TlFYGA0",
      "lastModifiedDate": "2019-01-17T12:25:30.000Z",
      "url": "/services/data/v44.0/wave/lenses/0FKf2000000nnCmGAI/files/0FJf2000000TlFYGA0"
    }
  ],
  "folder": {
    "id": "00lf2000002UDezAAG",
    "label": "WIP APM FY19 Q4",
    "name": "APM",
    "url": "/services/data/v44.0/wave/folders/00lf2000002UDezAAG"
  },
  "id": "0FKf2000000nnCmGAI",
  "label": "APM - Region Summary Dashboard (Level 2)",
  "lastAccessedDate": "2019-01-30T07:27:56.000Z",
  "lastModifiedBy": {
    "id": "005f2000009PkNIAA0",
    "name": "Pradeep Puttupu",
    "profilePhotoUrl": "https://apmsandbox--c.na53.content.force.com/profilephoto/005/T"
  },
  "lastModifiedDate": "2019-01-17T12:25:02.000Z",
  "mobileDisabled": true,
  "name": "APM_Region_Summary_Dashboard_Level_2",
  "permissions": {
    "manage": true,
    "modify": true,
    "view": true
  },
  "refreshDate": "2019-01-16T20:43:20.000Z",
  "state": {
    "dataSourceLinks": [
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV_AUTO1",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_DEALS",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_REDACCOUNTS",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "CSM_PSM_HC",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_MARKETING_EVENTS",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_MARKETING_OTHER",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_MARKETING_EBC",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_LOST_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Country"
          }
        ],
        "label": "Country",
        "name": "Link_1336"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV_AUTO1",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_DEALS",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_REDACCOUNTS",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "CSM_PSM_HC",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_LOST_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_MARKETING_EVENTS",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_MARKETING_OTHER",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_MARKETING_EBC",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          }
        ],
        "label": "Segment",
        "name": "Link_55"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV_AUTO1",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_DEALS",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_REDACCOUNTS",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "CSM_PSM_HC",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_MARKETING_EVENTS",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_MARKETING_OTHER",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_MARKETING_EBC",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_LOST_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          }
        ],
        "label": "Cloud Connection",
        "name": "Link_1340"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV_AUTO1",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "Master_Hierarchy",
            "dataSourceType": "saql",
            "fieldName": "Level_1"
          },
          {
            "dataSourceName": "APM_DEALS",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "CSM_PSM_HC",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_LOST_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_MARKETING_EVENTS",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_MARKETING_OTHER",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_MARKETING_EBC",
            "dataSourceType": "saql",
            "fieldName": "Region"
          }
        ],
        "label": "Region",
        "name": "Link_1318"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV_AUTO1",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_DEALS",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "CSM_PSM_HC",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_REDACCOUNTS",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_LOST_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_MARKETING_EVENTS",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_MARKETING_OTHER",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_MARKETING_EBC",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          }
        ],
        "label": "Lead+1",
        "name": "Link_3761"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV_AUTO1",
            "dataSourceType": "saql",
            "fieldName": "Lead_2"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Lead_2"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Lead_2"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Lead_2"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Lead_2"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Lead_2"
          },
          {
            "dataSourceName": "APM_DEALS",
            "dataSourceType": "saql",
            "fieldName": "Lead_2"
          },
          {
            "dataSourceName": "CSM_PSM_HC",
            "dataSourceType": "saql",
            "fieldName": "Lead_2"
          },
          {
            "dataSourceName": "APM_REDACCOUNTS",
            "dataSourceType": "saql",
            "fieldName": "Lead_2"
          },
          {
            "dataSourceName": "APM_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Lead_2"
          },
          {
            "dataSourceName": "APM_LOST_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Lead_2"
          },
          {
            "dataSourceName": "APM_MARKETING_EVENTS",
            "dataSourceType": "saql",
            "fieldName": "Lead_2"
          },
          {
            "dataSourceName": "APM_MARKETING_OTHER",
            "dataSourceType": "saql",
            "fieldName": "Lead_2"
          },
          {
            "dataSourceName": "APM_MARKETING_EBC",
            "dataSourceType": "saql",
            "fieldName": "Lead_2"
          }
        ],
        "label": "Lead+2",
        "name": "Link_3768"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV_AUTO1",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_DEALS",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_REDACCOUNTS",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "CSM_PSM_HC",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_LOST_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_MARKETING_EVENTS",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_MARKETING_OTHER",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_MARKETING_EBC",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          }
        ],
        "label": "Sub Cloud Connection",
        "name": "Link_1389"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV_AUTO1",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_DEALS",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_REDACCOUNTS",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "CSM_PSM_HC",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_LOST_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_MARKETING_EVENTS",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_MARKETING_OTHER",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_MARKETING_EBC",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          }
        ],
        "label": "Lead",
        "name": "Link_1018"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV_AUTO1",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_DEALS",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "CSM_PSM_HC",
            "dataSourceType": "saql",
            "fieldName": "Industries"
          },
          {
            "dataSourceName": "APM_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_LOST_LOGO",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_MARKETING_EVENTS",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_MARKETING_OTHER",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_MARKETING_EBC",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_REDACCOUNTS",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          }
        ],
        "label": "Industry",
        "name": "Link_1302"
      }
    ],
    "filters": [],
    "gridLayouts": [
      {
        "maxWidth": 1540,
        "name": "Default",
        "numColumns": 36,
        "pages": [
          {
            "label": "Level_2_Measures_1",
            "name": "328a689d-17a8-489e-b41c-d6dbaedbf3ac",
            "navigationHidden": false,
            "widgets": [
              {
                "colspan": 1,
                "column": 19,
                "name": "text_3",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 0,
                "name": "link_1",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 6,
                "column": 12,
                "name": "pillbox_2",
                "row": 6,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_7",
                "row": 19,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 24,
                "name": "listselector_3",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 7,
                "name": "text_1",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 3,
                "name": "listselector_5",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_2",
                "row": 12,
                "rowspan": 59,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_3",
                "row": 0,
                "rowspan": 9,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "image_1",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "image_2",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "image_3",
                "row": 71,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_14",
                "row": 23,
                "rowspan": 38,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 3,
                "name": "link_13",
                "row": 6,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "rgba(242, 246, 250, 0)",
                  "borderColor": "rgba(0, 135, 255, 0)",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 16,
                  "borderWidth": 2
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_8",
                "row": 16,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 3,
                "column": 24,
                "name": "listselector_10",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 28,
                "name": "listselector_7",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 3,
                "column": 19,
                "name": "listselector_12",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 3,
                "name": "text_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 7,
                "name": "listselector_2",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 13,
                "name": "listselector_1",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 8,
                "name": "listselector_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_7",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 5,
                "column": 25,
                "name": "link_2",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 20,
                "name": "link_3",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 15,
                "name": "link_4",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 10,
                "name": "link_5",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 5,
                "name": "link_6",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 28,
                "name": "listselector_6",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 35,
                "name": "image_4",
                "row": 68,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 33,
                "column": 0,
                "name": "text_2",
                "row": 62,
                "rowspan": 9,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 3,
                "column": 20,
                "name": "listselector_8",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 6,
                "column": 30,
                "name": "link_30",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          },
          {
            "label": "Level_2_Measures_2",
            "name": "a32a622b-f247-47ef-92af-1ce8fe739626",
            "navigationHidden": false,
            "widgets": [
              {
                "colspan": 1,
                "column": 19,
                "name": "text_3",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 28,
                "name": "listselector_6",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 0,
                "name": "link_1",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 6,
                "column": 12,
                "name": "pillbox_2",
                "row": 6,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_12",
                "row": 19,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 7,
                "name": "text_1",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 24,
                "name": "listselector_3",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 3,
                "name": "listselector_5",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_2",
                "row": 12,
                "rowspan": 60,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_3",
                "row": 0,
                "rowspan": 9,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "image_1",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "image_2",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "image_3",
                "row": 72,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 3,
                "name": "link_10",
                "row": 6,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "rgba(242, 246, 250, 0)",
                  "borderColor": "rgba(0, 135, 255, 0.01)",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 16,
                  "borderWidth": 2
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_9",
                "row": 23,
                "rowspan": 38,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_16",
                "row": 16,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 28,
                "name": "listselector_7",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 3,
                "column": 24,
                "name": "listselector_10",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 19,
                "name": "listselector_12",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 3,
                "name": "text_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 7,
                "name": "listselector_2",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 13,
                "name": "listselector_1",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 8,
                "name": "listselector_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 22,
                "column": 0,
                "name": "text_5",
                "row": 63,
                "rowspan": 8,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_5",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 5,
                "column": 25,
                "name": "link_7",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 20,
                "name": "link_8",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 15,
                "name": "link_9",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 10,
                "name": "link_11",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 5,
                "name": "link_12",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 35,
                "name": "image_5",
                "row": 69,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 3,
                "column": 20,
                "name": "listselector_9",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 6,
                "column": 30,
                "name": "link_30",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          },
          {
            "label": "Level_2_Measures_3",
            "name": "f3a6d53b-259b-4acf-be69-4208a82b8bf8",
            "navigationHidden": false,
            "widgets": [
              {
                "colspan": 1,
                "column": 19,
                "name": "text_3",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 28,
                "name": "listselector_6",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 0,
                "name": "link_1",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 6,
                "column": 12,
                "name": "pillbox_2",
                "row": 6,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 24,
                "name": "listselector_3",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 7,
                "name": "text_1",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 3,
                "name": "listselector_5",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_2",
                "row": 12,
                "rowspan": 64,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_3",
                "row": 0,
                "rowspan": 9,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "image_1",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "image_2",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "image_3",
                "row": 76,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 3,
                "name": "link_13",
                "row": 6,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "rgba(242, 246, 250, 0)",
                  "borderColor": "rgba(0, 135, 255, 0)",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 16,
                  "borderWidth": 2
                }
              },
              {
                "colspan": 3,
                "column": 24,
                "name": "listselector_10",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 28,
                "name": "listselector_7",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 3,
                "column": 19,
                "name": "listselector_12",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 3,
                "name": "text_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 7,
                "name": "listselector_2",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 13,
                "name": "listselector_1",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 8,
                "name": "listselector_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_20",
                "row": 16,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_19",
                "row": 19,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_22",
                "row": 23,
                "rowspan": 38,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_7",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 5,
                "column": 25,
                "name": "link_14",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 20,
                "name": "link_15",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 15,
                "name": "link_16",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 10,
                "name": "link_17",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 5,
                "name": "link_18",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 35,
                "name": "image_6",
                "row": 73,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 33,
                "column": 0,
                "name": "text_6",
                "row": 62,
                "rowspan": 14,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 3,
                "column": 20,
                "name": "listselector_13",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0.01)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 6,
                "column": 30,
                "name": "link_30",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          },
          {
            "label": "Level_2_Measures_4",
            "name": "5ee7ef3b-7f87-4bff-a84d-ff2916bd2135",
            "navigationHidden": false,
            "widgets": [
              {
                "colspan": 1,
                "column": 19,
                "name": "text_3",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 28,
                "name": "listselector_6",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 0,
                "name": "link_1",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 24,
                "name": "listselector_3",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 7,
                "name": "text_1",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 3,
                "name": "listselector_5",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_2",
                "row": 12,
                "rowspan": 58,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_3",
                "row": 0,
                "rowspan": 9,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "image_1",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "image_2",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "image_3",
                "row": 70,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 3,
                "name": "link_13",
                "row": 6,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "rgba(242, 246, 250, 0)",
                  "borderColor": "rgba(0, 135, 255, 0)",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 16,
                  "borderWidth": 2
                }
              },
              {
                "colspan": 3,
                "column": 24,
                "name": "listselector_10",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 28,
                "name": "listselector_7",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 3,
                "column": 19,
                "name": "listselector_12",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 3,
                "name": "text_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 7,
                "name": "listselector_2",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 13,
                "name": "listselector_1",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 8,
                "name": "listselector_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_23",
                "row": 16,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_24",
                "row": 19,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_25",
                "row": 23,
                "rowspan": 38,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_7",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 5,
                "column": 25,
                "name": "link_19",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 20,
                "name": "link_20",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 15,
                "name": "link_21",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 10,
                "name": "link_22",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 5,
                "name": "link_23",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 6,
                "column": 12,
                "name": "pillbox_3",
                "row": 6,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 35,
                "name": "image_7",
                "row": 67,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 25,
                "column": 0,
                "name": "text_8",
                "row": 62,
                "rowspan": 8,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 3,
                "column": 20,
                "name": "listselector_14",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 6,
                "column": 30,
                "name": "link_30",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          },
          {
            "label": "Level_2_Measures_5",
            "name": "5e25f102-807a-4f32-bc36-92ca2fc64a24",
            "navigationHidden": false,
            "widgets": [
              {
                "colspan": 1,
                "column": 19,
                "name": "text_3",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 28,
                "name": "listselector_6",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 0,
                "name": "link_1",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 6,
                "column": 12,
                "name": "pillbox_2",
                "row": 6,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 24,
                "name": "listselector_3",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 7,
                "name": "text_1",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 3,
                "name": "listselector_5",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_2",
                "row": 12,
                "rowspan": 59,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_3",
                "row": 0,
                "rowspan": 9,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "image_1",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "image_2",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "image_3",
                "row": 71,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 3,
                "name": "link_13",
                "row": 6,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "rgba(242, 246, 250, 0)",
                  "borderColor": "rgba(0, 135, 255, 0)",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 16,
                  "borderWidth": 2
                }
              },
              {
                "colspan": 3,
                "column": 24,
                "name": "listselector_10",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 28,
                "name": "listselector_7",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 3,
                "column": 19,
                "name": "listselector_12",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 3,
                "name": "text_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 7,
                "name": "listselector_2",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 13,
                "name": "listselector_1",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 8,
                "name": "listselector_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_27",
                "row": 16,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_28",
                "row": 19,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_30",
                "row": 23,
                "rowspan": 38,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_7",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 5,
                "column": 25,
                "name": "link_24",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 5,
                "column": 20,
                "name": "link_25",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 15,
                "name": "link_26",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 10,
                "name": "link_27",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 5,
                "name": "link_28",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 35,
                "name": "image_8",
                "row": 68,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 31,
                "column": 0,
                "name": "text_9",
                "row": 63,
                "rowspan": 8,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 3,
                "column": 20,
                "name": "listselector_15",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 6,
                "column": 30,
                "name": "link_30",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          },
          {
            "label": "Market Details and Red Accounts",
            "name": "be71bbc4-acef-4838-9d46-c659848a22c3",
            "navigationHidden": false,
            "widgets": [
              {
                "colspan": 1,
                "column": 19,
                "name": "text_3",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 0,
                "name": "link_1",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 6,
                "column": 12,
                "name": "pillbox_2",
                "row": 6,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 24,
                "name": "listselector_3",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 7,
                "name": "text_1",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 3,
                "name": "listselector_5",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_3",
                "row": 0,
                "rowspan": 9,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "image_1",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 32,
                "name": "image_2",
                "row": 1,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "image_3",
                "row": 71,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 4,
                "column": 3,
                "name": "link_13",
                "row": 6,
                "rowspan": 2,
                "widgetStyle": {
                  "backgroundColor": "rgba(242, 246, 250, 0)",
                  "borderColor": "rgba(0, 135, 255, 0)",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 16,
                  "borderWidth": 2
                }
              },
              {
                "colspan": 3,
                "column": 24,
                "name": "listselector_10",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 28,
                "name": "listselector_7",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 3,
                "column": 19,
                "name": "listselector_12",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 3,
                "name": "text_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 7,
                "name": "listselector_2",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 13,
                "name": "listselector_1",
                "row": 1,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 8,
                "name": "listselector_4",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_7",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 5,
                "column": 25,
                "name": "link_2",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 20,
                "name": "link_3",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 15,
                "name": "link_4",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 10,
                "name": "link_5",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 28,
                "name": "listselector_6",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 20,
                "name": "listselector_8",
                "row": 5,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "container_1",
                "row": 12,
                "rowspan": 59,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_1",
                "row": 19,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_2",
                "row": 23,
                "rowspan": 38,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 36,
                "column": 0,
                "name": "table_4",
                "row": 16,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 35,
                "name": "image_9",
                "row": 68,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 33,
                "column": 0,
                "name": "text_7",
                "row": 62,
                "rowspan": 9,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 6,
                "column": 30,
                "name": "link_31",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 5,
                "name": "link_32",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          }
        ],
        "rowHeight": "fine",
        "selectors": [],
        "style": {
          "alignmentX": "left",
          "alignmentY": "top",
          "backgroundColor": "#E6ECF2",
          "cellSpacingX": 0,
          "cellSpacingY": 0,
          "fit": "original",
          "gutterColor": "#E6ECF2"
        },
        "version": 1
      }
    ],
    "layouts": [],
    "steps": {
      "Lead_2_1": {
        "broadcastFacet": true,
        "datasets": [
          {
            "id": "0Fbf2000000TY0CCAW",
            "label": "APM_ACV_AUTO1",
            "name": "APM_ACV_AUTO1",
            "url": "/services/data/v44.0/wave/datasets/0Fbf2000000TY0CCAW"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": "{&quot;measures&quot;:[[&quot;count&quot;,&quot;*&quot;]],&quot;groups&quot;:[&quot;Lead_2&quot;]}",
          "version": -1
        },
        "receiveFacet": true,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {}
      },
      "Lead_1_4": {
        "broadcastFacet": true,
        "datasets": [
          {
            "id": "0Fbf2000000TY0CCAW",
            "label": "APM_ACV_AUTO1",
            "name": "APM_ACV_AUTO1",
            "url": "/services/data/v44.0/wave/datasets/0Fbf2000000TY0CCAW"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": "{&quot;measures&quot;:[[&quot;count&quot;,&quot;*&quot;]],&quot;groups&quot;:[&quot;Lead_1&quot;]}",
          "version": -1
        },
        "receiveFacet": true,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {}
      },
      "Lead_1_3": {
        "broadcastFacet": true,
        "datasets": [
          {
            "id": "0Fbf2000000TY0CCAW",
            "label": "APM_ACV_AUTO1",
            "name": "APM_ACV_AUTO1",
            "url": "/services/data/v44.0/wave/datasets/0Fbf2000000TY0CCAW"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": "{&quot;measures&quot;:[[&quot;count&quot;,&quot;*&quot;]],&quot;groups&quot;:[&quot;Lead_1&quot;]}",
          "version": -1
        },
        "receiveFacet": true,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {}
      },
      "Table_Measures_3_Top_Header": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Measures_3_Top_Header",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nresult_Total = group MasterHierarchy by all;\nresult_Total = foreach result_Total generate &quot;  &quot; as &#39;$ values in millions&#39;, &quot;$10M+ Deals                    &quot; as &#39;$10M+ Deals&#39;, &quot;$1M+ Deals                    &quot; as &#39;$1M+ Deals&#39;, &quot;Run Rate Volume                    &quot; as &#39;Run Rate Volume&#39;, &quot;New Logos                    &quot; as &#39;New Logos&#39;,&quot;Lost Logos                    &quot; as &#39;Lost Logos&#39;;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart",
          "visualizationType": "hbar"
        }
      },
      "Filter_Region": {
        "broadcastFacet": true,
        "datasets": [
          {
            "id": "0Fbf2000000TY0CCAW",
            "label": "APM_ACV_AUTO1",
            "name": "APM_ACV_AUTO1",
            "url": "/services/data/v44.0/wave/datasets/0Fbf2000000TY0CCAW"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": "{&quot;measures&quot;:[[&quot;count&quot;,&quot;*&quot;]],&quot;groups&quot;:[&quot;Region&quot;]}",
          "version": -1
        },
        "receiveFacet": true,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {}
      },
      "Static_Cloud_Filter": {
        "broadcastFacet": true,
        "label": "Cloud_Filter",
        "selectMode": "singlerequired",
        "start": "{&quot;display&quot;:[&quot;Parameters&quot;]}",
        "type": "staticflex",
        "values": [
          "{&quot;display&quot;:&quot;Parameters&quot;,&quot;filter&quot;:&quot;[&#92;&quot;AMER&#92;&quot;, &#92;&quot;EMEA&#92;&quot;, &#92;&quot;APAC&#92;&quot;, &#92;&quot;JP&#92;&quot;, &#92;&quot;LACA&#92;&quot;, &#92;&quot;Other&#92;&quot;]&quot;,&quot;level_1&quot;:&quot;Region&quot;,&quot;level_2&quot;:&quot;Country&quot;,&quot;level_3&quot;:&quot;City&quot;,&quot;Master_l1&quot;:&quot;Segment_Hierarchy&quot;,&quot;Master_l1_Rank&quot;:&quot;Segment_Hierarchy_Rank&quot;,&quot;filter_REDACCOUNTS&quot;:&quot;[&#92;&quot;Marketing Cloud&#92;&quot;, &#92;&quot;Other&#92;&quot;, &#92;&quot;Quip&#92;&quot;, &#92;&quot;Sales Cloud&#92;&quot;, &#92;&quot;Salesforce Platform&#92;&quot;, &#92;&quot;Service Cloud&#92;&quot;, &#92;&quot;Commerce Cloud&#92;&quot;, &#92;&quot;Success Cloud&#92;&quot;,&#92;&quot;Core Premier (A la Carte) &amp; Priority&#92;&quot;,&#92;&quot;Integration&#92;&quot;]&quot;,&quot;static_country_logic&quot;:&quot;case when (&#39;Region&#39; == &#92;&quot;AMER&#92;&quot; &amp;&amp; (&#39;Country&#39; ==  &#92;&quot;Canada&#92;&quot; )) then &#92;&quot;Canada&#92;&quot; when (&#39;Region&#39; == &#92;&quot;AMER&#92;&quot; &amp;&amp; (&#39;Country&#39; ==  &#92;&quot;United States&#92;&quot; ))then &#92;&quot;United States&#92;&quot; when (&#39;Region&#39; == &#92;&quot;AMER&#92;&quot;)then &#92;&quot;RO AMER&#92;&quot; when  (&#39;Region&#39; == &#92;&quot;EMEA&#92;&quot; &amp;&amp; (&#39;Country&#39; ==  &#92;&quot;United Kingdom&#92;&quot; ))then &#92;&quot;United Kingdom&#92;&quot;  when  (&#39;Region&#39; == &#92;&quot;EMEA&#92;&quot; &amp;&amp; (&#39;Country&#39; ==  &#92;&quot;France&#92;&quot; ))then &#92;&quot;France&#92;&quot; when (&#39;Region&#39; == &#92;&quot;EMEA&#92;&quot; &amp;&amp; (&#39;Country&#39; ==  &#92;&quot;Germany&#92;&quot; ))then &#92;&quot;Germany&#92;&quot; when  (&#39;Region&#39; == &#92;&quot;EMEA&#92;&quot; &amp;&amp; (&#39;Country&#39; ==  &#92;&quot;Netherlands&#92;&quot; ))then &#92;&quot;Netherlands&#92;&quot; when (&#39;Region&#39; == &#92;&quot;EMEA&#92;&quot; ) then &#92;&quot;RO EMEA&#92;&quot; when  (&#39;Region&#39; == &#92;&quot;APAC&#92;&quot; &amp;&amp; (&#39;Country&#39; ==  &#92;&quot;Australia&#92;&quot; ))then &#92;&quot;ANZ&#92;&quot;  when  (&#39;Region&#39; == &#92;&quot;APAC&#92;&quot; &amp;&amp; (&#39;Country&#39; ==  &#92;&quot;ANZ&#92;&quot; ))then &#92;&quot;ANZ&#92;&quot;when  (&#39;Region&#39; == &#92;&quot;APAC&#92;&quot; &amp;&amp; (&#39;Country&#39; ==  &#92;&quot;India&#92;&quot; ))then &#92;&quot;India&#92;&quot;  when  (&#39;Region&#39; == &#92;&quot;APAC&#92;&quot; )then &#92;&quot;RO APAC&#92;&quot;  when  (&#39;Region&#39; == &#92;&quot;APAC&#92;&quot; )then &#92;&quot;RO APAC&#92;&quot;  when  (&#39;Region&#39; == &#92;&quot;JP&#92;&quot; &amp;&amp; (&#39;Country&#39; ==  &#92;&quot;Japan&#92;&quot; ))then &#92;&quot;Japan&#92;&quot; when (&#39;Region&#39; == &#92;&quot;JP&#92;&quot; &amp;&amp; (&#39;Country&#39; == &#92;&quot;South Korea&#92;&quot;)) then &#92;&quot;South Korea&#92;&quot; when  (&#39;Region&#39; == &#92;&quot;JP&#92;&quot;  )then &#92;&quot;RO JP&#92;&quot;  when  (&#39;Region&#39; == &#92;&quot;LACA&#92;&quot; &amp;&amp; (&#39;Country&#39; ==  &#92;&quot;Brazil&#92;&quot; ))then &#92;&quot;Brazil&#92;&quot; when (&#39;Region&#39; == &#92;&quot;LACA&#92;&quot; )then &#92;&quot;RO LACA&#92;&quot; when (&#39;Region&#39; == &#92;&quot;Other&#92;&quot; )then &#92;&quot;Other&#92;&quot; else &#92;&quot;ERROR&#92;&quot; end&quot;}"
        ]
      },
      "Selector_Quarter": {
        "broadcastFacet": true,
        "label": "Quarter",
        "selectMode": "single",
        "start": "{&quot;display&quot;:[&quot;Q3&quot;]}",
        "type": "staticflex",
        "values": [
          "{&quot;display&quot;:&quot;Q1&quot;,&quot;Quarter&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;Month&quot;:&quot;[&#92;&quot;February&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;April&#92;&quot;]&quot;,&quot;YTD_Month&quot;:&quot;[&#92;&quot;February&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;April&#92;&quot;,&#92;&quot;May&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;July&#92;&quot;,&#92;&quot;August&#92;&quot;,&#92;&quot;September&#92;&quot;,&#92;&quot;October&#92;&quot;]&quot;,&quot;YTD_Month_cum&quot;:&quot;[&#92;&quot;October&#92;&quot;]&quot;,&quot;YTD_Month_cum_attrit&quot;:&quot;[&#92;&quot;October&#92;&quot;]&quot;,&quot;YTD_Quarter&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_Quarter_cum&quot;:&quot;[&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_Quarter_pipegen&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_Quarter_HC&quot;:&quot;[&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_Quarter_SW&quot;:&quot;[&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;Unit_Month&quot;:&quot;Month&quot;,&quot;Unit_Quarter&quot;:&quot;Quarter&quot;,&quot;Header_name_absolute&quot;:&quot;Q1&quot;,&quot;Header_name_rate&quot;:&quot;YoY Q1&quot;,&quot;Line_Rank&quot;:&quot;HZZ&quot;,&quot;Filter_Table&quot;:&quot;[]&quot;,&quot;Filter_Table_2&quot;:&quot;[&#92;&quot;☁ Core Premier (A la Carte) &amp; Priority&#92;&quot;,&#92;&quot;    ↳  Core Premier (A la Carte)&#92;&quot;,&#92;&quot;    ↳  Core Premier Priority&#92;&quot;,&#92;&quot;☁ N/A&#92;&quot;,&#92;&quot;    ↳  N/A&#92;&quot;]&quot;}",
          "{&quot;display&quot;:&quot;Q2&quot;,&quot;Quarter&quot;:&quot;[&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Month&quot;:&quot;[&#92;&quot;July&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;May&#92;&quot;]&quot;,&quot;YTD_Month&quot;:&quot;[&#92;&quot;February&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;April&#92;&quot;,&#92;&quot;May&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;July&#92;&quot;,&#92;&quot;August&#92;&quot;,&#92;&quot;September&#92;&quot;,&#92;&quot;October&#92;&quot;]&quot;,&quot;YTD_Month_cum&quot;:&quot;[&#92;&quot;October&#92;&quot;]&quot;,&quot;YTD_Month_cum_attrit&quot;:&quot;[&#92;&quot;October&#92;&quot;]&quot;,&quot;YTD_Quarter&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_Quarter_cum&quot;:&quot;[&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_Quarter_pipegen&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_Quarter_HC&quot;:&quot;[&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_Quarter_SW&quot;:&quot;[&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;QTD_Month&quot;:&quot;[&#92;&quot;July&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;May&#92;&quot;]&quot;,&quot;Unit_Month&quot;:&quot;Month&quot;,&quot;Unit_Quarter&quot;:&quot;Quarter&quot;,&quot;Header_name_absolute&quot;:&quot;Q2&quot;,&quot;Header_name_rate&quot;:&quot;YoY Q2&quot;,&quot;Line_Rank&quot;:&quot;HZZ&quot;,&quot;Filter_Table&quot;:&quot;[]&quot;,&quot;Filter_Table_2&quot;:&quot;[&#92;&quot;☁ Core Premier (A la Carte) &amp; Priority&#92;&quot;,&#92;&quot;    ↳  Core Premier (A la Carte)&#92;&quot;,&#92;&quot;    ↳  Core Premier Priority&#92;&quot;,&#92;&quot;☁ N/A&#92;&quot;,&#92;&quot;    ↳  N/A&#92;&quot;]&quot;}",
          "{&quot;display&quot;:&quot;Q3&quot;,&quot;Quarter&quot;:&quot;[&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;Month&quot;:&quot;[&#92;&quot;August&#92;&quot;,&#92;&quot;September&#92;&quot;,&#92;&quot;October&#92;&quot;]&quot;,&quot;YTD_Month&quot;:&quot;[&#92;&quot;February&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;April&#92;&quot;,&#92;&quot;May&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;July&#92;&quot;,&#92;&quot;August&#92;&quot;,&#92;&quot;September&#92;&quot;,&#92;&quot;October&#92;&quot;]&quot;,&quot;YTD_Month_cum&quot;:&quot;[&#92;&quot;October&#92;&quot;]&quot;,&quot;YTD_Month_cum_attrit&quot;:&quot;[&#92;&quot;October&#92;&quot;]&quot;,&quot;YTD_Quarter&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_Quarter_cum&quot;:&quot;[&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_Quarter_pipegen&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_Quarter_HC&quot;:&quot;[&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_Quarter_SW&quot;:&quot;[&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;QTD_Month&quot;:&quot;[&#92;&quot;August&#92;&quot;,&#92;&quot;September&#92;&quot;,&#92;&quot;October&#92;&quot;]&quot;,&quot;Unit_Month&quot;:&quot;Month&quot;,&quot;Unit_Quarter&quot;:&quot;Quarter&quot;,&quot;Header_name_absolute&quot;:&quot;Q3&quot;,&quot;Header_name_rate&quot;:&quot;YoY Q3&quot;,&quot;Line_Rank&quot;:&quot;HZZ&quot;,&quot;Filter_Table&quot;:&quot;[]&quot;,&quot;Filter_Table_2&quot;:&quot;[&#92;&quot;☁ Core Premier (A la Carte) &amp; Priority&#92;&quot;,&#92;&quot;    ↳  Core Premier (A la Carte)&#92;&quot;,&#92;&quot;    ↳  Core Premier Priority&#92;&quot;,&#92;&quot;☁ N/A&#92;&quot;,&#92;&quot;    ↳  N/A&#92;&quot;]&quot;}"
        ]
      },
      "Filter_Cloud": {
        "broadcastFacet": true,
        "groups": [
          "Cloud"
        ],
        "numbers": [],
        "query": "q = load &quot;APM_ACV_AUTO1&quot;;\nq = group q by (&#39;Cloud&#39;);\nq = foreach q generate case when &#39;Cloud&#39; == &quot;Sales Cloud &amp; Sales Platform&quot; then &quot;A. Sales Cloud &amp; Sales Platform&quot; when &#39;Cloud&#39; == &quot;Service Cloud &amp; Service Cloud Platform&quot; then &quot;B. Service Cloud &amp; Service Cloud Platform&quot; when &#39;Cloud&#39; == &quot;Marketing Cloud &amp; Marketing Platform&quot; then &quot;C. Marketing Cloud &amp; Marketing Platform&quot; when &#39;Cloud&#39; == &quot;Commerce Cloud&quot; then &quot;D. Commerce Cloud&quot; when &#39;Cloud&#39; == &quot;Salesforce Platform(s)&quot; then &quot;E. Salesforce Platform(s)&quot; when &#39;Cloud&#39; == &quot;Quip&quot; then &quot;F. Quip&quot; when &#39;Cloud&#39; == &quot;Other&quot; then &quot;G. Other&quot;when &#39;Cloud&#39; == &quot;Other CSG&quot; then &quot;H. Other CSG&quot; when &#39;Cloud&#39; == &quot;Core Premier (A la Carte) &amp; Priority&quot; then &quot;I. Core Premier (A la Carte) &amp; Priority&quot;  when &#39;Cloud&#39; == &quot;Success Cloud&quot; then &quot;J. Success Cloud&quot;else &quot;K. unkown&quot; end as Cloud_Rank  ,&#39;Cloud&#39; as &#39;Cloud&#39;, count() as &#39;count&#39;;\nq = order q by &#39;Cloud_Rank&#39; asc;\nq = limit q 2000;",
        "receiveFacet": true,
        "selectMode": "multi",
        "strings": [
          "Cloud"
        ],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      },
      "Table_Measures_2_Top_Header": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Measures_2_Top_Header",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nresult_Total = group MasterHierarchy by all;\nresult_Total = foreach result_Total generate  &quot;  &quot; as &#39;$ values in millions&#39;,  &quot;AE                    &quot; as &#39;AE&#39;, &quot;Co Prime                    &quot; as &#39;Co Prime&#39;,&quot;SE                    &quot; as &#39;SE&#39;;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart",
          "visualizationType": "hbar"
        }
      },
      "Quarter_1": {
        "broadcastFacet": true,
        "label": "Quarter",
        "selectMode": "single",
        "start": "{&quot;display&quot;:[&quot;Q3&quot;]}",
        "type": "staticflex",
        "values": [
          "{&quot;display&quot;:&quot;Q1&quot;,&quot;Quarter&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;Month&quot;:&quot;[&#92;&quot;February&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;April&#92;&quot;]&quot;,&quot;YTD_Month&quot;:&quot;[&#92;&quot;February&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;April&#92;&quot;,&#92;&quot;May&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;July&#92;&quot;]&quot;,&quot;YTD_Month_cum&quot;:&quot;[&#92;&quot;July&#92;&quot;]&quot;,&quot;YTD_Quarter&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_Quarter_cum&quot;:&quot;[&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_Quarter_pipegen&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_Quarter_HC&quot;:&quot;[&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_Quarter_SW&quot;:&quot;[&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_Quarter_CSM&quot;:&quot;[&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Unit_Month&quot;:&quot;Month&quot;,&quot;Unit_Quarter&quot;:&quot;Quarter&quot;,&quot;Header_name_absolute&quot;:&quot;Q1&quot;,&quot;Header_name_rate&quot;:&quot;YoY Q1&quot;,&quot;Line_Rank&quot;:&quot;HZZ&quot;,&quot;Filter_Table&quot;:&quot;[]&quot;,&quot;Filter_Table_2&quot;:&quot;[&#92;&quot;☁ Core Premier (A la Carte) &amp; Priority&#92;&quot;,&#92;&quot;    ↳  Core Premier (A la Carte)&#92;&quot;,&#92;&quot;    ↳  Core Premier Priority&#92;&quot;,&#92;&quot;☁ N/A&#92;&quot;,&#92;&quot;    ↳  N/A&#92;&quot;]&quot;}",
          "{&quot;display&quot;:&quot;Q2&quot;,&quot;Quarter&quot;:&quot;[&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Month&quot;:&quot;[&#92;&quot;July&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;May&#92;&quot;]&quot;,&quot;YTD_Month&quot;:&quot;[&#92;&quot;February&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;April&#92;&quot;,&#92;&quot;May&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;July&#92;&quot;]&quot;,&quot;YTD_Month_cum&quot;:&quot;[&#92;&quot;July&#92;&quot;]&quot;,&quot;YTD_Quarter&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_Quarter_cum&quot;:&quot;[&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_Quarter_pipegen&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_Quarter_HC&quot;:&quot;[&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_Quarter_SW&quot;:&quot;[&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_Quarter_CSM&quot;:&quot;[&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Unit_Month&quot;:&quot;Month&quot;,&quot;Unit_Quarter&quot;:&quot;Quarter&quot;,&quot;Header_name_absolute&quot;:&quot;Q2&quot;,&quot;Header_name_rate&quot;:&quot;YoY Q2&quot;,&quot;Line_Rank&quot;:&quot;HZZ&quot;,&quot;Filter_Table&quot;:&quot;[]&quot;,&quot;Filter_Table_2&quot;:&quot;[&#92;&quot;☁ Core Premier (A la Carte) &amp; Priority&#92;&quot;,&#92;&quot;    ↳  Core Premier (A la Carte)&#92;&quot;,&#92;&quot;    ↳  Core Premier Priority&#92;&quot;,&#92;&quot;☁ N/A&#92;&quot;,&#92;&quot;    ↳  N/A&#92;&quot;]&quot;}",
          "{&quot;display&quot;:&quot;Q3&quot;,&quot;Quarter&quot;:&quot;[&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;N/A&#92;&quot;]&quot;,&quot;Month&quot;:&quot;[&#92;&quot;August&#92;&quot;,&#92;&quot;September&#92;&quot;,&#92;&quot;October&#92;&quot;]&quot;,&quot;YTD_Month&quot;:&quot;[&#92;&quot;February&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;April&#92;&quot;,&#92;&quot;May&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;July&#92;&quot;,&#92;&quot;August&#92;&quot;,&#92;&quot;September&#92;&quot;,&#92;&quot;October&#92;&quot;]&quot;,&quot;YTD_Month_cum&quot;:&quot;[&#92;&quot;October&#92;&quot;]&quot;,&quot;YTD_Quarter&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;N/A&#92;&quot;]&quot;,&quot;YTD_Quarter_cum&quot;:&quot;[&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;N/A&#92;&quot;]&quot;,&quot;YTD_Quarter_pipegen&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;N/A&#92;&quot;]&quot;,&quot;YTD_Quarter_HC&quot;:&quot;[&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;N/A&#92;&quot;]&quot;,&quot;YTD_Quarter_SW&quot;:&quot;[&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;N/A&#92;&quot;]&quot;,&quot;YTD_Quarter_CSM&quot;:&quot;[&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;N/A&#92;&quot;]&quot;,&quot;Unit_Month&quot;:&quot;Month&quot;,&quot;Unit_Quarter&quot;:&quot;Quarter&quot;,&quot;Header_name_absolute&quot;:&quot;Q3&quot;,&quot;Header_name_rate&quot;:&quot;YoY Q3&quot;,&quot;Line_Rank&quot;:&quot;HZZ&quot;,&quot;Filter_Table&quot;:&quot;[]&quot;,&quot;Filter_Table_2&quot;:&quot;[&#92;&quot;☁ Core Premier (A la Carte) &amp; Priority&#92;&quot;,&#92;&quot;    ↳  Core Premier (A la Carte)&#92;&quot;,&#92;&quot;    ↳  Core Premier Priority&#92;&quot;,&#92;&quot;☁ N/A&#92;&quot;,&#92;&quot;    ↳  N/A&#92;&quot;]&quot;}"
        ]
      },
      "all_1": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Total",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;; q= group MasterHierarchy by &#39;all&#39;;\nq = foreach q generate &quot;    TOTAL    &quot; as &#39;Region&#39;;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        }
      },
      "Table_Level_1_Measures_1": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Level_1_Measures_1",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;Level_1&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nACV = load &quot;APM_ACV_AUTO1&quot;;\nACV = filter ACV by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nACV = filter ACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nACV = group ACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39;,&#39;Month&#39;, &#39;Fiscal_Year&#39;);\nACV = foreach ACV generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39; ,&#39;Month&#39; as &#39;Month&#39;,sum(&#39;ACV&#39;) as &#39;ACV&#39;;\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER ACV----------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnAOV = load &quot;APM_AOV&quot;;\nAOV = filter AOV by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nAOV = filter AOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nAOV = foreach AOV generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;AOV&#39;) as &#39;AOV&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER AOV ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYAOV = filter AOV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYAOV = filter AOV by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYAOV = filter AOV by &#39;Month&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYAOV = filter AOV by &#39;Month&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------/////////////////////////////-----------LOAD ATTRITION ----------------/////////////////////////////////////////\nAttrition = load &quot;APM_Attrition&quot;;\nAttrition = filter Attrition by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nAttrition = filter Attrition by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nAttrition = foreach Attrition generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Attrition&#39;)*-1 as &#39;Attrition_Product&#39;, sum(&#39;TTM&#39;)*-1 as &#39;TTM_Product&#39;,sum(&#39;AOV_twelve_month_ago&#39;) as &#39;AOV_twelve_month_ago&#39; ;\n----------------------------------------------------------------------------------------------FILTER ATTRITION -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYATT = filter Attrition by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYATT = filter Attrition by &#39;Month&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq4_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n----------------------------------------------------------------------------------------------------------------------------------LOAD/FILTER PIPEGEN-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nPipegen = load &quot;APM_Pipegen1&quot;;\nPipegen = filter Pipegen by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nPipegen = filter Pipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nq2_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnHC = load &quot;APM_HC&quot;;\nHC = filter HC by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nHC = filter HC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nq2_CYHC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYHC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_HC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYHC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYHC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD SWE INFRA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSW = load &quot;APM_SWE_INFRA&quot;;\nSW = filter SW by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nSW = filter SW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nq2_CYSW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYSW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_SW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_SW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD CSM------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nCSM = load &quot;CSM_PSM_HC&quot;;\nCSM = filter CSM by &#39;Segment&#39; {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--CSM = filter CSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nq2_CYCSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYCSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_CSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYCSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYCSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_CSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnDEALS = load &quot;APM_DEALS&quot;;\nDEALS = filter DEALS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nDEALS = filter DEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nDEALS = foreach DEALS generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;X10M_Deals&#39;) as &#39;X10M_Deals&#39;, sum(&#39;X10M&#39;) as &#39;X10M&#39;, sum(&#39;Runrate_Volume&#39;) as &#39;Runrate_Volume&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER DEALS ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYDEALS = filter DEALS by &#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYDEALS = filter DEALS by &#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYDEALS = filter DEALS by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYDEALS = filter DEALS by &#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nrouping///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult = group  q2_CYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYAOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYAOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYAOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYAOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,  q2_CYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,  q4_CYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYPipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYPipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYPipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYPipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYHC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYHC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q2_PY_2_HC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYHC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYHC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q3_PY_2_HC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYSW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYSW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q2_PY_2_SW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYSW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYSW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PY_2_SW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full , q2_CYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q2_PY_2_CSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PY_2_CSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYDEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYDEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYDEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYDEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; ,MasterHierarchy by &#39;Level_1&#39;;\nnresult = foreach result generate coalesce(MasterHierarchy.&#39;Level_1&#39;,q2_CYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYHC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYHC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q2_PY_2_HC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYHC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYHC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q3_PY_2_HC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYSW.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYSW.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q2_PY_2_SW.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYSW.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYSW.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q3_PY_2_SW.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYCSM.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYCSM.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q2_PY_2_CSM.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYCSM.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYCSM.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q3_PY_2_CSM.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYDEALS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYDEALS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYDEALS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYDEALS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;) as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, last(MasterHierarchy.&#39;Level_1_Ranking&#39;) as &#39;SortOrder&#39;, coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) as &#39;YTD ACV Absolute&#39;, ((coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;, ((coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YTD ACV Growth&#39;, coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) as &#39;YTD AOV Absolute&#39;, ((coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, ((coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YTD AOV Growth&#39;, coalesce(sum(q2_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q2&#39;,coalesce(sum(q3_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q3&#39;,coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q2&#39; ,coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q2&#39;,coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q3&#39; ,coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;,coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;YTD X10M_Deals Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YTD X10M_Deals Growth&#39;, coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) as &#39;YTD X10M Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YTD X10M Growth&#39;, coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;YTD Runrate_Volume Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YTD Runrate_Volume Growth&#39;;;\nnresult = order result by &#39;SortOrder&#39; asc;\nresult = foreach result generate &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;, &#39;YTD ACV Absolute&#39; as &#39;YTD ACV Absolute&#39;, &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;, &#39;YTD ACV Growth&#39; as &#39;YTD ACV Growth&#39;, &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, &#39;YTD AOV Absolute&#39; as &#39;YTD AOV Absolute&#39;, &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, &#39;YTD AOV Growth&#39; as &#39;YTD AOV Growth&#39;, coalesce(sum(&#39;Attrition_CY_Q2&#39;),0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Attrition Absolute&#39;, coalesce(sum(&#39;Attrition_CY_Q3&#39;),0) as &#39;YTD Attrition Absolute&#39;,(coalesce(round(sum(&#39;TTM_Product_CY_Q2&#39;), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q2), 0), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, (coalesce(round(sum(&#39;TTM_Product_CY_Q3&#39;), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q3), 0), 0)) * 100 as &#39;YTD Attrition TTM Rate&#39;, &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PipeGen Absolute&#39;,&#39;YTD Pipegen Absolute&#39; as &#39;YTD PipeGen Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} PipeGen Growth&#39;,   &#39;YTD Pipegen Growth&#39; as  &#39;YTD PipeGen Growth&#39;;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true
      },
      "Fiscal_Year_1": {
        "broadcastFacet": true,
        "label": "Fiscal_Year",
        "selectMode": "singlerequired",
        "start": "{&quot;display&quot;:[&quot;2019&quot;]}",
        "type": "staticflex",
        "values": [
          "{&quot;display&quot;:&quot;2019&quot;,&quot;value&quot;:2019,&quot;CY&quot;:&quot;2019&quot;,&quot;PY&quot;:&quot;2018&quot;,&quot;PY_2&quot;:&quot;2017&quot;}",
          "{&quot;display&quot;:&quot;2018&quot;,&quot;value&quot;:2018,&quot;CY&quot;:&quot;2018&quot;,&quot;PY&quot;:&quot;2017&quot;,&quot;PY_2&quot;:&quot;2016&quot;}"
        ]
      },
      "Cloud_Filter_1": {
        "broadcastFacet": true,
        "label": "Cloud_Filter",
        "selectMode": "singlerequired",
        "start": "{&quot;display&quot;:[&quot;Parameters&quot;]}",
        "type": "staticflex",
        "values": [
          "{&quot;display&quot;:&quot;Parameters&quot;,&quot;filter&quot;:&quot;[&#92;&quot;AMER&#92;&quot;, &#92;&quot;EMEA&#92;&quot;, &#92;&quot;APAC&#92;&quot;, &#92;&quot;JP&#92;&quot;, &#92;&quot;LACA&#92;&quot;, &#92;&quot;Other&#92;&quot;]&quot;,&quot;level_1&quot;:&quot;Region&quot;,&quot;level_2&quot;:&quot;Country&quot;,&quot;level_3&quot;:&quot;City&quot;,&quot;Master_l1&quot;:&quot;Segment_Hierarchy&quot;,&quot;Master_l1_Rank&quot;:&quot;Segment_Hierarchy_Rank&quot;}"
        ]
      },
      "Table_Measures_5_Top_Header": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Measures_5_Top_Header",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nresult_Total = group MasterHierarchy by all;\nresult_Total = foreach result_Total generate &quot;  &quot; as &#39;$ values in millions&#39;, &quot;Marketing Events -World Tours &amp; Trailhead live                    &quot; as &#39;Marketing Events -World Tours &amp; Trailhead live&#39;,&quot;Marketing Events - Other                    &quot; as &#39;Marketing Events - Other&#39;,&quot;EBC&#39;s                    &quot; as &#39;EBC&#39;,&quot;Dreamforce EBC&#39;s                    &quot; as &#39;Dreamforce EBC&#39;;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart",
          "visualizationType": "hbar"
        }
      },
      "Table_Measures_1_Top_Header": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Measures_1_Top_Header",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nresult_Total = group MasterHierarchy by all;\nresult_Total = foreach result_Total generate &quot;  &quot; as &#39;$ values in millions&#39;, &quot;ACV                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   &quot; as &#39;ACV&#39;, &quot;AOV                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             &quot; as &#39;AOV&#39;, &quot;ATTRITION                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         &quot; as &#39;ATTRITION&#39;, &quot;PipeGen                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 &quot; as &#39;Pipeline&#39;;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart",
          "visualizationType": "hbar"
        }
      },
      "lens_region": {
        "broadcastFacet": true,
        "groups": [
          "Region"
        ],
        "numbers": [],
        "query": "q = load &quot;Master_Hierarchy&quot;;\nq = filter q by &#39;Level_1&#39; in  {{cell(Static_Region_Filter.selection,0,&quot;filter&quot;).asString()}};q = group q by &#39;Level_1&#39; ;q = foreach q generate &#39;Level_1&#39; as &#39;Region&#39;; ; q = order q by (&#39;Region&#39; asc) ;",
        "receiveFacet": false,
        "selectMode": "multi",
        "strings": [
          "Region"
        ],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      },
      "Table_Level_2_Measures_5": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Level_2_Measures_5",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;Level_1&#39; in   {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nnACV = load &quot;APM_ACV_AUTO1&quot;;ACV = filter ACV by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nACV = filter ACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nACV = group ACV by (&#39;Quarter&#39;,&#39;Month&#39;, &#39;Fiscal_Year&#39;, &#39;Region&#39; , &#39;Country&#39;);\nACV = foreach ACV generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39; ,&#39;Month&#39; as &#39;Month&#39;,sum(&#39;ACV&#39;) as &#39;ACV&#39;,&quot;N/A&quot; as &#39;City&#39;, &#39;Region&#39; as &#39;Region&#39;,  {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnAOV = load &quot;APM_AOV&quot;;AOV = filter AOV by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nAOV = group AOV by (&#39;Month&#39;, &#39;Fiscal_Year&#39;, &#39;Region&#39; , &#39;Country&#39;);\n\nAOV = foreach AOV generate   &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;AOV&#39;) as &#39;AOV&#39;,&quot;N/A&quot; as &#39;City&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\nq2_CYAOV = filter AOV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYAOV = filter AOV by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYAOV = filter AOV by &#39;Month&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYAOV = filter AOV by &#39;Month&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD/FILTER ATTRITION--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nAttrition = load &quot;APM_Attrition&quot;;\nAttrition = filter Attrition by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nAttrition = filter Attrition by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in   {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nAttrition = foreach Attrition generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Attrition&#39;)*-1 as &#39;Attrition_Product&#39;, sum(&#39;TTM&#39;)*-1 as &#39;TTM_Product&#39;,sum(&#39;AOV_twelve_month_ago&#39;) as &#39;AOV_twelve_month_ago&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYATT = filter Attrition by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYATT = filter Attrition by &#39;Month&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq4_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnPipegen = load &quot;APM_Pipegen1&quot;;Pipegen = filter Pipegen by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;Pipegen = filter Pipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\n Pipegen = group Pipegen by (&#39;Fiscal_Year&#39;,&#39;Quarter&#39;,&#39;Region&#39;,&#39;Cloud&#39;,&#39;Month&#39;,&#39;Country&#39;);\nPipegen = foreach Pipegen generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Pipegen&#39;) as &#39;Pipegen&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD /FILTER HC---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nHC = load &quot;APM_HC&quot;;HC = filter HC by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nHC = filter HC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nHC = foreach HC generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;SE&#39;) as &#39;SE&#39;,sum(&#39;AE&#39;) as &#39;AE&#39;,sum(&#39;Co_Prime&#39;) as &#39;Co_Prime&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\nq2_CYHC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYHC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_HC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYHC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYHC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD SWE INFRA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSW = load &quot;APM_SWE_INFRA&quot;;SW = filter SW by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nSW = filter SW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nSW = foreach SW generate  &#39;Cloud&#39; as &#39;Cloud&#39;,&#39;City&#39; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;SWE&#39;) as &#39;SWE&#39;,sum(&#39;INFRA&#39;) as &#39;INFRA&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\nq2_CYSW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYSW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_SW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_SW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnCSM = load &quot;CSM_PSM_HC&quot;;\nCSM = filter CSM by &#39;Segment&#39; {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--CSM = filter CSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nCSM = foreach CSM generate  &#39;Cloud&#39; as &#39;Cloud&#39;,&quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;CSM_Headcount&#39;) as &#39;CSM_Headcount&#39;,sum(&#39;PSM_Headcount&#39;) as &#39;PSM_Headcount&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\nq2_CYCSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYCSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_CSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYCSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYCSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_CSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnDEALS = load &quot;APM_DEALS&quot;;DEALS = filter DEALS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;DEALS = filter DEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nDEALS = foreach DEALS generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;X10M_Deals&#39;) as &#39;X10M_Deals&#39;, sum(&#39;X10M&#39;) as &#39;X10M&#39;, sum(&#39;Runrate_Volume&#39;) as &#39;Runrate_Volume&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnLOGOS = load &quot;APM_LOGO&quot;;LOGOS = filter LOGOS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;LOGOS = filter LOGOS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nLOGOS = foreach LOGOS generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;New_Logos&#39;) as &#39;New_Logos&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYLOGOS = filter LOGOS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYLOGOS = filter LOGOS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYLOGOS = filter LOGOS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYLOGOS = filter LOGOS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnLOGOSLOST = load &quot;APM_LOST_LOGO&quot;;LOGOSLOST = filter LOGOSLOST by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;LOGOSLOST = filter LOGOSLOST by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nLOGOSLOST = foreach LOGOSLOST generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Lost_Logo_Count&#39;) as &#39;Lost_Logo_Count&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYLOGOSLOST = filter LOGOSLOST by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYLOGOSLOST = filter LOGOSLOST by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYLOGOSLOST = filter LOGOSLOST by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYLOGOSLOST = filter LOGOSLOST by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnREDACCOUNTS = load &quot;APM_REDACCOUNTS&quot;;REDACCOUNTS = filter REDACCOUNTS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;REDACCOUNTS = filter REDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nREDACCOUNTS = foreach REDACCOUNTS generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Red_Accounts&#39;) as &#39;Red_Accounts&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\nq2_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnEVENTS = load &quot;APM_MARKETING_EVENTS&quot;;EVENTS = filter EVENTS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;EVENTS = filter EVENTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nEVENTS = foreach EVENTS generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;World_Tours_Trailhead&#39;) as &#39;World_Tours_Trailhead&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnOTHER = load &quot;APM_MARKETING_OTHER&quot;;OTHER = filter OTHER by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;OTHER = filter OTHER by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nOTHER = foreach OTHER generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Marketing_Events_Other&#39;) as &#39;Marketing_Events_Other&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYOTHER = filter OTHER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYOTHER = filter OTHER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYOTHER = filter OTHER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYOTHER = filter OTHER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnEBC = load &quot;APM_MARKETING_EBC&quot;;EBC = filter EBC by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;EBC = filter EBC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nEBC = foreach EBC generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;EBC_s&#39;) as &#39;EBC_s&#39;,sum(&#39;DF_EBC_s&#39;) as &#39;DF_EBC_s&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYEBC = filter EBC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYEBC = filter EBC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYEBC = filter EBC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYEBC = filter EBC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Grouping Level_1 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult =  group q2_CYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYAOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYAOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYAOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYAOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,  q2_CYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q4_CYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYPipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYPipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYPipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYPipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYHC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYHC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q2_PY_2_HC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYHC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYHC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q3_PY_2_HC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYSW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYSW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q2_PY_2_SW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYSW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYSW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q3_PY_2_SW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full ,q2_CYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q2_PY_2_CSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PY_2_CSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYDEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYDEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYDEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYDEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYLOGOS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYLOGOS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYLOGOS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYLOGOS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYLOGOSLOST by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYLOGOSLOST by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYLOGOSLOST by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYLOGOSLOST by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q2_CYREDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYREDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYREDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYREDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYEVENTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYEVENTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYEVENTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYEVENTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;  full, q2_CYOTHER by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYOTHER by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYOTHER by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYOTHER by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;full, q2_CYEBC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYEBC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYEBC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYEBC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; , MasterHierarchy by &#39;Level_1&#39;;\nnresult = foreach result generate  &quot;☁ &quot; + coalesce(MasterHierarchy.&#39;Level_1&#39;, q2_CYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q2_PYATT.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q2_CYATT.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q3_PYATT.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q3_CYATT.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q2_CYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q2_CYDEALS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYDEALS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYDEALS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYDEALS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYLOGOS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYLOGOS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYLOGOS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYLOGOS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYLOGOSLOST.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYLOGOSLOST.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYLOGOSLOST.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYLOGOSLOST.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q2_CYREDACCOUNTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYREDACCOUNTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYREDACCOUNTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYREDACCOUNTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYEVENTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYEVENTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYEVENTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYEVENTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYOTHER.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYOTHER.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYOTHER.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYOTHER.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYEBC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYEBC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYEBC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYEBC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;) as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,  coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) as &#39;YTD ACV Absolute&#39;, ((coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;, ((coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YTD ACV Growth&#39;, coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) as &#39;YTD AOV Absolute&#39;, ((coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, ((coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YTD AOV Growth&#39;,last(MasterHierarchy.&#39;Level_1_Ranking&#39;) as &#39;Sort_Code&#39;, coalesce(sum(q2_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q2&#39;,coalesce(sum(q3_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q3&#39;,coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q2&#39; ,coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q2&#39;,coalesce(round(sum(q3_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q3&#39; ,coalesce(round(sum(q3_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;,(coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, (coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;YTD Attrition TTM Rate&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;, coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;YTD X10M_Deals Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YTD X10M_Deals Growth&#39;, coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) as &#39;YTD X10M Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YTD X10M Growth&#39;, coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;YTD Runrate_Volume Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YTD Runrate_Volume Growth&#39;,coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;, coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;YTD New_Logos Absolute&#39;, ((coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;, ((coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;YTD New_Logos Growth&#39;,coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;, coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;YTD Lost_Logo_Count Absolute&#39;, ((coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;, ((coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;YTD Lost_Logo_Count Growth&#39;,coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;YTD Red_Accounts Absolute&#39;, ((coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, ((coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YTD Red_Accounts Growth&#39;,coalesce(sum(q2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;, coalesce(sum(q3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;YTD World_Tours_Trailhead Absolute&#39;, ((coalesce(sum(q2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(q2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(q2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;, ((coalesce(sum(q3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(q3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(q3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YTD World_Tours_Trailhead Growth&#39;,coalesce(sum(q2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;, coalesce(sum(q3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;YTD Marketing_Events_Other Absolute&#39;, ((coalesce(sum(q2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(q2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(q2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;, ((coalesce(sum(q3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(q3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(q3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YTD Marketing_Events_Other Growth&#39;,coalesce(sum(q2_CYEBC.&#39;EBC_s&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;, coalesce(sum(q3_CYEBC.&#39;EBC_s&#39;), 0) as &#39;YTD EBC_s Absolute&#39;, ((coalesce(sum(q2_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(q2_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(q2_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;, ((coalesce(sum(q3_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(q3_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(q3_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YTD EBC_s Growth&#39;,coalesce(sum(q2_CYEBC.&#39;DF_EBC_s&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} DF_EBC_s Absolute&#39;, coalesce(sum(q3_CYEBC.&#39;DF_EBC_s&#39;), 0) as &#39;YTD DF_EBC_s Absolute&#39;, ((coalesce(sum(q2_CYEBC.&#39;DF_EBC_s&#39;), 0) - coalesce(sum(q2_PYEBC.&#39;DF_EBC_s&#39;), 0)) / coalesce(sum(q2_PYEBC.&#39;DF_EBC_s&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} DF_EBC_s Growth&#39;, ((coalesce(sum(q3_CYEBC.&#39;DF_EBC_s&#39;), 0) - coalesce(sum(q3_PYEBC.&#39;DF_EBC_s&#39;), 0)) / coalesce(sum(q3_PYEBC.&#39;DF_EBC_s&#39;), 0)) * 100 as &#39;YTD DF_EBC_s Growth&#39;,(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0))  as &#39;YTD CSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD CSM CAGR&#39;,(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0))  as &#39;YTD PSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD PSM CAGR&#39;;\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------GROUPING Level_2-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_SubCloud = group q2_CYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_CYATT by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYATT by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYATT by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYATT by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,q4_CYATT by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,  q2_CYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_CYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,q2_CYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,q2_PY_2_HC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PY_2_HC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full ,q2_CYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,q2_PY_2_SW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PY_2_SW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;)full,q2_CYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,q2_PY_2_CSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PY_2_CSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_CYDEALS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYDEALS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYDEALS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYDEALS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;)full,  q2_CYLOGOS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYLOGOS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYLOGOS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYLOGOS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,q2_CYLOGOSLOST by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYLOGOSLOST by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYLOGOSLOST by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYLOGOSLOST by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_CYREDACCOUNTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYREDACCOUNTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYREDACCOUNTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYREDACCOUNTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_CYEVENTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYEVENTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYEVENTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYEVENTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full ,q2_CYOTHER by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYOTHER by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYOTHER by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYOTHER by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_CYEBC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYEBC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYEBC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYEBC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) left, MasterHierarchy by (&#39;Level_1&#39;, &#39;Level_2&#39;) ;\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------PROJECTION Level_2-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\nresult_SubCloud = foreach result_SubCloud generate  coalesce(q2_CYACV.&#39;Country&#39;, q2_PYACV.&#39;Country&#39;, q3_CYACV.&#39;Country&#39;, q3_PYACV.&#39;Country&#39;, q2_CYAOV.&#39;Country&#39;, q2_PYAOV.&#39;Country&#39;, q3_CYAOV.&#39;Country&#39;, q3_PYAOV.&#39;Country&#39;,q2_CYDEALS.&#39;Country&#39;, q2_PYDEALS.&#39;Country&#39;, q3_CYDEALS.&#39;Country&#39;, q3_PYDEALS.&#39;Country&#39;,q2_CYLOGOS.&#39;Country&#39;, q2_PYLOGOS.&#39;Country&#39;, q3_CYLOGOS.&#39;Country&#39;, q3_PYLOGOS.&#39;Country&#39;,q2_CYLOGOSLOST.&#39;Country&#39;, q2_PYLOGOSLOST.&#39;Country&#39;, q3_CYLOGOSLOST.&#39;Country&#39;, q3_PYLOGOSLOST.&#39;Country&#39;,q2_CYREDACCOUNTS.&#39;Country&#39;, q2_PYREDACCOUNTS.&#39;Country&#39;, q3_CYREDACCOUNTS.&#39;Country&#39;, q3_PYREDACCOUNTS.&#39;Country&#39;, q2_CYEVENTS.&#39;Country&#39;, q2_PYEVENTS.&#39;Country&#39;, q3_CYEVENTS.&#39;Country&#39;, q3_PYEVENTS.&#39;Country&#39; ,q2_CYOTHER.&#39;Country&#39;, q2_PYOTHER.&#39;Country&#39;, q3_CYOTHER.&#39;Country&#39;, q3_PYOTHER.&#39;Country&#39;, q2_CYEBC.&#39;Country&#39;, q2_PYEBC.&#39;Country&#39;, q3_CYEBC.&#39;Country&#39;, q3_PYEBC.&#39;Country&#39;) as &#39;Country&#39;, coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) as &#39;YTD ACV Absolute&#39;, ((coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;, ((coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YTD ACV Growth&#39;, coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) as &#39;YTD AOV Absolute&#39;, ((coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, ((coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YTD AOV Growth&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;, last(MasterHierarchy.&#39;Level_2_Sort_Code&#39;) as &#39;Sort_Code&#39;, coalesce(sum(q2_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;Attrition_CY_Q2&#39;, coalesce(sum(q3_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;Attrition_CY_Q3&#39;, coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q2&#39;, coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q2&#39;, coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q3&#39;, coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;, (coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, (coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;YTD Attrition TTM Rate&#39;, coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;YTD X10M_Deals Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YTD X10M_Deals Growth&#39;, coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) as &#39;YTD X10M Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YTD X10M Growth&#39;, coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;YTD Runrate_Volume Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YTD Runrate_Volume Growth&#39;,coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;, coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;YTD New_Logos Absolute&#39;, ((coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;, ((coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;YTD New_Logos Growth&#39;,coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;, coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;YTD Lost_Logo_Count Absolute&#39;, ((coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;, ((coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;YTD Lost_Logo_Count Growth&#39;,coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;YTD Red_Accounts Absolute&#39;, ((coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, ((coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YTD Red_Accounts Growth&#39;,coalesce(sum(q2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;, coalesce(sum(q3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;YTD World_Tours_Trailhead Absolute&#39;, ((coalesce(sum(q2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(q2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(q2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;, ((coalesce(sum(q3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(q3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(q3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YTD World_Tours_Trailhead Growth&#39;,coalesce(sum(q2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;, coalesce(sum(q3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;YTD Marketing_Events_Other Absolute&#39;, ((coalesce(sum(q2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(q2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(q2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;, ((coalesce(sum(q3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(q3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(q3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YTD Marketing_Events_Other Growth&#39;,coalesce(sum(q2_CYEBC.&#39;EBC_s&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;, coalesce(sum(q3_CYEBC.&#39;EBC_s&#39;), 0) as &#39;YTD EBC_s Absolute&#39;, ((coalesce(sum(q2_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(q2_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(q2_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;, ((coalesce(sum(q3_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(q3_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(q3_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YTD EBC_s Growth&#39;,coalesce(sum(q2_CYEBC.&#39;DF_EBC_s&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} DF_EBC_s Absolute&#39;, coalesce(sum(q3_CYEBC.&#39;DF_EBC_s&#39;), 0) as &#39;YTD DF_EBC_s Absolute&#39;, ((coalesce(sum(q2_CYEBC.&#39;DF_EBC_s&#39;), 0) - coalesce(sum(q2_PYEBC.&#39;DF_EBC_s&#39;), 0)) / coalesce(sum(q2_PYEBC.&#39;DF_EBC_s&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} DF_EBC_s Growth&#39;, ((coalesce(sum(q3_CYEBC.&#39;DF_EBC_s&#39;), 0) - coalesce(sum(q3_PYEBC.&#39;DF_EBC_s&#39;), 0)) / coalesce(sum(q3_PYEBC.&#39;DF_EBC_s&#39;), 0)) * 100 as &#39;YTD DF_EBC_s Growth&#39;,(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0))  as &#39;YTD CSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD CSM CAGR&#39;,(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0))  as &#39;YTD PSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD PSM CAGR&#39;,coalesce(MasterHierarchy.&#39;Level_1&#39; ,q2_CYACV.&#39;Region&#39;, q2_PYACV.&#39;Region&#39;, q3_CYACV.&#39;Region&#39;, q3_PYACV.&#39;Region&#39;, q2_CYDEALS.&#39;Region&#39;, q2_PYDEALS.&#39;Region&#39;, q3_CYDEALS.&#39;Region&#39;, q3_PYDEALS.&#39;Region&#39;,q2_CYLOGOS.&#39;Region&#39;, q2_PYLOGOS.&#39;Region&#39;, q3_CYLOGOS.&#39;Region&#39;, q3_PYLOGOS.&#39;Region&#39;,q2_CYLOGOSLOST.&#39;Region&#39;, q2_PYLOGOSLOST.&#39;Region&#39;, q3_CYLOGOSLOST.&#39;Region&#39;, q3_PYLOGOSLOST.&#39;Region&#39;,q2_CYREDACCOUNTS.&#39;Region&#39;, q2_PYREDACCOUNTS.&#39;Region&#39;, q3_CYREDACCOUNTS.&#39;Region&#39;, q3_PYREDACCOUNTS.&#39;Region&#39;,q2_CYEVENTS.&#39;Region&#39;, q2_PYEVENTS.&#39;Region&#39;, q3_CYEVENTS.&#39;Region&#39;, q3_PYEVENTS.&#39;Region&#39;,q2_CYOTHER.&#39;Region&#39;, q2_PYOTHER.&#39;Region&#39;, q3_CYOTHER.&#39;Region&#39;, q3_PYOTHER.&#39;Region&#39;,q2_CYEBC.&#39;Region&#39;, q2_PYEBC.&#39;Region&#39;, q3_CYEBC.&#39;Region&#39;, q3_PYEBC.&#39;Region&#39;) as &#39;Region_Level2&#39;;\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Country Bin logic as data couldn&#39;t be provided in a clean format, this code uses the spec bins and put&#39;s all other countries in the  RO Region bin -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n;\r\nresult2_SubCloud = group result_SubCloud by (&#39;Region_Level2&#39;, &#39;Country&#39;);\r\nresult2_SubCloud = foreach result2_SubCloud generate &#39;Region_Level2&#39; as &#39;Region_Level2&#39;, case when (&#39;Region_Level2&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Canada&quot; ))then &quot;Canada&quot; when (&#39;Region_Level2&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;United States&quot; ))then &quot;United States&quot; when (&#39;Region_Level2&#39; == &quot;AMER&quot;)then &quot;RO AMER&quot; when  (&#39;Region_Level2&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;United Kingdom&quot; ))then &quot;United Kingdom&quot;  when  (&#39;Region_Level2&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;France&quot; ))then &quot;France&quot; when  (&#39;Region_Level2&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Germany&quot; ))then &quot;Germany&quot; when  (&#39;Region_Level2&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Netherlands&quot; ))then &quot;Netherlands&quot; when (&#39;Region_Level2&#39; == &quot;EMEA&quot; ) then &quot;RO EMEA&quot; when  (&#39;Region_Level2&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Australia&quot; ))then &quot;ANZ&quot;  when  (&#39;Region_Level2&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;ANZ&quot; ))then &quot;ANZ&quot; when  (&#39;Region_Level2&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;India&quot; ))then &quot;India&quot;  when  (&#39;Region_Level2&#39; == &quot;APAC&quot; )then &quot;RO APAC&quot;  when  (&#39;Region_Level2&#39; == &quot;APAC&quot; )then &quot;RO APAC&quot;  when  (&#39;Region_Level2&#39; == &quot;JP&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Japan&quot; ))then &quot;Japan&quot; when  (&#39;Region_Level2&#39; == &quot;JP&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;South Korea&quot; ))then &quot;South Korea&quot; when  (&#39;Region_Level2&#39; == &quot;JP&quot;  )then &quot;RO JP&quot;  when  (&#39;Region_Level2&#39; == &quot;LACA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Brazil&quot; ))then &quot;Brazil&quot; when (&#39;Region_Level2&#39; == &quot;LACA&quot; )then &quot;RO LACA&quot; else &quot;ERROR&quot; end as &#39;Country&#39;, coalesce(sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;,coalesce(sum(result2_SubCloud.&#39;YTD ACV Absolute&#39;), 0) as &#39;YTD ACV Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;,coalesce(sum(result2_SubCloud.&#39;YTD ACV Growth&#39;), 0) as &#39;YTD ACV Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD AOV Absolute&#39;), 0)  as &#39;YTD AOV Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD AOV Growth&#39;), 0) as &#39;YTD AOV Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Pipegen Absolute&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Pipegen Growth&#39;), 0) as &#39;YTD Pipegen Growth&#39;,  coalesce(sum(result2_SubCloud.&#39;Attrition_CY_Q2&#39;), 0)  as &#39;Attrition_CY_Q2&#39;, coalesce(sum(result2_SubCloud.&#39;Attrition_CY_Q3&#39;), 0) as &#39;Attrition_CY_Q3&#39;, coalesce(sum(result2_SubCloud.&#39;TTM_Product_CY_Q2&#39;), 0) as &#39;TTM_Product_CY_Q2&#39;, coalesce(sum(result2_SubCloud.&#39;AOV_twelve_month_ago_CY_Q2&#39;), 0)as &#39;AOV_twelve_month_ago_CY_Q2&#39;, coalesce(sum(result2_SubCloud.&#39;TTM_Product_CY_Q3&#39;), 0) as &#39;TTM_Product_CY_Q3&#39;,coalesce(sum(result2_SubCloud.&#39;AOV_twelve_month_ago_CY_Q3&#39;), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Attrition TTM Rate&#39;), 0) as &#39;YTD Attrition TTM Rate&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M_Deals Absolute&#39;), 0)  as &#39;YTD X10M_Deals Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M_Deals Growth&#39;), 0) as &#39;YTD X10M_Deals Growth&#39; ,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M Absolute&#39;), 0)  as &#39;YTD X10M Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M Growth&#39;), 0) as &#39;YTD X10M Growth&#39; ,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Runrate_Volume Absolute&#39;), 0)  as &#39;YTD Runrate_Volume Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Runrate_Volume Growth&#39;), 0) as &#39;YTD Runrate_Volume Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD New_Logos Absolute&#39;), 0)  as &#39;YTD New_Logos Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD New_Logos Growth&#39;), 0) as &#39;YTD New_Logos Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Lost_Logo_Count Absolute&#39;), 0)  as &#39;YTD Lost_Logo_Count Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Lost_Logo_Count Growth&#39;), 0) as &#39;YTD Lost_Logo_Count Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Red_Accounts Absolute&#39;), 0)  as &#39;YTD Red_Accounts Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Red_Accounts Growth&#39;), 0) as &#39;YTD Red_Accounts Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD World_Tours_Trailhead Absolute&#39;), 0)  as &#39;YTD World_Tours_Trailhead Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;,coalesce(sum(result2_SubCloud.&#39;YTD World_Tours_Trailhead Growth&#39;), 0)  as &#39;YTD World_Tours_Trailhead Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Marketing_Events_Other Absolute&#39;), 0)  as &#39;YTD Marketing_Events_Other Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Marketing_Events_Other Growth&#39;), 0) as &#39;YTD Marketing_Events_Other Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD EBC_s Absolute&#39;), 0)  as &#39;YTD EBC_s Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD EBC_s Growth&#39;), 0) as &#39;YTD EBC_s Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} DF_EBC_s Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} DF_EBC_s Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD DF_EBC_s Absolute&#39;), 0)  as &#39;YTD DF_EBC_s Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} DF_EBC_s Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} DF_EBC_s Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD DF_EBC_s Growth&#39;), 0) as &#39;YTD DF_EBC_s Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD CSM Absolute&#39;), 0) as &#39;YTD CSM Absolute&#39;,  coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,  coalesce(sum(result2_SubCloud.&#39;YTD CSM CAGR&#39;), 0) as &#39;YTD CSM CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD PSM Absolute&#39;), 0) as &#39;YTD PSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;YTD PSM CAGR&#39;), 0) as &#39;YTD PSM CAGR&#39;;\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------GROUPING FOR Mapped Countries ------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\nresult2_SubCloud = group result2_SubCloud by (&#39;Region_Level2&#39;, &#39;Country&#39;)left, MasterHierarchy by (&#39;Level_1&#39;, &#39;Level_2&#39;);\r\nresult2_SubCloud = foreach result2_SubCloud generate result2_SubCloud.&#39;Region_Level2&#39; as &#39;Region_Level2&#39;, &quot;    ↳  &quot; + (result2_SubCloud.&#39;Country&#39; ) as &#39;Region&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;,coalesce(sum(result2_SubCloud.&#39;YTD ACV Absolute&#39;), 0) as &#39;YTD ACV Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;,coalesce(sum(result2_SubCloud.&#39;YTD ACV Growth&#39;), 0) as &#39;YTD ACV Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD AOV Absolute&#39;), 0)  as &#39;YTD AOV Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD AOV Growth&#39;), 0) as &#39;YTD AOV Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Pipegen Absolute&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Pipegen Growth&#39;), 0) as &#39;YTD Pipegen Growth&#39;,  coalesce(sum(result2_SubCloud.&#39;Attrition_CY_Q2&#39;), 0)  as &#39;Attrition_CY_Q2&#39;, coalesce(sum(result2_SubCloud.&#39;Attrition_CY_Q3&#39;), 0) as &#39;Attrition_CY_Q3&#39;, coalesce(sum(result2_SubCloud.&#39;TTM_Product_CY_Q2&#39;), 0) as &#39;TTM_Product_CY_Q2&#39;, coalesce(sum(result2_SubCloud.&#39;AOV_twelve_month_ago_CY_Q2&#39;), 0)as &#39;AOV_twelve_month_ago_CY_Q2&#39;, coalesce(sum(result2_SubCloud.&#39;TTM_Product_CY_Q3&#39;), 0) as &#39;TTM_Product_CY_Q3&#39;,coalesce(sum(result2_SubCloud.&#39;AOV_twelve_month_ago_CY_Q3&#39;), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Attrition TTM Rate&#39;), 0) as &#39;YTD Attrition TTM Rate&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M_Deals Absolute&#39;), 0)  as &#39;YTD X10M_Deals Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M_Deals Growth&#39;), 0) as &#39;YTD X10M_Deals Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M Absolute&#39;), 0)  as &#39;YTD X10M Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M Growth&#39;), 0) as &#39;YTD X10M Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M Absolute&#39;), 0)  as &#39;YTD Runrate_Volume Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Runrate_Volume Growth&#39;), 0) as &#39;YTD Runrate_Volume Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD New_Logos Absolute&#39;), 0)  as &#39;YTD New_Logos Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD New_Logos Growth&#39;), 0) as &#39;YTD New_Logos Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Lost_Logo_Count Absolute&#39;), 0)  as &#39;YTD Lost_Logo_Count Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Lost_Logo_Count Growth&#39;), 0) as &#39;YTD Lost_Logo_Count Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Red_Accounts Absolute&#39;), 0)  as &#39;YTD Red_Accounts Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Red_Accounts Growth&#39;), 0) as &#39;YTD Red_Accounts Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD CSM Absolute&#39;), 0) as &#39;YTD CSM Absolute&#39;,  coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,  coalesce(sum(result2_SubCloud.&#39;YTD CSM CAGR&#39;), 0) as &#39;YTD CSM CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD PSM Absolute&#39;), 0) as &#39;YTD PSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;YTD PSM CAGR&#39;), 0) as &#39;YTD PSM CAGR&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;,coalesce(sum(result2_SubCloud.&#39;YTD EBC_s Absolute&#39;), 0) as &#39;YTD EBC_s Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;,coalesce(sum(result2_SubCloud.&#39;YTD EBC_s Growth&#39;), 0) as &#39;YTD EBC_s Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} DF_EBC_s Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} DF_EBC_s Absolute&#39;,coalesce(sum(result2_SubCloud.&#39;YTD DF_EBC_s Absolute&#39;), 0) as &#39;YTD DF_EBC_s Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} DF_EBC_s Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} DF_EBC_s Growth&#39;,coalesce(sum(result2_SubCloud.&#39;YTD DF_EBC_s Growth&#39;), 0) as &#39;YTD DF_EBC_s Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;,coalesce(sum(result2_SubCloud.&#39;YTD World_Tours_Trailhead Absolute&#39;), 0) as &#39;YTD World_Tours_Trailhead Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;,coalesce(sum(result2_SubCloud.&#39;YTD World_Tours_Trailhead Growth&#39;), 0) as &#39;YTD World_Tours_Trailhead Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;,coalesce(sum(result2_SubCloud.&#39;YTD Marketing_Events_Other Absolute&#39;), 0) as &#39;YTD Marketing_Events_Other Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;,coalesce(sum(result2_SubCloud.&#39;YTD Marketing_Events_Other Growth&#39;), 0) as &#39;YTD Marketing_Events_Other Growth&#39;,last(MasterHierarchy.&#39;Level_2_Sort_Code&#39;) as &#39;Sort_Code&#39;;\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------GROUPING Level_3-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_Cloud_Level3 = group q2_CYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_CYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,  q2_CYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_CYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,q2_PY_2_HC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,  q3_PY_2_HC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_CYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,q2_PY_2_SW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,  q3_PY_2_SW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,  q2_CYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,q2_PY_2_CSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,  q3_PY_2_CSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;),MasterHierarchy by (&#39;Level_1&#39;, &#39;Level_2&#39;,&#39;Level_3&#39;)  ;\nnresult_Cloud_Level3 = foreach result_Cloud_Level3 generate &quot;          &quot; + coalesce(MasterHierarchy.&#39;Level_3&#39;, q2_CYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q2_PYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q3_CYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q3_PYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q2_CYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q2_PYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q3_CYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q3_PYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,  coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) as &#39;YTD ACV Absolute&#39;, ((coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;, ((coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YTD ACV Growth&#39;, coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} YTD AOV Absolute&#39;, ((coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, ((coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YTD AOV Growth&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;,last(MasterHierarchy.&#39;Level_3_Sort_Code&#39;)  as &#39;Sort_Code&#39;,&quot;          &quot; + coalesce(last(MasterHierarchy.&#39;Level_2&#39;), last(q2_CYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q2_PYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q3_CYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q3_PYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q2_CYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q2_PYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q3_CYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q3_PYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;)) as &#39;ParentCloud&#39;;\nresult_Cloud_Level3 = filter result_Cloud_Level3 by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; != &#39;ParentCloud&#39;;\nnFinal = union result, result2_SubCloud;\nnFinal = filter Final by &#39;Sort_Code&#39; != &quot;&quot;;\nFinal = order Final by (&#39;Sort_Code&#39; asc,  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; asc);\nFinal = foreach Final generate &#39;Region&#39;+&quot;                                               &quot; as &#39;Region&#39;, &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;, &#39;YTD World_Tours_Trailhead Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;,&#39;YTD World_Tours_Trailhead Growth&#39; , &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;, &#39;YTD Marketing_Events_Other Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;,&#39;YTD Marketing_Events_Other Growth&#39;, &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;, &#39;YTD EBC_s Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;,&#39;YTD EBC_s Growth&#39; ,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} DF_EBC_s Absolute&#39;, &#39;YTD DF_EBC_s Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} DF_EBC_s Growth&#39;,&#39;YTD DF_EBC_s Growth&#39;  ;;\n",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      },
      "Table_Level_2_Measures_4": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Level_2_Measures_4",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;Level_1&#39; in   {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nnACV = load &quot;APM_ACV_AUTO1&quot;;ACV = filter ACV by &#39;Segment&#39; {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nACV = filter ACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nACV = group ACV by (&#39;Quarter&#39;,&#39;Month&#39;, &#39;Fiscal_Year&#39;, &#39;Region&#39; , &#39;Country&#39;);\nACV = foreach ACV generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39; ,&#39;Month&#39; as &#39;Month&#39;,sum(&#39;ACV&#39;) as &#39;ACV&#39;,&quot;N/A&quot; as &#39;City&#39;, &#39;Region&#39; as &#39;Region&#39;,  {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n\n\n----------------------------------------LOAD CSM------------------------------\nCSM = load &quot;CSM_PSM_HC&quot;;\nCSM = filter CSM by &#39;Segment&#39; {{cell(Toggle_CSG_2.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--CSM = filter CSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nCSM = foreach CSM generate  &#39;Cloud&#39; as &#39;Cloud&#39;,&quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;CSM_Headcount&#39;) as &#39;CSM_Headcount&#39;, sum(&#39;PSM_Headcount&#39;) as &#39;PSM_Headcount&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\nq2_CYCSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYCSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_CSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYCSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYCSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_CSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n\n------------------------------------LOAD /FILTER RED ACCOUNTS---------------------------------------\nREDACCOUNTS = load &quot;APM_REDACCOUNTS&quot;;\nREDACCOUNTS = filter REDACCOUNTS by &#39;Segment&#39; {{cell(Toggle_CSG_2.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nREDACCOUNTS = filter REDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nREDACCOUNTS = foreach REDACCOUNTS generate &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Red_Accounts&#39;) as &#39;Red_Accounts&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\nq2_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n\n\n--------------------------------Grouping Level_1 -----------------------------------------\nresult =  group \nq2_CYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, \nq2_PYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, \nq3_CYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, \nq3_PYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, \n \n\nq2_CYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, \nq2_PYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,\nq2_PY_2_CSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, \nq3_CYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, \nq3_PYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, \nq3_PY_2_CSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, \n\nq2_CYREDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, \nq2_PYREDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, \nq3_CYREDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, \nq3_PYREDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, \nMasterHierarchy by &#39;Level_1&#39;;\n\n\n------------------------PROJECTION LEVEL1-------------------------\nresult = foreach result generate \n\n&quot;☁ &quot; + coalesce(MasterHierarchy.&#39;Level_1&#39;, q2_CYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYREDACCOUNTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYREDACCOUNTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYREDACCOUNTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYREDACCOUNTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;) as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,  \n\nlast(MasterHierarchy.&#39;Level_1_Ranking&#39;) as &#39;Sort_Code&#39;,\n\ncoalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;, \ncoalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) as &#39;YTD ACV Absolute&#39;, \n((coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;, \n((coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YTD ACV Growth&#39;, \n\n\ncoalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, \ncoalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;YTD Red_Accounts Absolute&#39;, \n((coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, \n((coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YTD Red_Accounts Growth&#39;,\n\n(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, \n(coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0))  as &#39;YTD CSM Absolute&#39; ,  \n((power(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,\n((power(coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD CSM CAGR&#39;,\n\n(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, \n(coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0))  as &#39;YTD PSM Absolute&#39; ,  \n((power(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;,\n((power(coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD PSM CAGR&#39;;\n\n-------------------------------------GROUPING Level_2------------------------------\nresult_SubCloud = group \nq2_CYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, \n&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, \nq2_PYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, \n&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, \nq3_CYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, \n&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, \nq3_PYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, \n&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, \n\n\nq2_CYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, \n&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, \nq2_PYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, \n&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,\nq2_PY_2_CSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, \n&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, \nq3_CYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, \n&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, \nq3_PYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, \n&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, \nq3_PY_2_CSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, \n&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, \n\n\nq2_CYREDACCOUNTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, \n&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, \nq2_PYREDACCOUNTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, \n&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, \nq3_CYREDACCOUNTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, \n&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, \nq3_PYREDACCOUNTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, \n&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, \n\nMasterHierarchy by (&#39;Level_1&#39;, &#39;Level_2&#39;) ;\n\n\n-------------------------------------PROJECTION Level_2------------------------------------\nresult_SubCloud = foreach result_SubCloud generate  \n\ncoalesce(q2_CYACV.&#39;Country&#39;, q2_PYACV.&#39;Country&#39;, q3_CYACV.&#39;Country&#39;, q3_PYACV.&#39;Country&#39;, q2_CYREDACCOUNTS.&#39;Country&#39;, q2_PYREDACCOUNTS.&#39;Country&#39;, q3_CYREDACCOUNTS.&#39;Country&#39;, q3_PYREDACCOUNTS.&#39;Country&#39;) as &#39;Country&#39;, \n\ncoalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;, \ncoalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) as &#39;YTD ACV Absolute&#39;, \n((coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;, \n((coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YTD ACV Growth&#39;, \n\ncoalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, \ncoalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;YTD Red_Accounts Absolute&#39;, \n((coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, \n((coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YTD Red_Accounts Growth&#39;,\n\n(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, \n(coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0))  as &#39;YTD CSM Absolute&#39; ,  \n((power(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,\n((power(coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD CSM CAGR&#39;,\n\n(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, \n(coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0))  as &#39;YTD PSM Absolute&#39; ,  \n((power(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;,\n((power(coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD PSM CAGR&#39;,\n\ncoalesce(MasterHierarchy.&#39;Level_1&#39; ,q2_CYACV.&#39;Region&#39;, q2_PYACV.&#39;Region&#39;, q3_CYACV.&#39;Region&#39;, q3_PYACV.&#39;Region&#39;, q2_CYREDACCOUNTS.&#39;Region&#39;, q2_PYREDACCOUNTS.&#39;Region&#39;, q3_CYREDACCOUNTS.&#39;Region&#39;, q3_PYREDACCOUNTS.&#39;Region&#39;) as &#39;Region_Level2&#39;;\n\n\n-----------------------------------------Country Bin logic as data couldn&#39;t be provided in a clean format, this code uses the spec bins and put&#39;s all other countries in the RO Region bin ---------------------------\n\nresult2_SubCloud = group result_SubCloud by (&#39;Region_Level2&#39;, &#39;Country&#39;);\nresult2_SubCloud = foreach result2_SubCloud generate &#39;Region_Level2&#39; as &#39;Region_Level2&#39;, \ncase when (&#39;Region_Level2&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Canada&quot; ))then &quot;Canada&quot; when (&#39;Region_Level2&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;United States&quot; ))then &quot;United States&quot; when (&#39;Region_Level2&#39; == &quot;AMER&quot;)then &quot;RO AMER&quot; when  (&#39;Region_Level2&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;United Kingdom&quot; ))then &quot;United Kingdom&quot;  when  (&#39;Region_Level2&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;France&quot; ))then &quot;France&quot; when  (&#39;Region_Level2&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Germany&quot; ))then &quot;Germany&quot; when  (&#39;Region_Level2&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Netherlands&quot; ))then &quot;Netherlands&quot; when (&#39;Region_Level2&#39; == &quot;EMEA&quot; ) then &quot;RO EMEA&quot; when  (&#39;Region_Level2&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Australia&quot; ))then &quot;ANZ&quot; when  (&#39;Region_Level2&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;ANZ&quot; ))then &quot;ANZ&quot;  when  (&#39;Region_Level2&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;India&quot; ))then &quot;India&quot;  when  (&#39;Region_Level2&#39; == &quot;APAC&quot; )then &quot;RO APAC&quot;  when  (&#39;Region_Level2&#39; == &quot;APAC&quot; )then &quot;RO APAC&quot;  when  (&#39;Region_Level2&#39; == &quot;JP&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Japan&quot; ))then &quot;Japan&quot; when  (&#39;Region_Level2&#39; == &quot;JP&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;South Korea&quot; ))then &quot;South Korea&quot; when  (&#39;Region_Level2&#39; == &quot;JP&quot;  )then &quot;RO JP&quot;  when  (&#39;Region_Level2&#39; == &quot;LACA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Brazil&quot; ))then &quot;Brazil&quot; when (&#39;Region_Level2&#39; == &quot;LACA&quot; )then &quot;RO LACA&quot; else &quot;ERROR&quot; end as &#39;Country&#39;, \n\ncoalesce(sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;,\ncoalesce(sum(result2_SubCloud.&#39;YTD ACV Absolute&#39;), 0) as &#39;YTD ACV Absolute&#39;, \ncoalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;,\ncoalesce(sum(result2_SubCloud.&#39;YTD ACV Growth&#39;), 0) as &#39;YTD ACV Growth&#39;, \n\ncoalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, \ncoalesce(sum(result2_SubCloud.&#39;YTD Red_Accounts Absolute&#39;), 0)  as &#39;YTD Red_Accounts Absolute&#39;, \ncoalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, \ncoalesce(sum(result2_SubCloud.&#39;YTD Red_Accounts Growth&#39;), 0) as &#39;YTD Red_Accounts Growth&#39;,\n\ncoalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, \ncoalesce(sum(result2_SubCloud.&#39;YTD CSM Absolute&#39;), 0) as &#39;YTD CSM Absolute&#39;,  \ncoalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,  \ncoalesce(sum(result2_SubCloud.&#39;YTD CSM CAGR&#39;), 0) as &#39;YTD CSM CAGR&#39;, \n\ncoalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, \ncoalesce(sum(result2_SubCloud.&#39;YTD PSM Absolute&#39;), 0) as &#39;YTD PSM Absolute&#39;, \ncoalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;, \ncoalesce(sum(result2_SubCloud.&#39;YTD PSM CAGR&#39;), 0) as &#39;YTD PSM CAGR&#39;;\n\n------------------------------------------------------GROUPING FOR Mapped Countries ----------------------------\nresult2_SubCloud = group result2_SubCloud by (&#39;Region_Level2&#39;, &#39;Country&#39;) left, MasterHierarchy by (&#39;Level_1&#39;, &#39;Level_2&#39;);\nresult2_SubCloud = foreach result2_SubCloud generate result2_SubCloud.&#39;Region_Level2&#39; as &#39;Region_Level2&#39;, \n&quot;    ↳  &quot; + (result2_SubCloud.&#39;Country&#39;) as &#39;Region&#39;, \n\ncoalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;,\ncoalesce(sum(result2_SubCloud.&#39;YTD ACV Absolute&#39;), 0) as &#39;YTD ACV Absolute&#39;, \ncoalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;,\ncoalesce(sum(result2_SubCloud.&#39;YTD ACV Growth&#39;), 0) as &#39;YTD ACV Growth&#39;, \n\ncoalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, \ncoalesce(sum(result2_SubCloud.&#39;YTD Red_Accounts Absolute&#39;), 0)  as &#39;YTD Red_Accounts Absolute&#39;, \ncoalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, \ncoalesce(sum(result2_SubCloud.&#39;YTD Red_Accounts Growth&#39;), 0) as &#39;YTD Red_Accounts Growth&#39;, \n\ncoalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, \ncoalesce(sum(result2_SubCloud.&#39;YTD CSM Absolute&#39;), 0) as &#39;YTD CSM Absolute&#39;,  \ncoalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,  \ncoalesce(sum(result2_SubCloud.&#39;YTD CSM CAGR&#39;), 0) as &#39;YTD CSM CAGR&#39;, \n\ncoalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, \ncoalesce(sum(result2_SubCloud.&#39;YTD PSM Absolute&#39;), 0) as &#39;YTD PSM Absolute&#39;, \ncoalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;, \ncoalesce(sum(result2_SubCloud.&#39;YTD PSM CAGR&#39;), 0) as &#39;YTD PSM CAGR&#39;,\n\nlast(MasterHierarchy.&#39;Level_2_Sort_Code&#39;) as &#39;Sort_Code&#39;;\n\n\n-------------------------------------UNION------------------------------\nFinal = union result, result2_SubCloud;\n\n---------------------------------------FINAL PROJECTION --------------------------\nFinal = filter Final by &#39;Sort_Code&#39; != &quot;&quot;;\nFinal = order Final by (&#39;Sort_Code&#39; asc,  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; asc);\n\nFinal = foreach Final generate \n&#39;Region&#39;+&quot;               &quot; as &#39;Region&#39;, \n\n&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM&#39;,\n&#39;YTD CSM Absolute&#39; as &#39;YTD CSM Absolute&#39;,\n&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,\n&#39;YTD CSM CAGR&#39; as &#39;YTD CSM CAGR&#39; ,\n\n&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM&#39;,\n&#39;YTD PSM Absolute&#39; as &#39;YTD PSM Absolute&#39;,\n&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;,\n&#39;YTD PSM CAGR&#39; as &#39;YTD PSM CAGR&#39; , \n\n&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, \n&#39;YTD Red_Accounts Absolute&#39;,\n&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;,\n&#39;YTD Red_Accounts Growth&#39; ;\n",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      },
      "Industry_2": {
        "broadcastFacet": true,
        "datasets": [
          {
            "id": "0Fbf2000000TY0CCAW",
            "label": "APM_ACV_AUTO1",
            "name": "APM_ACV_AUTO1",
            "url": "/services/data/v44.0/wave/datasets/0Fbf2000000TY0CCAW"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": "{&quot;measures&quot;:[[&quot;count&quot;,&quot;*&quot;]],&quot;groups&quot;:[&quot;Industry&quot;]}",
          "version": -1
        },
        "receiveFacet": true,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {}
      },
      "Table_Level_2_Measures_3": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Level_2_Measures_3",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;Level_1&#39; in   {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nnACV = load &quot;APM_ACV_AUTO1&quot;;ACV = filter ACV by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nACV = filter ACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nACV = group ACV by (&#39;Quarter&#39;,&#39;Month&#39;, &#39;Fiscal_Year&#39;, &#39;Region&#39; , &#39;Country&#39;);\nACV = foreach ACV generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39; ,&#39;Month&#39; as &#39;Month&#39;,sum(&#39;ACV&#39;) as &#39;ACV&#39;,&quot;N/A&quot; as &#39;City&#39;, &#39;Region&#39; as &#39;Region&#39;,  {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD/FILTER AOV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nAOV = load &quot;APM_AOV&quot;;AOV = filter AOV by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nAOV = group AOV by (&#39;Month&#39;, &#39;Fiscal_Year&#39;, &#39;Region&#39; , &#39;Country&#39;);\n\nAOV = foreach AOV generate   &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;AOV&#39;) as &#39;AOV&#39;,&quot;N/A&quot; as &#39;City&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\nq2_CYAOV = filter AOV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYAOV = filter AOV by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYAOV = filter AOV by &#39;Month&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYAOV = filter AOV by &#39;Month&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnAttrition = load &quot;APM_Attrition&quot;;\nAttrition = filter Attrition by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nAttrition = filter Attrition by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in   {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nAttrition = foreach Attrition generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Attrition&#39;)*-1 as &#39;Attrition_Product&#39;, sum(&#39;TTM&#39;)*-1 as &#39;TTM_Product&#39;,sum(&#39;AOV_twelve_month_ago&#39;) as &#39;AOV_twelve_month_ago&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYATT = filter Attrition by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYATT = filter Attrition by &#39;Month&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq4_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnPipegen = load &quot;APM_Pipegen1&quot;;Pipegen = filter Pipegen by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;Pipegen = filter Pipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\n Pipegen = group Pipegen by (&#39;Fiscal_Year&#39;,&#39;Quarter&#39;,&#39;Region&#39;,&#39;Cloud&#39;,&#39;Month&#39;,&#39;Country&#39;);\nPipegen = foreach Pipegen generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Pipegen&#39;) as &#39;Pipegen&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnHC = load &quot;APM_HC&quot;;HC = filter HC by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nHC = filter HC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nHC = foreach HC generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;SE&#39;) as &#39;SE&#39;,sum(&#39;AE&#39;) as &#39;AE&#39;,sum(&#39;Co_Prime&#39;) as &#39;Co_Prime&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\nq2_CYHC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYHC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_HC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYHC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYHC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnSW = load &quot;APM_SWE_INFRA&quot;;SW = filter SW by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nSW = filter SW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nSW = foreach SW generate  &#39;Cloud&#39; as &#39;Cloud&#39;,&#39;City&#39; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;SWE&#39;) as &#39;SWE&#39;,sum(&#39;INFRA&#39;) as &#39;INFRA&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\nq2_CYSW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYSW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_SW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_SW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD CSM------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nCSM = load &quot;CSM_PSM_HC&quot;;\nCSM = filter CSM by &#39;Segment&#39; {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--CSM = filter CSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nCSM = foreach CSM generate  &#39;Cloud&#39; as &#39;Cloud&#39;,&quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;CSM_Headcount&#39;) as &#39;CSM_Headcount&#39;,sum(&#39;PSM_Headcount&#39;) as &#39;PSM_Headcount&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\nq2_CYCSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYCSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_CSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYCSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYCSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_CSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnDEALS = load &quot;APM_DEALS&quot;;DEALS = filter DEALS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;DEALS = filter DEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nDEALS = foreach DEALS generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;X10M_Deals&#39;) as &#39;X10M_Deals&#39;, sum(&#39;X10M&#39;) as &#39;X10M&#39;, sum(&#39;Runrate_Volume&#39;) as &#39;Runrate_Volume&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnLOGOS = load &quot;APM_LOGO&quot;;LOGOS = filter LOGOS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;LOGOS = filter LOGOS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nLOGOS = foreach LOGOS generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;New_Logos&#39;) as &#39;New_Logos&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYLOGOS = filter LOGOS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYLOGOS = filter LOGOS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYLOGOS = filter LOGOS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYLOGOS = filter LOGOS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnLOGOSLOST = load &quot;APM_LOST_LOGO&quot;;LOGOSLOST = filter LOGOSLOST by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;LOGOSLOST = filter LOGOSLOST by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nLOGOSLOST = foreach LOGOSLOST generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Lost_Logo_Count&#39;) as &#39;Lost_Logo_Count&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYLOGOSLOST = filter LOGOSLOST by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYLOGOSLOST = filter LOGOSLOST by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYLOGOSLOST = filter LOGOSLOST by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYLOGOSLOST = filter LOGOSLOST by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnREDACCOUNTS = load &quot;APM_REDACCOUNTS&quot;;REDACCOUNTS = filter REDACCOUNTS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;REDACCOUNTS = filter REDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nREDACCOUNTS = foreach REDACCOUNTS generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Red_Accounts&#39;) as &#39;Red_Accounts&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\nq2_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnEVENTS = load &quot;APM_MARKETING_EVENTS&quot;;EVENTS = filter EVENTS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;EVENTS = filter EVENTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nEVENTS = foreach EVENTS generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;World_Tours_Trailhead&#39;) as &#39;World_Tours_Trailhead&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnOTHER = load &quot;APM_MARKETING_OTHER&quot;;OTHER = filter OTHER by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;OTHER = filter OTHER by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nOTHER = foreach OTHER generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Marketing_Events_Other&#39;) as &#39;Marketing_Events_Other&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYOTHER = filter OTHER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYOTHER = filter OTHER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYOTHER = filter OTHER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYOTHER = filter OTHER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnEBC = load &quot;APM_MARKETING_EBC&quot;;EBC = filter EBC by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;EBC = filter EBC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nEBC = foreach EBC generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;EBC_s&#39;) as &#39;EBC_s&#39;,sum(&#39;DF_EBC_s&#39;) as &#39;DF_EBC_s&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYEBC = filter EBC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYEBC = filter EBC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYEBC = filter EBC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYEBC = filter EBC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Grouping Level_1 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult =  group q2_CYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYAOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYAOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYAOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYAOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,  q2_CYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q4_CYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYPipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYPipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYPipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYPipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYHC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYHC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q2_PY_2_HC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYHC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYHC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q3_PY_2_HC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYSW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYSW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q2_PY_2_SW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYSW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYSW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q3_PY_2_SW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full ,q2_CYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q2_PY_2_CSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PY_2_CSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYDEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYDEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYDEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYDEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYLOGOS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYLOGOS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYLOGOS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYLOGOS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYLOGOSLOST by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYLOGOSLOST by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYLOGOSLOST by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYLOGOSLOST by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q2_CYREDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYREDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYREDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYREDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYEVENTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYEVENTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYEVENTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYEVENTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;  full, q2_CYOTHER by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYOTHER by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYOTHER by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYOTHER by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;full, q2_CYEBC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYEBC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYEBC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYEBC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; , MasterHierarchy by &#39;Level_1&#39;;\nnresult = foreach result generate  &quot;☁ &quot; + coalesce(MasterHierarchy.&#39;Level_1&#39;, q2_CYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q2_PYATT.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q2_CYATT.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q3_PYATT.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q3_CYATT.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q2_CYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q2_CYDEALS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYDEALS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYDEALS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYDEALS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYLOGOS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYLOGOS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYLOGOS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYLOGOS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYLOGOSLOST.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYLOGOSLOST.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYLOGOSLOST.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYLOGOSLOST.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q2_CYREDACCOUNTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYREDACCOUNTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYREDACCOUNTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYREDACCOUNTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYEVENTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYEVENTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYEVENTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYEVENTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYOTHER.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYOTHER.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYOTHER.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYOTHER.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYEBC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYEBC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYEBC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYEBC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;) as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,  coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) as &#39;YTD ACV Absolute&#39;, ((coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;, ((coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YTD ACV Growth&#39;, coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) as &#39;YTD AOV Absolute&#39;, ((coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, ((coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YTD AOV Growth&#39;,last(MasterHierarchy.&#39;Level_1_Ranking&#39;) as &#39;Sort_Code&#39;, coalesce(sum(q2_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q2&#39;,coalesce(sum(q3_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q3&#39;,coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q2&#39; ,coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q2&#39;,coalesce(round(sum(q3_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q3&#39; ,coalesce(round(sum(q3_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;,(coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, (coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;YTD Attrition TTM Rate&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;, coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;YTD X10M_Deals Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YTD X10M_Deals Growth&#39;, coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) as &#39;YTD X10M Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YTD X10M Growth&#39;, coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;YTD Runrate_Volume Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YTD Runrate_Volume Growth&#39;,coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;, coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;YTD New_Logos Absolute&#39;, ((coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;, ((coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;YTD New_Logos Growth&#39;,coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;, coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;YTD Lost_Logo_Count Absolute&#39;, ((coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;, ((coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;YTD Lost_Logo_Count Growth&#39;,coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;YTD Red_Accounts Absolute&#39;, ((coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, ((coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YTD Red_Accounts Growth&#39;,coalesce(sum(q2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;, coalesce(sum(q3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;YTD World_Tours_Trailhead Absolute&#39;, ((coalesce(sum(q2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(q2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(q2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;, ((coalesce(sum(q3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(q3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(q3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YTD World_Tours_Trailhead Growth&#39;,coalesce(sum(q2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;, coalesce(sum(q3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;YTD Marketing_Events_Other Absolute&#39;, ((coalesce(sum(q2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(q2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(q2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;, ((coalesce(sum(q3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(q3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(q3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YTD Marketing_Events_Other Growth&#39;,coalesce(sum(q2_CYEBC.&#39;EBC_s&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;, coalesce(sum(q3_CYEBC.&#39;EBC_s&#39;), 0) as &#39;YTD EBC_s Absolute&#39;, ((coalesce(sum(q2_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(q2_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(q2_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;, ((coalesce(sum(q3_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(q3_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(q3_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YTD EBC_s Growth&#39;,(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0))  as &#39;YTD CSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD CSM CAGR&#39;,(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0))  as &#39;YTD PSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD PSM CAGR&#39;;\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------GROUPING Level_2-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_SubCloud = group q2_CYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_CYATT by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYATT by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYATT by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYATT by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,q4_CYATT by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,  q2_CYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_CYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,q2_CYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,q2_PY_2_HC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PY_2_HC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full ,q2_CYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,q2_PY_2_SW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PY_2_SW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;)full,q2_CYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,q2_PY_2_CSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PY_2_CSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_CYDEALS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYDEALS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYDEALS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYDEALS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;)full,  q2_CYLOGOS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYLOGOS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYLOGOS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYLOGOS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,q2_CYLOGOSLOST by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYLOGOSLOST by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYLOGOSLOST by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYLOGOSLOST by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_CYREDACCOUNTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYREDACCOUNTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYREDACCOUNTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYREDACCOUNTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_CYEVENTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYEVENTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYEVENTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYEVENTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full ,q2_CYOTHER by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYOTHER by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYOTHER by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYOTHER by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_CYEBC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYEBC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYEBC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYEBC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) left, MasterHierarchy by (&#39;Level_1&#39;, &#39;Level_2&#39;) ;\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------PROJECTION Level_2-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\nresult_SubCloud = foreach result_SubCloud generate  coalesce(q2_CYACV.&#39;Country&#39;, q2_PYACV.&#39;Country&#39;, q3_CYACV.&#39;Country&#39;, q3_PYACV.&#39;Country&#39;, q2_CYAOV.&#39;Country&#39;, q2_PYAOV.&#39;Country&#39;, q3_CYAOV.&#39;Country&#39;, q3_PYAOV.&#39;Country&#39;,q2_CYDEALS.&#39;Country&#39;, q2_PYDEALS.&#39;Country&#39;, q3_CYDEALS.&#39;Country&#39;, q3_PYDEALS.&#39;Country&#39;,q2_CYLOGOS.&#39;Country&#39;, q2_PYLOGOS.&#39;Country&#39;, q3_CYLOGOS.&#39;Country&#39;, q3_PYLOGOS.&#39;Country&#39;,q2_CYLOGOSLOST.&#39;Country&#39;, q2_PYLOGOSLOST.&#39;Country&#39;, q3_CYLOGOSLOST.&#39;Country&#39;, q3_PYLOGOSLOST.&#39;Country&#39;,q2_CYREDACCOUNTS.&#39;Country&#39;, q2_PYREDACCOUNTS.&#39;Country&#39;, q3_CYREDACCOUNTS.&#39;Country&#39;, q3_PYREDACCOUNTS.&#39;Country&#39;, q2_CYEVENTS.&#39;Country&#39;, q2_PYEVENTS.&#39;Country&#39;, q3_CYEVENTS.&#39;Country&#39;, q3_PYEVENTS.&#39;Country&#39; ,q2_CYOTHER.&#39;Country&#39;, q2_PYOTHER.&#39;Country&#39;, q3_CYOTHER.&#39;Country&#39;, q3_PYOTHER.&#39;Country&#39;, q2_CYEBC.&#39;Country&#39;, q2_PYEBC.&#39;Country&#39;, q3_CYEBC.&#39;Country&#39;, q3_PYEBC.&#39;Country&#39;) as &#39;Country&#39;, coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) as &#39;YTD ACV Absolute&#39;, ((coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;, ((coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YTD ACV Growth&#39;, coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) as &#39;YTD AOV Absolute&#39;, ((coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, ((coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YTD AOV Growth&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;, last(MasterHierarchy.&#39;Level_2_Sort_Code&#39;) as &#39;Sort_Code&#39;, coalesce(sum(q2_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;Attrition_CY_Q2&#39;, coalesce(sum(q3_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;Attrition_CY_Q3&#39;, coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q2&#39;, coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q2&#39;, coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q3&#39;, coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;, (coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, (coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;YTD Attrition TTM Rate&#39;, coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;YTD X10M_Deals Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YTD X10M_Deals Growth&#39;, coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) as &#39;YTD X10M Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YTD X10M Growth&#39;, coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;YTD Runrate_Volume Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YTD Runrate_Volume Growth&#39;,coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;, coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;YTD New_Logos Absolute&#39;, ((coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;, ((coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;YTD New_Logos Growth&#39;,coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;, coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;YTD Lost_Logo_Count Absolute&#39;, ((coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;, ((coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;YTD Lost_Logo_Count Growth&#39;,coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;YTD Red_Accounts Absolute&#39;, ((coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, ((coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YTD Red_Accounts Growth&#39;,coalesce(sum(q2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;, coalesce(sum(q3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;YTD World_Tours_Trailhead Absolute&#39;, ((coalesce(sum(q2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(q2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(q2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;, ((coalesce(sum(q3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(q3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(q3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YTD World_Tours_Trailhead Growth&#39;,coalesce(sum(q2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;, coalesce(sum(q3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;YTD Marketing_Events_Other Absolute&#39;, ((coalesce(sum(q2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(q2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(q2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;, ((coalesce(sum(q3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(q3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(q3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YTD Marketing_Events_Other Growth&#39;,coalesce(sum(q2_CYEBC.&#39;EBC_s&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;, coalesce(sum(q3_CYEBC.&#39;EBC_s&#39;), 0) as &#39;YTD EBC_s Absolute&#39;, ((coalesce(sum(q2_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(q2_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(q2_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;, ((coalesce(sum(q3_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(q3_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(q3_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YTD EBC_s Growth&#39;,(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0))  as &#39;YTD CSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD CSM CAGR&#39;,(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0))  as &#39;YTD PSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD PSM CAGR&#39;,coalesce(MasterHierarchy.&#39;Level_1&#39; ,q2_CYACV.&#39;Region&#39;, q2_PYACV.&#39;Region&#39;, q3_CYACV.&#39;Region&#39;, q3_PYACV.&#39;Region&#39;, q2_CYDEALS.&#39;Region&#39;, q2_PYDEALS.&#39;Region&#39;, q3_CYDEALS.&#39;Region&#39;, q3_PYDEALS.&#39;Region&#39;,q2_CYLOGOS.&#39;Region&#39;, q2_PYLOGOS.&#39;Region&#39;, q3_CYLOGOS.&#39;Region&#39;, q3_PYLOGOS.&#39;Region&#39;,q2_CYLOGOSLOST.&#39;Region&#39;, q2_PYLOGOSLOST.&#39;Region&#39;, q3_CYLOGOSLOST.&#39;Region&#39;, q3_PYLOGOSLOST.&#39;Region&#39;,q2_CYREDACCOUNTS.&#39;Region&#39;, q2_PYREDACCOUNTS.&#39;Region&#39;, q3_CYREDACCOUNTS.&#39;Region&#39;, q3_PYREDACCOUNTS.&#39;Region&#39;,q2_CYEVENTS.&#39;Region&#39;, q2_PYEVENTS.&#39;Region&#39;, q3_CYEVENTS.&#39;Region&#39;, q3_PYEVENTS.&#39;Region&#39;,q2_CYOTHER.&#39;Region&#39;, q2_PYOTHER.&#39;Region&#39;, q3_CYOTHER.&#39;Region&#39;, q3_PYOTHER.&#39;Region&#39;,q2_CYEBC.&#39;Region&#39;, q2_PYEBC.&#39;Region&#39;, q3_CYEBC.&#39;Region&#39;, q3_PYEBC.&#39;Region&#39;) as &#39;Region_Level2&#39;;\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Country Bin logic as data couldn&#39;t be provided in a clean format, this code uses the spec bins and put&#39;s all other countries in the  RO Region bin -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n;\r\nresult2_SubCloud = group result_SubCloud by (&#39;Region_Level2&#39;, &#39;Country&#39;);\r\nresult2_SubCloud = foreach result2_SubCloud generate &#39;Region_Level2&#39; as &#39;Region_Level2&#39;, case when (&#39;Region_Level2&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Canada&quot; ))then &quot;Canada&quot; when (&#39;Region_Level2&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;United States&quot; ))then &quot;United States&quot; when (&#39;Region_Level2&#39; == &quot;AMER&quot;)then &quot;RO AMER&quot; when  (&#39;Region_Level2&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;United Kingdom&quot; ))then &quot;United Kingdom&quot;  when  (&#39;Region_Level2&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;France&quot; ))then &quot;France&quot; when  (&#39;Region_Level2&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Germany&quot; ))then &quot;Germany&quot; when  (&#39;Region_Level2&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Netherlands&quot; ))then &quot;Netherlands&quot; when (&#39;Region_Level2&#39; == &quot;EMEA&quot; ) then &quot;RO EMEA&quot; when  (&#39;Region_Level2&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Australia&quot; ))then &quot;ANZ&quot; when  (&#39;Region_Level2&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;ANZ&quot; ))then &quot;ANZ&quot; when  (&#39;Region_Level2&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;India&quot; ))then &quot;India&quot;  when  (&#39;Region_Level2&#39; == &quot;APAC&quot; )then &quot;RO APAC&quot;  when  (&#39;Region_Level2&#39; == &quot;APAC&quot; )then &quot;RO APAC&quot;  when  (&#39;Region_Level2&#39; == &quot;JP&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Japan&quot; ))then &quot;Japan&quot; when  (&#39;Region_Level2&#39; == &quot;JP&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;South Korea&quot; ))then &quot;South Korea&quot; when  (&#39;Region_Level2&#39; == &quot;JP&quot; )then &quot;RO JP&quot;  when  (&#39;Region_Level2&#39; == &quot;LACA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Brazil&quot; ))then &quot;Brazil&quot; when (&#39;Region_Level2&#39; == &quot;LACA&quot; )then &quot;RO LACA&quot; else &quot;ERROR&quot; end as &#39;Country&#39;, coalesce(sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;,coalesce(sum(result2_SubCloud.&#39;YTD ACV Absolute&#39;), 0) as &#39;YTD ACV Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;,coalesce(sum(result2_SubCloud.&#39;YTD ACV Growth&#39;), 0) as &#39;YTD ACV Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD AOV Absolute&#39;), 0)  as &#39;YTD AOV Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD AOV Growth&#39;), 0) as &#39;YTD AOV Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Pipegen Absolute&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Pipegen Growth&#39;), 0) as &#39;YTD Pipegen Growth&#39;,  coalesce(sum(result2_SubCloud.&#39;Attrition_CY_Q2&#39;), 0)  as &#39;Attrition_CY_Q2&#39;, coalesce(sum(result2_SubCloud.&#39;Attrition_CY_Q3&#39;), 0) as &#39;Attrition_CY_Q3&#39;, coalesce(sum(result2_SubCloud.&#39;TTM_Product_CY_Q2&#39;), 0) as &#39;TTM_Product_CY_Q2&#39;, coalesce(sum(result2_SubCloud.&#39;AOV_twelve_month_ago_CY_Q2&#39;), 0)as &#39;AOV_twelve_month_ago_CY_Q2&#39;, coalesce(sum(result2_SubCloud.&#39;TTM_Product_CY_Q3&#39;), 0) as &#39;TTM_Product_CY_Q3&#39;,coalesce(sum(result2_SubCloud.&#39;AOV_twelve_month_ago_CY_Q3&#39;), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Attrition TTM Rate&#39;), 0) as &#39;YTD Attrition TTM Rate&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M_Deals Absolute&#39;), 0)  as &#39;YTD X10M_Deals Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M_Deals Growth&#39;), 0) as &#39;YTD X10M_Deals Growth&#39; ,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M Absolute&#39;), 0)  as &#39;YTD X10M Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M Growth&#39;), 0) as &#39;YTD X10M Growth&#39; ,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Runrate_Volume Absolute&#39;), 0)  as &#39;YTD Runrate_Volume Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Runrate_Volume Growth&#39;), 0) as &#39;YTD Runrate_Volume Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD New_Logos Absolute&#39;), 0)  as &#39;YTD New_Logos Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD New_Logos Growth&#39;), 0) as &#39;YTD New_Logos Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Lost_Logo_Count Absolute&#39;), 0)  as &#39;YTD Lost_Logo_Count Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Lost_Logo_Count Growth&#39;), 0) as &#39;YTD Lost_Logo_Count Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Red_Accounts Absolute&#39;), 0)  as &#39;YTD Red_Accounts Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Red_Accounts Growth&#39;), 0) as &#39;YTD Red_Accounts Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD World_Tours_Trailhead Absolute&#39;), 0)  as &#39;YTD World_Tours_Trailhead Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;,coalesce(sum(result2_SubCloud.&#39;YTD World_Tours_Trailhead Growth&#39;), 0)  as &#39;YTD World_Tours_Trailhead Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Marketing_Events_Other Absolute&#39;), 0)  as &#39;YTD Marketing_Events_Other Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Marketing_Events_Other Growth&#39;), 0) as &#39;YTD Marketing_Events_Other Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD EBC_s Absolute&#39;), 0)  as &#39;YTD EBC_s Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD EBC_s Growth&#39;), 0) as &#39;YTD EBC_s Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD CSM Absolute&#39;), 0) as &#39;YTD CSM Absolute&#39;,  coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,  coalesce(sum(result2_SubCloud.&#39;YTD CSM CAGR&#39;), 0) as &#39;YTD CSM CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD PSM Absolute&#39;), 0) as &#39;YTD PSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;YTD PSM CAGR&#39;), 0) as &#39;YTD PSM CAGR&#39;;\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------GROUPING FOR Mapped Countries ------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\nresult2_SubCloud = group result2_SubCloud by (&#39;Region_Level2&#39;, &#39;Country&#39;)left, MasterHierarchy by (&#39;Level_1&#39;, &#39;Level_2&#39;);\r\nresult2_SubCloud = foreach result2_SubCloud generate result2_SubCloud.&#39;Region_Level2&#39; as &#39;Region_Level2&#39;, &quot;    ↳  &quot; + (result2_SubCloud.&#39;Country&#39; ) as &#39;Region&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;,coalesce(sum(result2_SubCloud.&#39;YTD ACV Absolute&#39;), 0) as &#39;YTD ACV Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;,coalesce(sum(result2_SubCloud.&#39;YTD ACV Growth&#39;), 0) as &#39;YTD ACV Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD AOV Absolute&#39;), 0)  as &#39;YTD AOV Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD AOV Growth&#39;), 0) as &#39;YTD AOV Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Pipegen Absolute&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Pipegen Growth&#39;), 0) as &#39;YTD Pipegen Growth&#39;,  coalesce(sum(result2_SubCloud.&#39;Attrition_CY_Q2&#39;), 0)  as &#39;Attrition_CY_Q2&#39;, coalesce(sum(result2_SubCloud.&#39;Attrition_CY_Q3&#39;), 0) as &#39;Attrition_CY_Q3&#39;, coalesce(sum(result2_SubCloud.&#39;TTM_Product_CY_Q2&#39;), 0) as &#39;TTM_Product_CY_Q2&#39;, coalesce(sum(result2_SubCloud.&#39;AOV_twelve_month_ago_CY_Q2&#39;), 0)as &#39;AOV_twelve_month_ago_CY_Q2&#39;, coalesce(sum(result2_SubCloud.&#39;TTM_Product_CY_Q3&#39;), 0) as &#39;TTM_Product_CY_Q3&#39;,coalesce(sum(result2_SubCloud.&#39;AOV_twelve_month_ago_CY_Q3&#39;), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Attrition TTM Rate&#39;), 0) as &#39;YTD Attrition TTM Rate&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M_Deals Absolute&#39;), 0)  as &#39;YTD X10M_Deals Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M_Deals Growth&#39;), 0) as &#39;YTD X10M_Deals Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M Absolute&#39;), 0)  as &#39;YTD X10M Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M Growth&#39;), 0) as &#39;YTD X10M Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M Absolute&#39;), 0)  as &#39;YTD Runrate_Volume Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Runrate_Volume Growth&#39;), 0) as &#39;YTD Runrate_Volume Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD New_Logos Absolute&#39;), 0)  as &#39;YTD New_Logos Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD New_Logos Growth&#39;), 0) as &#39;YTD New_Logos Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Lost_Logo_Count Absolute&#39;), 0)  as &#39;YTD Lost_Logo_Count Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Lost_Logo_Count Growth&#39;), 0) as &#39;YTD Lost_Logo_Count Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Red_Accounts Absolute&#39;), 0)  as &#39;YTD Red_Accounts Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Red_Accounts Growth&#39;), 0) as &#39;YTD Red_Accounts Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD CSM Absolute&#39;), 0) as &#39;YTD CSM Absolute&#39;,  coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,  coalesce(sum(result2_SubCloud.&#39;YTD CSM CAGR&#39;), 0) as &#39;YTD CSM CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD PSM Absolute&#39;), 0) as &#39;YTD PSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;YTD PSM CAGR&#39;), 0) as &#39;YTD PSM CAGR&#39;,last(MasterHierarchy.&#39;Level_2_Sort_Code&#39;) as &#39;Sort_Code&#39;;\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------GROUPING Level_3-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_Cloud_Level3 = group q2_CYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_CYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,  q2_CYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_CYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,q2_PY_2_HC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,  q3_PY_2_HC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_CYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,q2_PY_2_SW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,  q3_PY_2_SW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,  q2_CYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,q2_PY_2_CSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,  q3_PY_2_CSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;),MasterHierarchy by (&#39;Level_1&#39;, &#39;Level_2&#39;,&#39;Level_3&#39;)  ;\nnresult_Cloud_Level3 = foreach result_Cloud_Level3 generate &quot;          &quot; + coalesce(MasterHierarchy.&#39;Level_3&#39;, q2_CYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q2_PYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q3_CYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q3_PYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q2_CYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q2_PYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q3_CYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q3_PYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,  coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) as &#39;YTD ACV Absolute&#39;, ((coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;, ((coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YTD ACV Growth&#39;, coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} YTD AOV Absolute&#39;, ((coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, ((coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YTD AOV Growth&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;,last(MasterHierarchy.&#39;Level_3_Sort_Code&#39;)  as &#39;Sort_Code&#39;,&quot;          &quot; + coalesce(last(MasterHierarchy.&#39;Level_2&#39;), last(q2_CYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q2_PYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q3_CYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q3_PYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q2_CYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q2_PYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q3_CYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q3_PYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;)) as &#39;ParentCloud&#39;;\nresult_Cloud_Level3 = filter result_Cloud_Level3 by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; != &#39;ParentCloud&#39;;\nnFinal = union result, result2_SubCloud;\nnFinal = filter Final by &#39;Sort_Code&#39; != &quot;&quot;;\nFinal = order Final by (&#39;Sort_Code&#39; asc,  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; asc);\nFinal = foreach Final generate &#39;Region&#39;+&quot;               &quot; as &#39;Region&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;, &#39;YTD X10M_Deals Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;,&#39;YTD X10M_Deals Growth&#39; , &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;, &#39;YTD X10M Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;,&#39;YTD X10M Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;, &#39;YTD Runrate_Volume Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;,&#39;YTD Runrate_Volume Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;, &#39;YTD New_Logos Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;,&#39;YTD New_Logos Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;, &#39;YTD Lost_Logo_Count Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;,&#39;YTD Lost_Logo_Count Growth&#39; ;;\n",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      },
      "Table_Level_2_Measures_2": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Level_2_Measures_2",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;Level_1&#39; in   {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nnACV = load &quot;APM_ACV_AUTO1&quot;;ACV = filter ACV by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nACV = filter ACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nACV = group ACV by (&#39;Quarter&#39;,&#39;Month&#39;, &#39;Fiscal_Year&#39;, &#39;Region&#39; , &#39;Country&#39;);\nACV = foreach ACV generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39; ,&#39;Month&#39; as &#39;Month&#39;,sum(&#39;ACV&#39;) as &#39;ACV&#39;,&quot;N/A&quot; as &#39;City&#39;, &#39;Region&#39; as &#39;Region&#39;,  {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnAOV = load &quot;APM_AOV&quot;;AOV = filter AOV by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nAOV = group AOV by (&#39;Month&#39;, &#39;Fiscal_Year&#39;, &#39;Region&#39; , &#39;Country&#39;);\n\nAOV = foreach AOV generate   &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;AOV&#39;) as &#39;AOV&#39;,&quot;N/A&quot; as &#39;City&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\nq2_CYAOV = filter AOV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYAOV = filter AOV by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYAOV = filter AOV by &#39;Month&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYAOV = filter AOV by &#39;Month&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnAttrition = load &quot;APM_Attrition&quot;;\nAttrition = filter Attrition by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nAttrition = filter Attrition by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in   {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nAttrition = foreach Attrition generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Attrition&#39;)*-1 as &#39;Attrition_Product&#39;, sum(&#39;TTM&#39;)*-1 as &#39;TTM_Product&#39;,sum(&#39;AOV_twelve_month_ago&#39;) as &#39;AOV_twelve_month_ago&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYATT = filter Attrition by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYATT = filter Attrition by &#39;Month&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq4_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD /FILTER PIPEGEN-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nPipegen = load &quot;APM_Pipegen1&quot;;Pipegen = filter Pipegen by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;Pipegen = filter Pipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\n Pipegen = group Pipegen by (&#39;Fiscal_Year&#39;,&#39;Quarter&#39;,&#39;Region&#39;,&#39;Cloud&#39;,&#39;Month&#39;,&#39;Country&#39;);\nPipegen = foreach Pipegen generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Pipegen&#39;) as &#39;Pipegen&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnHC = load &quot;APM_HC&quot;;HC = filter HC by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nHC = filter HC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nHC = foreach HC generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;SE&#39;) as &#39;SE&#39;,sum(&#39;AE&#39;) as &#39;AE&#39;,sum(&#39;Co_Prime&#39;) as &#39;Co_Prime&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\nq2_CYHC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYHC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_HC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYHC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYHC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnSW = load &quot;APM_SWE_INFRA&quot;;SW = filter SW by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nSW = filter SW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nSW = foreach SW generate  &#39;Cloud&#39; as &#39;Cloud&#39;,&#39;City&#39; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;SWE&#39;) as &#39;SWE&#39;,sum(&#39;INFRA&#39;) as &#39;INFRA&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\nq2_CYSW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYSW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_SW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_SW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnCSM = load &quot;CSM_PSM_HC&quot;;\nCSM = filter CSM by &#39;Segment&#39; {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--CSM = filter CSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nCSM = foreach CSM generate  &#39;Cloud&#39; as &#39;Cloud&#39;,&quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;CSM_Headcount&#39;) as &#39;CSM_Headcount&#39;,sum(&#39;PSM_Headcount&#39;) as &#39;PSM_Headcount&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\nq2_CYCSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYCSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_CSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYCSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYCSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_CSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnDEALS = load &quot;APM_DEALS&quot;;DEALS = filter DEALS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;DEALS = filter DEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nDEALS = foreach DEALS generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;X10M_Deals&#39;) as &#39;X10M_Deals&#39;, sum(&#39;X10M&#39;) as &#39;X10M&#39;, sum(&#39;Runrate_Volume&#39;) as &#39;Runrate_Volume&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnLOGOS = load &quot;APM_LOGO&quot;;LOGOS = filter LOGOS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;LOGOS = filter LOGOS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nLOGOS = foreach LOGOS generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;New_Logos&#39;) as &#39;New_Logos&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYLOGOS = filter LOGOS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYLOGOS = filter LOGOS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYLOGOS = filter LOGOS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYLOGOS = filter LOGOS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnLOGOSLOST = load &quot;APM_LOST_LOGO&quot;;LOGOSLOST = filter LOGOSLOST by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;LOGOSLOST = filter LOGOSLOST by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nLOGOSLOST = foreach LOGOSLOST generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Lost_Logo_Count&#39;) as &#39;Lost_Logo_Count&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYLOGOSLOST = filter LOGOSLOST by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYLOGOSLOST = filter LOGOSLOST by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYLOGOSLOST = filter LOGOSLOST by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYLOGOSLOST = filter LOGOSLOST by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnREDACCOUNTS = load &quot;APM_REDACCOUNTS&quot;;REDACCOUNTS = filter REDACCOUNTS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;REDACCOUNTS = filter REDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nREDACCOUNTS = foreach REDACCOUNTS generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Red_Accounts&#39;) as &#39;Red_Accounts&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\nq2_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnEVENTS = load &quot;APM_MARKETING_EVENTS&quot;;EVENTS = filter EVENTS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;EVENTS = filter EVENTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nEVENTS = foreach EVENTS generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;World_Tours_Trailhead&#39;) as &#39;World_Tours_Trailhead&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnOTHER = load &quot;APM_MARKETING_OTHER&quot;;OTHER = filter OTHER by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;OTHER = filter OTHER by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nOTHER = foreach OTHER generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Marketing_Events_Other&#39;) as &#39;Marketing_Events_Other&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYOTHER = filter OTHER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYOTHER = filter OTHER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYOTHER = filter OTHER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYOTHER = filter OTHER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnEBC = load &quot;APM_MARKETING_EBC&quot;;EBC = filter EBC by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;EBC = filter EBC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nEBC = foreach EBC generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;EBC_s&#39;) as &#39;EBC_s&#39;,sum(&#39;DF_EBC_s&#39;) as &#39;DF_EBC_s&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYEBC = filter EBC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYEBC = filter EBC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYEBC = filter EBC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYEBC = filter EBC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Grouping Level_1 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult =  group q2_CYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYAOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYAOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYAOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYAOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,  q2_CYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYPipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYPipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYPipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYPipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYHC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYHC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q2_PY_2_HC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYHC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYHC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q3_PY_2_HC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYSW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYSW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q2_PY_2_SW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYSW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYSW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q3_PY_2_SW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full ,q2_CYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q2_PY_2_CSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PY_2_CSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, MasterHierarchy by &#39;Level_1&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------PROJECTION LEVEL1------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nresult = foreach result generate  &quot;☁ &quot; + coalesce(MasterHierarchy.&#39;Level_1&#39;, q2_CYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYHC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYHC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q2_PY_2_HC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYHC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYHC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q3_PY_2_HC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;) as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,  coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;, coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE Absolute&#39;, coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) as &#39;YTD SE Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) - coalesce(sum(q2_PYHC.&#39;SE&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;SE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} SE Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) - coalesce(sum(q3_PYHC.&#39;SE&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;SE&#39;), 0)) * 100 as &#39;YTD SE Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YTD SE CAGR&#39;, coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE Absolute&#39;, coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) as &#39;YTD AE Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) - coalesce(sum(q2_PYHC.&#39;AE&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;AE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AE Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) - coalesce(sum(q3_PYHC.&#39;AE&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;AE&#39;), 0)) * 100 as &#39;YTD AE Growth&#39;, (power(coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;YTD AE CAGR&#39;,coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime Absolute&#39;, coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) as &#39;YTD Co_Prime Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) - coalesce(sum(q2_PYHC.&#39;Co_Prime&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;Co_Prime&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Co_Prime Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) - coalesce(sum(q3_PYHC.&#39;Co_Prime&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;Co_Prime&#39;), 0)) * 100 as &#39;YTD Co_Prime Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YTD Co_Prime CAGR&#39;, coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE Absolute&#39;, coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) as &#39;YTD SWE Absolute&#39;, ((coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(q2_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(q2_PYSW.&#39;SWE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39;, ((coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(q3_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(q3_PYSW.&#39;SWE&#39;), 0)) * 100 as &#39;YTD SWE Growth&#39;,(power(coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) / coalesce(sum(q2_PY_2_SW.&#39;SWE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE CAGR&#39;,(power(coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) / coalesce(sum(q3_PY_2_SW.&#39;SWE&#39;), 0),(1/2))-1)*100 as &#39;YTD SWE CAGR&#39;, coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA Absolute&#39;, coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) as &#39;YTD INFRA Absolute&#39;, ((coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) - coalesce(sum(q2_PYSW.&#39;INFRA&#39;), 0)) / coalesce(sum(q2_PYSW.&#39;INFRA&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;, ((coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) - coalesce(sum(q3_PYSW.&#39;INFRA&#39;), 0)) / coalesce(sum(q3_PYSW.&#39;INFRA&#39;), 0)) * 100 as &#39;YTD INFRA Growth&#39;,(power(coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) / coalesce(sum(q2_PY_2_SW.&#39;INFRA&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA CAGR&#39;,(power(coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) / coalesce(sum(q3_PY_2_SW.&#39;INFRA&#39;), 0),(1/2))-1)*100 as &#39;YTD INFRA CAGR&#39;,(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0))  as &#39;YTD CSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD CSM CAGR&#39;,(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0))  as &#39;YTD PSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD PSM CAGR&#39;,last(MasterHierarchy.&#39;Level_1_Ranking&#39;) as &#39;Sort_Code&#39;;\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------GROUPING Level_2-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_SubCloud = group q2_CYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_CYATT by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYATT by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYATT by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYATT by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,  q2_CYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_CYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,q2_CYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,q2_PY_2_HC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PY_2_HC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full ,q2_CYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,q2_PY_2_SW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PY_2_SW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;)full,q2_CYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,q2_PY_2_CSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PY_2_CSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), MasterHierarchy by (&#39;Level_1&#39;, &#39;Level_2&#39;);\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------PROJECTION Level_2-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_SubCloud = foreach result_SubCloud generate coalesce(MasterHierarchy.&#39;Level_2&#39;, q2_CYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, q2_PYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, q3_CYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, q3_PYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, q2_CYHC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, q2_PYHC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,q2_PY_2_HC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, q3_CYHC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, q3_PYHC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,q3_PY_2_HC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,  coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;, coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE Absolute&#39;, coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) as &#39;YTD SE Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) - coalesce(sum(q2_PYHC.&#39;SE&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;SE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} SE Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) - coalesce(sum(q3_PYHC.&#39;SE&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;SE&#39;), 0)) * 100 as &#39;YTD SE Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YTD SE CAGR&#39;, coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE Absolute&#39;, coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) as &#39;YTD AE Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) - coalesce(sum(q2_PYHC.&#39;AE&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;AE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AE Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) - coalesce(sum(q3_PYHC.&#39;AE&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;AE&#39;), 0)) * 100 as &#39;YTD AE Growth&#39;, (power(coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;YTD AE CAGR&#39;,coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime Absolute&#39;, coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) as &#39;YTD Co_Prime Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) - coalesce(sum(q2_PYHC.&#39;Co_Prime&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;Co_Prime&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Co_Prime Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) - coalesce(sum(q3_PYHC.&#39;Co_Prime&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;Co_Prime&#39;), 0)) * 100 as &#39;YTD Co_Prime Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YTD Co_Prime CAGR&#39;, coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE Absolute&#39;, coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) as &#39;YTD SWE Absolute&#39;, ((coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(q2_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(q2_PYSW.&#39;SWE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39;, ((coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(q3_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(q3_PYSW.&#39;SWE&#39;), 0)) * 100 as &#39;YTD SWE Growth&#39;,(power(coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) / coalesce(sum(q2_PY_2_SW.&#39;SWE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE CAGR&#39;,(power(coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) / coalesce(sum(q3_PY_2_SW.&#39;SWE&#39;), 0),(1/2))-1)*100 as &#39;YTD SWE CAGR&#39;, coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA Absolute&#39;, coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) as &#39;YTD INFRA Absolute&#39;, ((coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) - coalesce(sum(q2_PYSW.&#39;INFRA&#39;), 0)) / coalesce(sum(q2_PYSW.&#39;INFRA&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;, ((coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) - coalesce(sum(q3_PYSW.&#39;INFRA&#39;), 0)) / coalesce(sum(q3_PYSW.&#39;INFRA&#39;), 0)) * 100 as &#39;YTD INFRA Growth&#39;,(power(coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) / coalesce(sum(q2_PY_2_SW.&#39;INFRA&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA CAGR&#39;,(power(coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) / coalesce(sum(q3_PY_2_SW.&#39;INFRA&#39;), 0),(1/2))-1)*100 as &#39;YTD INFRA CAGR&#39;,(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0))  as &#39;YTD CSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD CSM CAGR&#39;,(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0))  as &#39;YTD PSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD PSM CAGR&#39;,last(MasterHierarchy.&#39;Level_2_Sort_Code&#39;)  as &#39;Sort_Code&#39;,coalesce(MasterHierarchy.&#39;Level_1&#39;, q2_CYACV.&#39;Region&#39;, q2_PYACV.&#39;Region&#39;, q3_CYACV.&#39;Region&#39;, q3_PYACV.&#39;Region&#39;, q2_CYAOV.&#39;Region&#39;, q2_PYAOV.&#39;Region&#39;, q3_CYAOV.&#39;Region&#39;, q3_PYAOV.&#39;Region&#39;,q2_CYPipegen.&#39;Region&#39;, q2_PYPipegen.&#39;Region&#39;, q3_CYPipegen.&#39;Region&#39;, q3_PYPipegen.&#39;Region&#39;, q2_CYHC.&#39;Region&#39;, q2_PYHC.&#39;Region&#39;, q2_PY_2_HC.&#39;Region&#39;, q3_CYHC.&#39;Region&#39;, q3_PYHC.&#39;Region&#39;, q3_PY_2_HC.&#39;Region&#39;) as &#39;Region_Level2&#39;;\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Adding additional Mapping for Countries--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult2_SubCloud = group result_SubCloud by (&#39;Region_Level2&#39;, &#39;Country&#39;);\nresult2_SubCloud = foreach result2_SubCloud generate &#39;Region_Level2&#39; as &#39;Region_Level2&#39;, case when ((&#39;Region_Level2&#39; == &quot;AMER&quot;) &amp;&amp; (&#39;Country&#39; == &quot;Canada&quot;)) then &quot;Canada&quot; when ((&#39;Region_Level2&#39; == &quot;AMER&quot;) &amp;&amp; (&#39;Country&#39; == &quot;United States&quot;)) then &quot;United States&quot; when (&#39;Region_Level2&#39; == &quot;AMER&quot;) then &quot;RO AMER&quot; when ((&#39;Region_Level2&#39; == &quot;EMEA&quot;) &amp;&amp; (&#39;Country&#39; == &quot;United Kingdom&quot;)) then &quot;United Kingdom&quot; when ((&#39;Region_Level2&#39; == &quot;EMEA&quot;) &amp;&amp; (&#39;Country&#39; == &quot;France&quot;)) then &quot;France&quot; when ((&#39;Region_Level2&#39; == &quot;EMEA&quot;) &amp;&amp; (&#39;Country&#39; == &quot;Germany&quot;)) then &quot;Germany&quot; when ((&#39;Region_Level2&#39; == &quot;EMEA&quot;) &amp;&amp; (&#39;Country&#39; == &quot;Netherlands&quot;)) then &quot;Netherlands&quot; when (&#39;Region_Level2&#39; == &quot;EMEA&quot;) then &quot;RO EMEA&quot; when ((&#39;Region_Level2&#39; == &quot;APAC&quot;) &amp;&amp; (&#39;Country&#39; == &quot;Australia&quot;)) then &quot;ANZ&quot; when ((&#39;Region_Level2&#39; == &quot;APAC&quot;) &amp;&amp; (&#39;Country&#39; == &quot;ANZ&quot;)) then &quot;ANZ&quot;  when  (&#39;Region_Level2&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;India&quot; ))then &quot;India&quot;  when (&#39;Region_Level2&#39; == &quot;APAC&quot;) then &quot;RO APAC&quot; when (&#39;Region_Level2&#39; == &quot;APAC&quot;) then &quot;RO APAC&quot; when ((&#39;Region_Level2&#39; == &quot;JP&quot;) &amp;&amp; (&#39;Country&#39; == &quot;Japan&quot;)) then &quot;Japan&quot; when (&#39;Region_Level2&#39; == &quot;JP&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;South Korea&quot; ))then &quot;South Korea&quot; when (&#39;Region_Level2&#39; == &quot;JP&quot;) then &quot;RO JP&quot; when ((&#39;Region_Level2&#39; == &quot;LACA&quot;) &amp;&amp; (&#39;Country&#39; == &quot;Brazil&quot;)) then &quot;Brazil&quot; when (&#39;Region_Level2&#39; == &quot;LACA&quot;) then &quot;RO LACA&quot; else &quot;ERROR&quot; end as &#39;Country&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Pipegen Absolute&#39;), 0) as &#39;YTD Pipegen Absolute&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Pipegen Growth&#39;), 0) as &#39;YTD Pipegen Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE Absolute&#39;,  coalesce(sum(result2_SubCloud.&#39;YTD SE Absolute&#39;), 0) as &#39;YTD SE Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;,  coalesce(sum(result2_SubCloud.&#39;YTD SE CAGR&#39;), 0) as &#39;YTD SE CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE Absolute&#39;,coalesce(sum(result2_SubCloud.&#39;YTD AE Absolute&#39;), 0) as &#39;YTD AE Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AE Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AE Growth&#39;,coalesce(sum(result2_SubCloud.&#39;YTD AE Growth&#39;), 0) as &#39;YTD AE Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;YTD AE CAGR&#39;), 0) as &#39;YTD AE CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime Absolute&#39;,coalesce(sum(result2_SubCloud.&#39;YTD Co_Prime Absolute&#39;), 0) as &#39;YTD Co_Prime Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Co_Prime Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Co_Prime Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Co_Prime Growth&#39;), 0) as &#39;YTD Co_Prime Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Co_Prime CAGR&#39;), 0) as &#39;YTD Co_Prime CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE Absolute&#39;,  coalesce(sum(result2_SubCloud.&#39;YTD SWE Absolute&#39;), 0) as &#39;YTD SWE Absolute&#39;,  coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39;), 0) as &#39; {{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD SWE Growth&#39;), 0) as &#39;YTD SWE Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;YTD SWE CAGR&#39;), 0) as &#39;YTD SWE CAGR&#39;,  coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD INFRA Absolute&#39;), 0) as &#39;YTD INFRA Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;,coalesce(sum(result2_SubCloud.&#39;YTD INFRA Growth&#39;), 0) as &#39;YTD INFRA Growth&#39;,  coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA CAGR&#39;,coalesce(sum(result2_SubCloud.&#39;YTD INFRA CAGR&#39;), 0) as &#39;YTD INFRA CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD CSM Absolute&#39;), 0) as &#39;YTD CSM Absolute&#39;,  coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,  coalesce(sum(result2_SubCloud.&#39;YTD CSM CAGR&#39;), 0) as &#39;YTD CSM CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD PSM Absolute&#39;), 0) as &#39;YTD PSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;YTD PSM CAGR&#39;), 0) as &#39;YTD PSM CAGR&#39;;\nresult2_SubCloud = group result2_SubCloud by (&#39;Region_Level2&#39;, &#39;Country&#39;) left, MasterHierarchy by (&#39;Level_1&#39;, &#39;Level_2&#39;);\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult2_SubCloud = foreach result2_SubCloud generate result2_SubCloud.&#39;Region_Level2&#39; as &#39;Region_Level2&#39;, &quot;    ↳  &quot; + result2_SubCloud.&#39;Country&#39; as &#39;Region&#39; ,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Pipegen Absolute&#39;), 0) as &#39;YTD Pipegen Absolute&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Pipegen Growth&#39;), 0) as &#39;YTD Pipegen Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE Absolute&#39;,  coalesce(sum(result2_SubCloud.&#39;YTD SE Absolute&#39;), 0) as &#39;YTD SE Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;,  coalesce(sum(result2_SubCloud.&#39;YTD SE CAGR&#39;), 0) as &#39;YTD SE CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE Absolute&#39;,coalesce(sum(result2_SubCloud.&#39;YTD AE Absolute&#39;), 0) as &#39;YTD AE Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AE Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AE Growth&#39;,coalesce(sum(result2_SubCloud.&#39;YTD AE Growth&#39;), 0) as &#39;YTD AE Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;YTD AE CAGR&#39;), 0) as &#39;YTD AE CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime Absolute&#39;,coalesce(sum(result2_SubCloud.&#39;YTD Co_Prime Absolute&#39;), 0) as &#39;YTD Co_Prime Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Co_Prime Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Co_Prime Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Co_Prime Growth&#39;), 0) as &#39;YTD Co_Prime Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Co_Prime CAGR&#39;), 0) as &#39;YTD Co_Prime CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE Absolute&#39;,  coalesce(sum(result2_SubCloud.&#39;YTD SWE Absolute&#39;), 0) as &#39;YTD SWE Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD SWE Growth&#39;), 0) as &#39;YTD SWE Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;YTD SWE CAGR&#39;), 0) as &#39;YTD SWE CAGR&#39;,  coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD INFRA Absolute&#39;), 0) as &#39;YTD INFRA Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;,coalesce(sum(result2_SubCloud.&#39;YTD INFRA Growth&#39;), 0) as &#39;YTD INFRA Growth&#39;,  coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA CAGR&#39;,coalesce(sum(result2_SubCloud.&#39;YTD INFRA CAGR&#39;), 0) as &#39;YTD INFRA CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD CSM Absolute&#39;), 0) as &#39;YTD CSM Absolute&#39;,  coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,  coalesce(sum(result2_SubCloud.&#39;YTD CSM CAGR&#39;), 0) as &#39;YTD CSM CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD PSM Absolute&#39;), 0) as &#39;YTD PSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;YTD PSM CAGR&#39;), 0) as &#39;YTD PSM CAGR&#39;, last(MasterHierarchy.&#39;Level_2_Sort_Code&#39;) as &#39;Sort_Code&#39;;\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------GROUPING Level_3-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_Cloud_Level3 = group q2_CYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_CYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,  q2_CYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_CYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,q2_PY_2_HC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,  q3_PY_2_HC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_CYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,q2_PY_2_SW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,  q3_PY_2_SW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,  q2_CYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,q2_PY_2_CSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,  q3_PY_2_CSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;),MasterHierarchy by (&#39;Level_1&#39;, &#39;Level_2&#39;,&#39;Level_3&#39;)  ;\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------PROJECTION Level_3-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nresult_Cloud_Level3 = foreach result_Cloud_Level3 generate &quot;          &quot; + coalesce(MasterHierarchy.&#39;Level_3&#39;, q2_CYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q2_PYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q3_CYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q3_PYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q2_CYHC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q2_PYHC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q2_PY_2_HC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q3_CYHC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q3_PYHC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;,q3_PY_2_HC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,   coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;, coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE Absolute&#39;, coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) as &#39;YTD SE Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) - coalesce(sum(q2_PYHC.&#39;SE&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;SE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} SE Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) - coalesce(sum(q3_PYHC.&#39;SE&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;SE&#39;), 0)) * 100 as &#39;YTD SE Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YTD SE CAGR&#39;, coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE Absolute&#39;, coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) as &#39;YTD AE Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) - coalesce(sum(q2_PYHC.&#39;AE&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;AE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AE Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) - coalesce(sum(q3_PYHC.&#39;AE&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;AE&#39;), 0)) * 100 as &#39;YTD AE Growth&#39;, (power(coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;YTD AE CAGR&#39;,coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime Absolute&#39;, coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) as &#39;YTD Co_Prime Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) - coalesce(sum(q2_PYHC.&#39;Co_Prime&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;Co_Prime&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Co_Prime Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) - coalesce(sum(q3_PYHC.&#39;Co_Prime&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;Co_Prime&#39;), 0)) * 100 as &#39;YTD Co_Prime Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YTD Co_Prime CAGR&#39;, coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE Absolute&#39;, coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) as &#39;YTD SWE Absolute&#39;, ((coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(q2_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(q2_PYSW.&#39;SWE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39;, ((coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(q3_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(q3_PYSW.&#39;SWE&#39;), 0)) * 100 as &#39;YTD SWE Growth&#39;,(power(coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) / coalesce(sum(q2_PY_2_SW.&#39;SWE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE CAGR&#39;,(power(coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) / coalesce(sum(q3_PY_2_SW.&#39;SWE&#39;), 0),(1/2))-1)*100 as &#39;YTD SWE CAGR&#39;, coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA Absolute&#39;, coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) as &#39;YTD INFRA Absolute&#39;, ((coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) - coalesce(sum(q2_PYSW.&#39;INFRA&#39;), 0)) / coalesce(sum(q2_PYSW.&#39;INFRA&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;, ((coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) - coalesce(sum(q3_PYSW.&#39;INFRA&#39;), 0)) / coalesce(sum(q3_PYSW.&#39;INFRA&#39;), 0)) * 100 as &#39;YTD INFRA Growth&#39;,(power(coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) / coalesce(sum(q2_PY_2_SW.&#39;INFRA&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA CAGR&#39;,(power(coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) / coalesce(sum(q3_PY_2_SW.&#39;INFRA&#39;), 0),(1/2))-1)*100 as &#39;YTD INFRA CAGR&#39;,(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0))  as &#39;YTD CSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD CSM CAGR&#39;,(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0))  as &#39;YTD PSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD PSM CAGR&#39;,last(MasterHierarchy.&#39;Level_3_Sort_Code&#39;)  as &#39;Sort_Code&#39;,&quot;          &quot; +  coalesce(last(MasterHierarchy.&#39;Level_2&#39;), last(q2_CYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q2_PYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q3_CYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q3_PYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q2_CYHC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q2_PYHC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;),last(q2_PY_2_HC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q3_CYHC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q3_PYHC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;),last(q3_PY_2_HC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;)) as &#39;ParentCloud&#39;;\nresult_Cloud_Level3 = filter result_Cloud_Level3 by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; != &#39;ParentCloud&#39;;\n-----------------------------------------------------------------------------------------------------FINAL UNION------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nFinal = union result, result2_SubCloud ;\nFinal = filter Final by &#39;Sort_Code&#39; != &quot;&quot;;\nFinal = order Final by (&#39;Sort_Code&#39; asc,  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; asc);\nFinal = foreach Final generate &#39;Region&#39;+&quot;                    &quot; as &#39;Region&#39;, &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AEs&#39;,&#39;YTD AE Absolute&#39; as &#39;YTD AE Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;,&#39;YTD AE CAGR&#39; as &#39;YTD AE CAGR&#39; ,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime&#39;,&#39;YTD Co_Prime Absolute&#39; as &#39;YTD Co_Prime Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;,&#39;YTD Co_Prime CAGR&#39; as &#39;YTD Co_Prime CAGR&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SEs&#39;,&#39;YTD SE Absolute&#39; as &#39;YTD SE Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;,&#39;YTD SE CAGR&#39; as &#39;YTD SE CAGR&#39; ;\n--,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM&#39;,&#39;YTD CSM Absolute&#39; as &#39;YTD CSM Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,&#39;YTD CSM CAGR&#39; as &#39;YTD CSM CAGR&#39; ,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM&#39;,&#39;YTD PSM Absolute&#39; as &#39;YTD PSM Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;,&#39;YTD PSM CAGR&#39; as &#39;YTD PSM CAGR&#39;   ;\n",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      },
      "Toggle_CSG_1": {
        "broadcastFacet": true,
        "label": "Toggle_CSG",
        "selectMode": "singlerequired",
        "start": "{&quot;display&quot;:[&quot;No CSG&quot;]}",
        "type": "staticflex",
        "values": [
          "{&quot;display&quot;:&quot;No CSG&quot;,&quot;value&quot;:&quot;!=&quot;}",
          "{&quot;display&quot;:&quot;Only CSG&quot;,&quot;value&quot;:&quot;==&quot;}"
        ]
      },
      "Segment_1": {
        "broadcastFacet": true,
        "datasets": [
          {
            "id": "0Fbf2000000TY0CCAW",
            "label": "APM_ACV_AUTO1",
            "name": "APM_ACV_AUTO1",
            "url": "/services/data/v44.0/wave/datasets/0Fbf2000000TY0CCAW"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": "{&quot;measures&quot;:[[&quot;count&quot;,&quot;*&quot;]],&quot;groups&quot;:[&quot;Segment&quot;],&quot;filters&quot;:[[&quot;Segment&quot;,[&quot;B2C&quot;,&quot;CBU&quot;,&quot;EBU&quot;,&quot;GOV&quot;],&quot;in&quot;]]}",
          "version": -1
        },
        "receiveFacet": true,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {}
      },
      "Toggle_CSG_2": {
        "broadcastFacet": true,
        "label": "Toggle_CSG",
        "selectMode": "singlerequired",
        "type": "staticflex",
        "values": [
          "{&quot;display&quot;:&quot;No CSG&quot;,&quot;value&quot;:&quot;!=&quot;}",
          "{&quot;display&quot;:&quot;Only CSG&quot;,&quot;value&quot;:&quot;==&quot;}"
        ]
      },
      "Table_Level_2_Measures_1": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Level_2_Measures_1",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;Level_1&#39; in   {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nnACV = load &quot;APM_ACV_AUTO1&quot;;ACV = filter ACV by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nACV = filter ACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nACV = group ACV by (&#39;Quarter&#39;,&#39;Month&#39;, &#39;Fiscal_Year&#39;, &#39;Region&#39; , &#39;Country&#39;);\nACV = foreach ACV generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39; ,&#39;Month&#39; as &#39;Month&#39;,sum(&#39;ACV&#39;) as &#39;ACV&#39;,&quot;N/A&quot; as &#39;City&#39;, &#39;Region&#39; as &#39;Region&#39;,  {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD/FILTER AOV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nAOV = load &quot;APM_AOV&quot;;AOV = filter AOV by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nAOV = group AOV by (&#39;Month&#39;, &#39;Fiscal_Year&#39;, &#39;Region&#39; , &#39;Country&#39;);\n\nAOV = foreach AOV generate   &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;AOV&#39;) as &#39;AOV&#39;,&quot;N/A&quot; as &#39;City&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\nq2_CYAOV = filter AOV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYAOV = filter AOV by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYAOV = filter AOV by &#39;Month&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYAOV = filter AOV by &#39;Month&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnAttrition = load &quot;APM_Attrition&quot;;\nAttrition = filter Attrition by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nAttrition = filter Attrition by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in   {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nAttrition = foreach Attrition generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Attrition&#39;)*-1 as &#39;Attrition_Product&#39;, sum(&#39;TTM&#39;)*-1 as &#39;TTM_Product&#39;,sum(&#39;AOV_twelve_month_ago&#39;) as &#39;AOV_twelve_month_ago&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYATT = filter Attrition by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYATT = filter Attrition by &#39;Month&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq4_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnPipegen = load &quot;APM_Pipegen1&quot;;Pipegen = filter Pipegen by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;Pipegen = filter Pipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\n Pipegen = group Pipegen by (&#39;Fiscal_Year&#39;,&#39;Quarter&#39;,&#39;Region&#39;,&#39;Cloud&#39;,&#39;Month&#39;,&#39;Country&#39;);\nPipegen = foreach Pipegen generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Pipegen&#39;) as &#39;Pipegen&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnHC = load &quot;APM_HC&quot;;HC = filter HC by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nHC = filter HC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nHC = foreach HC generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;SE&#39;) as &#39;SE&#39;,sum(&#39;AE&#39;) as &#39;AE&#39;,sum(&#39;Co_Prime&#39;) as &#39;Co_Prime&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\nq2_CYHC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYHC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_HC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYHC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYHC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnSW = load &quot;APM_SWE_INFRA&quot;;SW = filter SW by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nSW = filter SW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nSW = foreach SW generate  &#39;Cloud&#39; as &#39;Cloud&#39;,&#39;City&#39; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;SWE&#39;) as &#39;SWE&#39;,sum(&#39;INFRA&#39;) as &#39;INFRA&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\nq2_CYSW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYSW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_SW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_SW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnCSM = load &quot;CSM_PSM_HC&quot;;\nCSM = filter CSM by &#39;Segment&#39; {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--CSM = filter CSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nCSM = foreach CSM generate  &#39;Cloud&#39; as &#39;Cloud&#39;,&quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;CSM_Headcount&#39;) as &#39;CSM_Headcount&#39;,sum(&#39;PSM_Headcount&#39;) as &#39;PSM_Headcount&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\nq2_CYCSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYCSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_CSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYCSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYCSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_CSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnDEALS = load &quot;APM_DEALS&quot;;DEALS = filter DEALS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;DEALS = filter DEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nDEALS = foreach DEALS generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;X10M_Deals&#39;) as &#39;X10M_Deals&#39;, sum(&#39;X10M&#39;) as &#39;X10M&#39;, sum(&#39;Runrate_Volume&#39;) as &#39;Runrate_Volume&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnLOGOS = load &quot;APM_LOGO&quot;;LOGOS = filter LOGOS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;LOGOS = filter LOGOS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nLOGOS = foreach LOGOS generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;New_Logos&#39;) as &#39;New_Logos&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYLOGOS = filter LOGOS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYLOGOS = filter LOGOS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYLOGOS = filter LOGOS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYLOGOS = filter LOGOS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnLOGOSLOST = load &quot;APM_LOST_LOGO&quot;;LOGOSLOST = filter LOGOSLOST by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;LOGOSLOST = filter LOGOSLOST by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nLOGOSLOST = foreach LOGOSLOST generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Lost_Logo_Count&#39;) as &#39;Lost_Logo_Count&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYLOGOSLOST = filter LOGOSLOST by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYLOGOSLOST = filter LOGOSLOST by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYLOGOSLOST = filter LOGOSLOST by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYLOGOSLOST = filter LOGOSLOST by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnREDACCOUNTS = load &quot;APM_REDACCOUNTS&quot;;REDACCOUNTS = filter REDACCOUNTS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;REDACCOUNTS = filter REDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nREDACCOUNTS = foreach REDACCOUNTS generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Red_Accounts&#39;) as &#39;Red_Accounts&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\nq2_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnEVENTS = load &quot;APM_MARKETING_EVENTS&quot;;EVENTS = filter EVENTS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;EVENTS = filter EVENTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nEVENTS = foreach EVENTS generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;World_Tours_Trailhead&#39;) as &#39;World_Tours_Trailhead&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnOTHER = load &quot;APM_MARKETING_OTHER&quot;;OTHER = filter OTHER by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;OTHER = filter OTHER by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nOTHER = foreach OTHER generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Marketing_Events_Other&#39;) as &#39;Marketing_Events_Other&#39;,&#39;Region&#39; as &#39;Region&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYOTHER = filter OTHER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYOTHER = filter OTHER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYOTHER = filter OTHER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYOTHER = filter OTHER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnEBC = load &quot;APM_MARKETING_EBC&quot;;EBC = filter EBC by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;EBC = filter EBC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nEBC = foreach EBC generate  &#39;Cloud&#39; as &#39;Cloud&#39;, &quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;EBC_s&#39;) as &#39;EBC_s&#39;,sum(&#39;DF_EBC_s&#39;) as &#39;DF_EBC_s&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\nq2_CYEBC = filter EBC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYEBC = filter EBC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYEBC = filter EBC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYEBC = filter EBC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Grouping Level_1 -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult =  group q2_CYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYAOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYAOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYAOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYAOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,  q2_CYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q4_CYATT by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYPipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYPipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYPipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYPipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYHC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYHC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q2_PY_2_HC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYHC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYHC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q3_PY_2_HC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYSW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYSW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q2_PY_2_SW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYSW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYSW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q3_PY_2_SW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full ,q2_CYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q2_PY_2_CSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYCSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PY_2_CSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYDEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYDEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYDEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYDEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYLOGOS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYLOGOS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYLOGOS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYLOGOS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYLOGOSLOST by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYLOGOSLOST by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYLOGOSLOST by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYLOGOSLOST by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full,q2_CYREDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYREDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYREDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYREDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_CYEVENTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYEVENTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYEVENTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYEVENTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;  full, q2_CYOTHER by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYOTHER by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYOTHER by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYOTHER by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;full, q2_CYEBC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q2_PYEBC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_CYEBC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; full, q3_PYEBC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; , MasterHierarchy by &#39;Level_1&#39;;\nnresult = foreach result generate  &quot;☁ &quot; + coalesce(MasterHierarchy.&#39;Level_1&#39;, q2_CYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q2_PYATT.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q2_CYATT.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q3_PYATT.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q3_CYATT.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q2_CYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYPipegen.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q2_CYDEALS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYDEALS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYDEALS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYDEALS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYLOGOS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYLOGOS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYLOGOS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYLOGOS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYLOGOSLOST.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYLOGOSLOST.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYLOGOSLOST.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYLOGOSLOST.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,q2_CYREDACCOUNTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYREDACCOUNTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYREDACCOUNTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYREDACCOUNTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYEVENTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYEVENTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYEVENTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYEVENTS.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYOTHER.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYOTHER.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYOTHER.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYOTHER.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_CYEBC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q2_PYEBC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_CYEBC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, q3_PYEBC.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;) as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,  coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) as &#39;YTD ACV Absolute&#39;, ((coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;, ((coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YTD ACV Growth&#39;, coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) as &#39;YTD AOV Absolute&#39;, ((coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, ((coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YTD AOV Growth&#39;,last(MasterHierarchy.&#39;Level_1_Ranking&#39;) as &#39;Sort_Code&#39;, coalesce(sum(q2_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q2&#39;,coalesce(sum(q3_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q3&#39;,coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q2&#39; ,coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q2&#39;,coalesce(round(sum(q3_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q3&#39; ,coalesce(round(sum(q3_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;,(coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, (coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;YTD Attrition TTM Rate&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;, coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;YTD X10M_Deals Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YTD X10M_Deals Growth&#39;, coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) as &#39;YTD X10M Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YTD X10M Growth&#39;, coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;YTD Runrate_Volume Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YTD Runrate_Volume Growth&#39;,coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;, coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;YTD New_Logos Absolute&#39;, ((coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;, ((coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;YTD New_Logos Growth&#39;,coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;, coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;YTD Lost_Logo_Count Absolute&#39;, ((coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;, ((coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;YTD Lost_Logo_Count Growth&#39;,coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;YTD Red_Accounts Absolute&#39;, ((coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, ((coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YTD Red_Accounts Growth&#39;,coalesce(sum(q2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;, coalesce(sum(q3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;YTD World_Tours_Trailhead Absolute&#39;, ((coalesce(sum(q2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(q2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(q2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;, ((coalesce(sum(q3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(q3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(q3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YTD World_Tours_Trailhead Growth&#39;,coalesce(sum(q2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;, coalesce(sum(q3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;YTD Marketing_Events_Other Absolute&#39;, ((coalesce(sum(q2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(q2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(q2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;, ((coalesce(sum(q3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(q3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(q3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YTD Marketing_Events_Other Growth&#39;,coalesce(sum(q2_CYEBC.&#39;EBC_s&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;, coalesce(sum(q3_CYEBC.&#39;EBC_s&#39;), 0) as &#39;YTD EBC_s Absolute&#39;, ((coalesce(sum(q2_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(q2_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(q2_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;, ((coalesce(sum(q3_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(q3_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(q3_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YTD EBC_s Growth&#39;,coalesce(sum(q2_CYEBC.&#39;DF_EBC_s&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} DF_EBC_s Absolute&#39;, coalesce(sum(q3_CYEBC.&#39;DF_EBC_s&#39;), 0) as &#39;YTD DF_EBC_s Absolute&#39;, ((coalesce(sum(q2_CYEBC.&#39;DF_EBC_s&#39;), 0) - coalesce(sum(q2_PYEBC.&#39;DF_EBC_s&#39;), 0)) / coalesce(sum(q2_PYEBC.&#39;DF_EBC_s&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} DF_EBC_s Growth&#39;, ((coalesce(sum(q3_CYEBC.&#39;DF_EBC_s&#39;), 0) - coalesce(sum(q3_PYEBC.&#39;DF_EBC_s&#39;), 0)) / coalesce(sum(q3_PYEBC.&#39;DF_EBC_s&#39;), 0)) * 100 as &#39;YTD DF_EBC_s Growth&#39;,(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0))  as &#39;YTD CSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD CSM CAGR&#39;,(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0))  as &#39;YTD PSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD PSM CAGR&#39;;\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------GROUPING Level_2-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_SubCloud = group q2_CYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_CYATT by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYATT by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYATT by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYATT by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,q4_CYATT by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,  q2_CYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_CYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,q2_CYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,q2_PY_2_HC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PY_2_HC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full ,q2_CYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,q2_PY_2_SW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PY_2_SW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;)full,q2_CYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,q2_PY_2_CSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PY_2_CSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_CYDEALS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYDEALS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYDEALS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYDEALS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;)full,  q2_CYLOGOS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYLOGOS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYLOGOS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYLOGOS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full,q2_CYLOGOSLOST by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYLOGOSLOST by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYLOGOSLOST by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYLOGOSLOST by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_CYREDACCOUNTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYREDACCOUNTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYREDACCOUNTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYREDACCOUNTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_CYEVENTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYEVENTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYEVENTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYEVENTS by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full ,q2_CYOTHER by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYOTHER by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYOTHER by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYOTHER by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_CYEBC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q2_PYEBC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_CYEBC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) full, q3_PYEBC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;) left, MasterHierarchy by (&#39;Level_1&#39;, &#39;Level_2&#39;) ;\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------PROJECTION Level_2-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\nresult_SubCloud = foreach result_SubCloud generate  coalesce(q2_CYACV.&#39;Country&#39;, q2_PYACV.&#39;Country&#39;, q3_CYACV.&#39;Country&#39;, q3_PYACV.&#39;Country&#39;, q2_CYAOV.&#39;Country&#39;, q2_PYAOV.&#39;Country&#39;, q3_CYAOV.&#39;Country&#39;, q3_PYAOV.&#39;Country&#39;,q2_CYDEALS.&#39;Country&#39;, q2_PYDEALS.&#39;Country&#39;, q3_CYDEALS.&#39;Country&#39;, q3_PYDEALS.&#39;Country&#39;,q2_CYLOGOS.&#39;Country&#39;, q2_PYLOGOS.&#39;Country&#39;, q3_CYLOGOS.&#39;Country&#39;, q3_PYLOGOS.&#39;Country&#39;,q2_CYLOGOSLOST.&#39;Country&#39;, q2_PYLOGOSLOST.&#39;Country&#39;, q3_CYLOGOSLOST.&#39;Country&#39;, q3_PYLOGOSLOST.&#39;Country&#39;,q2_CYREDACCOUNTS.&#39;Country&#39;, q2_PYREDACCOUNTS.&#39;Country&#39;, q3_CYREDACCOUNTS.&#39;Country&#39;, q3_PYREDACCOUNTS.&#39;Country&#39;, q2_CYEVENTS.&#39;Country&#39;, q2_PYEVENTS.&#39;Country&#39;, q3_CYEVENTS.&#39;Country&#39;, q3_PYEVENTS.&#39;Country&#39; ,q2_CYOTHER.&#39;Country&#39;, q2_PYOTHER.&#39;Country&#39;, q3_CYOTHER.&#39;Country&#39;, q3_PYOTHER.&#39;Country&#39;, q2_CYEBC.&#39;Country&#39;, q2_PYEBC.&#39;Country&#39;, q3_CYEBC.&#39;Country&#39;, q3_PYEBC.&#39;Country&#39;) as &#39;Country&#39;, coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) as &#39;YTD ACV Absolute&#39;, ((coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;, ((coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YTD ACV Growth&#39;, coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) as &#39;YTD AOV Absolute&#39;, ((coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, ((coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YTD AOV Growth&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;, last(MasterHierarchy.&#39;Level_2_Sort_Code&#39;) as &#39;Sort_Code&#39;, coalesce(sum(q2_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;Attrition_CY_Q2&#39;, coalesce(sum(q3_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;Attrition_CY_Q3&#39;, coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q2&#39;, coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q2&#39;, coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q3&#39;, coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;, (coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, (coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;YTD Attrition TTM Rate&#39;, coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;YTD X10M_Deals Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YTD X10M_Deals Growth&#39;, coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) as &#39;YTD X10M Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YTD X10M Growth&#39;, coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;YTD Runrate_Volume Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YTD Runrate_Volume Growth&#39;,coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;, coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;YTD New_Logos Absolute&#39;, ((coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;, ((coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;YTD New_Logos Growth&#39;,coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;, coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;YTD Lost_Logo_Count Absolute&#39;, ((coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;, ((coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;YTD Lost_Logo_Count Growth&#39;,coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;YTD Red_Accounts Absolute&#39;, ((coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, ((coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YTD Red_Accounts Growth&#39;,coalesce(sum(q2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;, coalesce(sum(q3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;YTD World_Tours_Trailhead Absolute&#39;, ((coalesce(sum(q2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(q2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(q2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;, ((coalesce(sum(q3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(q3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(q3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YTD World_Tours_Trailhead Growth&#39;,coalesce(sum(q2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;, coalesce(sum(q3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;YTD Marketing_Events_Other Absolute&#39;, ((coalesce(sum(q2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(q2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(q2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;, ((coalesce(sum(q3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(q3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(q3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YTD Marketing_Events_Other Growth&#39;,coalesce(sum(q2_CYEBC.&#39;EBC_s&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;, coalesce(sum(q3_CYEBC.&#39;EBC_s&#39;), 0) as &#39;YTD EBC_s Absolute&#39;, ((coalesce(sum(q2_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(q2_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(q2_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;, ((coalesce(sum(q3_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(q3_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(q3_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YTD EBC_s Growth&#39;,coalesce(sum(q2_CYEBC.&#39;DF_EBC_s&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} DF_EBC_s Absolute&#39;, coalesce(sum(q3_CYEBC.&#39;DF_EBC_s&#39;), 0) as &#39;YTD DF_EBC_s Absolute&#39;, ((coalesce(sum(q2_CYEBC.&#39;DF_EBC_s&#39;), 0) - coalesce(sum(q2_PYEBC.&#39;DF_EBC_s&#39;), 0)) / coalesce(sum(q2_PYEBC.&#39;DF_EBC_s&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} DF_EBC_s Growth&#39;, ((coalesce(sum(q3_CYEBC.&#39;DF_EBC_s&#39;), 0) - coalesce(sum(q3_PYEBC.&#39;DF_EBC_s&#39;), 0)) / coalesce(sum(q3_PYEBC.&#39;DF_EBC_s&#39;), 0)) * 100 as &#39;YTD DF_EBC_s Growth&#39;,(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0))  as &#39;YTD CSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD CSM CAGR&#39;,(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0))  as &#39;YTD PSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD PSM CAGR&#39;,coalesce(MasterHierarchy.&#39;Level_1&#39; ,q2_CYACV.&#39;Region&#39;, q2_PYACV.&#39;Region&#39;, q3_CYACV.&#39;Region&#39;, q3_PYACV.&#39;Region&#39;, q2_CYDEALS.&#39;Region&#39;, q2_PYDEALS.&#39;Region&#39;, q3_CYDEALS.&#39;Region&#39;, q3_PYDEALS.&#39;Region&#39;,q2_CYLOGOS.&#39;Region&#39;, q2_PYLOGOS.&#39;Region&#39;, q3_CYLOGOS.&#39;Region&#39;, q3_PYLOGOS.&#39;Region&#39;,q2_CYLOGOSLOST.&#39;Region&#39;, q2_PYLOGOSLOST.&#39;Region&#39;, q3_CYLOGOSLOST.&#39;Region&#39;, q3_PYLOGOSLOST.&#39;Region&#39;,q2_CYREDACCOUNTS.&#39;Region&#39;, q2_PYREDACCOUNTS.&#39;Region&#39;, q3_CYREDACCOUNTS.&#39;Region&#39;, q3_PYREDACCOUNTS.&#39;Region&#39;,q2_CYEVENTS.&#39;Region&#39;, q2_PYEVENTS.&#39;Region&#39;, q3_CYEVENTS.&#39;Region&#39;, q3_PYEVENTS.&#39;Region&#39;,q2_CYOTHER.&#39;Region&#39;, q2_PYOTHER.&#39;Region&#39;, q3_CYOTHER.&#39;Region&#39;, q3_PYOTHER.&#39;Region&#39;,q2_CYEBC.&#39;Region&#39;, q2_PYEBC.&#39;Region&#39;, q3_CYEBC.&#39;Region&#39;, q3_PYEBC.&#39;Region&#39;) as &#39;Region_Level2&#39;;\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Country Bin logic as data couldn&#39;t be provided in a clean format, this code uses the spec bins and put&#39;s all other countries in the  RO Region bin -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n;\r\nresult2_SubCloud = group result_SubCloud by (&#39;Region_Level2&#39;, &#39;Country&#39;);\r\nresult2_SubCloud = foreach result2_SubCloud generate &#39;Region_Level2&#39; as &#39;Region_Level2&#39;, case when (&#39;Region_Level2&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Canada&quot; ))then &quot;Canada&quot; when (&#39;Region_Level2&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;United States&quot; ))then &quot;United States&quot; when (&#39;Region_Level2&#39; == &quot;AMER&quot;)then &quot;RO AMER&quot; when  (&#39;Region_Level2&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;United Kingdom&quot; ))then &quot;United Kingdom&quot;  when  (&#39;Region_Level2&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;France&quot; ))then &quot;France&quot; when  (&#39;Region_Level2&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Germany&quot; ))then &quot;Germany&quot; when  (&#39;Region_Level2&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Netherlands&quot; ))then &quot;Netherlands&quot; when (&#39;Region_Level2&#39; == &quot;EMEA&quot; ) then &quot;RO EMEA&quot; when  (&#39;Region_Level2&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Australia&quot; ))then &quot;ANZ&quot;  when  (&#39;Region_Level2&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;ANZ&quot; ))then &quot;ANZ&quot; when  (&#39;Region_Level2&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;India&quot; ))then &quot;India&quot;  when  (&#39;Region_Level2&#39; == &quot;APAC&quot; )then &quot;RO APAC&quot;  when  (&#39;Region_Level2&#39; == &quot;APAC&quot; )then &quot;RO APAC&quot;  when  (&#39;Region_Level2&#39; == &quot;JP&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Japan&quot; ))then &quot;Japan&quot;  when  (&#39;Region_Level2&#39; == &quot;JP&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;South Korea&quot; ))then &quot;South Korea&quot; when  (&#39;Region_Level2&#39; == &quot;JP&quot;  )then &quot;RO JP&quot;  when  (&#39;Region_Level2&#39; == &quot;LACA&quot; &amp;&amp; (&#39;Country&#39; ==  &quot;Brazil&quot; ))then &quot;Brazil&quot; when (&#39;Region_Level2&#39; == &quot;LACA&quot; )then &quot;RO LACA&quot; else &quot;ERROR&quot; end as &#39;Country&#39;, coalesce(sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;,coalesce(sum(result2_SubCloud.&#39;YTD ACV Absolute&#39;), 0) as &#39;YTD ACV Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;,coalesce(sum(result2_SubCloud.&#39;YTD ACV Growth&#39;), 0) as &#39;YTD ACV Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD AOV Absolute&#39;), 0)  as &#39;YTD AOV Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD AOV Growth&#39;), 0) as &#39;YTD AOV Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Pipegen Absolute&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Pipegen Growth&#39;), 0) as &#39;YTD Pipegen Growth&#39;,  coalesce(sum(result2_SubCloud.&#39;Attrition_CY_Q2&#39;), 0)  as &#39;Attrition_CY_Q2&#39;, coalesce(sum(result2_SubCloud.&#39;Attrition_CY_Q3&#39;), 0) as &#39;Attrition_CY_Q3&#39;, coalesce(sum(result2_SubCloud.&#39;TTM_Product_CY_Q2&#39;), 0) as &#39;TTM_Product_CY_Q2&#39;, coalesce(sum(result2_SubCloud.&#39;AOV_twelve_month_ago_CY_Q2&#39;), 0)as &#39;AOV_twelve_month_ago_CY_Q2&#39;, coalesce(sum(result2_SubCloud.&#39;TTM_Product_CY_Q3&#39;), 0) as &#39;TTM_Product_CY_Q3&#39;,coalesce(sum(result2_SubCloud.&#39;AOV_twelve_month_ago_CY_Q3&#39;), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Attrition TTM Rate&#39;), 0) as &#39;YTD Attrition TTM Rate&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M_Deals Absolute&#39;), 0)  as &#39;YTD X10M_Deals Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M_Deals Growth&#39;), 0) as &#39;YTD X10M_Deals Growth&#39; ,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M Absolute&#39;), 0)  as &#39;YTD X10M Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M Growth&#39;), 0) as &#39;YTD X10M Growth&#39; ,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Runrate_Volume Absolute&#39;), 0)  as &#39;YTD Runrate_Volume Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Runrate_Volume Growth&#39;), 0) as &#39;YTD Runrate_Volume Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD New_Logos Absolute&#39;), 0)  as &#39;YTD New_Logos Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD New_Logos Growth&#39;), 0) as &#39;YTD New_Logos Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Lost_Logo_Count Absolute&#39;), 0)  as &#39;YTD Lost_Logo_Count Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Lost_Logo_Count Growth&#39;), 0) as &#39;YTD Lost_Logo_Count Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Red_Accounts Absolute&#39;), 0)  as &#39;YTD Red_Accounts Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Red_Accounts Growth&#39;), 0) as &#39;YTD Red_Accounts Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD World_Tours_Trailhead Absolute&#39;), 0)  as &#39;YTD World_Tours_Trailhead Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;,coalesce(sum(result2_SubCloud.&#39;YTD World_Tours_Trailhead Growth&#39;), 0)  as &#39;YTD World_Tours_Trailhead Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Marketing_Events_Other Absolute&#39;), 0)  as &#39;YTD Marketing_Events_Other Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Marketing_Events_Other Growth&#39;), 0) as &#39;YTD Marketing_Events_Other Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD EBC_s Absolute&#39;), 0)  as &#39;YTD EBC_s Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD EBC_s Growth&#39;), 0) as &#39;YTD EBC_s Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} DF_EBC_s Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} DF_EBC_s Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD DF_EBC_s Absolute&#39;), 0)  as &#39;YTD DF_EBC_s Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} DF_EBC_s Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} DF_EBC_s Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD DF_EBC_s Growth&#39;), 0) as &#39;YTD DF_EBC_s Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD CSM Absolute&#39;), 0) as &#39;YTD CSM Absolute&#39;,  coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,  coalesce(sum(result2_SubCloud.&#39;YTD CSM CAGR&#39;), 0) as &#39;YTD CSM CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD PSM Absolute&#39;), 0) as &#39;YTD PSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;YTD PSM CAGR&#39;), 0) as &#39;YTD PSM CAGR&#39;;\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------GROUPING FOR Mapped Countries ------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\nresult2_SubCloud = group result2_SubCloud by (&#39;Region_Level2&#39;, &#39;Country&#39;)left, MasterHierarchy by (&#39;Level_1&#39;, &#39;Level_2&#39;);\r\nresult2_SubCloud = foreach result2_SubCloud generate result2_SubCloud.&#39;Region_Level2&#39; as &#39;Region_Level2&#39;, &quot;    ↳  &quot; + (result2_SubCloud.&#39;Country&#39; ) as &#39;Region&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;,coalesce(sum(result2_SubCloud.&#39;YTD ACV Absolute&#39;), 0) as &#39;YTD ACV Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;,coalesce(sum(result2_SubCloud.&#39;YTD ACV Growth&#39;), 0) as &#39;YTD ACV Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD AOV Absolute&#39;), 0)  as &#39;YTD AOV Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD AOV Growth&#39;), 0) as &#39;YTD AOV Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Pipegen Absolute&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Pipegen Growth&#39;), 0) as &#39;YTD Pipegen Growth&#39;,  coalesce(sum(result2_SubCloud.&#39;Attrition_CY_Q2&#39;), 0)  as &#39;Attrition_CY_Q2&#39;, coalesce(sum(result2_SubCloud.&#39;Attrition_CY_Q3&#39;), 0) as &#39;Attrition_CY_Q3&#39;, coalesce(sum(result2_SubCloud.&#39;TTM_Product_CY_Q2&#39;), 0) as &#39;TTM_Product_CY_Q2&#39;, coalesce(sum(result2_SubCloud.&#39;AOV_twelve_month_ago_CY_Q2&#39;), 0)as &#39;AOV_twelve_month_ago_CY_Q2&#39;, coalesce(sum(result2_SubCloud.&#39;TTM_Product_CY_Q3&#39;), 0) as &#39;TTM_Product_CY_Q3&#39;,coalesce(sum(result2_SubCloud.&#39;AOV_twelve_month_ago_CY_Q3&#39;), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Attrition TTM Rate&#39;), 0) as &#39;YTD Attrition TTM Rate&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M_Deals Absolute&#39;), 0)  as &#39;YTD X10M_Deals Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M_Deals Growth&#39;), 0) as &#39;YTD X10M_Deals Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M Absolute&#39;), 0)  as &#39;YTD X10M Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M Growth&#39;), 0) as &#39;YTD X10M Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD X10M Absolute&#39;), 0)  as &#39;YTD Runrate_Volume Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Runrate_Volume Growth&#39;), 0) as &#39;YTD Runrate_Volume Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD New_Logos Absolute&#39;), 0)  as &#39;YTD New_Logos Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD New_Logos Growth&#39;), 0) as &#39;YTD New_Logos Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Lost_Logo_Count Absolute&#39;), 0)  as &#39;YTD Lost_Logo_Count Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Lost_Logo_Count Growth&#39;), 0) as &#39;YTD Lost_Logo_Count Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Red_Accounts Absolute&#39;), 0)  as &#39;YTD Red_Accounts Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, coalesce(sum(result2_SubCloud.&#39;YTD Red_Accounts Growth&#39;), 0) as &#39;YTD Red_Accounts Growth&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD CSM Absolute&#39;), 0) as &#39;YTD CSM Absolute&#39;,  coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,  coalesce(sum(result2_SubCloud.&#39;YTD CSM CAGR&#39;), 0) as &#39;YTD CSM CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;YTD PSM Absolute&#39;), 0) as &#39;YTD PSM Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;, coalesce(sum(result2_SubCloud.&#39;YTD PSM CAGR&#39;), 0) as &#39;YTD PSM CAGR&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;,coalesce(sum(result2_SubCloud.&#39;YTD EBC_s Absolute&#39;), 0) as &#39;YTD EBC_s Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;,coalesce(sum(result2_SubCloud.&#39;YTD EBC_s Growth&#39;), 0) as &#39;YTD EBC_s Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} DF_EBC_s Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} DF_EBC_s Absolute&#39;,coalesce(sum(result2_SubCloud.&#39;YTD DF_EBC_s Absolute&#39;), 0) as &#39;YTD DF_EBC_s Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} DF_EBC_s Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} DF_EBC_s Growth&#39;,coalesce(sum(result2_SubCloud.&#39;YTD DF_EBC_s Growth&#39;), 0) as &#39;YTD DF_EBC_s Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;,coalesce(sum(result2_SubCloud.&#39;YTD World_Tours_Trailhead Absolute&#39;), 0) as &#39;YTD World_Tours_Trailhead Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;,coalesce(sum(result2_SubCloud.&#39;YTD World_Tours_Trailhead Growth&#39;), 0) as &#39;YTD World_Tours_Trailhead Growth&#39;,coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;,coalesce(sum(result2_SubCloud.&#39;YTD Marketing_Events_Other Absolute&#39;), 0) as &#39;YTD Marketing_Events_Other Absolute&#39;, coalesce(sum(result2_SubCloud.&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;,coalesce(sum(result2_SubCloud.&#39;YTD Marketing_Events_Other Growth&#39;), 0) as &#39;YTD Marketing_Events_Other Growth&#39;,last(MasterHierarchy.&#39;Level_2_Sort_Code&#39;) as &#39;Sort_Code&#39;;\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------GROUPING Level_3-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_Cloud_Level3 = group q2_CYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYACV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_CYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYAOV by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,  q2_CYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYPipegen by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_CYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,q2_PY_2_HC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYHC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,  q3_PY_2_HC by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_CYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,q2_PY_2_SW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYSW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,  q3_PY_2_SW by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,  q2_CYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q2_PYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,q2_PY_2_CSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_CYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full, q3_PYCSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) full,  q3_PY_2_CSM by (&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;,&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;),MasterHierarchy by (&#39;Level_1&#39;, &#39;Level_2&#39;,&#39;Level_3&#39;)  ;\nnresult_Cloud_Level3 = foreach result_Cloud_Level3 generate &quot;          &quot; + coalesce(MasterHierarchy.&#39;Level_3&#39;, q2_CYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q2_PYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q3_CYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q3_PYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q2_CYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q2_PYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q3_CYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;, q3_PYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_3&quot;).asString()}}&#39;) as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,  coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) as &#39;YTD ACV Absolute&#39;, ((coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;, ((coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YTD ACV Growth&#39;, coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} YTD AOV Absolute&#39;, ((coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, ((coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YTD AOV Growth&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;,last(MasterHierarchy.&#39;Level_3_Sort_Code&#39;)  as &#39;Sort_Code&#39;,&quot;          &quot; + coalesce(last(MasterHierarchy.&#39;Level_2&#39;), last(q2_CYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q2_PYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q3_CYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q3_PYACV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q2_CYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q2_PYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q3_CYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;), last(q3_PYAOV.&#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;)) as &#39;ParentCloud&#39;;\nresult_Cloud_Level3 = filter result_Cloud_Level3 by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; != &#39;ParentCloud&#39;;\nnFinal = union result, result2_SubCloud;\nnFinal = filter Final by &#39;Sort_Code&#39; != &quot;&quot;;\nFinal = order Final by (&#39;Sort_Code&#39; asc,  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; asc);\nFinal = foreach Final generate  &#39;Region&#39;+&quot;          &quot; as &#39;Region&#39;, &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;, &#39;YTD ACV Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;, &#39;YTD ACV Growth&#39;, &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, &#39;YTD AOV Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;,&#39;YTD AOV Growth&#39;, sum(&#39;Attrition_CY_Q2&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Attrition Absolute&#39;, sum(&#39;Attrition_CY_Q3&#39;) as &#39;YTD Attrition Absolute&#39;,sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, sum(&#39;YTD Attrition TTM Rate&#39;) as &#39;YTD Attrition TTM Rate&#39;, &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PipeGen Absolute&#39;,&#39;YTD Pipegen Absolute&#39; as &#39;YTD PipeGen Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} PipeGen Growth&#39;,   &#39;YTD Pipegen Growth&#39; as  &#39;YTD PipeGen Growth&#39;;;\n",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      },
      "Table_Level_2_Measures_tam": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Level_2_Measures_tam",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;Level_1&#39; in   {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nnACV = load &quot;APM_ACV_AUTO1&quot;;\nACV = filter ACV by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nACV = filter ACV by {{column(Lead_1_4.selection,[&quot;Lead_1&quot;]).asEquality(&#39;Lead_1&#39;)}};\nACV = filter ACV by {{column(Segment_1.selection,[&quot;Segment&quot;]).asEquality(&#39;Segment&#39;)}};\nACV = filter ACV by {{column(Industry_2.selection,[&quot;Industry&quot;]).asEquality(&#39;Industry&#39;)}};\nACV = filter ACV by {{column(lens_2.selection,[&quot;Lead&quot;]).asEquality(&#39;Lead&#39;)}};\nACV = filter ACV by {{column(Filter_Cloud.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nACV = filter ACV by &#39;Region&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nACV = group ACV by (&#39;Region&#39;,&#39;Cloud_2&#39;,&#39;Country&#39;, &#39;Quarter&#39;,&#39;Month&#39;, &#39;Fiscal_Year&#39;, &#39;Region&#39; , &#39;Country&#39;);\nACV = foreach ACV generate  &#39;Region&#39; as &#39;Region&#39;, &#39;Cloud_2&#39; as &#39;Cloud_2&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39; ,&#39;Month&#39; as &#39;Month&#39;,sum(&#39;ACV&#39;) as &#39;ACV&#39;,  {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ; \nq2_CYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}} ;\nnAOV = load &quot;APM_AOV&quot;;\nAOV = filter AOV by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nAOV = filter AOV by &#39;Region&#39; in{{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nAOV = group AOV by (&#39;Region&#39;,&#39;Country&#39;, &#39;Cloud_2&#39;, &#39;Quarter&#39;, &#39;Month&#39;, &#39;Fiscal_Year&#39;, &#39;Region&#39; , &#39;Country&#39;);\nAOV = foreach AOV generate  &#39;Region&#39; as &#39;Region&#39;,&#39;Cloud_2&#39; as &#39;Cloud_2&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;AOV&#39;) as &#39;AOV&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ; \nq2_CYAOV = filter AOV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYAOV = filter AOV by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYAOV = filter AOV by &#39;Month&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYAOV = filter AOV by &#39;Month&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnAttrition = load &quot;APM_Attrition&quot;;\nAttrition = filter Attrition by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nAttrition = filter Attrition by &#39;Segment&#39; != &quot;CSG&quot;;\nAttrition = filter Attrition by &#39;Region&#39; in   {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nAttrition = foreach Attrition generate  &#39;Region&#39; as &#39;Region&#39;, &#39;Cloud_2&#39; as &#39;Cloud_2&#39;,&#39;Segment&#39; as &#39;Segment&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Attrition_Product&#39;)*-1 as &#39;Attrition_Product&#39;, sum(&#39;TTM_Product&#39;)*-1 as &#39;TTM_Product&#39;,sum(&#39;AOV_twelve_month_ago_Product&#39;) as &#39;AOV_twelve_month_ago&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nq2_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYATT = filter Attrition by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYATT = filter Attrition by &#39;Month&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq4_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD /FILTER PIPEGEN-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nPipegen = load &quot;APM_Pipegen1&quot;;\nPipegen = filter Pipegen by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nPipegen = group Pipegen by (&#39;Fiscal_Year&#39;,&#39;Quarter&#39;, &#39;Region&#39;, &#39;Region&#39;, &#39;Month&#39;,&#39;Country&#39;, &#39;Cloud_2&#39;,&#39;Country&#39;);\nPipegen = foreach Pipegen generate  &#39;Region&#39; as &#39;Region&#39;, &#39;Cloud_2&#39; as &#39;Cloud_2&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Pipegen&#39;) as &#39;Pipegen&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ; \nPipegen = filter Pipegen by &#39;Region&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnHC = load &quot;APM_HC&quot;;\nHC = filter HC by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nHC = foreach HC generate  &#39;Region&#39; as &#39;Region&#39;, &#39;Cloud_2&#39; as &#39;Cloud_2&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;SE&#39;) as &#39;SE&#39;,sum(&#39;AE&#39;) as &#39;AE&#39;,sum(&#39;Co_Prime&#39;) as &#39;Co_Prime&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ; \nHC = filter HC by &#39;Region&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYHC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYHC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_HC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYHC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYHC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD SWE INFRA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSW = load &quot;APM_SWE_INFRA&quot;;\nSW = filter SW by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nSW = foreach SW generate  &#39;Region&#39; as &#39;Region&#39;,&#39;Cloud_2&#39; as &#39;Cloud_2&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;SWE&#39;) as &#39;SWE&#39;,sum(&#39;INFRA&#39;) as &#39;INFRA&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ; \nSW = filter SW by &#39;Region&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYSW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYSW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_SW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_SW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD REDACCOUNTS------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nREDACCOUNTS = load &quot;APM_REDACCOUNTS&quot;;\nREDACCOUNTS = filter REDACCOUNTS by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nREDACCOUNTS = foreach REDACCOUNTS generate  &#39;Region&#39; as &#39;Region&#39;, &#39;Cloud_2&#39; as &#39;Cloud_2&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Red_Accounts&#39;) as &#39;Red_Accounts&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nREDACCOUNTS = filter REDACCOUNTS by &#39;Region&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYREDACCOUNTS = filter REDACCOUNTS by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYREDACCOUNTS = filter REDACCOUNTS by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_REDACCOUNTS = filter REDACCOUNTS by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_REDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD T_P T&amp;P Cost to Serve------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nT_P = load &quot;APM_T_P&quot;;\nT_P = filter T_P by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nT_P = foreach T_P generate  &#39;Region&#39; as &#39;Region&#39;, &#39;Cloud_2&#39; as &#39;Cloud_2&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;CTS&#39;) as &#39;CTS&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ; \nT_P = filter T_P by &#39;Region&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYT_P = filter T_P by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYT_P = filter T_P by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_T_P = filter T_P by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_T_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD AVAILABILITY------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nAVAILABILITY = load &quot;APM_TECH_AVAILABILITY&quot;;\nAVAILABILITY = filter AVAILABILITY by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nAVAILABILITY = foreach AVAILABILITY generate  &#39;Region&#39; as &#39;Region&#39;,&#39;Cloud_2&#39; as &#39;Cloud_2&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Availability&#39;) as &#39;Availability&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ; \nAVAILABILITY = filter AVAILABILITY by &#39;Region&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYAVAILABILITY = filter AVAILABILITY by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYAVAILABILITY = filter AVAILABILITY by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_AVAILABILITY = filter AVAILABILITY by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_AVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD TRANSACTIONS------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nTRANSACTIONS = load &quot;APM_T_P_Transactions&quot;;\nTRANSACTIONS = filter TRANSACTIONS by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nTRANSACTIONS = foreach TRANSACTIONS generate  &#39;Region&#39; as &#39;Region&#39;, &#39;Cloud_2&#39; as &#39;Cloud_2&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Transactions&#39;) as &#39;Transactions&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nTRANSACTIONS = filter TRANSACTIONS by &#39;Region&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYTRANSACTIONS = filter TRANSACTIONS by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYTRANSACTIONS = filter TRANSACTIONS by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_TRANSACTIONS = filter TRANSACTIONS by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYTRANSACTIONS = filter TRANSACTIONS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYTRANSACTIONS = filter TRANSACTIONS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_TRANSACTIONS = filter TRANSACTIONS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD MARKET CUSTOMER------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nCUSTOMER = load &quot;APM_MARKET_CUSTOMER&quot;;\nCUSTOMER = filter CUSTOMER by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nCUSTOMER = foreach CUSTOMER generate  &#39;Region&#39; as &#39;Region&#39;, &#39;Cloud_2&#39; as &#39;Cloud_2&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Customer&#39;) as &#39;Customer&#39;,sum(&#39;Cloud_m1&#39;) as &#39;Customer1&#39;,sum(&#39;Cloud_m2&#39;) as &#39;Customer2&#39;,sum(&#39;Cloud_m3&#39;) as &#39;Customer3&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \nCUSTOMER = filter CUSTOMER by &#39;Region&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYCUSTOMER = filter CUSTOMER by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYCUSTOMER = filter CUSTOMER by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_CUSTOMER = filter CUSTOMER by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_cum&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_cum&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_CUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_cum&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD MARKET SHARE------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSHARE= load &quot;APM_MARKET_SHARE&quot;;\nSHARE= filter SHARE by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nSHARE= foreach SHARE generate  &#39;Region&#39; as &#39;Region&#39;, &#39;Cloud_2&#39; as &#39;Cloud_2&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Original_TAM&#39;) as &#39;TAM&#39;,sum(&#39;Original_TAM&#39;) as &#39;TAM1&#39;,sum(&#39;Original_TAM&#39;) as &#39;TAM2&#39; ,sum(&#39;Original_TAM&#39;) as &#39;TAM3&#39;,sum(&#39;Original_TAM&#39;) as &#39;Original_TAM&#39;,sum(&#39;Cloud_merged&#39;) as &#39;Cloud_merged&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ; \nSHARE = filter SHARE by &#39;Region&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYSHARE = filter SHARE by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYSHARE = filter SHARE by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_SHARE = filter SHARE by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYSHARE = filter SHARE by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_cum&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYSHARE = filter SHARE by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_cum&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_SHARE = filter SHARE by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_cum&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nnresult = group  q2_CYACV by &#39;Region&#39; full, q2_PYACV by &#39;Region&#39; full, q3_CYACV by &#39;Region&#39; full, q3_PYACV by &#39;Region&#39; full, q2_CYAOV by &#39;Region&#39; full, q2_PYAOV by &#39;Region&#39; full, q3_CYAOV by &#39;Region&#39; full, q3_PYAOV by &#39;Region&#39; full,  q2_CYATT by &#39;Region&#39; full, q2_PYATT by &#39;Region&#39; full, q3_CYATT by &#39;Region&#39; full, q3_PYATT by &#39;Region&#39; full,q4_CYATT by &#39;Region&#39; full, q2_CYPipegen by &#39;Region&#39; full, q2_PYPipegen by &#39;Region&#39; full, q3_CYPipegen by &#39;Region&#39; full, q3_PYPipegen by &#39;Region&#39;full,q2_CYHC by &#39;Region&#39; full, q2_PYHC by &#39;Region&#39; full,q2_PY_2_HC by &#39;Region&#39; full, q3_CYHC by &#39;Region&#39; full, q3_PYHC by &#39;Region&#39; full,q3_PY_2_HC by &#39;Region&#39; full, q2_CYSW by &#39;Region&#39; full, q2_PYSW by &#39;Region&#39; full,q2_PY_2_SW by &#39;Region&#39; full, q3_CYSW by &#39;Region&#39; full, q3_PYSW by &#39;Region&#39; full,q3_PY_2_SW by &#39;Region&#39;full, q2_CYREDACCOUNTS by &#39;Region&#39; full, q2_PYREDACCOUNTS by &#39;Region&#39; full,q2_PY_2_REDACCOUNTS by &#39;Region&#39; full, q3_CYREDACCOUNTS by &#39;Region&#39; full, q3_PYREDACCOUNTS by &#39;Region&#39; full,q3_PY_2_REDACCOUNTS by &#39;Region&#39; full, q2_CYT_P by &#39;Region&#39; full, q2_PYT_P by &#39;Region&#39; full,q2_PY_2_T_P by &#39;Region&#39; full, q3_CYT_P by &#39;Region&#39; full, q3_PYT_P by &#39;Region&#39; full,q3_PY_2_T_P by &#39;Region&#39; full, q2_CYAVAILABILITY by &#39;Region&#39; full, q2_PYAVAILABILITY by &#39;Region&#39; full,q2_PY_2_AVAILABILITY by &#39;Region&#39; full, q3_CYAVAILABILITY by &#39;Region&#39; full, q3_PYAVAILABILITY by &#39;Region&#39; full,q3_PY_2_AVAILABILITY by &#39;Region&#39; full, q2_CYTRANSACTIONS by &#39;Region&#39; full, q2_PYTRANSACTIONS by &#39;Region&#39; full,q2_PY_2_TRANSACTIONS by &#39;Region&#39; full, q3_CYTRANSACTIONS by &#39;Region&#39; full, q3_PYTRANSACTIONS by &#39;Region&#39; full,q3_PY_2_TRANSACTIONS by &#39;Region&#39;  full, q2_CYCUSTOMER by &#39;Region&#39; full, q2_PYCUSTOMER by &#39;Region&#39; full,q2_PY_2_CUSTOMER by &#39;Region&#39; full, q3_CYCUSTOMER by &#39;Region&#39; full, q3_PYCUSTOMER by &#39;Region&#39; full,q3_PY_2_CUSTOMER by &#39;Region&#39;full, q2_CYSHARE by &#39;Region&#39; full, q2_PYSHARE by &#39;Region&#39; full,q2_PY_2_SHARE by &#39;Region&#39; full, q3_CYSHARE by &#39;Region&#39; full, q3_PYSHARE by &#39;Region&#39; full,q3_PY_2_SHARE by &#39;Region&#39;,MasterHierarchy by &#39;Level_1&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------PROJECTION Region -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n;\nresult = foreach result generate  &quot;☁ &quot; + coalesce(MasterHierarchy.&#39;Level_1&#39;, q2_CYACV.&#39;Region&#39;, q2_PYACV.&#39;Region&#39;, q3_CYACV.&#39;Region&#39;, q3_PYACV.&#39;Region&#39;, q2_CYAOV.&#39;Region&#39;, q2_PYAOV.&#39;Region&#39;, q3_CYAOV.&#39;Region&#39;, q3_PYAOV.&#39;Region&#39;,q2_PYATT.&#39;Region&#39;,q2_CYATT.&#39;Region&#39;,q3_PYATT.&#39;Region&#39;,q3_CYATT.&#39;Region&#39;,q2_CYPipegen.&#39;Region&#39;, q2_PYPipegen.&#39;Region&#39;, q3_CYPipegen.&#39;Region&#39;, q3_PYPipegen.&#39;Region&#39;,q2_CYREDACCOUNTS.&#39;Region&#39;, q2_PYREDACCOUNTS.&#39;Region&#39;, q3_CYREDACCOUNTS.&#39;Region&#39;, q3_PYREDACCOUNTS.&#39;Region&#39;, q2_CYT_P.&#39;Region&#39;, q2_PYT_P.&#39;Region&#39;, q3_CYT_P.&#39;Region&#39;, q3_PYT_P.&#39;Region&#39;, q2_CYAVAILABILITY.&#39;Region&#39;, q2_PYAVAILABILITY.&#39;Region&#39;, q3_CYAVAILABILITY.&#39;Region&#39;, q3_PYAVAILABILITY.&#39;Region&#39;, q2_CYTRANSACTIONS.&#39;Region&#39;, q2_PYTRANSACTIONS.&#39;Region&#39;, q3_CYTRANSACTIONS.&#39;Region&#39;, q3_PYTRANSACTIONS.&#39;Region&#39;, q2_CYAVAILABILITY.&#39;Region&#39;, q2_PYAVAILABILITY.&#39;Region&#39;, q3_CYAVAILABILITY.&#39;Region&#39;, q3_PYAVAILABILITY.&#39;Region&#39;, q2_CYCUSTOMER.&#39;Region&#39;, q2_PYCUSTOMER.&#39;Region&#39;, q3_CYCUSTOMER.&#39;Region&#39;, q3_PYCUSTOMER.&#39;Region&#39;, q2_CYSHARE.&#39;Region&#39;, q2_PYSHARE.&#39;Region&#39;, q3_CYSHARE.&#39;Region&#39;, q3_PYSHARE.&#39;Region&#39;) as &#39;Region&#39;,  coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) as &#39;YTD ACV Absolute&#39;, ((coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;, ((coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YTD ACV Growth&#39;, coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) as &#39;YTD AOV Absolute&#39;, ((coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, ((coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YTD AOV Growth&#39;,last(MasterHierarchy.&#39;Level_1_Ranking&#39;) as &#39;Sort_Code&#39;, coalesce(sum(q2_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q2&#39;,coalesce(sum(q3_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q3&#39;,coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q2&#39; ,coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q2&#39;,coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q3&#39; ,coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;,(coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, (coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;YTD Attrition TTM Rate&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;, coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;YTD Red_Accounts Absolute&#39;, ((coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, ((coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YTD Red_Accounts Growth&#39;, coalesce(sum(q2_CYT_P.&#39;CTS&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CTS Absolute&#39;, coalesce(sum(q3_CYT_P.&#39;CTS&#39;), 0) as &#39;YTD CTS Absolute&#39;, ((coalesce(sum(q2_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(q2_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(q2_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} CTS Growth&#39;, ((coalesce(sum(q3_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(q3_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(q3_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YTD CTS Growth&#39;, coalesce(sum(q2_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Availability Absolute&#39;, coalesce(sum(q3_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;YTD Availability Absolute&#39;, ((coalesce(sum(q2_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(q2_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(q2_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Availability Growth&#39;, ((coalesce(sum(q3_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(q3_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(q3_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YTD Availability Growth&#39;, coalesce(sum(q2_CYTRANSACTIONS.&#39;Transactions&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Transactions Absolute&#39;, coalesce(sum(q3_CYTRANSACTIONS.&#39;Transactions&#39;), 0) as &#39;YTD Transactions Absolute&#39;, ((coalesce(sum(q2_CYTRANSACTIONS.&#39;Transactions&#39;), 0) - coalesce(sum(q2_PYTRANSACTIONS.&#39;Transactions&#39;), 0)) / coalesce(sum(q2_PYTRANSACTIONS.&#39;Transactions&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Transactions Growth&#39;, ((coalesce(sum(q3_CYTRANSACTIONS.&#39;Transactions&#39;), 0) - coalesce(sum(q3_PYTRANSACTIONS.&#39;Transactions&#39;), 0)) / coalesce(sum(q3_PYTRANSACTIONS.&#39;Transactions&#39;), 0)) * 100 as &#39;YTD Transactions Growth&#39;, coalesce(sum(q2_CYCUSTOMER.&#39;Customer1&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Customer Absolute&#39;, coalesce(sum(q3_CYCUSTOMER.&#39;Customer1&#39;), 0) as &#39;YTD Customer Absolute&#39;, ((coalesce(sum(q2_CYCUSTOMER.&#39;Customer1&#39;), 0) - coalesce(sum(q2_PYCUSTOMER.&#39;Customer1&#39;), 0)) / coalesce(sum(q2_PYCUSTOMER.&#39;Customer1&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Customer Growth&#39;, ((coalesce(sum(q3_CYCUSTOMER.&#39;Customer1&#39;), 0) - coalesce(sum(q3_PYCUSTOMER.&#39;Customer1&#39;), 0)) / coalesce(sum(q3_PYCUSTOMER.&#39;Customer1&#39;), 0)) * 100 as &#39;YTD Customer Growth&#39;,coalesce(sum(q2_CYSHARE.&#39;TAM1&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} TAM Absolute&#39;, coalesce(sum(q3_CYSHARE.&#39;TAM1&#39;), 0) as &#39;YTD TAM Absolute&#39;,(coalesce(sum(q2_CYAOV.&#39;AOV&#39;),0) ) / coalesce(sum(q2_CYSHARE.&#39;TAM1&#39;), 0) as  &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} TAM Growth&#39; , (coalesce(sum(q3_CYAOV.&#39;AOV&#39;),0) )/ coalesce(sum(q3_CYSHARE.&#39;TAM1&#39;), 0)   as &#39;YTD TAM Growth&#39;,coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE Absolute&#39;, coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) as &#39;YTD SE Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) - coalesce(sum(q2_PYHC.&#39;SE&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;SE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} SE Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) - coalesce(sum(q3_PYHC.&#39;SE&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;SE&#39;), 0)) * 100 as &#39;YTD SE Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YTD SE CAGR&#39;, coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE Absolute&#39;, coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) as &#39;YTD AE Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) - coalesce(sum(q2_PYHC.&#39;AE&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;AE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AE Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) - coalesce(sum(q3_PYHC.&#39;AE&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;AE&#39;), 0)) * 100 as &#39;YTD AE Growth&#39;, (power(coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;YTD AE CAGR&#39;,coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime Absolute&#39;, coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) as &#39;YTD Co_Prime Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) - coalesce(sum(q2_PYHC.&#39;Co_Prime&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;Co_Prime&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Co_Prime Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) - coalesce(sum(q3_PYHC.&#39;Co_Prime&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;Co_Prime&#39;), 0)) * 100 as &#39;YTD Co_Prime Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YTD Co_Prime CAGR&#39;, coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE Absolute&#39;, coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) as &#39;YTD SWE Absolute&#39;, ((coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(q2_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(q2_PYSW.&#39;SWE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39;, ((coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(q3_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(q3_PYSW.&#39;SWE&#39;), 0)) * 100 as &#39;YTD SWE Growth&#39;,(power(coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) / coalesce(sum(q2_PY_2_SW.&#39;SWE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE CAGR&#39;,(power(coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) / coalesce(sum(q3_PY_2_SW.&#39;SWE&#39;), 0),(1/2))-1)*100 as &#39;YTD SWE CAGR&#39;, coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA Absolute&#39;, coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) as &#39;YTD INFRA Absolute&#39;, ((coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) - coalesce(sum(q2_PYSW.&#39;INFRA&#39;), 0)) / coalesce(sum(q2_PYSW.&#39;INFRA&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;, ((coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) - coalesce(sum(q3_PYSW.&#39;INFRA&#39;), 0)) / coalesce(sum(q3_PYSW.&#39;INFRA&#39;), 0)) * 100 as &#39;YTD INFRA Growth&#39;,(power(coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) / coalesce(sum(q2_PY_2_SW.&#39;INFRA&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA CAGR&#39;,(power(coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) / coalesce(sum(q3_PY_2_SW.&#39;INFRA&#39;), 0),(1/2))-1)*100 as &#39;YTD INFRA CAGR&#39;;\nnresult_SubCloud = group q2_CYACV by (&#39;Region&#39;, &#39;Country&#39;) full, q2_PYACV by (&#39;Region&#39;, &#39;Country&#39;) full, q3_CYACV by (&#39;Region&#39;, &#39;Country&#39;) full, q3_PYACV by (&#39;Region&#39;, &#39;Country&#39;) full, q2_CYAOV by (&#39;Region&#39;, &#39;Country&#39;) full, q2_PYAOV by (&#39;Region&#39;, &#39;Country&#39;) full, q3_CYAOV by (&#39;Region&#39;, &#39;Country&#39;) full, q3_PYAOV by (&#39;Region&#39;, &#39;Country&#39;) full,q2_CYATT by (&#39;Region&#39;, &#39;Country&#39;) full, q2_PYATT by (&#39;Region&#39;, &#39;Country&#39;) full, q3_CYATT by (&#39;Region&#39;, &#39;Country&#39;) full, q3_PYATT by (&#39;Region&#39;, &#39;Country&#39;) full,q4_CYATT by (&#39;Region&#39;, &#39;Country&#39;) full, q2_CYPipegen by (&#39;Region&#39;, &#39;Country&#39;) full, q2_PYPipegen by (&#39;Region&#39;, &#39;Country&#39;) full, q3_CYPipegen by (&#39;Region&#39;, &#39;Country&#39;) full, q3_PYPipegen by (&#39;Region&#39;, &#39;Country&#39;) full,q2_CYHC by (&#39;Region&#39;, &#39;Country&#39;) full, q2_PYHC by (&#39;Region&#39;, &#39;Country&#39;) full,q2_PY_2_HC by (&#39;Region&#39;, &#39;Country&#39;) full, q3_CYHC by (&#39;Region&#39;, &#39;Country&#39;) full, q3_PYHC by (&#39;Region&#39;, &#39;Country&#39;) full, q3_PY_2_HC by (&#39;Region&#39;, &#39;Country&#39;) full ,q2_CYSW by (&#39;Region&#39;, &#39;Country&#39;) full, q2_PYSW by (&#39;Region&#39;, &#39;Country&#39;) full,q2_PY_2_SW by (&#39;Region&#39;, &#39;Country&#39;) full, q3_CYSW by (&#39;Region&#39;, &#39;Country&#39;) full, q3_PYSW by (&#39;Region&#39;, &#39;Country&#39;) full, q3_PY_2_SW by (&#39;Region&#39;, &#39;Country&#39;)full, q2_CYREDACCOUNTS by (&#39;Region&#39;, &#39;Country&#39;) full, q2_PYREDACCOUNTS by (&#39;Region&#39;, &#39;Country&#39;) full,q2_PY_2_REDACCOUNTS by (&#39;Region&#39;, &#39;Country&#39;) full, q3_CYREDACCOUNTS by (&#39;Region&#39;, &#39;Country&#39;) full, q3_PYREDACCOUNTS by (&#39;Region&#39;, &#39;Country&#39;) full,q3_PY_2_REDACCOUNTS by (&#39;Region&#39;, &#39;Country&#39;) full, q2_CYT_P by (&#39;Region&#39;, &#39;Country&#39;) full, q2_PYT_P by (&#39;Region&#39;, &#39;Country&#39;) full,q2_PY_2_T_P by (&#39;Region&#39;, &#39;Country&#39;) full, q3_CYT_P by (&#39;Region&#39;, &#39;Country&#39;) full, q3_PYT_P by (&#39;Region&#39;, &#39;Country&#39;) full,q3_PY_2_T_P by (&#39;Region&#39;, &#39;Country&#39;) full, q2_CYAVAILABILITY by (&#39;Region&#39;, &#39;Country&#39;) full, q2_PYAVAILABILITY by (&#39;Region&#39;, &#39;Country&#39;) full,q2_PY_2_AVAILABILITY by (&#39;Region&#39;, &#39;Country&#39;) full, q3_CYAVAILABILITY by (&#39;Region&#39;, &#39;Country&#39;) full, q3_PYAVAILABILITY by (&#39;Region&#39;, &#39;Country&#39;) full,q3_PY_2_AVAILABILITY by (&#39;Region&#39;, &#39;Country&#39;) full, q2_CYTRANSACTIONS by (&#39;Region&#39;, &#39;Country&#39;) full, q2_PYTRANSACTIONS by (&#39;Region&#39;, &#39;Country&#39;) full,q2_PY_2_TRANSACTIONS by (&#39;Region&#39;, &#39;Country&#39;) full, q3_CYTRANSACTIONS by (&#39;Region&#39;, &#39;Country&#39;) full, q3_PYTRANSACTIONS by (&#39;Region&#39;, &#39;Country&#39;) full,q3_PY_2_TRANSACTIONS by (&#39;Region&#39;, &#39;Country&#39;)  full, q2_CYCUSTOMER by (&#39;Region&#39;, &#39;Country&#39;) full, q2_PYCUSTOMER by (&#39;Region&#39;, &#39;Country&#39;) full,q2_PY_2_CUSTOMER by (&#39;Region&#39;, &#39;Country&#39;) full, q3_CYCUSTOMER by (&#39;Region&#39;, &#39;Country&#39;) full, q3_PYCUSTOMER by (&#39;Region&#39;, &#39;Country&#39;) full,q3_PY_2_CUSTOMER by (&#39;Region&#39;, &#39;Country&#39;)full, q2_CYSHARE by (&#39;Region&#39;, &#39;Country&#39;) full, q2_PYSHARE by (&#39;Region&#39;, &#39;Country&#39;) full,q2_PY_2_SHARE by (&#39;Region&#39;, &#39;Country&#39;) full, q3_CYSHARE by (&#39;Region&#39;, &#39;Country&#39;) full, q3_PYSHARE by (&#39;Region&#39;, &#39;Country&#39;) full,q3_PY_2_SHARE by (&#39;Region&#39;, &#39;Country&#39;),MasterHierarchy by (&#39;Level_1&#39;, &#39;Level_2&#39;) ;\nn\nresult_SubCloud = foreach result_SubCloud generate &quot;    ↳  &quot; + coalesce(MasterHierarchy.&#39;Level_2&#39;, q2_CYACV.&#39;Country&#39;, q2_PYACV.&#39;Country&#39;, q3_CYACV.&#39;Country&#39;, q3_PYACV.&#39;Country&#39;, q2_CYAOV.&#39;Country&#39;, q2_PYAOV.&#39;Country&#39;, q3_CYAOV.&#39;Country&#39;, q3_PYAOV.&#39;Country&#39;,q2_CYREDACCOUNTS.&#39;Country&#39;, q2_PYREDACCOUNTS.&#39;Country&#39;, q3_CYREDACCOUNTS.&#39;Country&#39;, q3_PYREDACCOUNTS.&#39;Country&#39;, q2_CYT_P.&#39;Country&#39;, q2_PYT_P.&#39;Country&#39;, q3_CYT_P.&#39;Country&#39;, q3_PYT_P.&#39;Country&#39;, q2_CYAVAILABILITY.&#39;Country&#39;, q2_PYAVAILABILITY.&#39;Country&#39;, q3_CYAVAILABILITY.&#39;Country&#39;, q3_PYAVAILABILITY.&#39;Country&#39;, q2_CYTRANSACTIONS.&#39;Country&#39;, q2_PYTRANSACTIONS.&#39;Country&#39;, q3_CYTRANSACTIONS.&#39;Country&#39;, q3_PYTRANSACTIONS.&#39;Country&#39;, q2_CYAVAILABILITY.&#39;Country&#39;, q2_PYAVAILABILITY.&#39;Country&#39;, q3_CYAVAILABILITY.&#39;Country&#39;, q3_PYAVAILABILITY.&#39;Country&#39;, q2_CYCUSTOMER.&#39;Country&#39;, q2_PYCUSTOMER.&#39;Country&#39;, q3_CYCUSTOMER.&#39;Country&#39;, q3_PYCUSTOMER.&#39;Country&#39;, q2_CYSHARE.&#39;Country&#39;, q2_PYSHARE.&#39;Country&#39;, q3_CYSHARE.&#39;Country&#39;, q3_PYSHARE.&#39;Country&#39;) as &#39;Region&#39;,  coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) as &#39;YTD ACV Absolute&#39;, ((coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;, ((coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YTD ACV Growth&#39;, coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) as &#39;YTD AOV Absolute&#39;, ((coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, ((coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YTD AOV Growth&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;,coalesce(sum(q2_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q2&#39;,coalesce(sum(q3_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q3&#39;,coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q2&#39; ,coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q2&#39;,coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q3&#39; ,coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;,(coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, (coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) / coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0)) * 100 as &#39;YTD Attrition TTM Rate&#39;, coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;YTD Red_Accounts Absolute&#39;, ((coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, ((coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YTD Red_Accounts Growth&#39;, coalesce(sum(q2_CYT_P.&#39;CTS&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CTS Absolute&#39;, coalesce(sum(q3_CYT_P.&#39;CTS&#39;), 0) as &#39;YTD CTS Absolute&#39;, ((coalesce(sum(q2_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(q2_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(q2_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} CTS Growth&#39;, ((coalesce(sum(q3_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(q3_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(q3_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YTD CTS Growth&#39;, coalesce(sum(q2_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Availability Absolute&#39;, coalesce(sum(q3_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;YTD Availability Absolute&#39;, ((coalesce(sum(q2_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(q2_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(q2_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Availability Growth&#39;, ((coalesce(sum(q3_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(q3_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(q3_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YTD Availability Growth&#39;, coalesce(sum(q2_CYTRANSACTIONS.&#39;Transactions&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Transactions Absolute&#39;, coalesce(sum(q3_CYTRANSACTIONS.&#39;Transactions&#39;), 0) as &#39;YTD Transactions Absolute&#39;, ((coalesce(sum(q2_CYTRANSACTIONS.&#39;Transactions&#39;), 0) - coalesce(sum(q2_PYTRANSACTIONS.&#39;Transactions&#39;), 0)) / coalesce(sum(q2_PYTRANSACTIONS.&#39;Transactions&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Transactions Growth&#39;, ((coalesce(sum(q3_CYTRANSACTIONS.&#39;Transactions&#39;), 0) - coalesce(sum(q3_PYTRANSACTIONS.&#39;Transactions&#39;), 0)) / coalesce(sum(q3_PYTRANSACTIONS.&#39;Transactions&#39;), 0)) * 100 as &#39;YTD Transactions Growth&#39;, coalesce(sum(q2_CYCUSTOMER.&#39;Customer2&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Customer Absolute&#39;, coalesce(sum(q3_CYCUSTOMER.&#39;Customer2&#39;), 0) as &#39;YTD Customer Absolute&#39;, ((coalesce(sum(q2_CYCUSTOMER.&#39;Customer2&#39;), 0) - coalesce(sum(q2_PYCUSTOMER.&#39;Customer2&#39;), 0)) / coalesce(sum(q2_PYCUSTOMER.&#39;Customer2&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Customer Growth&#39;, ((coalesce(sum(q3_CYCUSTOMER.&#39;Customer2&#39;), 0) - coalesce(sum(q3_PYCUSTOMER.&#39;Customer2&#39;), 0)) / coalesce(sum(q3_PYCUSTOMER.&#39;Customer2&#39;), 0)) * 100 as &#39;YTD Customer Growth&#39;, coalesce(sum(q2_CYSHARE.&#39;TAM2&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} TAM Absolute&#39;, coalesce(sum(q3_CYSHARE.&#39;TAM2&#39;), 0) as &#39;YTD TAM Absolute&#39;, (coalesce(sum(q2_CYAOV.&#39;AOV&#39;),0) ) / coalesce(sum(q2_CYSHARE.&#39;TAM2&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} TAM Growth&#39;,(coalesce(sum(q3_CYAOV.&#39;AOV&#39;),0) )/ coalesce(sum(q3_CYSHARE.&#39;TAM2&#39;), 0)   as &#39;YTD TAM Growth&#39;, coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE Absolute&#39;, coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) as &#39;YTD SE Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) - coalesce(sum(q2_PYHC.&#39;SE&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;SE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} SE Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) - coalesce(sum(q3_PYHC.&#39;SE&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;SE&#39;), 0)) * 100 as &#39;YTD SE Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YTD SE CAGR&#39;, coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE Absolute&#39;, coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) as &#39;YTD AE Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) - coalesce(sum(q2_PYHC.&#39;AE&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;AE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AE Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) - coalesce(sum(q3_PYHC.&#39;AE&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;AE&#39;), 0)) * 100 as &#39;YTD AE Growth&#39;, (power(coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;YTD AE CAGR&#39;,coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime Absolute&#39;, coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) as &#39;YTD Co_Prime Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) - coalesce(sum(q2_PYHC.&#39;Co_Prime&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;Co_Prime&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Co_Prime Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) - coalesce(sum(q3_PYHC.&#39;Co_Prime&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;Co_Prime&#39;), 0)) * 100 as &#39;YTD Co_Prime Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YTD Co_Prime CAGR&#39;, coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE Absolute&#39;, coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) as &#39;YTD SWE Absolute&#39;, ((coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(q2_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(q2_PYSW.&#39;SWE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39;, ((coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(q3_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(q3_PYSW.&#39;SWE&#39;), 0)) * 100 as &#39;YTD SWE Growth&#39;,(power(coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) / coalesce(sum(q2_PY_2_SW.&#39;SWE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE CAGR&#39;,(power(coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) / coalesce(sum(q3_PY_2_SW.&#39;SWE&#39;), 0),(1/2))-1)*100 as &#39;YTD SWE CAGR&#39;, coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA Absolute&#39;, coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) as &#39;YTD INFRA Absolute&#39;, ((coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) - coalesce(sum(q2_PYSW.&#39;INFRA&#39;), 0)) / coalesce(sum(q2_PYSW.&#39;INFRA&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;, ((coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) - coalesce(sum(q3_PYSW.&#39;INFRA&#39;), 0)) / coalesce(sum(q3_PYSW.&#39;INFRA&#39;), 0)) * 100 as &#39;YTD INFRA Growth&#39;,(power(coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) / coalesce(sum(q2_PY_2_SW.&#39;INFRA&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA CAGR&#39;,(power(coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) / coalesce(sum(q3_PY_2_SW.&#39;INFRA&#39;), 0),(1/2))-1)*100 as &#39;YTD INFRA CAGR&#39;,last(MasterHierarchy.&#39;Level_2_Sort_Code&#39;)  as &#39;Sort_Code&#39;;\nnresult_Cloud_Level3 = group  q2_CYACV by (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q2_PYACV by (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q3_CYACV by (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q3_PYACV by (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q2_CYAOV by (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q2_PYAOV by (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q3_CYAOV by (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q3_PYAOV by (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full,  q2_CYPipegen by (&#39;Region&#39;, &#39;Country&#39;,&#39;Cloud_2&#39;) full, q2_PYPipegen by (&#39;Region&#39;, &#39;Country&#39;,&#39;Cloud_2&#39;) full, q3_CYPipegen by (&#39;Region&#39;, &#39;Country&#39;,&#39;Cloud_2&#39;) full, q3_PYPipegen by (&#39;Region&#39;, &#39;Country&#39;,&#39;Cloud_2&#39;) full, q2_CYHC by (&#39;Region&#39;, &#39;Country&#39;,&#39;Cloud_2&#39;) full, q2_PYHC by (&#39;Region&#39;, &#39;Country&#39;,&#39;Cloud_2&#39;) full,q2_PY_2_HC by (&#39;Region&#39;, &#39;Country&#39;,&#39;Cloud_2&#39;) full, q3_CYHC by (&#39;Region&#39;, &#39;Country&#39;,&#39;Cloud_2&#39;) full, q3_PYHC by (&#39;Region&#39;, &#39;Country&#39;,&#39;Cloud_2&#39;) full,  q3_PY_2_HC by (&#39;Region&#39;, &#39;Country&#39;,&#39;Cloud_2&#39;) full, q2_CYSW by (&#39;Region&#39;, &#39;Country&#39;,&#39;Cloud_2&#39;) full, q2_PYSW by (&#39;Region&#39;, &#39;Country&#39;,&#39;Cloud_2&#39;) full,q2_PY_2_SW by (&#39;Region&#39;, &#39;Country&#39;,&#39;Cloud_2&#39;) full, q3_CYSW by (&#39;Region&#39;, &#39;Country&#39;,&#39;Cloud_2&#39;) full, q3_PYSW by (&#39;Region&#39;, &#39;Country&#39;,&#39;Cloud_2&#39;) full,  q3_PY_2_SW by (&#39;Region&#39;, &#39;Country&#39;,&#39;Cloud_2&#39;) full,q2_CYATT by (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q2_PYATT by (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q3_CYATT by (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q3_PYATT by (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;)full, q2_CYREDACCOUNTS by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q2_PYREDACCOUNTS by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full,q2_PY_2_REDACCOUNTS by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q3_CYREDACCOUNTS by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q3_PYREDACCOUNTS by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full,q3_PY_2_REDACCOUNTS by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q2_CYT_P by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q2_PYT_P by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full,q2_PY_2_T_P by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q3_CYT_P by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q3_PYT_P by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full,q3_PY_2_T_P by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q2_CYAVAILABILITY by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q2_PYAVAILABILITY by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full,q2_PY_2_AVAILABILITY by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q3_CYAVAILABILITY by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q3_PYAVAILABILITY by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full,q3_PY_2_AVAILABILITY by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q2_CYTRANSACTIONS by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q2_PYTRANSACTIONS by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full,q2_PY_2_TRANSACTIONS by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q3_CYTRANSACTIONS by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q3_PYTRANSACTIONS by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full,q3_PY_2_TRANSACTIONS by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;)  full, q2_CYCUSTOMER by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q2_PYCUSTOMER by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full,q2_PY_2_CUSTOMER by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q3_CYCUSTOMER by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q3_PYCUSTOMER by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full,q3_PY_2_CUSTOMER by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;)full, q2_CYSHARE by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q2_PYSHARE by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full,q2_PY_2_SHARE by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q3_CYSHARE by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full, q3_PYSHARE by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;) full,q3_PY_2_SHARE by  (&#39;Region&#39;, &#39;Country&#39;, &#39;Cloud_2&#39;),MasterHierarchy by (&#39;Level_1&#39;, &#39;Level_2&#39;,&#39;Level_3&#39;)  ;\nn\nresult_Cloud_Level3 = foreach result_Cloud_Level3 generate &quot;          &quot; + coalesce(MasterHierarchy.&#39;Level_3&#39;, q2_CYACV.&#39;Cloud_2&#39;, q2_PYACV.&#39;Cloud_2&#39;, q3_CYACV.&#39;Cloud_2&#39;, q3_PYACV.&#39;Cloud_2&#39;, q2_CYAOV.&#39;Cloud_2&#39;, q2_PYAOV.&#39;Cloud_2&#39;, q3_CYAOV.&#39;Cloud_2&#39;, q3_PYAOV.&#39;Cloud_2&#39;,q2_CYREDACCOUNTS.&#39;Cloud_2&#39;, q2_PYREDACCOUNTS.&#39;Cloud_2&#39;, q3_CYREDACCOUNTS.&#39;Cloud_2&#39;, q3_PYREDACCOUNTS.&#39;Cloud_2&#39;, q2_CYT_P.&#39;Cloud_2&#39;, q2_PYT_P.&#39;Cloud_2&#39;, q3_CYT_P.&#39;Cloud_2&#39;, q3_PYT_P.&#39;Cloud_2&#39;, q2_CYAVAILABILITY.&#39;Cloud_2&#39;, q2_PYAVAILABILITY.&#39;Cloud_2&#39;, q3_CYAVAILABILITY.&#39;Cloud_2&#39;, q3_PYAVAILABILITY.&#39;Cloud_2&#39;, q2_CYTRANSACTIONS.&#39;Cloud_2&#39;, q2_PYTRANSACTIONS.&#39;Cloud_2&#39;, q3_CYTRANSACTIONS.&#39;Cloud_2&#39;, q3_PYTRANSACTIONS.&#39;Cloud_2&#39;, q2_CYAVAILABILITY.&#39;Cloud_2&#39;, q2_PYAVAILABILITY.&#39;Cloud_2&#39;, q3_CYAVAILABILITY.&#39;Cloud_2&#39;, q3_PYAVAILABILITY.&#39;Cloud_2&#39;, q2_CYCUSTOMER.&#39;Cloud_2&#39;, q2_PYCUSTOMER.&#39;Cloud_2&#39;, q3_CYCUSTOMER.&#39;Cloud_2&#39;, q3_PYCUSTOMER.&#39;Cloud_2&#39;, q2_CYSHARE.&#39;Cloud_2&#39;, q2_PYSHARE.&#39;Cloud_2&#39;, q3_CYSHARE.&#39;Cloud_2&#39;, q3_PYSHARE.&#39;Cloud_2&#39;) as &#39;Region&#39;,  coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) as &#39;YTD ACV Absolute&#39;, ((coalesce(sum(q2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;, ((coalesce(sum(q3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(q3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YTD ACV Growth&#39;, coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} YTD AOV Absolute&#39;, ((coalesce(sum(q2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, ((coalesce(sum(q3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(q3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YTD AOV Growth&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;, coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;YTD Red_Accounts Absolute&#39;, ((coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, ((coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YTD Red_Accounts Growth&#39;, coalesce(sum(q2_CYT_P.&#39;CTS&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CTS Absolute&#39;, coalesce(sum(q3_CYT_P.&#39;CTS&#39;), 0) as &#39;YTD CTS Absolute&#39;, ((coalesce(sum(q2_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(q2_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(q2_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} CTS Growth&#39;, ((coalesce(sum(q3_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(q3_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(q3_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YTD CTS Growth&#39;, coalesce(sum(q2_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Availability Absolute&#39;, coalesce(sum(q3_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;YTD Availability Absolute&#39;, ((coalesce(sum(q2_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(q2_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(q2_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Availability Growth&#39;, ((coalesce(sum(q3_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(q3_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(q3_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YTD Availability Growth&#39;, coalesce(sum(q2_CYTRANSACTIONS.&#39;Transactions&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Transactions Absolute&#39;, coalesce(sum(q3_CYTRANSACTIONS.&#39;Transactions&#39;), 0) as &#39;YTD Transactions Absolute&#39;, ((coalesce(sum(q2_CYTRANSACTIONS.&#39;Transactions&#39;), 0) - coalesce(sum(q2_PYTRANSACTIONS.&#39;Transactions&#39;), 0)) / coalesce(sum(q2_PYTRANSACTIONS.&#39;Transactions&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Transactions Growth&#39;, ((coalesce(sum(q3_CYTRANSACTIONS.&#39;Transactions&#39;), 0) - coalesce(sum(q3_PYTRANSACTIONS.&#39;Transactions&#39;), 0)) / coalesce(sum(q3_PYTRANSACTIONS.&#39;Transactions&#39;), 0)) * 100 as &#39;YTD Transactions Growth&#39;, coalesce(sum(q2_CYCUSTOMER.&#39;Customer3&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Customer Absolute&#39;, coalesce(sum(q3_CYCUSTOMER.&#39;Customer3&#39;), 0) as &#39;YTD Customer Absolute&#39;, ((coalesce(sum(q2_CYCUSTOMER.&#39;Customer3&#39;), 0) - coalesce(sum(q2_PYCUSTOMER.&#39;Customer3&#39;), 0)) / coalesce(sum(q2_PYCUSTOMER.&#39;Customer3&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Customer Growth&#39;, ((coalesce(sum(q3_CYCUSTOMER.&#39;Customer3&#39;), 0) - coalesce(sum(q3_PYCUSTOMER.&#39;Customer3&#39;), 0)) / coalesce(sum(q3_PYCUSTOMER.&#39;Customer3&#39;), 0)) * 100 as &#39;YTD Customer Growth&#39;, coalesce(sum(q2_CYSHARE.&#39;TAM3&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} TAM Absolute&#39;, coalesce(sum(q3_CYSHARE.&#39;TAM3&#39;), 0) as &#39;YTD TAM Absolute&#39;,(coalesce(sum(q2_CYAOV.&#39;AOV&#39;),0) ) / coalesce(sum(q2_CYSHARE.&#39;TAM3&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} TAM Growth&#39;, (coalesce(sum(q3_CYAOV.&#39;AOV&#39;),0) )/ coalesce(sum(q3_CYSHARE.&#39;TAM3&#39;), 0)   as &#39;YTD TAM Growth&#39;, coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE Absolute&#39;, coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) as &#39;YTD SE Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) - coalesce(sum(q2_PYHC.&#39;SE&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;SE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} SE Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) - coalesce(sum(q3_PYHC.&#39;SE&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;SE&#39;), 0)) * 100 as &#39;YTD SE Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YTD SE CAGR&#39;, coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE Absolute&#39;, coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) as &#39;YTD AE Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) - coalesce(sum(q2_PYHC.&#39;AE&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;AE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AE Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) - coalesce(sum(q3_PYHC.&#39;AE&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;AE&#39;), 0)) * 100 as &#39;YTD AE Growth&#39;, (power(coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;YTD AE CAGR&#39;,coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime Absolute&#39;, coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) as &#39;YTD Co_Prime Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) - coalesce(sum(q2_PYHC.&#39;Co_Prime&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;Co_Prime&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Co_Prime Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) - coalesce(sum(q3_PYHC.&#39;Co_Prime&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;Co_Prime&#39;), 0)) * 100 as &#39;YTD Co_Prime Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YTD Co_Prime CAGR&#39;, coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE Absolute&#39;, coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) as &#39;YTD SWE Absolute&#39;, ((coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(q2_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(q2_PYSW.&#39;SWE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39;, ((coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(q3_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(q3_PYSW.&#39;SWE&#39;), 0)) * 100 as &#39;YTD SWE Growth&#39;,(power(coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) / coalesce(sum(q2_PY_2_SW.&#39;SWE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE CAGR&#39;,(power(coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) / coalesce(sum(q3_PY_2_SW.&#39;SWE&#39;), 0),(1/2))-1)*100 as &#39;YTD SWE CAGR&#39;, coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA Absolute&#39;, coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) as &#39;YTD INFRA Absolute&#39;, ((coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) - coalesce(sum(q2_PYSW.&#39;INFRA&#39;), 0)) / coalesce(sum(q2_PYSW.&#39;INFRA&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;, ((coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) - coalesce(sum(q3_PYSW.&#39;INFRA&#39;), 0)) / coalesce(sum(q3_PYSW.&#39;INFRA&#39;), 0)) * 100 as &#39;YTD INFRA Growth&#39;,(power(coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) / coalesce(sum(q2_PY_2_SW.&#39;INFRA&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA CAGR&#39;,(power(coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) / coalesce(sum(q3_PY_2_SW.&#39;INFRA&#39;), 0),(1/2))-1)*100 as &#39;YTD INFRA CAGR&#39;,last(MasterHierarchy.&#39;Level_3_Sort_Code&#39;)  as &#39;Sort_Code&#39;,&quot;          &quot; + coalesce(last(MasterHierarchy.&#39;Level_2&#39;), last(q2_CYACV.&#39;Country&#39;), last(q2_PYACV.&#39;Country&#39;), last(q3_CYACV.&#39;Country&#39;), last(q3_PYACV.&#39;Country&#39;), last(q2_CYAOV.&#39;Country&#39;), last(q2_PYAOV.&#39;Country&#39;), last(q3_CYAOV.&#39;Country&#39;), last(q3_PYAOV.&#39;Country&#39;)) as &#39;ParentCloud&#39;;\nresult_Cloud_Level3 = filter result_Cloud_Level3 by &#39;Region&#39; != &#39;ParentCloud&#39;;\nline =  group MasterHierarchy by &#39;all&#39;;line= foreach line generate &quot;----------------------------------------------------&quot; as &#39;Region&#39;,&quot;{{cell(Quarter_1.selection,0,&quot;Line_Rank&quot;).asString()}}&quot;  as &#39;Sort_Code&#39;;\nnFinal = union result, result_SubCloud, result_Cloud_Level3,line;\nnFinal = filter Final by &#39;Sort_Code&#39; != &quot;&quot;;\nFinal = filter Final by &#39;Region&#39; not in {{cell(Quarter_1.selection,0,&quot;Filter_Table_2&quot;).asString()}};\nFinal = order Final by (&#39;Sort_Code&#39; asc,  &#39;Region&#39; asc);\nFinal = foreach Final generate &#39;Region&#39;+&quot;                      &quot; as &#39;Region&#39;, &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Customer Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Customer Absolute&#39;,&#39;YTD Customer Absolute&#39; as &#39;YTD Customer Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Customer Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Customer Growth&#39;,   &#39;YTD Customer Growth&#39; as  &#39;YTD Customer Growth&#39;, &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} TAM Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} TAM Absolute&#39;,&quot;-&quot; as &#39;YTD TAM Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} TAM Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} TAM Growth&#39;,   &quot;-&quot; as  &#39;YTD TAM Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;,&#39;YTD Red_Accounts Absolute&#39; as &#39;YTD Red_Accounts Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;,   &#39;YTD Red_Accounts Growth&#39; as  &#39;YTD Red_Accounts Growth&#39;;\n",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      },
      "Table_Measures_4_Top_Header": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Measures_4_Top_Header",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nresult_Total = group MasterHierarchy by all;\nresult_Total = foreach result_Total generate &quot;  &quot; as &#39;$ values in millions&#39;, &quot;CSM                    &quot; as &#39;CSM&#39;, &quot;PSM                    &quot; as &#39;PSM&#39;,&quot;Red Accounts                    &quot; as &#39;Red Accounts&#39;;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart",
          "visualizationType": "hbar"
        }
      },
      "Subcloud_1": {
        "broadcastFacet": true,
        "datasets": [
          {
            "id": "0Fbf2000000TY0CCAW",
            "label": "APM_ACV_AUTO1",
            "name": "APM_ACV_AUTO1",
            "url": "/services/data/v44.0/wave/datasets/0Fbf2000000TY0CCAW"
          }
        ],
        "isGlobal": false,
        "query": {
          "query": "{&quot;measures&quot;:[[&quot;count&quot;,&quot;*&quot;]],&quot;groups&quot;:[&quot;Subcloud&quot;]}",
          "version": -1
        },
        "receiveFacet": true,
        "selectMode": "multi",
        "type": "aggregateflex",
        "useGlobal": true,
        "visualizationParameters": {}
      },
      "Table_Page_tam_Header": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Page_tam_Header",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;Level_1&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nACV = load &quot;APM_ACV_AUTO1&quot;;\nACV = filter ACV by &#39;Segment&#39; != &quot;CSG&quot;;\nACV = filter ACV by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nACV = filter ACV by &#39;Region&#39; in {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};;\nACV = group ACV by (&#39;Region&#39;,&#39;Subcloud&#39;, &#39;Quarter&#39;,&#39;Month&#39;, &#39;Fiscal_Year&#39;, &#39;Region&#39; , &#39;Country&#39;);\nACV = foreach ACV generate  &#39;Region&#39; as &#39;Region&#39;, &#39;Subcloud&#39; as &#39;Subcloud&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39; ,&#39;Month&#39; as &#39;Month&#39;,sum(&#39;ACV&#39;) as &#39;ACV&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ; \n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD NONE For Fake Header line----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nAPM_None = load &quot;APM_ACV_AUTO1&quot;;\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER ACV----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYACV = filter ACV by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp;{{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp;{{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYACV = filter ACV by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nn\nAOV = load &quot;APM_AOV&quot;;\nAOV = filter AOV by &#39;Segment&#39; != &quot;CSG&quot;;\nAOV = filter AOV by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\n--AOV = filter AOV by &#39;Region&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nAOV = foreach AOV generate  &#39;Region&#39; as &#39;Region&#39;, &#39;Subcloud&#39; as &#39;Subcloud&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;AOV&#39;) as &#39;AOV&#39;,  {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;; \n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER AOV ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYAOV = filter AOV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYAOV = filter AOV by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYAOV = filter AOV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}}&amp;&amp;{{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYAOV = filter AOV by &#39;Month&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------/////////////////////////////-----------LOAD ATTRITION ----------------/////////////////////////////////////////\n\nAttrition = load &quot;APM_Attrition&quot;;\nAttrition = filter Attrition by &#39;Segment&#39; != &quot;CSG&quot;;\nAttrition = filter Attrition by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\n--Attrition = filter Attrition by &#39;Region&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nAttrition = foreach Attrition generate  &#39;Region&#39; as &#39;Region&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Attrition&#39;)*-1 as &#39;Attrition_Product&#39;, sum(&#39;TTM&#39;)*-1 as &#39;TTM_Product&#39;,sum(&#39;AOV_twelve_month_ago&#39;) as &#39;AOV_twelve_month_ago&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\n----------------------------------------------------------------------------------------------FILTER ATTRITION -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\n q2_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYATT = filter Attrition by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYATT = filter Attrition by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq4_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n------------------------------------------------------------------------------------------------------------------------------------------------LOAD PIPEGEN--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nPipegen = load &quot;APM_Pipegen1&quot;;\nPipegen = filter Pipegen by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};Pipegen = filter Pipegen by &#39;Segment&#39; != &quot;CSG&quot;;\nPipegen = filter Pipegen by &#39;Region&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};Pipegen = group Pipegen by (&#39;Fiscal_Year&#39;,&#39;Quarter&#39;,&#39;Region&#39;,&#39;Region&#39;,&#39;Month&#39;,&#39;Country&#39;);\nPipegen = foreach Pipegen generate  &#39;Region&#39; as &#39;Region&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Pipegen&#39;) as &#39;Pipegen&#39;,  {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;  ; \n\nq2_CYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}} &amp;&amp;{{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD /FILTER HC---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nHC = load &quot;APM_HC&quot;;\nHC = filter HC by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nHC = foreach HC generate  &#39;Region&#39; as &#39;Region&#39;, &#39;Subcloud&#39; as &#39;Subcloud&#39;,&#39;Cloud_2&#39; as &#39;Cloud_2&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;SE&#39;) as &#39;SE&#39;,sum(&#39;AE&#39;) as &#39;AE&#39;,sum(&#39;Co_Prime&#39;) as &#39;Co_Prime&#39;,  {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;  ; \n--HC = filter HC by &#39;Region&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYHC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYHC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PY_2_HC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYHC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYHC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD SWE INFRA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSW = load &quot;APM_SWE_INFRA&quot;;\nSW = filter SW by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nSW = foreach SW generate  &#39;Region&#39; as &#39;Region&#39;, &#39;Subcloud&#39; as &#39;Subcloud&#39;,&#39;Cloud_2&#39; as &#39;Cloud_2&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;SWE&#39;) as &#39;SWE&#39;,sum(&#39;INFRA&#39;) as &#39;INFRA&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ; SW = filter SW by &#39;Region&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYSW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYSW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PY_2_SW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PY_2_SW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD T_P------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nT_P = load &quot;APM_T_P&quot;;\nT_P = filter T_P by &#39;Region&#39; != &quot;TOTALS/SUMMARY&quot;;\nT_P = filter T_P by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nT_P = foreach T_P generate  &#39;Region&#39; as &#39;Region&#39;, &#39;Subcloud&#39; as &#39;Subcloud&#39;,&#39;Cloud_2&#39; as &#39;Cloud_2&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;CTS&#39;) as &#39;CTS&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ; \nT_P = filter T_P by &#39;Region&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYT_P = filter T_P by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYT_P = filter T_P by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PY_2_T_P = filter T_P by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PY_2_T_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD TRANSACTION------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nTRANSACTION = load &quot;APM_T_P_Transactions&quot;;TRANSACTION = filter TRANSACTION by &#39;Region&#39; != &quot;TOTALS/SUMMARY&quot;;\nTRANSACTION = filter TRANSACTION by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nTRANSACTION = foreach TRANSACTION generate  &#39;Region&#39; as &#39;Region&#39;, &#39;Subcloud&#39; as &#39;Subcloud&#39;,&#39;Cloud_2&#39; as &#39;Cloud_2&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Transactions&#39;) as &#39;Transactions&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ; \nTRANSACTION = filter TRANSACTION by &#39;Region&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYTRANSACTION = filter TRANSACTION by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYTRANSACTION = filter TRANSACTION by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PY_2_TRANSACTION = filter TRANSACTION by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PY_2_TRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD AVAILABILITY------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nAVAILABILITY = load &quot;APM_TECH_AVAILABILITY&quot;;AVAILABILITY = filter AVAILABILITY by &#39;Region&#39; != &quot;TOTALS/SUMMARY&quot;;\nAVAILABILITY = filter AVAILABILITY by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nAVAILABILITY = foreach AVAILABILITY generate  &#39;Region&#39; as &#39;Region&#39;, &#39;Subcloud&#39; as &#39;Subcloud&#39;,&#39;Cloud_2&#39; as &#39;Cloud_2&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Availability&#39;) as &#39;Availability&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ; \nAVAILABILITY = filter AVAILABILITY by &#39;Region&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYAVAILABILITY = filter AVAILABILITY by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYAVAILABILITY = filter AVAILABILITY by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PY_2_AVAILABILITY = filter AVAILABILITY by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PY_2_AVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD REDACCOUNTS------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nREDACCOUNTS = load &quot;APM_REDACCOUNTS&quot;;REDACCOUNTS = filter REDACCOUNTS by &#39;Region&#39; != &quot;TOTALS/SUMMARY&quot;;\nREDACCOUNTS = filter REDACCOUNTS by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nREDACCOUNTS = foreach REDACCOUNTS generate  &#39;Region&#39; as &#39;Region&#39;, &#39;Subcloud&#39; as &#39;Subcloud&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Red_Accounts&#39;) as &#39;Red_Accounts&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ; \nREDACCOUNTS = filter REDACCOUNTS by &#39;Region&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter_REDACCOUNTS&quot;).asString()}};\nq2_CYREDACCOUNTS = filter REDACCOUNTS by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYREDACCOUNTS = filter REDACCOUNTS by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PY_2_REDACCOUNTS = filter REDACCOUNTS by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PY_2_REDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD MARKET SHARE------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSHARE = load &quot;APM_MARKET_SHARE&quot;;--SHARE = filter SHARE by &#39;Region&#39; == &quot;TOTALS/SUMMARY&quot;;\nSHARE = filter SHARE by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nSHARE = foreach SHARE generate  &#39;Region&#39; as &#39;Region&#39;, &#39;Subcloud&#39; as &#39;Subcloud&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Original_TAM&#39;) as &#39;TAM&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ; \n--SHARE = filter SHARE by &#39;Region&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYSHARE = filter SHARE by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYSHARE = filter SHARE by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PY_2_SHARE = filter SHARE by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYSHARE = filter SHARE by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_cum&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYSHARE = filter SHARE by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_cum&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PY_2_SHARE = filter SHARE by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_cum&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD CUSTOMER------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nCUSTOMER = load &quot;APM_MARKET_CUSTOMER&quot;;CUSTOMER = filter CUSTOMER by &#39;Region&#39; == &quot;TOTALS/SUMMARY&quot;;\nCUSTOMER = filter CUSTOMER by {{column(Filter_Region.selection,[&quot;Region&quot;]).asEquality(&#39;Region&#39;)}};\nCUSTOMER = foreach CUSTOMER generate  &#39;Region&#39; as &#39;Region&#39;, &#39;Subcloud&#39; as &#39;Subcloud&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Customer&#39;) as &#39;Customer&#39;,sum(&#39;Cloud_m1&#39;) as &#39;Customer1&#39;,sum(&#39;Cloud_m2&#39;) as &#39;Customer2&#39;,sum(&#39;Cloud_m3&#39;) as &#39;Customer3&#39;, {{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39; ;\n \n--CUSTOMER = filter CUSTOMER by &#39;Region&#39; in  {{cell(Static_Cloud_Filter.selection,0,&quot;filter&quot;).asString()}};\nq2_CYCUSTOMER = filter CUSTOMER by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYCUSTOMER = filter CUSTOMER by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PY_2_CUSTOMER = filter CUSTOMER by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_cum&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_cum&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PY_2_CUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}}) &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Grouping------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nresult_Total = group q2_CYACV by all full, q2_PYACV by all full, q3_CYACV by all full, q3_PYACV by all full, q2_CYAOV by all full, q2_PYAOV by all full, q3_CYAOV by all full, q3_PYAOV by all full, q2_CYATT by all full, q2_PYATT by all full, q3_CYATT by all full, q3_PYATT by all full,q4_CYATT by all full,  q2_CYPipegen by all full, q2_PYPipegen by all full, q3_CYPipegen by all full, q3_PYPipegen by all full,q2_CYHC by all full, q2_PYHC by all full,q2_PY_2_HC by all full, q3_CYHC by all full, q3_PYHC by all full,q3_PY_2_HC by all full, q2_CYSW by all full, q2_PYSW by all full,q2_PY_2_SW by all full, q3_CYSW by all full, q3_PYSW by all full,q3_PY_2_SW by all full, q2_CYT_P by all full, q2_PYT_P by all full, q3_CYT_P by all full, q3_PYT_P by all full, q2_CYTRANSACTION by all full, q2_PYTRANSACTION by all full, q3_CYTRANSACTION by all full, q3_PYTRANSACTION by all full, q2_CYAVAILABILITY by all full, q2_PYAVAILABILITY by all full, q3_CYAVAILABILITY by all full, q3_PYAVAILABILITY by all full, q2_CYREDACCOUNTS by all full, q2_PYREDACCOUNTS by all full, q3_CYREDACCOUNTS by all full, q3_PYREDACCOUNTS by all full, q2_CYSHARE by all full, q2_PYSHARE by all full, q3_CYSHARE by all full, q3_PYSHARE by all full, q2_CYCUSTOMER by all full, q2_PYCUSTOMER by all full, q3_CYCUSTOMER by all full, q3_PYCUSTOMER by all;\nn\nresult_Total = foreach result_Total generate &quot;TOTAL&quot; as &#39;Region&#39;, coalesce(sum(q2_CYACV.&#39;ACV&#39;),0) as &#39;A&#39;, coalesce(sum(q2_PYACV.&#39;ACV&#39;),0) as &#39;B&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;),0) as &#39;C&#39;, coalesce(sum(q3_PYACV.&#39;ACV&#39;),0) as &#39;D&#39;,coalesce(sum(q2_CYAOV.&#39;AOV&#39;),0) as &#39;E&#39;, coalesce(sum(q2_PYAOV.&#39;AOV&#39;),0) as &#39;F&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;),0) as &#39;G&#39;, coalesce(sum(q3_PYAOV.&#39;AOV&#39;),0) as &#39;H&#39;,coalesce(sum(q2_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q2&#39;,coalesce(sum(q3_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q3&#39;,coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q2&#39; ,coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q2&#39;,coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q3&#39; ,coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;,coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE Absolute&#39;, coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) as &#39;YTD SE Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) - coalesce(sum(q2_PYHC.&#39;SE&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;SE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} SE Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YTD SE CAGR&#39;, ((coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) - coalesce(sum(q3_PYHC.&#39;SE&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;SE&#39;), 0)) * 100 as &#39;YTD SE Growth&#39;, coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE Absolute&#39;, coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) as &#39;YTD AE Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) - coalesce(sum(q2_PYHC.&#39;AE&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;AE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AE Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) - coalesce(sum(q3_PYHC.&#39;AE&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;AE&#39;), 0)) * 100 as &#39;YTD AE Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;YTD AE CAGR&#39;, coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime Absolute&#39;, coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) as &#39;YTD Co_Prime Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) - coalesce(sum(q2_PYHC.&#39;Co_Prime&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;Co_Prime&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Co_Prime Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) - coalesce(sum(q3_PYHC.&#39;Co_Prime&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;Co_Prime&#39;), 0)) * 100 as &#39;YTD Co_Prime Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YTD Co_Prime CAGR&#39;, coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE Absolute&#39;, coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) as &#39;YTD SWE Absolute&#39;, ((coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(q2_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(q2_PYSW.&#39;SWE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39;, ((coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(q3_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(q3_PYSW.&#39;SWE&#39;), 0)) * 100 as &#39;YTD SWE Growth&#39;,(power(coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) / coalesce(sum(q2_PY_2_SW.&#39;SWE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE CAGR&#39;,(power(coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) / coalesce(sum(q3_PY_2_SW.&#39;SWE&#39;), 0),(1/2))-1)*100 as &#39;YTD SWE CAGR&#39;, coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA Absolute&#39;, coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) as &#39;YTD INFRA Absolute&#39;, ((coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) - coalesce(sum(q2_PYSW.&#39;INFRA&#39;), 0)) / coalesce(sum(q2_PYSW.&#39;INFRA&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;, ((coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) - coalesce(sum(q3_PYSW.&#39;INFRA&#39;), 0)) / coalesce(sum(q3_PYSW.&#39;INFRA&#39;), 0)) * 100 as &#39;YTD INFRA Growth&#39;,(power(coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) / coalesce(sum(q2_PY_2_SW.&#39;INFRA&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA CAGR&#39;,(power(coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) / coalesce(sum(q3_PY_2_SW.&#39;INFRA&#39;), 0),(1/2))-1)*100 as &#39;YTD INFRA CAGR&#39;, coalesce(sum(q2_CYT_P.&#39;CTS&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CTS Absolute&#39;, coalesce(sum(q3_CYT_P.&#39;CTS&#39;), 0) as &#39;YTD CTS Absolute&#39;, ((coalesce(sum(q2_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(q2_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(q2_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} CTS Growth&#39;, ((coalesce(sum(q3_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(q3_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(q3_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YTD CTS Growth&#39;, coalesce(sum(q2_CYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Transactions Absolute&#39;, coalesce(sum(q3_CYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;YTD Transactions Absolute&#39;, ((coalesce(sum(q2_CYTRANSACTION.&#39;Transactions&#39;), 0) - coalesce(sum(q2_PYTRANSACTION.&#39;Transactions&#39;), 0)) / coalesce(sum(q2_PYTRANSACTION.&#39;Transactions&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Transactions Growth&#39;, ((coalesce(sum(q3_CYTRANSACTION.&#39;Transactions&#39;), 0) - coalesce(sum(q3_PYTRANSACTION.&#39;Transactions&#39;), 0)) / coalesce(sum(q3_PYTRANSACTION.&#39;Transactions&#39;), 0)) * 100 as &#39;YTD Transactions Growth&#39;, coalesce(sum(q2_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Availability Absolute&#39;, coalesce(sum(q3_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;YTD Availability Absolute&#39;, ((coalesce(sum(q2_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(q2_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(q2_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Availability Growth&#39;, ((coalesce(sum(q3_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(q3_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(q3_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YTD Availability Growth&#39;,  coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;YTD Red_Accounts Absolute&#39;, ((coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, ((coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YTD Red_Accounts Growth&#39;,coalesce(sum(q2_CYSHARE.&#39;TAM&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} TAM Absolute&#39;,coalesce(sum(q3_CYSHARE.&#39;TAM&#39;), 0) as &#39;YTD TAM Absolute&#39;,(coalesce(sum(q2_CYAOV.&#39;AOV&#39;),0) ) / coalesce(sum(q2_CYSHARE.&#39;TAM&#39;), 0)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} TAM Growth&#39;, (coalesce(sum(q3_CYAOV.&#39;AOV&#39;),0) )/ coalesce(sum(q3_CYSHARE.&#39;TAM&#39;), 0)  as &#39;YTD TAM Growth&#39;, coalesce(sum(q2_CYCUSTOMER.&#39;Customer&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Customer Absolute&#39;, coalesce(sum(q3_CYCUSTOMER.&#39;Customer&#39;), 0) as &#39;YTD Customer Absolute&#39;, ((coalesce(sum(q2_CYCUSTOMER.&#39;Customer&#39;), 0) - coalesce(sum(q2_PYCUSTOMER.&#39;Customer&#39;), 0)) / coalesce(sum(q2_PYCUSTOMER.&#39;Customer&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Customer Growth&#39;, ((coalesce(sum(q3_CYCUSTOMER.&#39;Customer&#39;), 0) - coalesce(sum(q3_PYCUSTOMER.&#39;Customer&#39;), 0)) / coalesce(sum(q3_PYCUSTOMER.&#39;Customer&#39;), 0)) * 100 as &#39;YTD Customer Growth&#39;;\nnresult_Total = foreach result_Total generate &#39;A&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;,  &#39;C&#39; as  &#39;YTD ACV Absolute&#39;, ((A -B) / B) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;,((C - D) / D) * 100 as &#39;YTD ACV Growth&#39;,&#39;E&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;,  &#39;G&#39; as  &#39;YTD AOV Absolute&#39;, ((E -F) / F) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;,  ((G - H) / H) * 100  as &#39;YTD AOV Growth&#39;, coalesce(sum(&#39;Attrition_CY_Q2&#39;),0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Attrition Absolute&#39;, coalesce(sum(&#39;Attrition_CY_Q3&#39;),0) as &#39;YTD Attrition Absolute&#39;,(coalesce(round(sum(&#39;TTM_Product_CY_Q2&#39;), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q2), 0), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, (coalesce(round(sum(&#39;TTM_Product_CY_Q3&#39;), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q3), 0), 0)) * 100 as &#39;YTD Attrition TTM Rate&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PipeGen Absolute&#39;,&#39;YTD Pipegen Absolute&#39; as &#39;YTD PipeGen Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} PipeGen Growth&#39;,&#39;YTD Pipegen Growth&#39; as &#39;YTD PipeGen Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AEs&#39;,&#39;YTD AE Absolute&#39; as &#39;YTD AE Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;,&#39;YTD AE CAGR&#39; as &#39;YTD AE CAGR&#39; ,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime&#39;,&#39;YTD Co_Prime Absolute&#39; as &#39;YTD Co_Prime Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;,&#39;YTD Co_Prime CAGR&#39; as &#39;YTD Co_Prime CAGR&#39;, &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SEs&#39;,&#39;YTD SE Absolute&#39; as &#39;YTD SE Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;,&#39;YTD SE CAGR&#39; as &#39;YTD SE CAGR&#39; ,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE&#39;,&#39;YTD SWE Absolute&#39; as &#39;YTD SWE Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39;,&#39;YTD SWE Growth&#39; as &#39;YTD SWE Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA&#39;,&#39;YTD INFRA Absolute&#39; as &#39;YTD INFRA Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;,&#39;YTD INFRA Growth&#39; as &#39;YTD INFRA Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CTS Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CTS Absolute&#39;,&#39;YTD CTS Absolute&#39; as &#39;YTD CTS Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} CTS Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} CTS Growth&#39;,&#39;YTD CTS Growth&#39; as &#39;YTD CTS Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Availability Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Availability Absolute&#39;,&#39;YTD Availability Absolute&#39; as &#39;YTD Availability Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Availability Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Availability Growth&#39;,&#39;YTD Availability Growth&#39; as &#39;YTD Availability Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Transactions Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Transactions Absolute&#39;,&#39;YTD Transactions Absolute&#39; as &#39;YTD Transactions Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Transactions Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Transactions Growth&#39;,&#39;YTD Transactions Growth&#39; as &#39;YTD Transactions Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Customer Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Customer Absolute&#39;,&#39;YTD Customer Absolute&#39; as &#39;YTD Customer Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Customer Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Customer Growth&#39;,&#39;YTD Customer Growth&#39; as &#39;YTD Customer Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} TAM Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} TAM Absolute&#39;,&#39;YTD TAM Absolute&#39; as &#39;YTD TAM Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} TAM Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} TAM Growth&#39;,&#39;YTD TAM Growth&#39; as &#39;YTD TAM Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;,&#39;YTD Red_Accounts Absolute&#39; as &#39;YTD Red_Accounts Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;,&#39;YTD Red_Accounts Growth&#39; as &#39;YTD Red_Accounts Growth&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------NONE for Fake HEADER--------------------------------------------------------------------------------------------------------------\n;result_none = group APM_None by &#39;all&#39;; result_none = foreach result_none generate 0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;,  0 as  &#39;YTD ACV Absolute&#39;, 0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;,0 as &#39;YTD ACV Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, 0 as  &#39;YTD AOV Absolute&#39;, 0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, 0 as &#39;YTD AOV Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Attrition Absolute&#39;,0 as &#39;YTD Attrition Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, 0 as &#39;YTD Attrition TTM Rate&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PipeGen Absolute&#39;,0 as &#39;YTD PipeGen Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} PipeGen Growth&#39;,0 as &#39;YTD PipeGen Growth&#39;, 0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AEs&#39;,0 as &#39;YTD AE Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;,0 as &#39;YTD AE CAGR&#39; ,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime&#39;,0 as &#39;YTD Co_Prime Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;,0 as &#39;YTD Co_Prime CAGR&#39;, 0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SEs&#39;,0 as &#39;YTD SE Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;,0 as &#39;YTD SE CAGR&#39; ,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE&#39;,0 as &#39;YTD SWE Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39;,0 as &#39;YTD SWE Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA&#39;,0 as &#39;YTD INFRA Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;,0 as &#39;YTD INFRA Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CTS Absolute&#39;,0 as &#39;YTD CTS Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} CTS Growth&#39;,0 as &#39;YTD CTS Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Availability Absolute&#39;,0 as &#39;YTD Availability Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Availability Growth&#39;,0 as &#39;YTD Availability Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Transactions Absolute&#39;,0 as &#39;YTD Transactions Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Transactions Growth&#39;,0 as &#39;YTD Transactions Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Customer Absolute&#39;,0 as &#39;YTD Customer Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Customer Growth&#39;,0 as &#39;YTD Customer Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} TAM Absolute&#39;,0 as &#39;YTD TAM Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} TAM Growth&#39;,0 as &#39;YTD TAM Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;,0 as &#39;YTD Red_Accounts Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;,0 as &#39;YTD Red_Accounts Growth&#39;; \n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------UNION--------------------------------------------------------------------------------------------------------------\n;result_union = union result_none, result_Total;result_union = group result_union by &#39;all&#39;; final_result = foreach result_union generate &quot;TOTAL                        &quot; as &#39;Region&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Customer Absolute&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Customer Absolute&#39;, sum(&#39;YTD Customer Absolute&#39;) as &#39;YTD Customer Absolute&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Customer Growth&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Customer Growth&#39;, sum(&#39;YTD Customer Growth&#39;) as  &#39;YTD Customer Growth&#39;,sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} TAM Absolute&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} TAM Absolute&#39;, 0 as &#39;YTD TAM Absolute&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} TAM Growth&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} TAM Growth&#39;, 0 as  &#39;YTD TAM Growth&#39;,sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, sum(&#39;YTD Red_Accounts Absolute&#39;) as &#39;YTD Red_Accounts Absolute&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, sum(&#39;YTD Red_Accounts Growth&#39;) as  &#39;YTD Red_Accounts Growth&#39; ;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        }
      },
      "Table_Page_Tam_Header_Top": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Page_Tam_Header_Top",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nresult_Total = group MasterHierarchy by all;\nresult_Total = foreach result_Total generate &quot;  &quot; as &#39;$ values in millions&#39;, &quot;Customer #                    &quot; as &#39;Customer #&#39;,&quot;Market Share                    &quot; as &#39;TAM $ &amp; Market Share %&#39;,&quot;Red Accounts                    &quot; as &#39;Red Accounts&#39;;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart",
          "visualizationType": "hbar"
        }
      },
      "Table_Measures_3_Header": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Measures_3_Header",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;Level_1&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nACV = load &quot;APM_ACV_AUTO1&quot;;\nACV = filter ACV by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--ACV = filter ACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nACV = foreach ACV generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39; ,&#39;Month&#39; as &#39;Month&#39;,sum(&#39;ACV&#39;) as &#39;ACV&#39;;;\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD NONE For Fake Header line----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nAPM_None = load &quot;APM_ACV_AUTO1&quot;;\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER ACV----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYACV = filter ACV by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYACV = filter ACV by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nn\nAOV = load &quot;APM_AOV&quot;;\nAOV = filter AOV by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--AOV = filter AOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nAOV = foreach AOV generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;AOV&#39;) as &#39;AOV&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER AOV ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYAOV = filter AOV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYAOV = filter AOV by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYAOV = filter AOV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}}&amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYAOV = filter AOV by &#39;Month&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------/////////////////////////////-----------LOAD ATTRITION ----------------/////////////////////////////////////////\n\nAttrition = load &quot;APM_Attrition&quot;;\nAttrition = filter Attrition by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--Attrition = filter Attrition by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nAttrition = foreach Attrition generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Attrition_Product&#39;)*-1 as &#39;Attrition_Product&#39;, sum(&#39;TTM_Product&#39;)*-1 as &#39;TTM_Product&#39;,sum(&#39;AOV_twelve_month_ago_Product&#39;) as &#39;AOV_twelve_month_ago&#39; ;\n----------------------------------------------------------------------------------------------FILTER ATTRITION -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYATT = filter Attrition by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYATT = filter Attrition by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq4_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n------------------------------------------------------------------------------------------------------------------------------------------------LOAD PIPEGEN--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nPipegen = load &quot;APM_Pipegen1&quot;;Pipegen = filter Pipegen by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--Pipegen = filter Pipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\n\nq2_CYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};;\nnDEALS = load &quot;APM_DEALS&quot;;\nDEALS = filter DEALS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nDEALS = filter DEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nDEALS = foreach DEALS generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;X10M_Deals&#39;) as &#39;X10M_Deals&#39;, sum(&#39;X10M&#39;) as &#39;X10M&#39;, sum(&#39;Runrate_Volume&#39;) as &#39;Runrate_Volume&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER DEALS ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYDEALS = filter DEALS by &#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYDEALS = filter DEALS by &#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYDEALS = filter DEALS by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYDEALS = filter DEALS by &#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnLOGOS = load &quot;APM_LOGO&quot;;\nLOGOS = filter LOGOS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nLOGOS = filter LOGOS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nLOGOS = foreach LOGOS generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;New_Logos&#39;) as &#39;New_Logos&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER LOGOS ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYLOGOS = filter LOGOS by &#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYLOGOS = filter LOGOS by &#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYLOGOS = filter LOGOS by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYLOGOS = filter LOGOS by &#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnLOGOSLOST = load &quot;APM_LOST_LOGO&quot;;\nLOGOSLOST = filter LOGOSLOST by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nLOGOSLOST = filter LOGOSLOST by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nLOGOSLOST = foreach LOGOSLOST generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Lost_Logo_Count&#39;) as &#39;Lost_Logo_Count&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER LOGOSLOST ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYLOGOSLOST = filter LOGOSLOST by &#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYLOGOSLOST = filter LOGOSLOST by &#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYLOGOSLOST = filter LOGOSLOST by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYLOGOSLOST = filter LOGOSLOST by &#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnREDACCOUNTS = load &quot;APM_REDACCOUNTS&quot;;\nREDACCOUNTS = filter REDACCOUNTS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nREDACCOUNTS = filter REDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nREDACCOUNTS = foreach REDACCOUNTS generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Red_Accounts&#39;) as &#39;Red_Accounts&#39;;\nnq2_CYREDACCOUNTS = filter REDACCOUNTS by &#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYREDACCOUNTS = filter REDACCOUNTS by &#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYREDACCOUNTS = filter REDACCOUNTS by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYREDACCOUNTS = filter REDACCOUNTS by &#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnEVENTS = load &quot;APM_MARKETING_EVENTS&quot;;\nEVENTS = filter EVENTS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nEVENTS = filter EVENTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nEVENTS = foreach EVENTS generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;World_Tours_Trailhead&#39;) as &#39;World_Tours_Trailhead&#39;;\nnq2_CYEVENTS = filter EVENTS by &#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYEVENTS = filter EVENTS by &#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYEVENTS = filter EVENTS by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYEVENTS = filter EVENTS by &#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnOTHER = load &quot;APM_MARKETING_OTHER&quot;;\nOTHER = filter OTHER by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nOTHER = filter OTHER by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nOTHER = foreach OTHER generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Marketing_Events_Other&#39;) as &#39;Marketing_Events_Other&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER APM OTHER ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYOTHER = filter OTHER by &#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYOTHER = filter OTHER by &#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYOTHER = filter OTHER by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYOTHER = filter OTHER by &#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnEBC = load &quot;APM_MARKETING_EBC&quot;;\nEBC = filter EBC by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nEBC = filter EBC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nEBC = foreach EBC generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;EBC_s&#39;) as &#39;EBC_s&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER APM MAREKTING EBC ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYEBC = filter EBC by &#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYEBC = filter EBC by &#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYEBC = filter EBC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYEBC = filter EBC by &#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD CSM------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nCSM = load &quot;CSM_PSM_HC&quot;;\nCSM = filter CSM by &#39;Segment&#39; {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--CSM = filter CSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nq2_CYCSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYCSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_CSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYCSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYCSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_CSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Grouping------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nresult_Total = group q2_CYACV by all full, q2_PYACV by all full, q3_CYACV by all full, q3_PYACV by all full, q2_CYAOV by all full, q2_PYAOV by all full, q3_CYAOV by all full, q3_PYAOV by all full, q2_CYATT by all full, q2_PYATT by all full, q3_CYATT by all full, q3_PYATT by all full,q4_CYATT by all full,  q2_CYPipegen by all full, q2_PYPipegen by all full, q3_CYPipegen by all full, q3_PYPipegen by all full,q2_CYDEALS by all full, q2_PYDEALS by all full, q3_CYDEALS by all full, q3_PYDEALS by all full, q2_CYLOGOS by all full, q2_PYLOGOS by all full, q3_CYLOGOS by all full, q3_PYLOGOS by all full ,q2_CYLOGOSLOST by all full, q2_PYLOGOSLOST by all full, q3_CYLOGOSLOST by all full, q3_PYLOGOSLOST by all full,q2_CYREDACCOUNTS by all full, q2_PYREDACCOUNTS by all full, q3_CYREDACCOUNTS by all full, q3_PYREDACCOUNTS by all full,q2_CYEVENTS by all full, q2_PYEVENTS by all full, q3_CYEVENTS by all full, q3_PYEVENTS by all full, q2_CYOTHER by all full, q2_PYOTHER by all full, q3_CYOTHER by all full, q3_PYOTHER by all full,q2_CYEBC by all full, q2_PYEBC by all full, q3_CYEBC by all full, q3_PYEBC by all full, q2_CYCSM by all full, q2_PYCSM by all full,q2_PY_2_CSM by all full, q3_CYCSM by all full, q3_PYCSM by all full,q3_PY_2_CSM by all  ;\n----------------------------------------------/////////////////////////////////////////------PROJECTION----- -////////////////////////////////////////////////-----------------------------------------------------------------------------------------------------------------------------------------------------\n\nresult_Total = foreach result_Total generate &quot;TOTAL&quot; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, coalesce(sum(q2_CYACV.&#39;ACV&#39;),0) as &#39;A&#39;, coalesce(sum(q2_PYACV.&#39;ACV&#39;),0) as &#39;B&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;),0) as &#39;C&#39;, coalesce(sum(q3_PYACV.&#39;ACV&#39;),0) as &#39;D&#39;,coalesce(sum(q2_CYAOV.&#39;AOV&#39;),0) as &#39;E&#39;, coalesce(sum(q2_PYAOV.&#39;AOV&#39;),0) as &#39;F&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;),0) as &#39;G&#39;, coalesce(sum(q3_PYAOV.&#39;AOV&#39;),0) as &#39;H&#39;,coalesce(sum(q2_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q2&#39;,coalesce(sum(q3_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q3&#39;,coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q2&#39; ,coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q2&#39;,coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q3&#39; ,coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;,coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;YTD X10M_Deals Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YTD X10M_Deals Growth&#39;,coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) as &#39;YTD X10M Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YTD X10M Growth&#39;,coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;YTD Runrate_Volume Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YTD Runrate_Volume Growth&#39;,coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;, coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;YTD New_Logos Absolute&#39;, ((coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;, ((coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;YTD New_Logos Growth&#39;,coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;, coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;YTD Lost_Logo_Count Absolute&#39;, ((coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;, ((coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;YTD Lost_Logo_Count Growth&#39;,coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;YTD Red_Accounts Absolute&#39;, ((coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, ((coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YTD Red_Accounts Growth&#39;,coalesce(sum(q2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;, coalesce(sum(q3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;YTD World_Tours_Trailhead Absolute&#39;, ((coalesce(sum(q2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(q2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(q2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;, ((coalesce(sum(q3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(q3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(q3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YTD World_Tours_Trailhead Growth&#39;, coalesce(sum(q2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;, coalesce(sum(q3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;YTD Marketing_Events_Other Absolute&#39;, ((coalesce(sum(q2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(q2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(q2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;, ((coalesce(sum(q3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(q3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(q3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YTD Marketing_Events_Other Growth&#39;, coalesce(sum(q2_CYEBC.&#39;EBC_s&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;, coalesce(sum(q3_CYEBC.&#39;EBC_s&#39;), 0) as &#39;YTD EBC_s Absolute&#39;, ((coalesce(sum(q2_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(q2_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(q2_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;, ((coalesce(sum(q3_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(q3_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(q3_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YTD EBC_s Growth&#39;,  (coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0))  as &#39;YTD CSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD CSM CAGR&#39;,(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0))  as &#39;YTD PSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD PSM CAGR&#39;;\nnresult_Total = foreach result_Total generate &#39;A&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;,  &#39;C&#39; as  &#39;YTD ACV Absolute&#39;, ((A -B) / B) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;,((C - D) / D) * 100 as &#39;YTD ACV Growth&#39;,&#39;E&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;,  &#39;G&#39; as  &#39;YTD AOV Absolute&#39;, ((E -F) / F) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;,  ((G - H) / H) * 100  as &#39;YTD AOV Growth&#39;, coalesce(sum(&#39;Attrition_CY_Q2&#39;),0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Attrition Absolute&#39;, coalesce(sum(&#39;Attrition_CY_Q3&#39;),0) as &#39;YTD Attrition Absolute&#39;,(coalesce(round(sum(&#39;TTM_Product_CY_Q2&#39;), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q2), 0), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, (coalesce(round(sum(&#39;TTM_Product_CY_Q3&#39;), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q3), 0), 0)) * 100 as &#39;YTD Attrition TTM Rate&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PipeGen Absolute&#39;,&#39;YTD Pipegen Absolute&#39; as &#39;YTD PipeGen Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} PipeGen Growth&#39;,&#39;YTD Pipegen Growth&#39; as &#39;YTD PipeGen Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;,&#39;YTD X10M_Deals Absolute&#39; as &#39;YTD X10M_Deals Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;,&#39;YTD X10M_Deals Growth&#39; as &#39;YTD X10M_Deals Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;,&#39;YTD X10M Absolute&#39; as &#39;YTD X10M Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;,&#39;YTD X10M Growth&#39; as &#39;YTD X10M Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;,&#39;YTD Runrate_Volume Absolute&#39; as &#39;YTD Runrate_Volume Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;,&#39;YTD Runrate_Volume Growth&#39; as &#39;YTD Runrate_Volume Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;,&#39;YTD New_Logos Absolute&#39; as &#39;YTD New_Logos Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;,&#39;YTD New_Logos Growth&#39; as &#39;YTD New_Logos Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;,&#39;YTD Lost_Logo_Count Absolute&#39; as &#39;YTD Lost_Logo_Count Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;,&#39;YTD Lost_Logo_Count Growth&#39; as &#39;YTD Lost_Logo_Count Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;,&#39;YTD Red_Accounts Absolute&#39; as &#39;YTD Red_Accounts Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;,&#39;YTD Red_Accounts Growth&#39; as &#39;YTD Red_Accounts Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;,&#39;YTD World_Tours_Trailhead Absolute&#39; as &#39;YTD World_Tours_Trailhead Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;,&#39;YTD World_Tours_Trailhead Growth&#39; as &#39;YTD World_Tours_Trailhead Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;,&#39;YTD Marketing_Events_Other Absolute&#39; as &#39;YTD Marketing_Events_Other Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;,&#39;YTD Marketing_Events_Other Growth&#39; as &#39;YTD Marketing_Events_Other Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;,&#39;YTD EBC_s Absolute&#39; as &#39;YTD EBC_s Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;,&#39;YTD EBC_s Growth&#39; as &#39;YTD EBC_s Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM&#39;,&#39;YTD CSM Absolute&#39; as &#39;YTD CSM Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,&#39;YTD CSM CAGR&#39; as &#39;YTD CSM CAGR&#39; ,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM&#39;,&#39;YTD PSM Absolute&#39; as &#39;YTD PSM Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;,&#39;YTD PSM CAGR&#39; as &#39;YTD PSM CAGR&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------NONE for Fake HEADER--------------------------------------------------------------------------------------------------------------\n;result_none = group APM_None by &#39;all&#39;; result_none = foreach result_none generate 0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;,  0 as  &#39;YTD ACV Absolute&#39;, 0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;,0 as &#39;YTD ACV Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, 0 as  &#39;YTD AOV Absolute&#39;, 0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, 0 as &#39;YTD AOV Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Attrition Absolute&#39;,0 as &#39;YTD Attrition Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, 0 as &#39;YTD Attrition TTM Rate&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PipeGen Absolute&#39;,0 as &#39;YTD PipeGen Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} PipeGen Growth&#39;,0 as &#39;YTD PipeGen Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;,0 as &#39;YTD X10M_Deals Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;,0 as &#39;YTD X10M_Deals Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;,0 as &#39;YTD X10M Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;,0 as &#39;YTD X10M Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;,0 as &#39;YTD Runrate_Volume Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;,0 as &#39;YTD Runrate_Volume Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;,0 as &#39;YTD New_Logos Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;,0 as &#39;YTD New_Logos Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;,0 as &#39;YTD Lost_Logo_Count Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;,0 as &#39;YTD Lost_Logo_Count Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;,0 as &#39;YTD Red_Accounts Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;,0 as &#39;YTD Red_Accounts Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;,0 as &#39;YTD World_Tours_Trailhead Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;,0 as &#39;YTD World_Tours_Trailhead Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;,0 as &#39;YTD Marketing_Events_Other Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;,0 as &#39;YTD Marketing_Events_Other Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;,0 as &#39;YTD EBC_s Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;,0 as &#39;YTD EBC_s Growth&#39;,  0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM&#39;,0 as &#39;YTD CSM Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} CSM CAGR&#39;,0 as &#39;YTD CSM CAGR&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM&#39;,0 as &#39;YTD PSM Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} PSM CAGR&#39;,0 as &#39;YTD PSM CAGR&#39;;; \n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------UNION--------------------------------------------------------------------------------------------------------------\n;result_union = union result_none, result_Total;result_union = group result_union by &#39;all&#39;;  final_result = foreach result_union generate &quot;TOTAL&quot;+&quot;                          &quot; as &#39;Region&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;, sum(&#39;YTD X10M_Deals Absolute&#39;) as &#39;YTD X10M_Deals Absolute&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;, sum(&#39;YTD X10M_Deals Growth&#39;) as  &#39;YTD X10M_Deals Growth&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} (#)&#39;, sum(&#39;YTD X10M Absolute&#39;) as &#39;YTD X10M Absolute&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;, sum(&#39;YTD X10M Growth&#39;) as  &#39;YTD X10M Growth&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;, sum(&#39;YTD Runrate_Volume Absolute&#39;) as &#39;YTD Runrate_Volume Absolute&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;, sum(&#39;YTD Runrate_Volume Growth&#39;) as  &#39;YTD Runrate_Volume Growth&#39;,sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;, sum(&#39;YTD New_Logos Absolute&#39;) as &#39;YTD New_Logos Absolute&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;, sum(&#39;YTD New_Logos Growth&#39;) as  &#39;YTD New_Logos Growth&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;, sum(&#39;YTD Lost_Logo_Count Absolute&#39;) as &#39;YTD Lost_Logo_Count Absolute&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;, sum(&#39;YTD Lost_Logo_Count Growth&#39;) as  &#39;YTD Lost_Logo_Count Growth&#39;; ",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        }
      },
      "Table_Measures_2_Header": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Measures_2_Header",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;Level_1&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD NONE For Fake Header line----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nAPM_None = load &quot;APM_ACV_AUTO1&quot;;\n------------------------------------------------------------------------------------------------------------------------------------------------LOAD PIPEGEN--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nPipegen = load &quot;APM_Pipegen1&quot;;Pipegen = filter Pipegen by &#39;Segment&#39; {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--Pipegen = filter Pipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};;Pipegen = group by (&#39;Fiscal_Year&#39;,&#39;Quarter&#39;);Pipegen = foreach Pipegen generate &#39;Fisacal_Year&#39; as &#39;Fiscal_Year&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, sum(&#39;Pipegen&#39;) as &#39;Pipegen&#39;;\n\nq2_CYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD HC------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nHC = load &quot;APM_HC&quot;;\nHC = filter HC by &#39;Segment&#39; {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--HC = filter HC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nq2_CYHC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYHC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_HC = filter HC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYHC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYHC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_HC&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD SWE INFRA------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nSW = load &quot;APM_SWE_INFRA&quot;;\nSW = filter SW by &#39;Segment&#39; {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--SW = filter SW by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nq2_CYSW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYSW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_SW = filter SW by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_SW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_SW&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD CSM------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nCSM = load &quot;CSM_PSM_HC&quot;;\nCSM = filter CSM by &#39;Segment&#39; {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--CSM = filter CSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nq2_CYCSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYCSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_CSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYCSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYCSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_CSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Grouping-------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_Total = group q2_CYPipegen by all full, q2_PYPipegen by all full, q3_CYPipegen by all full, q3_PYPipegen by all full, q2_CYHC by all full, q2_PYHC by all full,q2_PY_2_HC by all full, q3_CYHC by all full, q3_PYHC by all full,q3_PY_2_HC by all full, q2_CYSW by all full, q2_PYSW by all full,q2_PY_2_SW by all full, q3_CYSW by all full, q3_PYSW by all full,q3_PY_2_SW by all full,  q2_CYCSM by all full, q2_PYCSM by all full,q2_PY_2_CSM by all full, q3_CYCSM by all full, q3_PYCSM by all full,q3_PY_2_CSM by all ;\nnresult_Total = foreach result_Total generate &quot;TOTAL&quot; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;),0) as &#39;A&#39;, coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;),0) as &#39;B&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;),0) as &#39;C&#39;, coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;),0) as &#39;D&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;),0) as &#39;YTD Pipegen absolute&#39;, coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE Absolute&#39;, coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) as &#39;YTD SE Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) - coalesce(sum(q2_PYHC.&#39;SE&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;SE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} SE Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;SE&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YTD SE CAGR&#39;, ((coalesce(sum(q3_CYHC.&#39;SE&#39;), 0) - coalesce(sum(q3_PYHC.&#39;SE&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;SE&#39;), 0)) * 100 as &#39;YTD SE Growth&#39;, coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE Absolute&#39;, coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) as &#39;YTD AE Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) - coalesce(sum(q2_PYHC.&#39;AE&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;AE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AE Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) - coalesce(sum(q3_PYHC.&#39;AE&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;AE&#39;), 0)) * 100 as &#39;YTD AE Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;AE&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;AE&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;YTD AE CAGR&#39;, coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime Absolute&#39;, coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) as &#39;YTD Co_Prime Absolute&#39;, ((coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) - coalesce(sum(q2_PYHC.&#39;Co_Prime&#39;), 0)) / coalesce(sum(q2_PYHC.&#39;Co_Prime&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Co_Prime Growth&#39;, ((coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) - coalesce(sum(q3_PYHC.&#39;Co_Prime&#39;), 0)) / coalesce(sum(q3_PYHC.&#39;Co_Prime&#39;), 0)) * 100 as &#39;YTD Co_Prime Growth&#39;,(power(coalesce(sum(q2_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(q2_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;,(power(coalesce(sum(q3_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(q3_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YTD Co_Prime CAGR&#39;, coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE Absolute&#39;, coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) as &#39;YTD SWE Absolute&#39;, ((coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(q2_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(q2_PYSW.&#39;SWE&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39;, ((coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(q3_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(q3_PYSW.&#39;SWE&#39;), 0)) * 100 as &#39;YTD SWE Growth&#39;,(power(coalesce(sum(q2_CYSW.&#39;SWE&#39;), 0) / coalesce(sum(q2_PY_2_SW.&#39;SWE&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE CAGR&#39;,(power(coalesce(sum(q3_CYSW.&#39;SWE&#39;), 0) / coalesce(sum(q3_PY_2_SW.&#39;SWE&#39;), 0),(1/2))-1)*100 as &#39;YTD SWE CAGR&#39;, coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA Absolute&#39;, coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) as &#39;YTD INFRA Absolute&#39;, ((coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) - coalesce(sum(q2_PYSW.&#39;INFRA&#39;), 0)) / coalesce(sum(q2_PYSW.&#39;INFRA&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;, ((coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) - coalesce(sum(q3_PYSW.&#39;INFRA&#39;), 0)) / coalesce(sum(q3_PYSW.&#39;INFRA&#39;), 0)) * 100 as &#39;YTD INFRA Growth&#39;,(power(coalesce(sum(q2_CYSW.&#39;INFRA&#39;), 0) / coalesce(sum(q2_PY_2_SW.&#39;INFRA&#39;), 0),(1/2))-1)*100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA CAGR&#39;,(power(coalesce(sum(q3_CYSW.&#39;INFRA&#39;), 0) / coalesce(sum(q3_PY_2_SW.&#39;INFRA&#39;), 0),(1/2))-1)*100 as &#39;YTD INFRA CAGR&#39;,  (coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0))  as &#39;YTD CSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD CSM CAGR&#39;,(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0))  as &#39;YTD PSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD PSM CAGR&#39;;\n-----------------------------------------------------------------------------------------------------FINAL PROJECTION-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_Total = foreach result_Total generate  &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AEs&#39;,&#39;YTD AE Absolute&#39; as &#39;YTD AE Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;,&#39;YTD AE CAGR&#39; as &#39;YTD AE CAGR&#39; ,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime&#39;,&#39;YTD Co_Prime Absolute&#39; as &#39;YTD Co_Prime Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;,&#39;YTD Co_Prime CAGR&#39; as &#39;YTD Co_Prime CAGR&#39;, &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SEs&#39;,&#39;YTD SE Absolute&#39; as &#39;YTD SE Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;,&#39;YTD SE CAGR&#39; as &#39;YTD SE CAGR&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM&#39;,&#39;YTD CSM Absolute&#39; as &#39;YTD CSM Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,&#39;YTD CSM CAGR&#39; as &#39;YTD CSM CAGR&#39; ,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM&#39;,&#39;YTD PSM Absolute&#39; as &#39;YTD PSM Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;,&#39;YTD PSM CAGR&#39; as &#39;YTD PSM CAGR&#39;;\n--,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SWE&#39;,&#39;YTD SWE Absolute&#39; as &#39;YTD SWE Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} SWE Growth&#39;,&#39;YTD SWE Growth&#39; as &#39;YTD SWE Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} INFRA&#39;,&#39;YTD INFRA Absolute&#39; as &#39;YTD INFRA Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;,&#39;YTD INFRA Growth&#39; as &#39;YTD INFRA Growth&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------NONE for Fake HEADER--------------------------------------------------------------------------------------------------------------\n;\nresult_none = group APM_None by &#39;all&#39;;\nresult_none = foreach result_none generate 0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AEs&#39;,0 as &#39;YTD AE Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;,0 as &#39;YTD AE CAGR&#39; ,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime&#39;,0 as &#39;YTD Co_Prime Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;,0 as &#39;YTD Co_Prime CAGR&#39;, 0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SEs&#39;,0 as &#39;YTD SE Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;,0 as &#39;YTD SE CAGR&#39; ,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM&#39;,0 as &#39;YTD CSM Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} CSM CAGR&#39;,0 as &#39;YTD CSM CAGR&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM&#39;,0 as &#39;YTD PSM Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} PSM CAGR&#39;,0 as &#39;YTD PSM CAGR&#39;; \n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------UNION--------------------------------------------------------------------------------------------------------------\n;\nresult_union = union result_none, result_Total;\nresult_union = group result_union by &#39;all&#39;;\nfinal_result = foreach result_union generate &quot;TOTAL&quot;+&quot;                                   &quot; as &#39;Region&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AEs&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AEs&#39;,sum(&#39;YTD AE Absolute&#39;) as &#39;YTD AE Absolute&#39;,sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AE CAGR&#39;,sum(&#39;YTD AE CAGR&#39;) as &#39;YTD AE CAGR&#39; ,sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime&#39;,sum(&#39;YTD Co_Prime Absolute&#39;) as &#39;YTD Co_Prime Absolute&#39;,sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Co_Prime CAGR&#39;,sum(&#39;YTD Co_Prime CAGR&#39;) as &#39;YTD Co_Prime CAGR&#39;,sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SEs&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SEs&#39;,sum(&#39;YTD SE Absolute&#39;) as &#39;YTD SE Absolute&#39;,sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} SE CAGR&#39;,sum(&#39;YTD SE CAGR&#39;) as &#39;YTD SE CAGR&#39; ;\n--,sum( &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM&#39;,sum(&#39;YTD CSM Absolute&#39;) as &#39;YTD CSM Absolute&#39;,sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} CSM CAGR&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} CSM CAGR&#39;,sum(&#39;YTD CSM CAGR&#39;) as &#39;YTD CSM CAGR&#39;,sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM&#39;,sum(&#39;YTD PSM Absolute&#39;) as &#39;YTD PSM Absolute&#39;,sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} PSM CAGR&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} INFRA Growth&#39;,sum(&#39;YTD PSM CAGR&#39;) as &#39;YTD PSM CAGR&#39;;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        }
      },
      "Table_Measures_4_Header": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Measures_4_Header",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;Level_1&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nACV = load &quot;APM_ACV_AUTO1&quot;;\nACV = filter ACV by &#39;Segment&#39;  {{cell(Toggle_CSG_2.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--ACV = filter ACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nACV = foreach ACV generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39; ,&#39;Month&#39; as &#39;Month&#39;,sum(&#39;ACV&#39;) as &#39;ACV&#39;;;\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD NONE For Fake Header line----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nAPM_None = load &quot;APM_ACV_AUTO1&quot;;\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER ACV----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYACV = filter ACV by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYACV = filter ACV by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nn\nAOV = load &quot;APM_AOV&quot;;\nAOV = filter AOV by &#39;Segment&#39;  {{cell(Toggle_CSG_2.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--AOV = filter AOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nAOV = foreach AOV generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;AOV&#39;) as &#39;AOV&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER AOV ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYAOV = filter AOV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYAOV = filter AOV by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYAOV = filter AOV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}}&amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYAOV = filter AOV by &#39;Month&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------/////////////////////////////-----------LOAD ATTRITION ----------------/////////////////////////////////////////\n\nAttrition = load &quot;APM_Attrition&quot;;\nAttrition = filter Attrition by &#39;Segment&#39;  {{cell(Toggle_CSG_2.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--Attrition = filter Attrition by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nAttrition = foreach Attrition generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Attrition_Product&#39;)*-1 as &#39;Attrition_Product&#39;, sum(&#39;TTM_Product&#39;)*-1 as &#39;TTM_Product&#39;,sum(&#39;AOV_twelve_month_ago_Product&#39;) as &#39;AOV_twelve_month_ago&#39; ;\n----------------------------------------------------------------------------------------------FILTER ATTRITION -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYATT = filter Attrition by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYATT = filter Attrition by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq4_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n------------------------------------------------------------------------------------------------------------------------------------------------LOAD PIPEGEN--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nPipegen = load &quot;APM_Pipegen1&quot;;Pipegen = filter Pipegen by &#39;Segment&#39;  {{cell(Toggle_CSG_2.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--Pipegen = filter Pipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\n\nq2_CYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};;\nnDEALS = load &quot;APM_DEALS&quot;;\nDEALS = filter DEALS by &#39;Segment&#39;  {{cell(Toggle_CSG_2.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nDEALS = filter DEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nDEALS = foreach DEALS generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;X10M_Deals&#39;) as &#39;X10M_Deals&#39;, sum(&#39;X10M&#39;) as &#39;X10M&#39;, sum(&#39;Runrate_Volume&#39;) as &#39;Runrate_Volume&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER DEALS ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYDEALS = filter DEALS by &#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYDEALS = filter DEALS by &#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYDEALS = filter DEALS by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYDEALS = filter DEALS by &#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnLOGOS = load &quot;APM_LOGO&quot;;\nLOGOS = filter LOGOS by &#39;Segment&#39;  {{cell(Toggle_CSG_2.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nLOGOS = filter LOGOS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nLOGOS = foreach LOGOS generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;New_Logos&#39;) as &#39;New_Logos&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER LOGOS ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYLOGOS = filter LOGOS by &#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYLOGOS = filter LOGOS by &#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYLOGOS = filter LOGOS by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYLOGOS = filter LOGOS by &#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnLOGOSLOST = load &quot;APM_LOST_LOGO&quot;;\nLOGOSLOST = filter LOGOSLOST by &#39;Segment&#39;  {{cell(Toggle_CSG_2.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nLOGOSLOST = filter LOGOSLOST by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nLOGOSLOST = foreach LOGOSLOST generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Lost_Logo_Count&#39;) as &#39;Lost_Logo_Count&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER LOGOSLOST ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYLOGOSLOST = filter LOGOSLOST by &#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYLOGOSLOST = filter LOGOSLOST by &#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYLOGOSLOST = filter LOGOSLOST by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYLOGOSLOST = filter LOGOSLOST by &#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnREDACCOUNTS = load &quot;APM_REDACCOUNTS&quot;;\nREDACCOUNTS = filter REDACCOUNTS by &#39;Segment&#39;  {{cell(Toggle_CSG_2.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nREDACCOUNTS = filter REDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nREDACCOUNTS = foreach REDACCOUNTS generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Red_Accounts&#39;) as &#39;Red_Accounts&#39;;\nnq2_CYREDACCOUNTS = filter REDACCOUNTS by &#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYREDACCOUNTS = filter REDACCOUNTS by &#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYREDACCOUNTS = filter REDACCOUNTS by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYREDACCOUNTS = filter REDACCOUNTS by &#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnEVENTS = load &quot;APM_MARKETING_EVENTS&quot;;\nEVENTS = filter EVENTS by &#39;Segment&#39;  {{cell(Toggle_CSG_2.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nEVENTS = filter EVENTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nEVENTS = foreach EVENTS generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;World_Tours_Trailhead&#39;) as &#39;World_Tours_Trailhead&#39;;\nnq2_CYEVENTS = filter EVENTS by &#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYEVENTS = filter EVENTS by &#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYEVENTS = filter EVENTS by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYEVENTS = filter EVENTS by &#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnOTHER = load &quot;APM_MARKETING_OTHER&quot;;\nOTHER = filter OTHER by &#39;Segment&#39;  {{cell(Toggle_CSG_2.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nOTHER = filter OTHER by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nOTHER = foreach OTHER generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Marketing_Events_Other&#39;) as &#39;Marketing_Events_Other&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER APM OTHER ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYOTHER = filter OTHER by &#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYOTHER = filter OTHER by &#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYOTHER = filter OTHER by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYOTHER = filter OTHER by &#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnEBC = load &quot;APM_MARKETING_EBC&quot;;\nEBC = filter EBC by &#39;Segment&#39;  {{cell(Toggle_CSG_2.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nEBC = filter EBC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nEBC = foreach EBC generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;EBC_s&#39;) as &#39;EBC_s&#39;;\nnq2_CYEBC = filter EBC by &#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYEBC = filter EBC by &#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYEBC = filter EBC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYEBC = filter EBC by &#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD CSM------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nCSM = load &quot;CSM_PSM_HC&quot;;\nCSM = filter CSM by &#39;Segment&#39; {{cell(Toggle_CSG_2.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--CSM = filter CSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nCSM = foreach CSM generate  &#39;Cloud&#39; as &#39;Cloud&#39;,&quot;N/A&quot; as &#39;City&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;CSM_Headcount&#39;) as &#39;CSM_Headcount&#39;,sum(&#39;PSM_Headcount&#39;) as &#39;PSM_Headcount&#39;,&#39;Region&#39; as &#39;Region&#39;,{{cell(Static_Cloud_Filter.selection,0,&quot;static_country_logic&quot;).asString()}} as &#39;Country&#39;;\nq2_CYCSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYCSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_CSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYCSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYCSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_CSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Grouping------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nresult_Total = group q2_CYACV by all full, q2_PYACV by all full, q3_CYACV by all full, q3_PYACV by all full, q2_CYAOV by all full, q2_PYAOV by all full, q3_CYAOV by all full, q3_PYAOV by all full, q2_CYATT by all full, q2_PYATT by all full, q3_CYATT by all full, q3_PYATT by all full,q4_CYATT by all full,  q2_CYPipegen by all full, q2_PYPipegen by all full, q3_CYPipegen by all full, q3_PYPipegen by all full,q2_CYDEALS by all full, q2_PYDEALS by all full, q3_CYDEALS by all full, q3_PYDEALS by all full, q2_CYLOGOS by all full, q2_PYLOGOS by all full, q3_CYLOGOS by all full, q3_PYLOGOS by all full ,q2_CYLOGOSLOST by all full, q2_PYLOGOSLOST by all full, q3_CYLOGOSLOST by all full, q3_PYLOGOSLOST by all full,q2_CYREDACCOUNTS by all full, q2_PYREDACCOUNTS by all full, q3_CYREDACCOUNTS by all full, q3_PYREDACCOUNTS by all full,q2_CYEVENTS by all full, q2_PYEVENTS by all full, q3_CYEVENTS by all full, q3_PYEVENTS by all full, q2_CYOTHER by all full, q2_PYOTHER by all full, q3_CYOTHER by all full, q3_PYOTHER by all full,q2_CYEBC by all full, q2_PYEBC by all full, q3_CYEBC by all full, q3_PYEBC by all full, q2_CYCSM by all full, q2_PYCSM by all full,q2_PY_2_CSM by all full, q3_CYCSM by all full, q3_PYCSM by all full,q3_PY_2_CSM by all  ;\n----------------------------------------------/////////////////////////////////////////------PROJECTION----- -////////////////////////////////////////////////-----------------------------------------------------------------------------------------------------------------------------------------------------\n\nresult_Total = foreach result_Total generate &quot;TOTAL&quot; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, coalesce(sum(q2_CYACV.&#39;ACV&#39;),0) as &#39;A&#39;, coalesce(sum(q2_PYACV.&#39;ACV&#39;),0) as &#39;B&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;),0) as &#39;C&#39;, coalesce(sum(q3_PYACV.&#39;ACV&#39;),0) as &#39;D&#39;,coalesce(sum(q2_CYAOV.&#39;AOV&#39;),0) as &#39;E&#39;, coalesce(sum(q2_PYAOV.&#39;AOV&#39;),0) as &#39;F&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;),0) as &#39;G&#39;, coalesce(sum(q3_PYAOV.&#39;AOV&#39;),0) as &#39;H&#39;,coalesce(sum(q2_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q2&#39;,coalesce(sum(q3_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q3&#39;,coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q2&#39; ,coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q2&#39;,coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q3&#39; ,coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;,coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;YTD X10M_Deals Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YTD X10M_Deals Growth&#39;,coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) as &#39;YTD X10M Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YTD X10M Growth&#39;,coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;YTD Runrate_Volume Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YTD Runrate_Volume Growth&#39;,coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;, coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;YTD New_Logos Absolute&#39;, ((coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;, ((coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;YTD New_Logos Growth&#39;,coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;, coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;YTD Lost_Logo_Count Absolute&#39;, ((coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;, ((coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;YTD Lost_Logo_Count Growth&#39;,coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;YTD Red_Accounts Absolute&#39;, ((coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, ((coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YTD Red_Accounts Growth&#39;,coalesce(sum(q2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;, coalesce(sum(q3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;YTD World_Tours_Trailhead Absolute&#39;, ((coalesce(sum(q2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(q2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(q2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;, ((coalesce(sum(q3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(q3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(q3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YTD World_Tours_Trailhead Growth&#39;, coalesce(sum(q2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;, coalesce(sum(q3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;YTD Marketing_Events_Other Absolute&#39;, ((coalesce(sum(q2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(q2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(q2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;, ((coalesce(sum(q3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(q3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(q3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YTD Marketing_Events_Other Growth&#39;, coalesce(sum(q2_CYEBC.&#39;EBC_s&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;, coalesce(sum(q3_CYEBC.&#39;EBC_s&#39;), 0) as &#39;YTD EBC_s Absolute&#39;, ((coalesce(sum(q2_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(q2_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(q2_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;, ((coalesce(sum(q3_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(q3_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(q3_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YTD EBC_s Growth&#39;,  (coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0))  as &#39;YTD CSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD CSM CAGR&#39;,(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0))  as &#39;YTD PSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD PSM CAGR&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FINAL PROJECTION--------------------------------------------------------------------------------------------------------------\nresult_Total = foreach result_Total generate &#39;A&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;,  &#39;C&#39; as  &#39;YTD ACV Absolute&#39;, ((A -B) / B) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;,((C - D) / D) * 100 as &#39;YTD ACV Growth&#39;,&#39;E&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;,  &#39;G&#39; as  &#39;YTD AOV Absolute&#39;, ((E -F) / F) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;,  ((G - H) / H) * 100  as &#39;YTD AOV Growth&#39;, coalesce(sum(&#39;Attrition_CY_Q2&#39;),0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Attrition Absolute&#39;, coalesce(sum(&#39;Attrition_CY_Q3&#39;),0) as &#39;YTD Attrition Absolute&#39;,(coalesce(round(sum(&#39;TTM_Product_CY_Q2&#39;), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q2), 0), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, (coalesce(round(sum(&#39;TTM_Product_CY_Q3&#39;), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q3), 0), 0)) * 100 as &#39;YTD Attrition TTM Rate&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PipeGen Absolute&#39;,&#39;YTD Pipegen Absolute&#39; as &#39;YTD PipeGen Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} PipeGen Growth&#39;,&#39;YTD Pipegen Growth&#39; as &#39;YTD PipeGen Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;,&#39;YTD X10M_Deals Absolute&#39; as &#39;YTD X10M_Deals Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;,&#39;YTD X10M_Deals Growth&#39; as &#39;YTD X10M_Deals Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;,&#39;YTD X10M Absolute&#39; as &#39;YTD X10M Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;,&#39;YTD X10M Growth&#39; as &#39;YTD X10M Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;,&#39;YTD Runrate_Volume Absolute&#39; as &#39;YTD Runrate_Volume Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;,&#39;YTD Runrate_Volume Growth&#39; as &#39;YTD Runrate_Volume Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;,&#39;YTD New_Logos Absolute&#39; as &#39;YTD New_Logos Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;,&#39;YTD New_Logos Growth&#39; as &#39;YTD New_Logos Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;,&#39;YTD Lost_Logo_Count Absolute&#39; as &#39;YTD Lost_Logo_Count Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;,&#39;YTD Lost_Logo_Count Growth&#39; as &#39;YTD Lost_Logo_Count Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;,&#39;YTD Red_Accounts Absolute&#39; as &#39;YTD Red_Accounts Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;,&#39;YTD Red_Accounts Growth&#39; as &#39;YTD Red_Accounts Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;,&#39;YTD World_Tours_Trailhead Absolute&#39; as &#39;YTD World_Tours_Trailhead Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;,&#39;YTD World_Tours_Trailhead Growth&#39; as &#39;YTD World_Tours_Trailhead Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;,&#39;YTD Marketing_Events_Other Absolute&#39; as &#39;YTD Marketing_Events_Other Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;,&#39;YTD Marketing_Events_Other Growth&#39; as &#39;YTD Marketing_Events_Other Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;,&#39;YTD EBC_s Absolute&#39; as &#39;YTD EBC_s Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;,&#39;YTD EBC_s Growth&#39; as &#39;YTD EBC_s Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM&#39;,&#39;YTD CSM Absolute&#39; as &#39;YTD CSM Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,&#39;YTD CSM CAGR&#39; as &#39;YTD CSM CAGR&#39; ,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM&#39;,&#39;YTD PSM Absolute&#39; as &#39;YTD PSM Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;,&#39;YTD PSM CAGR&#39; as &#39;YTD PSM CAGR&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------NONE for Fake HEADER--------------------------------------------------------------------------------------------------------------\n;result_none = group APM_None by &#39;all&#39;; result_none = foreach result_none generate 0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;,  0 as  &#39;YTD ACV Absolute&#39;, 0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;,0 as &#39;YTD ACV Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, 0 as  &#39;YTD AOV Absolute&#39;, 0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, 0 as &#39;YTD AOV Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Attrition Absolute&#39;,0 as &#39;YTD Attrition Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, 0 as &#39;YTD Attrition TTM Rate&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PipeGen Absolute&#39;,0 as &#39;YTD PipeGen Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} PipeGen Growth&#39;,0 as &#39;YTD PipeGen Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;,0 as &#39;YTD X10M_Deals Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;,0 as &#39;YTD X10M_Deals Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;,0 as &#39;YTD X10M Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;,0 as &#39;YTD X10M Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;,0 as &#39;YTD Runrate_Volume Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;,0 as &#39;YTD Runrate_Volume Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;,0 as &#39;YTD New_Logos Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;,0 as &#39;YTD New_Logos Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;,0 as &#39;YTD Lost_Logo_Count Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;,0 as &#39;YTD Lost_Logo_Count Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;,0 as &#39;YTD Red_Accounts Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;,0 as &#39;YTD Red_Accounts Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;,0 as &#39;YTD World_Tours_Trailhead Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;,0 as &#39;YTD World_Tours_Trailhead Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;,0 as &#39;YTD Marketing_Events_Other Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;,0 as &#39;YTD Marketing_Events_Other Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;,0 as &#39;YTD EBC_s Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;,0 as &#39;YTD EBC_s Growth&#39;,  0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM&#39;,0 as &#39;YTD CSM Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} CSM CAGR&#39;,0 as &#39;YTD CSM CAGR&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM&#39;,0 as &#39;YTD PSM Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} PSM CAGR&#39;,0 as &#39;YTD PSM CAGR&#39;; \n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------UNION--------------------------------------------------------------------------------------------------------------\n;result_union = union result_none, result_Total;result_union = group result_union by &#39;all&#39;;  final_result = foreach result_union generate &quot;TOTAL&quot;+ &quot;                               &quot; as &#39;Region&#39;, sum( &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM&#39;,sum(&#39;YTD CSM Absolute&#39;) as &#39;YTD CSM Absolute&#39;,sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,sum(&#39;YTD CSM CAGR&#39;) as &#39;YTD CSM CAGR&#39;,sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM&#39;,sum(&#39;YTD PSM Absolute&#39;) as &#39;YTD PSM Absolute&#39;,sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;,sum(&#39;YTD PSM CAGR&#39;) as &#39;YTD PSM CAGR&#39; ,sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, sum(&#39;YTD Red_Accounts Absolute&#39;) as &#39;YTD Red_Accounts Absolute&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, sum(&#39;YTD Red_Accounts Growth&#39;) as  &#39;YTD Red_Accounts Growth&#39; ; ",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        }
      },
      "Table_Measures_1_Header": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Measures_1_Header",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;Level_1&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nACV = load &quot;APM_ACV_AUTO1&quot;;\nACV = filter ACV by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--ACV = filter ACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nACV = foreach ACV generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39; ,&#39;Month&#39; as &#39;Month&#39;,sum(&#39;ACV&#39;) as &#39;ACV&#39;;;\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD NONE For Fake Header line----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nAPM_None = load &quot;APM_ACV_AUTO1&quot;;\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER ACV----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYACV = filter ACV by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYACV = filter ACV by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nn\nAOV = load &quot;APM_AOV&quot;;\nAOV = filter AOV by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--AOV = filter AOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nAOV = foreach AOV generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;AOV&#39;) as &#39;AOV&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER AOV ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYAOV = filter AOV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYAOV = filter AOV by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYAOV = filter AOV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}}&amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYAOV = filter AOV by &#39;Month&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------/////////////////////////////-----------LOAD ATTRITION ----------------/////////////////////////////////////////\n\nAttrition = load &quot;APM_Attrition&quot;;\nAttrition = filter Attrition by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--Attrition = filter Attrition by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nAttrition = foreach Attrition generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Attrition&#39;)*-1 as &#39;Attrition_Product&#39;, sum(&#39;TTM&#39;)*-1 as &#39;TTM_Product&#39;,sum(&#39;AOV_twelve_month_ago&#39;) as &#39;AOV_twelve_month_ago&#39; ;\n----------------------------------------------------------------------------------------------FILTER ATTRITION -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYATT = filter Attrition by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYATT = filter Attrition by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq4_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n------------------------------------------------------------------------------------------------------------------------------------------------LOAD PIPEGEN--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nPipegen = load &quot;APM_Pipegen1&quot;;Pipegen = filter Pipegen by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--Pipegen = filter Pipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};;Pipegen = group by (&#39;Fiscal_Year&#39;,&#39;Quarter&#39;);Pipegen = foreach Pipegen generate &#39;Fisacal_Year&#39; as &#39;Fiscal_Year&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, sum(&#39;Pipegen&#39;) as &#39;Pipegen&#39;;\n\nq2_CYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Grouping------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nresult_Total = group q2_CYACV by all full, q2_PYACV by all full, q3_CYACV by all full, q3_PYACV by all full, q2_CYAOV by all full, q2_PYAOV by all full, q3_CYAOV by all full, q3_PYAOV by all full, q2_CYATT by all full, q2_PYATT by all full, q3_CYATT by all full, q3_PYATT by all full,q4_CYATT by all full,  q2_CYPipegen by all full, q2_PYPipegen by all full, q3_CYPipegen by all full, q3_PYPipegen by all ;\n----------------------------------------------/////////////////////////////////////////------PROJECTION----- -////////////////////////////////////////////////-----------------------------------------------------------------------------------------------------------------------------------------------------\n\nresult_Total = foreach result_Total generate &quot;TOTAL&quot; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, coalesce(sum(q2_CYACV.&#39;ACV&#39;),0) as &#39;A&#39;, coalesce(sum(q2_PYACV.&#39;ACV&#39;),0) as &#39;B&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;),0) as &#39;C&#39;, coalesce(sum(q3_PYACV.&#39;ACV&#39;),0) as &#39;D&#39;,coalesce(sum(q2_CYAOV.&#39;AOV&#39;),0) as &#39;E&#39;, coalesce(sum(q2_PYAOV.&#39;AOV&#39;),0) as &#39;F&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;),0) as &#39;G&#39;, coalesce(sum(q3_PYAOV.&#39;AOV&#39;),0) as &#39;H&#39;,coalesce(sum(q2_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q2&#39;,coalesce(sum(q3_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q3&#39;,coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q2&#39; ,coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q2&#39;,coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q3&#39; ,coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;;\nnresult_Total = foreach result_Total generate &#39;A&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;,  &#39;C&#39; as  &#39;YTD ACV Absolute&#39;, ((A -B) / B) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;,((C - D) / D) * 100 as &#39;YTD ACV Growth&#39;,&#39;E&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;,  &#39;G&#39; as  &#39;YTD AOV Absolute&#39;, ((E -F) / F) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;,  ((G - H) / H) * 100  as &#39;YTD AOV Growth&#39;, coalesce(sum(&#39;Attrition_CY_Q2&#39;),0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Attrition Absolute&#39;, coalesce(sum(&#39;Attrition_CY_Q3&#39;),0) as &#39;YTD Attrition Absolute&#39;,(coalesce(round(sum(&#39;TTM_Product_CY_Q2&#39;), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q2), 0), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, (coalesce(round(sum(&#39;TTM_Product_CY_Q3&#39;), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q3), 0), 0)) * 100 as &#39;YTD Attrition TTM Rate&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PipeGen Absolute&#39;,&#39;YTD Pipegen Absolute&#39; as &#39;YTD PipeGen Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} PipeGen Growth&#39;,&#39;YTD Pipegen Growth&#39; as &#39;YTD PipeGen Growth&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------NONE for Fake HEADER--------------------------------------------------------------------------------------------------------------\n;result_none = group APM_None by &#39;all&#39;; result_none = foreach result_none generate 0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;,  0 as  &#39;YTD ACV Absolute&#39;, 0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;,0 as &#39;YTD ACV Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, 0 as  &#39;YTD AOV Absolute&#39;, 0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, 0 as &#39;YTD AOV Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Attrition Absolute&#39;,0 as &#39;YTD Attrition Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, 0 as &#39;YTD Attrition TTM Rate&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PipeGen Absolute&#39;,0 as &#39;YTD PipeGen Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} PipeGen Growth&#39;,0 as &#39;YTD PipeGen Growth&#39;; \n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------UNION--------------------------------------------------------------------------------------------------------------\n;result_union = union result_none, result_Total;result_union = group result_union by &#39;all&#39;;  final_result = foreach result_union generate  &quot;TOTAL&quot;+&quot;                          &quot; as &#39;Region&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;) as  &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;, sum(&#39;YTD ACV Absolute&#39;) as&#39;YTD ACV Absolute&#39; , sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;, sum(&#39;YTD ACV Growth&#39;) as  &#39;YTD ACV Growth&#39;,sum (&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, sum( &#39;YTD AOV Absolute&#39;) as  &#39;YTD AOV Absolute&#39;, sum( &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, sum(&#39;YTD AOV Growth&#39;) as &#39;YTD AOV Growth&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Attrition Absolute&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Attrition Absolute&#39;, sum(&#39;YTD Attrition Absolute&#39;) as &#39;YTD Attrition Absolute&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, sum(&#39;YTD Attrition TTM Rate&#39;) as  &#39;YTD Attrition TTM Rate&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PipeGen Absolute&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PipeGen Absolute&#39;, sum(&#39;YTD PipeGen Absolute&#39;) as &#39;YTD PipeGen Absolute&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} PipeGen Growth&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} PipeGen Growth&#39;, sum(&#39;YTD PipeGen Growth&#39;) as  &#39;YTD PipeGen Growth&#39; ; ",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        }
      },
      "lens_1": {
        "broadcastFacet": true,
        "groups": [
          "Country"
        ],
        "label": "Country logic",
        "numbers": [],
        "query": "q = load &quot;Master_Hierarchy&quot;;\nq = filter q by &#39;Level_1&#39; in  {{cell(Static_Region_Filter.selection,0,&quot;filter&quot;).asString()}};\nq = filter q by {{column(lens_2.selection,[&quot;Region&quot;]).asEquality(&#39;Level_1&#39;)}};\nq = group q by (&#39;Level_1&#39;, &#39;Level_2&#39;);\n\nq = foreach q generate \ncase when (&#39;Level_1&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Level_2&#39; ==  &quot;Canada&quot; )) then &quot;Canada&quot; \nwhen (&#39;Level_1&#39; == &quot;AMER&quot; &amp;&amp; (&#39;Level_2&#39; ==  &quot;United States&quot; )) then &quot;United States&quot; \nwhen (&#39;Level_1&#39; == &quot;AMER&quot;)then &quot;RO AMER&quot; \nwhen (&#39;Level_1&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Level_2&#39; ==  &quot;United Kingdom&quot; )) then &quot;United Kingdom&quot;  \nwhen (&#39;Level_1&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Level_2&#39; ==  &quot;France&quot; )) then &quot;France&quot; \nwhen (&#39;Level_1&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Level_2&#39; ==  &quot;Germany&quot; )) then &quot;Germany&quot; \nwhen (&#39;Level_1&#39; == &quot;EMEA&quot; &amp;&amp; (&#39;Level_2&#39; ==  &quot;Netherlands&quot; )) then &quot;Netherlands&quot; \nwhen (&#39;Level_1&#39; == &quot;EMEA&quot; ) then &quot;RO EMEA&quot; \nwhen (&#39;Level_1&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Level_2&#39; ==  &quot;Australia&quot; )) then &quot;ANZ&quot;  \nwhen (&#39;Level_1&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Level_2&#39; ==  &quot;ANZ&quot; )) then &quot;ANZ&quot;  \nwhen (&#39;Level_1&#39; == &quot;APAC&quot; &amp;&amp; (&#39;Level_2&#39; ==  &quot;India&quot; )) then &quot;India&quot; \nwhen (&#39;Level_1&#39; == &quot;APAC&quot; ) then &quot;RO APAC&quot; \nwhen (&#39;Level_1&#39; == &quot;APAC&quot; ) then &quot;RO APAC&quot;  \nwhen (&#39;Level_1&#39; == &quot;JP&quot; &amp;&amp; (&#39;Level_2&#39; == &quot;Japan&quot; )) then &quot;Japan&quot;\nwhen (&#39;Level_1&#39; == &quot;JP&quot; &amp;&amp; (&#39;Level_2&#39; == &quot;South Korea&quot;)) then &quot;South Korea&quot;\nwhen (&#39;Level_1&#39; == &quot;JP&quot;) then &quot;RO JP&quot;  \nwhen (&#39;Level_1&#39; == &quot;LACA&quot; &amp;&amp; (&#39;Level_2&#39; ==  &quot;Brazil&quot; )) then &quot;Brazil&quot; \nwhen (&#39;Level_1&#39; == &quot;LACA&quot; ) then &quot;RO LACA&quot; \nwhen (&#39;Level_1&#39; == &quot;Other&quot; ) then &quot;Other&quot; else &quot;ERROR&quot; end as &#39;Country&#39;;\n\nq = group q by &#39;Country&#39;; \nq = foreach q generate &#39;Country&#39;; \nq = order q by (&#39;Country&#39; asc);",
        "receiveFacet": true,
        "selectMode": "multi",
        "strings": [
          "Country"
        ],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      },
      "Table_Measures_5_Header": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Measures_5_Header",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;Level_1&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nACV = load &quot;APM_ACV_AUTO1&quot;;\nACV = filter ACV by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--ACV = filter ACV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nACV = foreach ACV generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39; ,&#39;Month&#39; as &#39;Month&#39;,sum(&#39;ACV&#39;) as &#39;ACV&#39;;;\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD NONE For Fake Header line----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nAPM_None = load &quot;APM_ACV_AUTO1&quot;;\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER ACV----------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYACV = filter ACV by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYACV = filter ACV by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYACV = filter ACV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nn\nAOV = load &quot;APM_AOV&quot;;\nAOV = filter AOV by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--AOV = filter AOV by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nAOV = foreach AOV generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;,  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;AOV&#39;) as &#39;AOV&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER AOV ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYAOV = filter AOV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYAOV = filter AOV by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYAOV = filter AOV by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}}&amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYAOV = filter AOV by &#39;Month&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------/////////////////////////////-----------LOAD ATTRITION ----------------/////////////////////////////////////////\n\nAttrition = load &quot;APM_Attrition&quot;;\nAttrition = filter Attrition by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--Attrition = filter Attrition by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nAttrition = foreach Attrition generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,&#39;Month&#39; as &#39;Month&#39; ,sum(&#39;Attrition_Product&#39;)*-1 as &#39;Attrition_Product&#39;, sum(&#39;TTM_Product&#39;)*-1 as &#39;TTM_Product&#39;,sum(&#39;AOV_twelve_month_ago_Product&#39;) as &#39;AOV_twelve_month_ago&#39; ;\n----------------------------------------------------------------------------------------------FILTER ATTRITION -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nq2_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYATT = filter Attrition by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYATT = filter Attrition by &#39;Month&#39; in   {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq4_CYATT = filter Attrition by &#39;Month&#39; in  {{cell(Quarter_1.selection,0,&quot;YTD_Month_cum&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n------------------------------------------------------------------------------------------------------------------------------------------------LOAD PIPEGEN--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nPipegen = load &quot;APM_Pipegen1&quot;;Pipegen = filter Pipegen by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--Pipegen = filter Pipegen by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\n\nq2_CYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYPipegen = filter Pipegen by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_pipegen&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};;\nnDEALS = load &quot;APM_DEALS&quot;;\nDEALS = filter DEALS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nDEALS = filter DEALS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nDEALS = foreach DEALS generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;X10M_Deals&#39;) as &#39;X10M_Deals&#39;, sum(&#39;X10M&#39;) as &#39;X10M&#39;, sum(&#39;Runrate_Volume&#39;) as &#39;Runrate_Volume&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER DEALS ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYDEALS = filter DEALS by &#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYDEALS = filter DEALS by &#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYDEALS = filter DEALS by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYDEALS = filter DEALS by &#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnLOGOS = load &quot;APM_LOGO&quot;;\nLOGOS = filter LOGOS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nLOGOS = filter LOGOS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nLOGOS = foreach LOGOS generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;New_Logos&#39;) as &#39;New_Logos&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER LOGOS ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYLOGOS = filter LOGOS by &#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYLOGOS = filter LOGOS by &#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYLOGOS = filter LOGOS by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYLOGOS = filter LOGOS by &#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnLOGOSLOST = load &quot;APM_LOST_LOGO&quot;;\nLOGOSLOST = filter LOGOSLOST by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nLOGOSLOST = filter LOGOSLOST by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nLOGOSLOST = foreach LOGOSLOST generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Lost_Logo_Count&#39;) as &#39;Lost_Logo_Count&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER LOGOSLOST ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYLOGOSLOST = filter LOGOSLOST by &#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYLOGOSLOST = filter LOGOSLOST by &#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYLOGOSLOST = filter LOGOSLOST by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYLOGOSLOST = filter LOGOSLOST by &#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnREDACCOUNTS = load &quot;APM_REDACCOUNTS&quot;;\nREDACCOUNTS = filter REDACCOUNTS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nREDACCOUNTS = filter REDACCOUNTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nREDACCOUNTS = foreach REDACCOUNTS generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Red_Accounts&#39;) as &#39;Red_Accounts&#39;;\nnq2_CYREDACCOUNTS = filter REDACCOUNTS by &#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYREDACCOUNTS = filter REDACCOUNTS by &#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYREDACCOUNTS = filter REDACCOUNTS by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYREDACCOUNTS = filter REDACCOUNTS by &#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnEVENTS = load &quot;APM_MARKETING_EVENTS&quot;;\nEVENTS = filter EVENTS by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nEVENTS = filter EVENTS by &#39;Country&#39; !=  &quot;TOTALS/SUMAMRY&quot;;\nEVENTS = filter EVENTS by &#39;Country&#39; !=  &quot;N/A&quot;;\nEVENTS = filter EVENTS by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nEVENTS = foreach EVENTS generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;World_Tours_Trailhead&#39;) as &#39;World_Tours_Trailhead&#39;;\nnq2_CYEVENTS = filter EVENTS by &#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYEVENTS = filter EVENTS by &#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYEVENTS = filter EVENTS by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYEVENTS = filter EVENTS by &#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnOTHER = load &quot;APM_MARKETING_OTHER&quot;;\nOTHER = filter OTHER by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nOTHER = filter OTHER by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nOTHER = foreach OTHER generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Marketing_Events_Other&#39;) as &#39;Marketing_Events_Other&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------FILTER APM OTHER ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nq2_CYOTHER = filter OTHER by &#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYOTHER = filter OTHER by &#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYOTHER = filter OTHER by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYOTHER = filter OTHER by &#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nnEBC = load &quot;APM_MARKETING_EBC&quot;;\nEBC = filter EBC by &#39;Segment&#39;  {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\nEBC = filter EBC by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in{{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nEBC = foreach EBC generate  &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_2&quot;).asString()}}&#39;, &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;EBC_s&#39;) as &#39;EBC_s&#39;, sum(&#39;DF_EBC_s&#39;) as &#39;DF_EBC_s&#39;;\nnq2_CYEBC = filter EBC by &#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq2_PYEBC = filter EBC by &#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}}  &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_CYEBC = filter EBC by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\nq3_PYEBC = filter EBC by &#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;YTD_Quarter&quot;).asString()}} &amp;&amp; {{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}};\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------LOAD CSM------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nCSM = load &quot;CSM_PSM_HC&quot;;\nCSM = filter CSM by &#39;Segment&#39; {{cell(Toggle_CSG_1.selection,0,&quot;value&quot;).asString()}} &quot;CSG&quot;;\n--CSM = filter CSM by &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39; in  {{cell(Cloud_Filter_1.selection,0,&quot;filter&quot;).asString()}};\nq2_CYCSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PYCSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq2_PY_2_CSM = filter CSM by &#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;Quarter&quot;).asString()}} &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_CYCSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;CY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PYCSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\nq3_PY_2_CSM = filter CSM by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;YTD_Quarter_CSM&quot;).asString()}}) &amp;&amp; ({{cell(Fiscal_Year_1.selection,0,&quot;PY_2&quot;).asEquality(&#39;Fiscal_Year&#39;)}});\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------Grouping------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nresult_Total = group q2_CYACV by all full, q2_PYACV by all full, q3_CYACV by all full, q3_PYACV by all full, q2_CYAOV by all full, q2_PYAOV by all full, q3_CYAOV by all full, q3_PYAOV by all full, q2_CYATT by all full, q2_PYATT by all full, q3_CYATT by all full, q3_PYATT by all full,q4_CYATT by all full,  q2_CYPipegen by all full, q2_PYPipegen by all full, q3_CYPipegen by all full, q3_PYPipegen by all full,q2_CYDEALS by all full, q2_PYDEALS by all full, q3_CYDEALS by all full, q3_PYDEALS by all full, q2_CYLOGOS by all full, q2_PYLOGOS by all full, q3_CYLOGOS by all full, q3_PYLOGOS by all full ,q2_CYLOGOSLOST by all full, q2_PYLOGOSLOST by all full, q3_CYLOGOSLOST by all full, q3_PYLOGOSLOST by all full,q2_CYREDACCOUNTS by all full, q2_PYREDACCOUNTS by all full, q3_CYREDACCOUNTS by all full, q3_PYREDACCOUNTS by all full,q2_CYEVENTS by all full, q2_PYEVENTS by all full, q3_CYEVENTS by all full, q3_PYEVENTS by all full, q2_CYOTHER by all full, q2_PYOTHER by all full, q3_CYOTHER by all full, q3_PYOTHER by all full,q2_CYEBC by all full, q2_PYEBC by all full, q3_CYEBC by all full, q3_PYEBC by all full, q2_CYCSM by all full, q2_PYCSM by all full,q2_PY_2_CSM by all full, q3_CYCSM by all full, q3_PYCSM by all full,q3_PY_2_CSM by all  ;\n----------------------------------------------/////////////////////////////////////////------PROJECTION----- -////////////////////////////////////////////////-----------------------------------------------------------------------------------------------------------------------------------------------------\n\nresult_Total = foreach result_Total generate &quot;TOTAL&quot; as &#39;{{cell(Cloud_Filter_1.selection,0,&quot;level_1&quot;).asString()}}&#39;, coalesce(sum(q2_CYACV.&#39;ACV&#39;),0) as &#39;A&#39;, coalesce(sum(q2_PYACV.&#39;ACV&#39;),0) as &#39;B&#39;, coalesce(sum(q3_CYACV.&#39;ACV&#39;),0) as &#39;C&#39;, coalesce(sum(q3_PYACV.&#39;ACV&#39;),0) as &#39;D&#39;,coalesce(sum(q2_CYAOV.&#39;AOV&#39;),0) as &#39;E&#39;, coalesce(sum(q2_PYAOV.&#39;AOV&#39;),0) as &#39;F&#39;, coalesce(sum(q3_CYAOV.&#39;AOV&#39;),0) as &#39;G&#39;, coalesce(sum(q3_PYAOV.&#39;AOV&#39;),0) as &#39;H&#39;,coalesce(sum(q2_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q2&#39;,coalesce(sum(q3_CYATT.&#39;Attrition_Product&#39;),0) as &#39;Attrition_CY_Q3&#39;,coalesce(round(sum(q2_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q2&#39; ,coalesce(round(sum(q2_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q2&#39;,coalesce(round(sum(q4_CYATT.&#39;TTM_Product&#39;), 0), 0) as &#39;TTM_Product_CY_Q3&#39; ,coalesce(round(sum(q4_CYATT.&#39;AOV_twelve_month_ago&#39;), 0), 0) as &#39;AOV_twelve_month_ago_CY_Q3&#39;, coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39;, coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD Pipegen Absolute&#39;, ((coalesce(sum(q2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39;, ((coalesce(sum(q3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(q3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YTD Pipegen Growth&#39;,coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;YTD X10M_Deals Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YTD X10M_Deals Growth&#39;,coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) as &#39;YTD X10M Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YTD X10M Growth&#39;,coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;, coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;YTD Runrate_Volume Absolute&#39;, ((coalesce(sum(q2_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;, ((coalesce(sum(q3_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(q3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YTD Runrate_Volume Growth&#39;,coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;, coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) as &#39;YTD New_Logos Absolute&#39;, ((coalesce(sum(q2_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q2_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;, ((coalesce(sum(q3_CYLOGOS.&#39;New_Logos&#39;), 0) - coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) / coalesce(sum(q3_PYLOGOS.&#39;New_Logos&#39;), 0)) * 100 as &#39;YTD New_Logos Growth&#39;,coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;, coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) as &#39;YTD Lost_Logo_Count Absolute&#39;, ((coalesce(sum(q2_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q2_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;, ((coalesce(sum(q3_CYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0) - coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) / coalesce(sum(q3_PYLOGOSLOST.&#39;Lost_Logo_Count&#39;), 0)) * 100 as &#39;YTD Lost_Logo_Count Growth&#39;,coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;, coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;YTD Red_Accounts Absolute&#39;, ((coalesce(sum(q2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;, ((coalesce(sum(q3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(q3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YTD Red_Accounts Growth&#39;,coalesce(sum(q2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;, coalesce(sum(q3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;YTD World_Tours_Trailhead Absolute&#39;, ((coalesce(sum(q2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(q2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(q2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;, ((coalesce(sum(q3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(q3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(q3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YTD World_Tours_Trailhead Growth&#39;, coalesce(sum(q2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;, coalesce(sum(q3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;YTD Marketing_Events_Other Absolute&#39;, ((coalesce(sum(q2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(q2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(q2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;, ((coalesce(sum(q3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(q3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(q3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YTD Marketing_Events_Other Growth&#39;, coalesce(sum(q2_CYEBC.&#39;EBC_s&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;, coalesce(sum(q3_CYEBC.&#39;EBC_s&#39;), 0) as &#39;YTD EBC_s Absolute&#39;, ((coalesce(sum(q2_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(q2_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(q2_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;, ((coalesce(sum(q3_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(q3_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(q3_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YTD EBC_s Growth&#39;, coalesce(sum(q2_CYEBC.&#39;DF_EBC_s&#39;), 0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} DF_EBC_s Absolute&#39;, coalesce(sum(q3_CYEBC.&#39;DF_EBC_s&#39;), 0) as &#39;YTD DF_EBC_s Absolute&#39;, ((coalesce(sum(q2_CYEBC.&#39;DF_EBC_s&#39;), 0) - coalesce(sum(q2_PYEBC.&#39;DF_EBC_s&#39;), 0)) / coalesce(sum(q2_PYEBC.&#39;DF_EBC_s&#39;), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} DF_EBC_s Growth&#39;, ((coalesce(sum(q3_CYEBC.&#39;DF_EBC_s&#39;), 0) - coalesce(sum(q3_PYEBC.&#39;DF_EBC_s&#39;), 0)) / coalesce(sum(q3_PYEBC.&#39;DF_EBC_s&#39;), 0)) * 100 as &#39;YTD DF_EBC_s Growth&#39;,  (coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0))  as &#39;YTD CSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;CSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD CSM CAGR&#39;,(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0)) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39;, (coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0))  as &#39;YTD PSM Absolute&#39; ,  ((power(coalesce(sum(q2_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q2_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100)  as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;,((power(coalesce(sum(q3_CYCSM.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(q3_PY_2_CSM.&#39;PSM_Headcount&#39;), 0),(1/2))-1)*100) as &#39;YTD PSM CAGR&#39;;\nnresult_Total = foreach result_Total generate &#39;A&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;,  &#39;C&#39; as  &#39;YTD ACV Absolute&#39;, ((A -B) / B) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;,((C - D) / D) * 100 as &#39;YTD ACV Growth&#39;,&#39;E&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;,  &#39;G&#39; as  &#39;YTD AOV Absolute&#39;, ((E -F) / F) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;,  ((G - H) / H) * 100  as &#39;YTD AOV Growth&#39;, coalesce(sum(&#39;Attrition_CY_Q2&#39;),0) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Attrition Absolute&#39;, coalesce(sum(&#39;Attrition_CY_Q3&#39;),0) as &#39;YTD Attrition Absolute&#39;,(coalesce(round(sum(&#39;TTM_Product_CY_Q2&#39;), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q2), 0), 0)) * 100 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, (coalesce(round(sum(&#39;TTM_Product_CY_Q3&#39;), 0), 0) / coalesce(round(sum(AOV_twelve_month_ago_CY_Q3), 0), 0)) * 100 as &#39;YTD Attrition TTM Rate&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Pipegen Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PipeGen Absolute&#39;,&#39;YTD Pipegen Absolute&#39; as &#39;YTD PipeGen Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Pipegen Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} PipeGen Growth&#39;,&#39;YTD Pipegen Growth&#39; as &#39;YTD PipeGen Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;,&#39;YTD X10M_Deals Absolute&#39; as &#39;YTD X10M_Deals Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;,&#39;YTD X10M_Deals Growth&#39; as &#39;YTD X10M_Deals Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;,&#39;YTD X10M Absolute&#39; as &#39;YTD X10M Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;,&#39;YTD X10M Growth&#39; as &#39;YTD X10M Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;,&#39;YTD Runrate_Volume Absolute&#39; as &#39;YTD Runrate_Volume Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;,&#39;YTD Runrate_Volume Growth&#39; as &#39;YTD Runrate_Volume Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;,&#39;YTD New_Logos Absolute&#39; as &#39;YTD New_Logos Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;,&#39;YTD New_Logos Growth&#39; as &#39;YTD New_Logos Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;,&#39;YTD Lost_Logo_Count Absolute&#39; as &#39;YTD Lost_Logo_Count Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;,&#39;YTD Lost_Logo_Count Growth&#39; as &#39;YTD Lost_Logo_Count Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;,&#39;YTD Red_Accounts Absolute&#39; as &#39;YTD Red_Accounts Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;,&#39;YTD Red_Accounts Growth&#39; as &#39;YTD Red_Accounts Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;,&#39;YTD World_Tours_Trailhead Absolute&#39; as &#39;YTD World_Tours_Trailhead Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;,&#39;YTD World_Tours_Trailhead Growth&#39; as &#39;YTD World_Tours_Trailhead Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;,&#39;YTD Marketing_Events_Other Absolute&#39; as &#39;YTD Marketing_Events_Other Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;,&#39;YTD Marketing_Events_Other Growth&#39; as &#39;YTD Marketing_Events_Other Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;,&#39;YTD EBC_s Absolute&#39; as &#39;YTD EBC_s Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;,&#39;YTD EBC_s Growth&#39; as &#39;YTD EBC_s Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} DF_EBC_s Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} DF_EBC_s Absolute&#39;,&#39;YTD DF_EBC_s Absolute&#39; as &#39;YTD DF_EBC_s Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} DF_EBC_s Growth&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} DF_EBC_s Growth&#39;,&#39;YTD DF_EBC_s Growth&#39; as &#39;YTD DF_EBC_s Growth&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM&#39;,&#39;YTD CSM Absolute&#39; as &#39;YTD CSM Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39;,&#39;YTD CSM CAGR&#39; as &#39;YTD CSM CAGR&#39; ,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM Absolute&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM&#39;,&#39;YTD PSM Absolute&#39; as &#39;YTD PSM Absolute&#39;,&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM CAGR&#39; as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM CAGR&#39;,&#39;YTD PSM CAGR&#39; as &#39;YTD PSM CAGR&#39;;\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------NONE for Fake HEADER--------------------------------------------------------------------------------------------------------------\n;result_none = group APM_None by &#39;all&#39;; result_none = foreach result_none generate 0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} ACV Absolute&#39;,  0 as  &#39;YTD ACV Absolute&#39;, 0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} ACV Growth&#39;,0 as &#39;YTD ACV Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} AOV Absolute&#39;, 0 as  &#39;YTD AOV Absolute&#39;, 0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} AOV Growth&#39;, 0 as &#39;YTD AOV Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Attrition Absolute&#39;,0 as &#39;YTD Attrition Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Attrition TTM Rate&#39;, 0 as &#39;YTD Attrition TTM Rate&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PipeGen Absolute&#39;,0 as &#39;YTD PipeGen Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} PipeGen Growth&#39;,0 as &#39;YTD PipeGen Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M_Deals Absolute&#39;,0 as &#39;YTD X10M_Deals Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M_Deals Growth&#39;,0 as &#39;YTD X10M_Deals Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} X10M Absolute&#39;,0 as &#39;YTD X10M Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} X10M Growth&#39;,0 as &#39;YTD X10M Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Runrate_Volume Absolute&#39;,0 as &#39;YTD Runrate_Volume Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Runrate_Volume Growth&#39;,0 as &#39;YTD Runrate_Volume Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} New_Logos Absolute&#39;,0 as &#39;YTD New_Logos Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} New_Logos Growth&#39;,0 as &#39;YTD New_Logos Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Lost_Logo_Count Absolute&#39;,0 as &#39;YTD Lost_Logo_Count Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Lost_Logo_Count Growth&#39;,0 as &#39;YTD Lost_Logo_Count Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Red_Accounts Absolute&#39;,0 as &#39;YTD Red_Accounts Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Red_Accounts Growth&#39;,0 as &#39;YTD Red_Accounts Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;,0 as &#39;YTD World_Tours_Trailhead Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;,0 as &#39;YTD World_Tours_Trailhead Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;,0 as &#39;YTD Marketing_Events_Other Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;,0 as &#39;YTD Marketing_Events_Other Growth&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;,0 as &#39;YTD EBC_s Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;,0 as &#39;YTD EBC_s Growth&#39;, 0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} DF_EBC_s Absolute&#39;,0 as &#39;YTD DF_EBC_s Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} DF_EBC_s Growth&#39;,0 as &#39;YTD DF_EBC_s Growth&#39;, 0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} CSM&#39;,0 as &#39;YTD CSM Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} CSM CAGR&#39;,0 as &#39;YTD CSM CAGR&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} PSM&#39;,0 as &#39;YTD PSM Absolute&#39;,0 as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} PSM CAGR&#39;,0 as &#39;YTD PSM CAGR&#39;;; \n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------UNION--------------------------------------------------------------------------------------------------------------\n;result_union = union result_none, result_Total;result_union = group result_union by &#39;all&#39;;  final_result = foreach result_union generate &quot;TOTAL&quot; +&quot;                                      &quot; as &#39;Region&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} World_Tours_Trailhead Absolute&#39;, sum(&#39;YTD World_Tours_Trailhead Absolute&#39;) as &#39;YTD World_Tours_Trailhead Absolute&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} World_Tours_Trailhead Growth&#39;, sum(&#39;YTD World_Tours_Trailhead Growth&#39;) as  &#39;YTD World_Tours_Trailhead Growth&#39;,sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} Marketing_Events_Other Absolute&#39;, sum(&#39;YTD Marketing_Events_Other Absolute&#39;) as &#39;YTD Marketing_Events_Other Absolute&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} Marketing_Events_Other Growth&#39;, sum(&#39;YTD Marketing_Events_Other Growth&#39;) as  &#39;YTD Marketing_Events_Other Growth&#39;,sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} EBC_s Absolute&#39;, sum(&#39;YTD EBC_s Absolute&#39;) as &#39;YTD EBC_s Absolute&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} EBC_s Growth&#39;, sum(&#39;YTD EBC_s Growth&#39;) as  &#39;YTD EBC_s Growth&#39;,sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} DF_EBC_s Absolute&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_absolute&quot;).asString()}} DF_EBC_s Absolute&#39;, sum(&#39;YTD DF_EBC_s Absolute&#39;) as &#39;YTD DF_EBC_s Absolute&#39;, sum(&#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} DF_EBC_s Growth&#39;) as &#39;{{cell(Quarter_1.selection,0,&quot;Header_name_rate&quot;).asString()}} DF_EBC_s Growth&#39;, sum(&#39;YTD DF_EBC_s Growth&#39;) as  &#39;YTD DF_EBC_s Growth&#39; ; ",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        }
      },
      "lens_2": {
        "broadcastFacet": true,
        "groups": [
          "Lead"
        ],
        "numbers": [],
        "query": "q = load &quot;APM_ACV_AUTO1&quot;;\nq = group q by (&#39;Lead&#39;);\nq = foreach q generate case when &#39;Lead&#39; == &quot;Tony Owens&quot; then &quot;1. Tony Owens&quot; when &#39;Lead&#39; == &quot;Brian Millham&quot; then &quot;2. Brian Millham&quot; when &#39;Lead&#39; == &quot;Miguel Milano&quot; then &quot;3. Miguel Milano&quot; when &#39;Lead&#39; == &quot;Mark Innes&quot; then &quot;4. Mark Innes&quot; when &#39;Lead&#39; == &quot;Shinichi Koide&quot; then &quot;5. Shinichi Koide&quot; when &#39;Lead&#39; == &quot;Dave Rey&quot; then &quot;6. Dave Rey&quot; when &#39;Lead&#39; == &quot;Maria Martinez&quot; then &quot;7. Maria Martinez&quot;else &quot;9. unkown&quot; end as Lead_Rank  ,&#39;Lead&#39; as &#39;Lead&#39;, count() as &#39;count&#39;;\nq = order q by &#39;Lead_Rank&#39; asc;\nq = limit q 2000;",
        "receiveFacet": true,
        "selectMode": "multi",
        "strings": [
          "Lead"
        ],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart"
        }
      }
    },
    "widgetStyle": {
      "backgroundColor": "#FFFFFF",
      "borderColor": "#E6ECF2",
      "borderEdges": [],
      "borderRadius": 0,
      "borderWidth": 1
    },
    "widgets": {
      "link_18": {
        "parameters": {
          "destinationLink": {
            "name": "328a689d-17a8-489e-b41c-d6dbaedbf3ac"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Financial Measures and Pipeline",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_19": {
        "parameters": {
          "destinationLink": {
            "name": "5e25f102-807a-4f32-bc36-92ca2fc64a24"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Marketing Events Measures",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_16": {
        "parameters": {
          "destinationType": "lens",
          "fontSize": 12,
          "includeState": false,
          "text": "Sales Details",
          "textAlignment": "center",
          "textColor": "#5C7A99"
        },
        "type": "link"
      },
      "link_17": {
        "parameters": {
          "destinationLink": {
            "name": "a32a622b-f247-47ef-92af-1ce8fe739626"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Distribution HC",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_14": {
        "parameters": {
          "destinationLink": {
            "name": "5e25f102-807a-4f32-bc36-92ca2fc64a24"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Marketing Events Measures",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_15": {
        "parameters": {
          "destinationLink": {
            "name": "5ee7ef3b-7f87-4bff-a84d-ff2916bd2135"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "CSM, PSM and Red Accounts",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_12": {
        "parameters": {
          "destinationLink": {
            "name": "328a689d-17a8-489e-b41c-d6dbaedbf3ac"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Financial Measures and Pipeline",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_13": {
        "parameters": {
          "destinationLink": {
            "name": "APM_MASTER_Region_Summary_Dashboard_Level_1"
          },
          "destinationType": "dashboard",
          "fontSize": 14,
          "includeState": false,
          "text": "Region",
          "textAlignment": "center",
          "textColor": "rgb(0, 135, 255)"
        },
        "type": "link"
      },
      "link_10": {
        "parameters": {
          "destinationLink": {
            "name": "APM_Region_Summary_Dashboard_Level_1"
          },
          "destinationType": "dashboard",
          "fontSize": 14,
          "includeState": true,
          "text": "Region",
          "textAlignment": "center",
          "textColor": "rgb(0, 135, 255)"
        },
        "type": "link"
      },
      "link_11": {
        "parameters": {
          "destinationLink": {
            "name": "a32a622b-f247-47ef-92af-1ce8fe739626"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Distribution HC",
          "textAlignment": "center",
          "textColor": "#5C7A99"
        },
        "type": "link"
      },
      "table_12": {
        "parameters": {
          "borderColor": "rgba(255, 255, 255, 0.2)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "rgb(43, 71, 114)",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#ffffff",
            "fontSize": 10
          },
          "innerMajorBorderColor": "rgba(255, 255, 255, 0.2)",
          "innerMinorBorderColor": "rgba(255, 255, 255, 0.2)",
          "maxColumnWidth": 260,
          "minColumnWidth": 65,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Measures_2_Header",
          "totals": true,
          "verticalPadding": 4
        },
        "type": "table"
      },
      "container_1": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "stretch"
        },
        "type": "container"
      },
      "container_2": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "stretch"
        },
        "type": "container"
      },
      "table_14": {
        "parameters": {
          "borderColor": "rgb(230, 236, 242)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(244, 246, 249)",
            "fontColor": "rgb(244, 246, 249)",
            "fontSize": 0
          },
          "innerMajorBorderColor": "rgb(230, 236, 242)",
          "innerMinorBorderColor": "rgb(230, 236, 242)",
          "maxColumnWidth": 200,
          "minColumnWidth": 75,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Level_2_Measures_1",
          "verticalPadding": 8
        },
        "type": "table"
      },
      "container_3": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "table_16": {
        "parameters": {
          "borderColor": "#e0e5ee",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#FFFFFF",
            "fontSize": 14
          },
          "innerMajorBorderColor": "#a8b7c7",
          "innerMinorBorderColor": "#e0e5ee",
          "maxColumnWidth": 260,
          "minColumnWidth": 260,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Measures_2_Top_Header",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "container_5": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "text_3": {
        "parameters": {
          "fontSize": 20,
          "showActionMenu": true,
          "text": "↳",
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "table_19": {
        "parameters": {
          "borderColor": "rgba(255, 255, 255, 0.2)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "rgb(43, 71, 114)",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#ffffff",
            "fontSize": 10
          },
          "innerMajorBorderColor": "rgba(255, 255, 255, 0.2)",
          "innerMinorBorderColor": "rgba(255, 255, 255, 0.2)",
          "maxColumnWidth": 160,
          "minColumnWidth": 67,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Measures_3_Header",
          "totals": true,
          "verticalPadding": 4
        },
        "type": "table"
      },
      "container_7": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "text_2": {
        "parameters": {
          "fontSize": 12,
          "showActionMenu": true,
          "text": "Data for the CSG segment is filtered out from all metrics when the &quot;No CSG&quot; toggle is selected.\nACV: Availability of information in org62 can effect historical trends.\nAOV: Availability of information in org62 can effect historical trends\nAttrition: Trailing 12 months (TTM) attrition. Core only prior to FY15Q1. FY18 total attrition reflects SFDC excluding CC, Krux, and Heroku online business\n** ATTRITION DATA AS OF SEPTEMBER FY19\nPipeline: Pipe numbers exclude CSG pipePipe Gen = Sum of $ amount of opportunities that moved to Stage 2. Note: Core pipe gen includes Premiere a-la-carte. The rest of CSG pipe gen is reported within CSG cut.",
          "textAlignment": "left",
          "textColor": "#5C7A99"
        },
        "type": "text"
      },
      "text_5": {
        "parameters": {
          "fontSize": 12,
          "showActionMenu": true,
          "text": "Data for the CSG segment is filtered out from all metrics when the &quot;No CSG&quot; toggle is selected.\nWithin the AE, Co Prime, SE sections, % columns 3 &amp; 4 represent 24 month CAGR (quarterly and YTD)\nAEs: Includes ECS, Marketing Cloud (Messaging/Journies), and Commerce Cloud AE&#39;s\nSEs: Excludes Q Branch, Spark, IPD, and SE Management\nCo Prime: CSG Coprime = APs (account partners) that worked through the Qtr",
          "textAlignment": "left",
          "textColor": "#5C7A99"
        },
        "type": "text"
      },
      "text_4": {
        "parameters": {
          "fontSize": 20,
          "showActionMenu": true,
          "text": "↳",
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "text_7": {
        "parameters": {
          "fontSize": 12,
          "showActionMenu": true,
          "text": "Data for the CSG segment is filtered out from all metrics when the &quot;No CSG&quot; toggle is selected.\nACV: Availability of information in org62 can effect historical trends.\nAOV: Availability of information in org62 can effect historical trends\nAttrition: Trailing 12 months (TTM) attrition. Core only prior to FY15Q1. FY18 total attrition reflects SFDC excluding CC, Krux, and Heroku online business\n** ATTRITION DATA AS OF SEPTEMBER FY19\nPipeline: Pipe numbers exclude CSG pipePipe Gen = Sum of $ amount of opportunities that moved to Stage 2. Note: Core pipe gen includes Premiere a-la-carte. The rest of CSG pipe gen is reported within CSG cut.",
          "textAlignment": "left",
          "textColor": "#5C7A99"
        },
        "type": "text"
      },
      "text_6": {
        "parameters": {
          "fontSize": 12,
          "showActionMenu": true,
          "text": "** DATA WILL BE UPDATED AS A PART OF THE REGULAR REFRESH BY MID AUGUST**\nData for the CSG segment is filtered out from all metrics when the &quot;No CSG&quot; toggle is selected.\n$10M+ Deals: Deals at the global company level with ACV value &gt;= $10M\n$1M+ deals: Deals at the global company level with ACV value &gt;= $1M (inclusive of the above)\nRun Rate Volume: Count of deals at global company level below a specific ACV threshold (i.e., high transaction volume) dependent on region and segment.\nFor example, AMER Run Rate thresholds: ENTR &gt;$500k, CMRCL &gt;$50K, ESMB &gt;$5K, USPS &gt;$50K\nNew Logos: Customer crosses the AOV threshold (beg AOV + ACV): ESMB: $0, CMRCL: $10K, EBU: $50K\nLost Logos: When a customer AOV goes to decreases to $0 and is not clawed back\n\n",
          "textAlignment": "left",
          "textColor": "#5C7A99"
        },
        "type": "text"
      },
      "text_9": {
        "parameters": {
          "fontSize": 12,
          "showActionMenu": true,
          "text": "Data for the CSG segment is filtered out from all metrics when the &quot;No CSG&quot; toggle is selected.\nMarketing Events - World Tours &amp; Trailhead Live: World Tours and Trailhead Live\nMarketing Events - Other: Marketing events excluding World Tours, Trailhead, and EBC&#39;s\nEBCs: Excludes Dreamforce EBC&#39;s\nEBC Dreamforce: EBC&#39;s held during Dreamforce",
          "textAlignment": "left",
          "textColor": "#5C7A99"
        },
        "type": "text"
      },
      "text_8": {
        "parameters": {
          "fontSize": 12,
          "showActionMenu": true,
          "text": "Data for the CSG segment is filtered out from all metrics when the &quot;No CSG&quot; toggle is selected.\nCSM: CSMs are assigned to customers with $1m+ Premier AOV. Excludes management.\nPSM: PSMs cover customers with &lt;$1m Premier AOV. Excludes management.\nRed Accounts: Account escalations that represent attriton risk (AOV)",
          "textAlignment": "left",
          "textColor": "#5C7A99"
        },
        "type": "text"
      },
      "image_9": {
        "parameters": {
          "alignmentX": "center",
          "alignmentY": "center",
          "fit": "fitheight",
          "image": {
            "name": "FSpng5",
            "namespace": ""
          }
        },
        "type": "image"
      },
      "image_8": {
        "parameters": {
          "alignmentX": "center",
          "alignmentY": "center",
          "fit": "fitheight",
          "image": {
            "name": "FSpng5",
            "namespace": ""
          }
        },
        "type": "image"
      },
      "link_27": {
        "parameters": {
          "destinationLink": {
            "name": "a32a622b-f247-47ef-92af-1ce8fe739626"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Distribution HC",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "image_5": {
        "parameters": {
          "alignmentX": "center",
          "alignmentY": "center",
          "fit": "fitheight",
          "image": {
            "name": "FSpng5",
            "namespace": ""
          }
        },
        "type": "image"
      },
      "link_28": {
        "parameters": {
          "destinationLink": {
            "name": "328a689d-17a8-489e-b41c-d6dbaedbf3ac"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Financial Measures and Pipeline",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "image_4": {
        "parameters": {
          "alignmentX": "center",
          "alignmentY": "center",
          "fit": "fitheight",
          "image": {
            "name": "FSpng5",
            "namespace": ""
          }
        },
        "type": "image"
      },
      "text_1": {
        "parameters": {
          "fontSize": 20,
          "showActionMenu": true,
          "text": "↳",
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "link_25": {
        "parameters": {
          "destinationLink": {
            "name": "5ee7ef3b-7f87-4bff-a84d-ff2916bd2135"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "CSM, PCM and Red Accounts",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "image_7": {
        "parameters": {
          "alignmentX": "center",
          "alignmentY": "center",
          "fit": "fitheight",
          "image": {
            "name": "FSpng5",
            "namespace": ""
          }
        },
        "type": "image"
      },
      "link_26": {
        "parameters": {
          "destinationLink": {
            "name": "f3a6d53b-259b-4acf-be69-4208a82b8bf8"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Sales Details",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "image_6": {
        "parameters": {
          "alignmentX": "center",
          "alignmentY": "center",
          "fit": "fitheight",
          "image": {
            "name": "FSpng5",
            "namespace": ""
          }
        },
        "type": "image"
      },
      "link_23": {
        "parameters": {
          "destinationLink": {
            "name": "328a689d-17a8-489e-b41c-d6dbaedbf3ac"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Financial Measures and Pipeline",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_24": {
        "parameters": {
          "destinationType": "lens",
          "fontSize": 12,
          "includeState": false,
          "text": "Marketing Events Measures",
          "textAlignment": "center",
          "textColor": "#5C7A99"
        },
        "type": "link"
      },
      "link_21": {
        "parameters": {
          "destinationLink": {
            "name": "f3a6d53b-259b-4acf-be69-4208a82b8bf8"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Sales Details",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_22": {
        "parameters": {
          "destinationLink": {
            "name": "a32a622b-f247-47ef-92af-1ce8fe739626"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Distribution HC",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_20": {
        "parameters": {
          "destinationType": "lens",
          "fontSize": 12,
          "includeState": false,
          "text": "CSM, PSM and Red Accounts",
          "textAlignment": "center",
          "textColor": "#5C7A99"
        },
        "type": "link"
      },
      "image_1": {
        "parameters": {
          "alignmentX": "center",
          "alignmentY": "center",
          "fit": "fitwidth",
          "image": {
            "name": "campfirepng1",
            "namespace": ""
          }
        },
        "type": "image"
      },
      "listselector_12": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "measureField": "none",
          "showActionMenu": false,
          "step": "Lead_1_4",
          "title": "Lead+1"
        },
        "type": "listselector"
      },
      "listselector_11": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "measureField": "count",
          "showActionMenu": false,
          "step": "Lead_1_3",
          "title": "Lead+1"
        },
        "type": "listselector"
      },
      "image_3": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "stretch",
          "image": {
            "name": "FS2_Footerpng",
            "namespace": ""
          }
        },
        "type": "image"
      },
      "listselector_10": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "measureField": "none",
          "showActionMenu": false,
          "step": "Industry_2",
          "title": "Industry"
        },
        "type": "listselector"
      },
      "image_2": {
        "parameters": {
          "alignmentX": "center",
          "alignmentY": "center",
          "fit": "fitheight",
          "image": {
            "name": "einsteinsectionpredictIOpng2",
            "namespace": ""
          }
        },
        "type": "image"
      },
      "listselector_15": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "measureField": "count",
          "showActionMenu": false,
          "step": "Lead_2_1",
          "title": "Lead+2"
        },
        "type": "listselector"
      },
      "listselector_14": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "measureField": "count",
          "showActionMenu": false,
          "step": "Lead_2_1",
          "title": "Lead+2"
        },
        "type": "listselector"
      },
      "listselector_13": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "measureField": "count",
          "showActionMenu": false,
          "step": "Lead_2_1",
          "title": "Lead+2"
        },
        "type": "listselector"
      },
      "link_32": {
        "parameters": {
          "destinationLink": {
            "name": "328a689d-17a8-489e-b41c-d6dbaedbf3ac"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Financial Measures and Pipeline",
          "textAlignment": "center",
          "textColor": "rgb(68, 162, 245)"
        },
        "type": "link"
      },
      "link_30": {
        "parameters": {
          "destinationLink": {
            "name": "be71bbc4-acef-4838-9d46-c659848a22c3"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Market Details and Red Accounts",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_31": {
        "parameters": {
          "destinationLink": {
            "name": "be71bbc4-acef-4838-9d46-c659848a22c3"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Market Details and Red Accounts",
          "textAlignment": "center",
          "textColor": "rgb(125, 152, 179)"
        },
        "type": "link"
      },
      "table_30": {
        "parameters": {
          "borderColor": "rgb(230, 236, 242)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(244, 246, 249)",
            "fontColor": "rgb(244, 246, 249)",
            "fontSize": 0
          },
          "innerMajorBorderColor": "rgb(230, 236, 242)",
          "innerMinorBorderColor": "rgb(230, 236, 242)",
          "maxColumnWidth": 220,
          "minColumnWidth": 70,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Level_2_Measures_5",
          "verticalPadding": 8
        },
        "type": "table"
      },
      "listselector_7": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "showActionMenu": false,
          "step": "Quarter_1",
          "title": "Quarter"
        },
        "type": "listselector"
      },
      "listselector_6": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "measureField": "none",
          "showActionMenu": false,
          "step": "Fiscal_Year_1",
          "title": "Fiscal Year"
        },
        "type": "listselector"
      },
      "listselector_9": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "measureField": "count",
          "showActionMenu": false,
          "step": "Lead_2_1",
          "title": "Lead+2"
        },
        "type": "listselector"
      },
      "listselector_8": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "measureField": "count",
          "showActionMenu": true,
          "step": "Lead_2_1",
          "title": "Lead+2"
        },
        "type": "listselector"
      },
      "listselector_3": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "measureField": "none",
          "showActionMenu": false,
          "step": "Segment_1",
          "title": "Segment"
        },
        "type": "listselector"
      },
      "listselector_2": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "showActionMenu": false,
          "step": "Filter_Cloud",
          "title": "Cloud"
        },
        "type": "listselector"
      },
      "listselector_5": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "measureField": "none",
          "showActionMenu": false,
          "step": "Filter_Region",
          "title": "Region"
        },
        "type": "listselector"
      },
      "listselector_4": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "measureField": "none",
          "showActionMenu": false,
          "step": "Subcloud_1",
          "title": "Subcloud"
        },
        "type": "listselector"
      },
      "link_3": {
        "parameters": {
          "destinationLink": {
            "name": "5ee7ef3b-7f87-4bff-a84d-ff2916bd2135"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "CSM, PSM and Red Accounts",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_4": {
        "parameters": {
          "destinationLink": {
            "name": "f3a6d53b-259b-4acf-be69-4208a82b8bf8"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Sales Details",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_1": {
        "parameters": {
          "destinationLink": {
            "name": "APM_Landing_Page2"
          },
          "destinationType": "dashboard",
          "fontSize": 12,
          "includeState": false,
          "text": "APM Views Landing Page",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_2": {
        "parameters": {
          "destinationLink": {
            "name": "5e25f102-807a-4f32-bc36-92ca2fc64a24"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Marketing Events Measures",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "table_20": {
        "parameters": {
          "borderColor": "#e0e5ee",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#FFFFFF",
            "fontSize": 14
          },
          "innerMajorBorderColor": "#a8b7c7",
          "innerMinorBorderColor": "#e0e5ee",
          "maxColumnWidth": 269,
          "minColumnWidth": 163,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Measures_3_Top_Header",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "table_1": {
        "parameters": {
          "borderColor": "rgba(255, 255, 255, 0.2)",
          "borderWidth": 0,
          "cell": {
            "backgroundColor": "rgb(43, 71, 114)",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#ffffff",
            "fontSize": 10
          },
          "innerMajorBorderColor": "rgba(255, 255, 255, 0.2)",
          "innerMinorBorderColor": "rgba(255, 255, 255, 0.2)",
          "maxColumnWidth": 200,
          "minColumnWidth": 75,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Page_tam_Header",
          "totals": true,
          "verticalPadding": 4
        },
        "type": "table"
      },
      "table_22": {
        "parameters": {
          "borderColor": "rgb(230, 236, 242)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(244, 246, 249)",
            "fontColor": "rgb(244, 246, 249)",
            "fontSize": 0
          },
          "innerMajorBorderColor": "rgb(230, 236, 242)",
          "innerMinorBorderColor": "rgb(230, 236, 242)",
          "maxColumnWidth": 160,
          "minColumnWidth": 67,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Level_2_Measures_3",
          "verticalPadding": 8
        },
        "type": "table"
      },
      "table_2": {
        "parameters": {
          "borderColor": "rgb(230, 236, 242)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(244, 246, 249)",
            "fontColor": "rgb(244, 246, 249)",
            "fontSize": 0
          },
          "innerMajorBorderColor": "rgb(230, 236, 242)",
          "innerMinorBorderColor": "rgb(230, 236, 242)",
          "maxColumnWidth": 200,
          "minColumnWidth": 75,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Level_2_Measures_tam",
          "verticalPadding": 8
        },
        "type": "table"
      },
      "table_3": {
        "parameters": {
          "borderColor": "#e0e5ee",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "fixedColumnWidth": 125,
          "header": {
            "backgroundColor": "rgb(244, 246, 249)",
            "fontColor": "rgb(244, 246, 249)",
            "fontSize": 0
          },
          "innerMajorBorderColor": "#a8b7c7",
          "innerMinorBorderColor": "#e0e5ee",
          "mode": "fixed",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Level_1_Measures_1",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "table_23": {
        "parameters": {
          "borderColor": "#e0e5ee",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#FFFFFF",
            "fontSize": 14
          },
          "innerMajorBorderColor": "#a8b7c7",
          "innerMinorBorderColor": "#e0e5ee",
          "maxColumnWidth": 260,
          "minColumnWidth": 200,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Measures_4_Top_Header",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "link_9": {
        "parameters": {
          "destinationLink": {
            "name": "f3a6d53b-259b-4acf-be69-4208a82b8bf8"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Sales Details",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "table_24": {
        "parameters": {
          "borderColor": "rgba(255, 255, 255, 0.2)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "rgb(43, 71, 114)",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#ffffff",
            "fontSize": 10
          },
          "innerMajorBorderColor": "rgba(255, 255, 255, 0.2)",
          "innerMinorBorderColor": "rgba(255, 255, 255, 0.2)",
          "maxColumnWidth": 200,
          "minColumnWidth": 65,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Measures_4_Header",
          "totals": true,
          "verticalPadding": 4
        },
        "type": "table"
      },
      "table_4": {
        "parameters": {
          "borderColor": "#e0e5ee",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#FFFFFF",
            "fontSize": 1
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#FFFFFF",
            "fontSize": 14
          },
          "innerMajorBorderColor": "#a8b7c7",
          "innerMinorBorderColor": "#e0e5ee",
          "maxColumnWidth": 300,
          "minColumnWidth": 199,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Page_Tam_Header_Top",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "table_5": {
        "parameters": {
          "borderColor": "#a8b7c7",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#091A3E",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "fixedColumnWidth": 125,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#ffffff",
            "fontSize": 12
          },
          "innerMajorBorderColor": "#54698d",
          "innerMinorBorderColor": "#a8b7c7",
          "mode": "fixed",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "all_1",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "pillbox_2": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "showActionMenu": true,
          "step": "Toggle_CSG_1"
        },
        "type": "pillbox"
      },
      "table_25": {
        "parameters": {
          "borderColor": "rgb(230, 236, 242)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(244, 246, 249)",
            "fontColor": "rgb(244, 246, 249)",
            "fontSize": 0
          },
          "innerMajorBorderColor": "rgb(230, 236, 242)",
          "innerMinorBorderColor": "rgb(230, 236, 242)",
          "maxColumnWidth": 200,
          "minColumnWidth": 65,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Level_2_Measures_4",
          "verticalPadding": 8
        },
        "type": "table"
      },
      "link_7": {
        "parameters": {
          "destinationLink": {
            "name": "5e25f102-807a-4f32-bc36-92ca2fc64a24"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Marketing Events Measures",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "pillbox_1": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "showActionMenu": true,
          "step": "Cloud_Filter_1"
        },
        "type": "pillbox"
      },
      "link_8": {
        "parameters": {
          "destinationLink": {
            "name": "5ee7ef3b-7f87-4bff-a84d-ff2916bd2135"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "CSM, PSM and Red Accounts",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "table_7": {
        "parameters": {
          "borderColor": "rgba(255, 255, 255, 0.2)",
          "borderWidth": 0,
          "cell": {
            "backgroundColor": "rgb(43, 71, 114)",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#ffffff",
            "fontSize": 10
          },
          "innerMajorBorderColor": "rgba(255, 255, 255, 0.2)",
          "innerMinorBorderColor": "rgba(255, 255, 255, 0.2)",
          "maxColumnWidth": 200,
          "minColumnWidth": 75,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Measures_1_Header",
          "totals": true,
          "verticalPadding": 4
        },
        "type": "table"
      },
      "table_27": {
        "parameters": {
          "borderColor": "#e0e5ee",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#FFFFFF",
            "fontSize": 14
          },
          "innerMajorBorderColor": "#a8b7c7",
          "innerMinorBorderColor": "#e0e5ee",
          "maxColumnWidth": 280,
          "minColumnWidth": 220,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Measures_5_Top_Header",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "link_5": {
        "parameters": {
          "destinationLink": {
            "name": "a32a622b-f247-47ef-92af-1ce8fe739626"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Distribution HC",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "table_8": {
        "parameters": {
          "borderColor": "#e0e5ee",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#FFFFFF",
            "fontSize": 1
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#FFFFFF",
            "fontSize": 14
          },
          "innerMajorBorderColor": "#a8b7c7",
          "innerMinorBorderColor": "#e0e5ee",
          "maxColumnWidth": 300,
          "minColumnWidth": 199,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Measures_1_Top_Header",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "table_28": {
        "parameters": {
          "borderColor": "rgba(255, 255, 255, 0.2)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "rgb(43, 71, 114)",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#ffffff",
            "fontSize": 10
          },
          "innerMajorBorderColor": "rgba(255, 255, 255, 0.2)",
          "innerMinorBorderColor": "rgba(255, 255, 255, 0.2)",
          "maxColumnWidth": 220,
          "minColumnWidth": 70,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Measures_5_Header",
          "totals": true,
          "verticalPadding": 4
        },
        "type": "table"
      },
      "link_6": {
        "parameters": {
          "destinationType": "lens",
          "fontSize": 12,
          "includeState": false,
          "text": "Financial Measures and Pipeline",
          "textAlignment": "center",
          "textColor": "#5C7A99"
        },
        "type": "link"
      },
      "pillbox_3": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "showActionMenu": true,
          "step": "Toggle_CSG_2"
        },
        "type": "pillbox"
      },
      "table_9": {
        "parameters": {
          "borderColor": "#E6ECF2",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "header": {
            "backgroundColor": "rgb(244, 246, 249)",
            "fontColor": "rgb(244, 246, 249)",
            "fontSize": 0
          },
          "innerMajorBorderColor": "#E6ECF2",
          "innerMinorBorderColor": "#E6ECF2",
          "maxColumnWidth": 260,
          "minColumnWidth": 65,
          "mode": "variable",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Level_2_Measures_2",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "listselector_1": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "showActionMenu": false,
          "step": "lens_2",
          "title": "Lead"
        },
        "type": "listselector"
      }
    }
  },
  "type": "dashboard",
  "url": "/services/data/v44.0/wave/dashboards/0FKf2000000nnCmGAI"
}