{
  "allowPreview": true,
  "assetSharingUrl": "https://apmsandbox.my.salesforce.com/analytics/wave/dashboard?assetId=0FKf2000000nnChGAI&orgId=00Df2000001LxAD&loginHost=na53.salesforce.com&urlType=sharing",
  "createdBy": {
    "id": "005f20000090YTVAA2",
    "name": "Abhishek Gupta",
    "profilePhotoUrl": "https://apmsandbox--c.na53.content.force.com/profilephoto/005/T"
  },
  "createdDate": "2018-07-28T01:16:44.000Z",
  "datasets": [
    {
      "id": "0Fbf2000000HtZCCA0",
      "label": "APM_CPM",
      "name": "APM_CPM",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtZCCA0"
    },
    {
      "id": "0Fbf2000000HtaKCAS",
      "label": "APM_Overview_Comment_5YRS",
      "name": "APM_Overview_Comment_5YRS",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HtaKCAS"
    },
    {
      "id": "0Fbf2000000HteBCAS",
      "label": "Master_Hierarchy",
      "name": "Master_Hierarchy",
      "url": "/services/data/v44.0/wave/datasets/0Fbf2000000HteBCAS"
    }
  ],
  "dateVersion": 1,
  "description": "This option is signed off by Jim C.",
  "files": [
    {
      "contentType": "image/png",
      "fileLength": 20770,
      "fileName": "assetPreviewThumb",
      "id": "0FJf2000000TlEzGAK",
      "lastModifiedDate": "2019-01-15T15:38:45.000Z",
      "url": "/services/data/v44.0/wave/lenses/0FKf2000000nnChGAI/files/0FJf2000000TlEzGAK"
    }
  ],
  "folder": {
    "id": "00lf2000002UDezAAG",
    "label": "WIP APM FY19 Q4",
    "name": "APM",
    "url": "/services/data/v44.0/wave/folders/00lf2000002UDezAAG"
  },
  "id": "0FKf2000000nnChGAI",
  "label": "CPM Summary Dashboard 5 Years",
  "lastModifiedBy": {
    "id": "005f20000090Y9KAAU",
    "name": "Rajan Ahuja",
    "profilePhotoUrl": "https://apmsandbox--c.na53.content.force.com/profilephoto/005/T"
  },
  "lastModifiedDate": "2019-01-15T15:38:40.000Z",
  "mobileDisabled": true,
  "name": "CPM_Summary_Dashboard_5_Years",
  "permissions": {
    "manage": true,
    "modify": true,
    "view": true
  },
  "refreshDate": "2019-01-16T19:23:02.000Z",
  "state": {
    "dataSourceLinks": [
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          },
          {
            "dataSourceName": "APM_CommerceCloud",
            "dataSourceType": "saql",
            "fieldName": "Industry"
          }
        ],
        "label": "Industry",
        "name": "Link_1302"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Country"
          },
          {
            "dataSourceName": "APM_CommerceCloud",
            "dataSourceType": "saql",
            "fieldName": "Country"
          }
        ],
        "label": "Country",
        "name": "Link_1336"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          },
          {
            "dataSourceName": "APM_CommerceCloud",
            "dataSourceType": "saql",
            "fieldName": "Segment"
          }
        ],
        "label": "Segment",
        "name": "Link_55"
      },
      {
        "fields": [
          {
            "dataSourceName": "Master_Hierarchy",
            "dataSourceType": "saql",
            "fieldName": "Level_1"
          },
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          },
          {
            "dataSourceName": "APM_CommerceCloud",
            "dataSourceType": "saql",
            "fieldName": "Cloud"
          }
        ],
        "label": "Cloud Connection",
        "name": "Link_1340"
      },
      {
        "fields": [
          {
            "dataSourceName": "Master_Hierarchy",
            "dataSourceType": "saql",
            "fieldName": "Level_2"
          },
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          },
          {
            "dataSourceName": "APM_CommerceCloud",
            "dataSourceType": "saql",
            "fieldName": "Subcloud"
          }
        ],
        "label": "Sub Cloud Connection",
        "name": "Link_1389"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          },
          {
            "dataSourceName": "APM_CommerceCloud",
            "dataSourceType": "saql",
            "fieldName": "Lead_1"
          }
        ],
        "label": "Lead+1",
        "name": "Link_3761"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          },
          {
            "dataSourceName": "APM_CommerceCloud",
            "dataSourceType": "saql",
            "fieldName": "Lead"
          }
        ],
        "label": "Lead",
        "name": "Link_1018"
      },
      {
        "fields": [
          {
            "dataSourceName": "APM_ACV",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_AOV",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_Attrition",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_Pipegen1",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_HC",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_SWE_INFRA",
            "dataSourceType": "saql",
            "fieldName": "Region"
          },
          {
            "dataSourceName": "APM_CommerceCloud",
            "dataSourceType": "saql",
            "fieldName": "Region"
          }
        ],
        "label": "Region",
        "name": "Link_1318"
      }
    ],
    "filters": [],
    "gridLayouts": [
      {
        "maxWidth": 1540,
        "name": "Default",
        "numColumns": 50,
        "pages": [
          {
            "label": "Cloud",
            "name": "e20bb354-6062-4bea-a080-a4a34b535fb8",
            "navigationHidden": false,
            "widgets": [
              {
                "colspan": 3,
                "column": 0,
                "name": "image_1",
                "row": 2,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 46,
                "name": "image_2",
                "row": 2,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgba(9, 26, 62, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 10,
                "column": 0,
                "name": "link_1",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 50,
                "column": 0,
                "name": "container_3",
                "row": 1,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 35,
                "column": 15,
                "name": "table_4",
                "row": 14,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 11,
                "column": 0,
                "name": "table_17",
                "row": 17,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 11,
                "name": "table_22",
                "row": 17,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 35,
                "column": 15,
                "name": "table_8",
                "row": 17,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 14,
                "name": "table_16",
                "row": 17,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 47,
                "name": "image_4",
                "row": 129,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 50,
                "column": 0,
                "name": "image_3",
                "row": 132,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 50,
                "column": 0,
                "name": "container_7",
                "row": 20,
                "rowspan": 120,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 50,
                "column": 0,
                "name": "container_9",
                "row": 13,
                "rowspan": 7,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 35,
                "column": 15,
                "name": "table_1",
                "row": 20,
                "rowspan": 109,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 11,
                "column": 0,
                "name": "table_10",
                "row": 20,
                "rowspan": 107,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 3,
                "column": 11,
                "name": "table_12",
                "row": 20,
                "rowspan": 108,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 1,
                "column": 14,
                "name": "table_13",
                "row": 20,
                "rowspan": 109,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 50,
                "column": 0,
                "name": "container_1",
                "row": 9,
                "rowspan": 4,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 28,
                "column": 12,
                "name": "text_12",
                "row": 2,
                "rowspan": 6,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 6,
                "column": 10,
                "name": "link_3",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ]
                }
              },
              {
                "colspan": 6,
                "column": 16,
                "name": "link_4",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 6,
                "column": 22,
                "name": "link_5",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 6,
                "column": 28,
                "name": "link_6",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 6,
                "column": 34,
                "name": "link_7",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 40,
                "name": "link_8",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 5,
                "column": 45,
                "name": "link_9",
                "row": 9,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(225, 243, 251)",
                  "borderColor": "#FFFFFF",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 9,
                "column": 1,
                "name": "listselector_1",
                "row": 13,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              }
            ]
          },
          {
            "label": "Dashboard Control",
            "name": "57ae692c-ed06-4b1f-a742-87483ef6cc79",
            "navigationHidden": false,
            "widgets": [
              {
                "colspan": 9,
                "column": 11,
                "name": "listselector_9",
                "row": 10,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 1,
                "name": "text_1",
                "row": 14,
                "rowspan": 7,
                "widgetStyle": {
                  "backgroundColor": "rgb(218, 241, 135)",
                  "borderEdges": [],
                  "borderRadius": 16
                }
              },
              {
                "colspan": 15,
                "column": 11,
                "name": "text_3",
                "row": 14,
                "rowspan": 9,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 19,
                "column": 7,
                "name": "pillbox_3",
                "row": 30,
                "rowspan": 9,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 0,
                "name": "text_4",
                "row": 86,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(218, 241, 135)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 16,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 9,
                "column": 1,
                "name": "text_5",
                "row": 10,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(218, 241, 135)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 16,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 48,
                "column": 1,
                "name": "text_6",
                "row": 1,
                "rowspan": 8,
                "widgetStyle": {
                  "backgroundColor": "rgb(218, 241, 135)",
                  "borderEdges": [
                    "all"
                  ],
                  "borderRadius": 16
                }
              },
              {
                "colspan": 22,
                "column": 28,
                "name": "text_7",
                "row": 14,
                "rowspan": 59,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 4,
                "column": 1,
                "name": "link_2",
                "row": 30,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 15,
                "column": 11,
                "name": "text_8",
                "row": 23,
                "rowspan": 6,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 15,
                "column": 11,
                "name": "text_9",
                "row": 59,
                "rowspan": 14,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 9,
                "column": 0,
                "name": "text_10",
                "row": 81,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(218, 241, 135)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 16,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 15,
                "column": 11,
                "name": "text_11",
                "row": 80,
                "rowspan": 4,
                "widgetStyle": {
                  "backgroundColor": "#FFFFFF",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          }
        ],
        "rowHeight": "fine",
        "selectors": [],
        "style": {
          "alignmentX": "left",
          "alignmentY": "top",
          "backgroundColor": "#E6ECF2",
          "cellSpacingX": 0,
          "cellSpacingY": 0,
          "fit": "original",
          "gutterColor": "#E6ECF2"
        },
        "version": 1
      },
      {
        "name": "Phone",
        "numColumns": 2,
        "pages": [
          {
            "label": "Cloud",
            "name": "e20bb354-6062-4bea-a080-a4a34b535fb8",
            "navigationHidden": false,
            "widgets": [
              {
                "colspan": 2,
                "column": 0,
                "name": "container_4",
                "row": 0,
                "rowspan": 16,
                "widgetStyle": {
                  "backgroundColor": "#091A3E",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "container_3",
                "row": 16,
                "rowspan": 9,
                "widgetStyle": {
                  "backgroundColor": "#F2F6FA",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [
                    "bottom"
                  ],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "text_2",
                "row": 5,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgba(255, 255, 255, 0)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          },
          {
            "label": "Dashboard Control",
            "name": "57ae692c-ed06-4b1f-a742-87483ef6cc79",
            "navigationHidden": false,
            "widgets": [
              {
                "colspan": 2,
                "column": 0,
                "name": "text_6",
                "row": 1,
                "rowspan": 5,
                "widgetStyle": {
                  "backgroundColor": "rgb(218, 241, 135)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "text_5",
                "row": 7,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(218, 241, 135)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "listselector_9",
                "row": 10,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "text_1",
                "row": 14,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(218, 241, 135)",
                  "borderEdges": []
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "text_3",
                "row": 17,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "text_7",
                "row": 20,
                "rowspan": 33,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "pillbox_3",
                "row": 53,
                "rowspan": 3,
                "widgetStyle": {
                  "borderEdges": []
                }
              },
              {
                "colspan": 2,
                "column": 0,
                "name": "text_4",
                "row": 56,
                "rowspan": 3,
                "widgetStyle": {
                  "backgroundColor": "rgb(218, 241, 135)",
                  "borderColor": "#E6ECF2",
                  "borderEdges": [],
                  "borderRadius": 0,
                  "borderWidth": 1
                }
              }
            ]
          }
        ],
        "rowHeight": "fine",
        "selectors": [
          "maxWidth(599)"
        ],
        "style": {
          "alignmentX": "left",
          "alignmentY": "top",
          "backgroundColor": "#E6ECF2",
          "cellSpacingX": 0,
          "cellSpacingY": 0,
          "fit": "original",
          "gutterColor": "#E6ECF2"
        },
        "version": 1
      }
    ],
    "layouts": [],
    "steps": {
      "Table_Page_1_Header__2": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Page_1_Header_Top",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nresult_Total = group MasterHierarchy by all;\nresult_Total = foreach result_Total generate &quot;Comment&quot; as &#39;&#39;;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart",
          "visualizationType": "hbar"
        }
      },
      "Table_Page_1_Header__3": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Page_1_Header_Top",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nresult_Total = group MasterHierarchy by all;\nresult_Total = foreach result_Total generate  &quot;Q1_Rate&quot; as &#39;Metric Group&#39;,&quot;Q2_Rate&quot; as &#39;Metric&#39;;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart",
          "visualizationType": "hbar"
        }
      },
      "Table_Page_1_Header__5": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Page_1_Header_Top",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nresult_Total = group MasterHierarchy by all;\nresult_Total = foreach result_Total generate  &quot;Q1_Rate&quot; as &#39;Rate Measure&#39;;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart",
          "visualizationType": "hbar"
        }
      },
      "Table_Page_1_Header_Top": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Page_1_Header_Top",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nresult_Total = group MasterHierarchy by all;\nresult_Total = foreach result_Total generate &quot;2015&quot; as &#39; 2015&#39;,&quot;2016&quot; as &#39; 2016&#39;,&quot;2017&quot; as &#39; 2017&#39;,&quot;2018&quot; as &#39; 2018&#39;,&quot;2019&quot; as &#39; 2019&#39;,&quot;2015&quot; as &#39;  2015&#39;,&quot;2016&quot; as &#39;  2016&#39;,&quot;2017&quot; as &#39;  2017&#39;,&quot;2018&quot; as &#39;  2018&#39;,&quot;2019&quot; as &#39;  2019&#39;;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart",
          "visualizationType": "hbar"
        }
      },
      "dimension_column_3": {
        "broadcastFacet": true,
        "groups": [],
        "label": "dimenstion_column_3",
        "numbers": [],
        "query": "\nnMasterHierarchy = load &quot;Master_Hierarchy&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;Level_1&#39; in [&quot;Marketing Cloud &amp; Marketing Platform&quot;, &quot;Other&quot;, &quot;Quip&quot;, &quot;Sales Cloud &amp; Sales Platform&quot;, &quot;Salesforce Platform(s)&quot;, &quot;Service Cloud &amp; Service Cloud Platform&quot;, &quot;Commerce Cloud&quot;, &quot;Success Cloud&quot;, &quot;Premier (a la carte)&quot;, &quot;N/A&quot;];\nMasterHierarchy = group MasterHierarchy by all;\n-------------------------------------------------------------------------------------------------LOAD Comment--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nComment = load &quot;APM_Overview_Comment_5YRS&quot;;\n-------------------------------------------------------------------------------------------------LOAD ACV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nACV = load &quot;APM_CPM&quot;;\nACV = filter ACV by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_ACV&quot;).asString()}});\n ACV = filter ACV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nACV = group ACV by  (&#39;Quarter&#39;, &#39;Fiscal_Year&#39;);\nACV = foreach ACV generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;ACV&#39;) as &#39;ACV&#39;;\n t1_CYACV = filter ACV by   (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYACV = filter ACV by   (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYACV = filter ACV by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYACV = filter ACV by   (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYACV = filter ACV by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYACV = filter ACV by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYACV = filter ACV by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYACV = filter ACV by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYACV = filter ACV by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYACV = filter ACV by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD AOV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nAOV = load &quot;APM_CPM&quot;;\nAOV = filter AOV by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_AOV&quot;).asString()}});\nAOV = foreach AOV generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;AOV&#39;) as &#39;AOV&#39;;\nt1_CYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;); \nt1_PYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_CYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD ATT--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nAttrition = load &quot;APM_CPM&quot;;\nAttrition = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_ATT&quot;).asString()}});\nAttrition = filter Attrition by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nAttrition = foreach Attrition generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Attrition&#39;) * -1 as &#39;Attrition_Product&#39;, sum(&#39;Attrition_Rate&#39;) * -1 as &#39;Attrition_Rate&#39;;\nt1_CYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYATT = filter Attrition by(&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt1_CYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYATTRATE = filter Attrition by(&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD ATTRate --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nAttrition_Rate = load &quot;APM_CPM&quot;;\nAttrition_Rate = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_ATT&quot;).asString()}});\nAttrition_Rate = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}});\nAttrition_Rate = foreach Attrition_Rate generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Attrition&#39;) * -1 as &#39;Attrition_Product&#39;, sum(&#39;Attrition_Rate&#39;) * -1 as &#39;Attrition_Rate&#39;;\nt1_CYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYATTRATE = filter Attrition_Rate by(&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD Pipegen--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nPipegen = load &quot;APM_CPM&quot;;\nPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_PIPEGEN&quot;).asString()}});\nPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nPipegen = foreach Pipegen generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;Pipegen&#39;) as &#39;Pipegen&#39;;\nt1_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYPipegen = filter Pipegen by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD HC--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nHC = load &quot;APM_CPM&quot;;\nHC = filter HC by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_HC&quot;).asString()}});\nHC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nHC = foreach HC generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;SE&#39;) as &#39;SE&#39;, sum(&#39;AE&#39;) as &#39;AE&#39;, sum(&#39;Co_Prime&#39;) as &#39;Co_Prime&#39;;\nt0_CYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_HC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_CYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt0_PYHC = filter HC by  (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt1_PYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYHC = filter HC by  (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYHC = filter HC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYHC = filter HC by  (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYHC = filter HC by  (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYHC = filter HC by  (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt1_PY_2_HC = filter HC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_00&quot;).asString()}}&quot;);\nt2_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt3_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt4_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nYTD_PY_2_HC = filter HC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD SW--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nSW = load &quot;APM_CPM&quot;;\nSW = filter SW by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_SW&quot;).asString()}});\nSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nSW = foreach SW generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;SWE&#39;) as &#39;SWE&#39;;\nt1_CYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD INFRA--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nINFRA = load &quot;APM_CPM&quot;;\nINFRA = filter INFRA by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_SW&quot;).asString()}});\nINFRA = filter INFRA by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nINFRA = foreach INFRA generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;INFRA&#39;) as &#39;INFRA&#39;;\nt1_CYINFRA = filter INFRA by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYINFRA = filter INFRA by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYINFRA = filter INFRA by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYINFRA = filter INFRA by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYINFRA = filter INFRA by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYINFRA = filter INFRA by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYINFRA = filter INFRA by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYINFRA = filter INFRA by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYINFRA = filter INFRA by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYINFRA = filter INFRA by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD CC--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nCC = load &quot;APM_CPM&quot;;\n CC = filter CC by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_CC&quot;).asString()}});\nCC = filter CC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nCC = foreach CC generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;GMV&#39;) as &#39;GMV&#39;, sum(&#39;GMV&#39;) as &#39;GMV_Touched&#39;,sum(&#39;Sites&#39;) as &#39;Sites&#39;,sum(&#39;Sites&#39;) as &#39;Sites_Touched&#39;;\nt1_CYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYCC = filter CC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYCC = filter CC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYCC = filter CC by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nYTD_CYCC_Sites = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYCC_Sites = filter CC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD DEALS--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nDEALS = load &quot;APM_CPM&quot;;\nDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_HC&quot;).asString()}});\nDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nDEALS = foreach DEALS generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;X10M_Deals&#39;) as &#39;X10M_Deals&#39;, sum(&#39;X10M&#39;) as &#39;X10M&#39;, sum(&#39;Runrate_Volume&#39;) as &#39;Runrate_Volume&#39;;\nt1_CYDEALS = filter DEALS by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYDEALS = filter DEALS by  (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYDEALS = filter DEALS by  (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYDEALS = filter DEALS by  (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYDEALS = filter DEALS by  (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYDEALS = filter DEALS by  (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYDEALS = filter DEALS by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYDEALS = filter DEALS by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYDEALS = filter DEALS by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYDEALS = filter DEALS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD LOGO--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nLOGO = load &quot;APM_CPM&quot;;\nLOGO = filter LOGO by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_LOGO&quot;).asString()}});\nLOGO = filter LOGO by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nLOGO = foreach LOGO generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;New_Logos&#39;) as &#39;New_Logos&#39;;\nt1_CYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYLOGO = filter LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYLOGO = filter LOGO by (&#39;Quarter&#39; in{{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;value&quot;).asString()}}&quot;);\nYTD_PYLOGO = filter LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD LOST_LOGO--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nLOST_LOGO = load &quot;APM_CPM&quot;;\nLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_LOST_LOGO&quot;).asString()}});;\nLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nLOST_LOGO = foreach LOST_LOGO generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;Lost_Logo_Count&#39;) as &#39;Lost_Logos&#39;;\nt1_CYLOST_LOGO = filter LOST_LOGO by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYLOST_LOGO = filter LOST_LOGO by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD REDACCOUNTS--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nREDACCOUNTS = load &quot;APM_CPM&quot;;\nREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_REDACCOUNTS&quot;).asString()}});\nREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\n REDACCOUNTS = foreach REDACCOUNTS generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Red_Accounts&#39;) as &#39;Red_Accounts&#39;; \nt1_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD T_P--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\n\nT_P = load &quot;APM_CPM&quot;;\nT_P = foreach T_P generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;CTS&#39;)*100 as &#39;CTS&#39;;\nt1_CYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYT_P = filter T_P by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_T_P&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYT_P = filter T_P by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYT_P = filter T_P by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYT_P = filter T_P by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD TRANSACTION--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\n\nTRANSACTION = load &quot;APM_CPM&quot;;\n TRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_TRANSACTION&quot;).asString()}});\nTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nTRANSACTION = foreach TRANSACTION generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;Transactions_Core&#39;) as &#39;Transactions&#39;;\nt1_CYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;); \n-------------------------------------------------------------------------------------------------LOAD AVAILABILITY--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nAVAILABILITY = load &quot;APM_CPM&quot;;\nAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nAVAILABILITY = foreach AVAILABILITY generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;Availability&#39;)*100 as &#39;Availability&#39; ;\nt1_CYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt4_CYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD EVENTS--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\nEVENTS = load &quot;APM_CPM&quot;;EVENTS  = filter EVENTS by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_EVENTS&quot;).asString()}});\n EVENTS = filter EVENTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nEVENTS = foreach EVENTS generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;World_Tours_Trailhead&#39;) as &#39;World_Tours_Trailhead&#39;;\nt1_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYEVENTS = filter EVENTS by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYEVENTS = filter EVENTS by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD OTHER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\n\nOTHER = load &quot;APM_CPM&quot;;OTHER  = filter OTHER by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_OTHER&quot;).asString()}});\n OTHER = filter OTHER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nOTHER = foreach OTHER generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Marketing_Events_Other&#39;) as &#39;Marketing_Events_Other&#39;;\nt1_CYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYOTHER = filter OTHER by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD EBC--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nEBC = load &quot;APM_CPM&quot;;EBC  = filter EBC by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_EBC&quot;).asString()}});\n EBC = filter EBC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nEBC = foreach EBC generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;EBC_s&#39;) as &#39;EBC_s&#39;;\nt1_CYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD Dreamforce EBCD--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nEBCD = load &quot;APM_CPM&quot;;EBCD  = filter EBCD by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_EBC&quot;).asString()}});\n EBCD = filter EBCD by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nEBCD = foreach EBCD generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Dreamforce_EBC&#39;) as &#39;EBC_Dreamforce&#39;;\nt1_CYEBCD = filter EBCD by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYEBCD = filter EBCD by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYEBCD = filter EBCD by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD CUSTOMER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\nCUSTOMER = load &quot;APM_CPM&quot;;CUSTOMER  = filter CUSTOMER by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_CUSTOMER&quot;).asString()}});\n CUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nCUSTOMER = foreach CUSTOMER generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Customer&#39;) as &#39;Customer&#39;;\nt1_CYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYCUSTOMER = filter CUSTOMER by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYCUSTOMER = filter CUSTOMER by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_CUSTOMER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD SHARE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nSHARE = load &quot;APM_CPM&quot;;SHARE  = filter SHARE by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_SHARE&quot;).asString()}});\nSHARE = foreach SHARE generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;TAM&#39;) as &#39;TAM&#39;;\nt1_CYSHARE = filter SHARE by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYSHARE = filter SHARE by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYSHARE = filter SHARE by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYSHARE = filter SHARE by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYSHARE = filter SHARE by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYSHARE = filter SHARE by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYSHARE = filter SHARE by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYSHARE = filter SHARE by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYSHARE = filter SHARE by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYSHARE = filter SHARE by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD CSG--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nCSG = load &quot;APM_CPM&quot;;CSG  = filter CSG by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_CSG&quot;).asString()}});\n CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nCSG = foreach CSG generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;CSM_Headcount_Headcount&#39;) as &#39;CSM_Headcount&#39;,sum(&#39;PSM_Headcount&#39;) as &#39;PSM_Headcount&#39;;\nt1_CYCSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYCSG = filter CSG by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYCSG = filter CSG by(&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYCSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYCSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYCSG = filter CSG by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYCSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYCSG = filter CSG by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYCSG = filter CSG by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYCSG = filter CSG by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);t1_PY_2_CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_00&quot;).asString()}}&quot;);\nt2_PY_2_CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt3_PY_2_CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt4_PY_2_CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nYTD_PY_2_CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD TRailhead Badges--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\n BADGES = load &quot;APM_CPM&quot;;BADGES  = filter BADGES by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_BADGES&quot;).asString()}});\n BADGES = filter BADGES by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nBADGES = foreach BADGES generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Trailhead_Badges&#39;) as &#39;Trailhead_Badges&#39;;\nt1_CYBADGES = filter BADGES by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYBADGES = filter BADGES by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYBADGES = filter BADGES by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYBADGES = filter BADGES by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYBADGES = filter BADGES by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYBADGES = filter BADGES by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYBADGES = filter BADGES by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYBADGES = filter BADGES by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYBADGES = filter BADGES by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYBADGES = filter BADGES by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD TRailhead TRAILBLAZER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nTRAILBLAZER = load &quot;APM_CPM&quot;;TRAILBLAZER  = filter TRAILBLAZER by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_TRAILBLAZER&quot;).asString()}});\n TRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nTRAILBLAZER = foreach TRAILBLAZER generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Trailblazers&#39;) as &#39;Trailblazers&#39;;\nt1_CYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYTRAILBLAZER = filter TRAILBLAZER by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYTRAILBLAZER = filter TRAILBLAZER by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYTRAILBLAZER = filter TRAILBLAZER by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD TRailhead Ranger--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nRANGER = load &quot;APM_CPM&quot;;RANGER  = filter RANGER by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_RANGER&quot;).asString()}});\n RANGER = filter RANGER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nRANGER = foreach RANGER generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Ranger&#39;) as &#39;Ranger&#39;;\nt1_CYRANGER = filter RANGER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYRANGER = filter RANGER by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYRANGER = filter RANGER by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYRANGER = filter RANGER by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYRANGER = filter RANGER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYRANGER = filter RANGER by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYRANGER = filter RANGER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYRANGER = filter RANGER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYRANGER = filter RANGER by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYRANGER = filter RANGER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD HEROKU--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nHEROKU = load &quot;APM_CPM&quot;;HEROKU  = filter HEROKU by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_HEROKU&quot;).asString()}});\n HEROKU = filter HEROKU by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nHEROKU = foreach HEROKU generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Net_Billings&#39;) as &#39;Net_Billings&#39;;\nt1_CYHEROKU = filter HEROKU by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYHEROKU = filter HEROKU by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYHEROKU = filter HEROKU by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYHEROKU = filter HEROKU by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYHEROKU = filter HEROKU by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYHEROKU = filter HEROKU by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYHEROKU = filter HEROKU by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYHEROKU = filter HEROKU by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYHEROKU = filter HEROKU by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYHEROKU = filter HEROKU by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD Productivity--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nPRODUCTIVITY = load &quot;APM_CPM&quot;;PRODUCTIVITY  = filter PRODUCTIVITY by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_PRODUCTIVITY&quot;).asString()}});\n PRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nPRODUCTIVITY = foreach PRODUCTIVITY generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;{{cell(Quarter_1.selection,0,&quot;Metric_Productivity&quot;).asString()}}&#39;) as &#39;Productivity&#39;;\nt1_CYPRODUCTIVITY = filter PRODUCTIVITY by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);;\n-------------------------------------------------------------------------------------------------LOAD ISV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nISV = load &quot;APM_CPM&quot;;ISV  = filter ISV by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_ISV&quot;).asString()}});\n ISV = filter ISV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nISV = foreach ISV generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;ACV_Take_Off&#39;) as &#39;ACV_Take_Off&#39;,sum(&#39;ACV_Landing_Performance&#39;) as &#39;ACV_Landing_Performance&#39;;\nt1_CYISV = filter ISV by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYISV = filter ISV by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYISV = filter ISV by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYISV = filter ISV by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYISV = filter ISV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYISV = filter ISV by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYISV = filter ISV by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYISV = filter ISV by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYISV = filter ISV by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYISV = filter ISV by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nn-------------------------------------------------------------------------------------------------RESULT ACV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\n\n\nresult_ACV = group t1_CYACV by all full, t2_CYACV by all full, t3_CYACV by all full, t4_CYACV by all full, t1_PYACV by all full, t2_PYACV by all full, t3_PYACV by all full, t4_PYACV by all full, YTD_CYACV by all full, YTD_PYACV by all;\nresult_ACV = foreach result_ACV generate &quot;Financial Measures&quot; as &#39;Metric Group&#39;, &quot;ACV&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYACV.&#39;ACV&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYACV.&#39;ACV&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYACV.&#39;ACV&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYACV.&#39;ACV&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYACV.&#39;ACV&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Million&quot; as &#39;Unit&#39;, &quot;A1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT AOV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nresult_AOV = group t1_CYAOV by all full, t2_CYAOV by all full, t3_CYAOV by all full, t4_CYAOV by all full, t1_PYAOV by all full, t2_PYAOV by all full, t3_PYAOV by all full, t4_PYAOV by all full,YTD_CYAOV by all full, YTD_PYAOV by all;\nresult_AOV = foreach result_AOV generate &quot;Financial Measures&quot; as &#39;Metric Group&#39;, &quot;AOV&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;, coalesce(sum(t1_CYAOV.&#39;AOV&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYAOV.&#39;AOV&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYAOV.&#39;AOV&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYAOV.&#39;AOV&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYAOV.&#39;AOV&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYAOV.&#39;AOV&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYAOV.&#39;AOV&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYAOV.&#39;AOV&#39;), 0) as &#39;t4_PY&#39;,  coalesce(sum(YTD_CYAOV.&#39;AOV&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYAOV.&#39;AOV&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(t1_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(t1_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(t2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(t2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(t3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(t3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(t4_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(t4_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(YTD_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(YTD_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;,&quot;Million&quot; as &#39;Unit&#39;,&quot;A2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT ATT--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nresult_ATT = group t1_CYATT by all full, t2_CYATT by all full, t3_CYATT by all full, t4_CYATT by all full, t1_PYATT by all full, t2_PYATT by all full, t3_PYATT by all full, t4_PYATT by all full, YTD_CYATT by all full,YTD_PYATT by all full, t1_CYATTRATE by all full, t2_CYATTRATE by all full, t3_CYATTRATE by all full, t4_CYATTRATE by all full, t1_PYATTRATE by all full, t2_PYATTRATE by all full, t3_PYATTRATE by all full, t4_PYATTRATE by all full, YTD_CYATTRATE by all full,YTD_PYATTRATE by all;\nresult_ATT = foreach result_ATT generate &quot;Financial Measures&quot; as &#39;Metric Group&#39;, &quot;ATT&quot; as &#39;Metric&#39;,&quot;TTM&quot; as &#39;Rate Measure&#39;, coalesce(sum(t1_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYATT.&#39;Attrition_Product&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYATT.&#39;Attrition_Product&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYATT.&#39;Attrition_Product&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYATT.&#39;Attrition_Product&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYATTRATE.&#39;Attrition_Product&#39;), 0) as &#39;YTD_PY&#39;,coalesce(sum(t1_CYATTRATE.&#39;Attrition_Rate&#39;), 0)  * 100 as &#39;YoY Q1 Growth&#39;,coalesce(sum(t2_CYATTRATE.&#39;Attrition_Rate&#39;), 0)  * 100 as &#39;YoY Q2 Growth&#39;,coalesce(sum(t3_CYATTRATE.&#39;Attrition_Rate&#39;), 0) * 100 as &#39;YoY Q3 Growth&#39;,coalesce(sum(t4_CYATTRATE.&#39;Attrition_Rate&#39;), 0)* 100 as &#39;YoY Q4 Growth&#39;,coalesce(sum(YTD_CYATTRATE.&#39;Attrition_Rate&#39;), 0)* 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;,&quot;Million&quot; as &#39;Unit&#39;,&quot;A3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT Pipegen--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nresult_Pipegen = group t1_CYPipegen by all full, t2_CYPipegen by all full, t3_CYPipegen by all full, t4_CYPipegen by all full, t1_PYPipegen by all full, t2_PYPipegen by all full, t3_PYPipegen by all full, t4_PYPipegen by all full, YTD_CYPipegen by all full,YTD_PYPipegen by all;\nresult_Pipegen = foreach result_Pipegen generate &quot;PipeGen Measures&quot; as &#39;Metric Group&#39;, &quot;Pipeline&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYPipegen.&#39;Pipegen&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYPipegen.&#39;Pipegen&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYPipegen.&#39;Pipegen&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYPipegen.&#39;Pipegen&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(t1_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(t1_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(t2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(t2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(t3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(t3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(t4_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(t4_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(YTD_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(YTD_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Million&quot; as &#39;Unit&#39;,&quot;B1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT AE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nresult_AE = group t1_CYHC by all full, t2_CYHC by all full, t3_CYHC by all full, t4_CYHC by all full, t1_PYHC by all full, t2_PYHC by all full, t3_PYHC by all full, t4_PYHC by all full, YTD_CYHC by all full,YTD_PYHC by all full,  t1_PY_2_HC by all full, t2_PY_2_HC by all full, t3_PY_2_HC by all full, t4_PY_2_HC by all full,YTD_PY_2_HC by all;\nresult_AE = foreach result_AE generate &quot;Distribution Headcount&quot; as &#39;Metric Group&#39;, &quot;AEs&quot; as &#39;Metric&#39;,&quot;24mo CAGR&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYHC.&#39;AE&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYHC.&#39;AE&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYHC.&#39;AE&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYHC.&#39;AE&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYHC.&#39;AE&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYHC.&#39;AE&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYHC.&#39;AE&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYHC.&#39;AE&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYHC.&#39;AE&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0) as &#39;YTD_PY&#39;,(power(coalesce(sum(t1_CYHC.&#39;AE&#39;), 0) / coalesce(sum(t1_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q1 Growth&#39;,(power(coalesce(sum(t2_CYHC.&#39;AE&#39;), 0) / coalesce(sum(t2_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q2 Growth&#39;,(power(coalesce(sum(t3_CYHC.&#39;AE&#39;), 0) / coalesce(sum(t3_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q3 Growth&#39;,(power(coalesce(sum(t4_CYHC.&#39;AE&#39;), 0) / coalesce(sum(t4_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100as &#39;YoY Q4 Growth&#39;,(power(coalesce(sum(YTD_CYHC.&#39;AE&#39;), 0) / coalesce(sum(YTD_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Headcount&quot; as &#39;Unit&#39;,&quot;C1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT SE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nresult_SE = group t1_CYHC by all full, t2_CYHC by all full, t3_CYHC by all full, t4_CYHC by all full, t1_PYHC by all full, t2_PYHC by all full, t3_PYHC by all full, t4_PYHC by all full, YTD_CYHC by all full,YTD_PYHC by all full,  t1_PY_2_HC by all full, t2_PY_2_HC by all full, t3_PY_2_HC by all full, t4_PY_2_HC by all full,YTD_PY_2_HC by all;\nresult_SE = foreach result_SE generate &quot;Distribution Headcount&quot; as &#39;Metric Group&#39;, &quot;SEs&quot; as &#39;Metric&#39;,&quot;24mo CAGR&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYHC.&#39;SE&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYHC.&#39;SE&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYHC.&#39;SE&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYHC.&#39;SE&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYHC.&#39;SE&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYHC.&#39;SE&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYHC.&#39;SE&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYHC.&#39;SE&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYHC.&#39;SE&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYHC.&#39;SE&#39;), 0) as &#39;YTD_PY&#39;,(power(coalesce(sum(t1_CYHC.&#39;SE&#39;), 0) / coalesce(sum(t1_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q1 Growth&#39;,(power(coalesce(sum(t2_CYHC.&#39;SE&#39;), 0) / coalesce(sum(t2_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q2 Growth&#39;,(power(coalesce(sum(t3_CYHC.&#39;SE&#39;), 0) / coalesce(sum(t3_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q3 Growth&#39;,(power(coalesce(sum(t4_CYHC.&#39;SE&#39;), 0) / coalesce(sum(t4_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q4 Growth&#39;,(power(coalesce(sum(YTD_CYHC.&#39;SE&#39;), 0) / coalesce(sum(YTD_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Headcount&quot; as &#39;Unit&#39;,&quot;C2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT CO PRIMED--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_Co_Prime = group t1_CYHC by all full, t2_CYHC by all full, t3_CYHC by all full, t4_CYHC by all full, t1_PYHC by all full, t2_PYHC by all full, t3_PYHC by all full, t4_PYHC by all full, YTD_CYHC by all full,YTD_PYHC by all full,  t1_PY_2_HC by all full, t2_PY_2_HC by all full, t3_PY_2_HC by all full, t4_PY_2_HC by all full,YTD_PY_2_HC by all;\nresult_Co_Prime = foreach result_Co_Prime generate &quot;Distribution Headcount&quot; as &#39;Metric Group&#39;, &quot;Co Prime&quot; as &#39;Metric&#39;,&quot;24mo CAGR&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYHC.&#39;Co_Prime&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYHC.&#39;Co_Prime&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYHC.&#39;Co_Prime&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0) as &#39;YTD_PY&#39;,(power(coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(t1_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YoY Q1 Growth&#39;,(power(coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(t2_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YoY Q2 Growth&#39;,(power(coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(t3_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YoY Q3 Growth&#39;,(power(coalesce(sum(t4_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(t4_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YoY Q4 Growth&#39;,(power(coalesce(sum(YTD_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(YTD_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Headcount&quot; as &#39;Unit&#39;,&quot;C3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT SWE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_SWE = group t1_CYSW by all full, t2_CYSW by all full, t3_CYSW by all full, t4_CYSW by all full, t1_PYSW by all full, t2_PYSW by all full, t3_PYSW by all full, t4_PYSW by all full, YTD_CYSW by all full,YTD_PYSW by all;\nresult_SWE = foreach result_SWE generate &quot;R&amp;D/T&amp;P Headcount&quot; as &#39;Metric Group&#39;, &quot;SWE HC&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYSW.&#39;SWE&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYSW.&#39;SWE&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYSW.&#39;SWE&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYSW.&#39;SWE&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYSW.&#39;SWE&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYSW.&#39;SWE&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYSW.&#39;SWE&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYSW.&#39;SWE&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYSW.&#39;SWE&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYSW.&#39;SWE&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(t1_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(t1_PYSW.&#39;SWE&#39;), 0)) as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(t2_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(t2_PYSW.&#39;SWE&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(t3_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(t3_PYSW.&#39;SWE&#39;), 0))  as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(t4_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(t4_PYSW.&#39;SWE&#39;), 0)) as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(YTD_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(YTD_PYSW.&#39;SWE&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Headcount&quot; as &#39;Unit&#39;,&quot;F1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT INFRA--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_INFRA = group t1_CYINFRA by all full, t2_CYINFRA by all full, t3_CYINFRA by all full, t4_CYINFRA by all full, t1_PYINFRA by all full, t2_PYINFRA by all full, t3_PYINFRA by all full, t4_PYINFRA by all full, YTD_CYINFRA by all full,YTD_PYINFRA by all;\nresult_INFRA = foreach result_INFRA generate &quot;R&amp;D/T&amp;P Headcount&quot; as &#39;Metric Group&#39;, &quot;Infra Org HC&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYINFRA.&#39;INFRA&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYINFRA.&#39;INFRA&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYINFRA.&#39;INFRA&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYINFRA.&#39;INFRA&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYINFRA.&#39;INFRA&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYINFRA.&#39;INFRA&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYINFRA.&#39;INFRA&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYINFRA.&#39;INFRA&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYINFRA.&#39;INFRA&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYINFRA.&#39;INFRA&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYINFRA.&#39;INFRA&#39;), 0) - coalesce(sum(t1_PYINFRA.&#39;INFRA&#39;), 0)) / coalesce(sum(t1_PYINFRA.&#39;INFRA&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYINFRA.&#39;INFRA&#39;), 0) - coalesce(sum(t2_PYINFRA.&#39;INFRA&#39;), 0)) / coalesce(sum(t2_PYINFRA.&#39;INFRA&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYINFRA.&#39;INFRA&#39;), 0) - coalesce(sum(t3_PYINFRA.&#39;INFRA&#39;), 0)) / coalesce(sum(t3_PYINFRA.&#39;INFRA&#39;), 0))  as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYINFRA.&#39;INFRA&#39;), 0) - coalesce(sum(t4_PYINFRA.&#39;INFRA&#39;), 0)) / coalesce(sum(t4_PYINFRA.&#39;INFRA&#39;), 0)) as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYINFRA.&#39;INFRA&#39;), 0) - coalesce(sum(YTD_PYINFRA.&#39;INFRA&#39;), 0)) / coalesce(sum(YTD_PYINFRA.&#39;INFRA&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Million&quot; as &#39;Unit&#39;,&quot;F2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT GMV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_GMV =  group t1_CYCC by all full, t2_CYCC by all full, t3_CYCC by all full, t4_CYCC by all full, t1_PYCC by all full, t2_PYCC by all full, t3_PYCC by all full, t4_PYCC by all full, YTD_CYCC by all full,YTD_PYCC by all;\nresult_GMV = foreach result_GMV generate &quot;Commerce Cloud Digital Features&quot; as &#39;Metric Group&#39;, &quot;GMV&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYCC.&#39;GMV&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYCC.&#39;GMV&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYCC.&#39;GMV&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYCC.&#39;GMV&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYCC.&#39;GMV&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYCC.&#39;GMV&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYCC.&#39;GMV&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYCC.&#39;GMV&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYCC.&#39;GMV&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYCC.&#39;GMV&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYCC.&#39;GMV&#39;), 0) - coalesce(sum(t1_PYCC.&#39;GMV&#39;), 0)) / coalesce(sum(t1_PYCC.&#39;GMV&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYCC.&#39;GMV&#39;), 0) - coalesce(sum(t2_PYCC.&#39;GMV&#39;), 0)) / coalesce(sum(t2_PYCC.&#39;GMV&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYCC.&#39;GMV&#39;), 0) - coalesce(sum(t3_PYCC.&#39;GMV&#39;), 0)) / coalesce(sum(t3_PYCC.&#39;GMV&#39;), 0)) as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYCC.&#39;GMV&#39;), 0) - coalesce(sum(t4_PYCC.&#39;GMV&#39;), 0)) / coalesce(sum(t4_PYCC.&#39;GMV&#39;), 0))  as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYCC.&#39;GMV&#39;), 0) - coalesce(sum(YTD_PYCC.&#39;GMV&#39;), 0)) / coalesce(sum(YTD_PYCC.&#39;GMV&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Million&quot; as &#39;Unit&#39;,&quot;D1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT Sites--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_Sites = group t1_CYCC by all full, t2_CYCC by all full, t3_CYCC by all full, t4_CYCC by all full, t1_PYCC by all full, t2_PYCC by all full, t3_PYCC by all full, t4_PYCC by all full, YTD_CYCC by all full,YTD_PYCC by all ;\nresult_Sites = foreach result_Sites generate &quot;Commerce Cloud Digital Features&quot; as &#39;Metric Group&#39;, &quot;Sites&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYCC.&#39;Sites&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYCC.&#39;Sites&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYCC.&#39;Sites&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYCC.&#39;Sites&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYCC.&#39;Sites&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYCC.&#39;Sites&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYCC.&#39;Sites&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYCC.&#39;Sites&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYCC.&#39;Sites&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYCC.&#39;Sites&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYCC.&#39;Sites&#39;), 0) - coalesce(sum(t1_PYCC.&#39;Sites&#39;), 0)) / coalesce(sum(t1_PYCC.&#39;Sites&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYCC.&#39;Sites&#39;), 0) - coalesce(sum(t2_PYCC.&#39;Sites&#39;), 0)) / coalesce(sum(t2_PYCC.&#39;Sites&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYCC.&#39;Sites&#39;), 0) - coalesce(sum(t3_PYCC.&#39;Sites&#39;), 0)) / coalesce(sum(t3_PYCC.&#39;Sites&#39;), 0)) as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYCC.&#39;Sites&#39;), 0) - coalesce(sum(t4_PYCC.&#39;Sites&#39;), 0)) / coalesce(sum(t4_PYCC.&#39;Sites&#39;), 0))  as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYCC.&#39;Sites&#39;), 0) - coalesce(sum(YTD_PYCC.&#39;Sites&#39;), 0)) / coalesce(sum(YTD_PYCC.&#39;Sites&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Million&quot; as &#39;Unit&#39;,&quot;D2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT DEALS X!10M Deals--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_X10M_Deals = group t1_CYDEALS by all full, t2_CYDEALS by all full, t3_CYDEALS by all full, t4_CYDEALS by all full, t1_PYDEALS by all full, t2_PYDEALS by all full, t3_PYDEALS by all full, t4_PYDEALS by all full, YTD_CYDEALS by all full, YTD_PYDEALS by all;\nresult_X10M_Deals = foreach result_X10M_Deals generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;$10M+ Deals&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(t1_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(t1_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(t2_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(t2_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(t3_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(t3_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(t4_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(t4_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(YTD_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(YTD_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Count&quot; as &#39;Unit&#39;,&quot;E1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT X10M--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_X10M = group t1_CYDEALS by all full, t2_CYDEALS by all full, t3_CYDEALS by all full, t4_CYDEALS by all full, t1_PYDEALS by all full, t2_PYDEALS by all full, t3_PYDEALS by all full, t4_PYDEALS by all full, YTD_CYDEALS by all full, YTD_PYDEALS by all;\nresult_X10M = foreach result_X10M generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;$1M+ deals&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYDEALS.&#39;X10M&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYDEALS.&#39;X10M&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYDEALS.&#39;X10M&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYDEALS.&#39;X10M&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYDEALS.&#39;X10M&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYDEALS.&#39;X10M&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYDEALS.&#39;X10M&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYDEALS.&#39;X10M&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYDEALS.&#39;X10M&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYDEALS.&#39;X10M&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(t1_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(t1_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(t2_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(t2_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(t3_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(t3_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(t4_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(t4_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(YTD_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(YTD_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Count&quot; as &#39;Unit&#39;,&quot;E2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT DEALS Runrate--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_Runrate_Volume = group t1_CYDEALS by all full, t2_CYDEALS by all full, t3_CYDEALS by all full, t4_CYDEALS by all full, t1_PYDEALS by all full, t2_PYDEALS by all full, t3_PYDEALS by all full, t4_PYDEALS by all full, YTD_CYDEALS by all full, YTD_PYDEALS by all;\nresult_Runrate_Volume = foreach result_Runrate_Volume generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;Run Rate Volume&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(t1_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(t1_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(t2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(t2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(t3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(t3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(t4_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(t4_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(YTD_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(YTD_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;Run-rate is the count of opportunities that are less than a defined region &amp; segment threshold.&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT LOGO--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_LOGO = group t1_CYLOGO by all full, t2_CYLOGO by all full, t3_CYLOGO by all full, t4_CYLOGO by all full, t1_PYLOGO by all full, t2_PYLOGO by all full, t3_PYLOGO by all full, t4_PYLOGO by all full, YTD_CYLOGO by all full, YTD_PYLOGO by all;\nresult_LOGO = foreach result_LOGO generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;New Logos&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYLOGO.&#39;New_Logos&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYLOGO.&#39;New_Logos&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYLOGO.&#39;New_Logos&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYLOGO.&#39;New_Logos&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYLOGO.&#39;New_Logos&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYLOGO.&#39;New_Logos&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYLOGO.&#39;New_Logos&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYLOGO.&#39;New_Logos&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYLOGO.&#39;New_Logos&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYLOGO.&#39;New_Logos&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYLOGO.&#39;New_Logos&#39;), 0) - coalesce(sum(t1_PYLOGO.&#39;New_Logos&#39;), 0)) / coalesce(sum(t1_PYLOGO.&#39;New_Logos&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYLOGO.&#39;New_Logos&#39;), 0) - coalesce(sum(t2_PYLOGO.&#39;New_Logos&#39;), 0)) / coalesce(sum(t2_PYLOGO.&#39;New_Logos&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYLOGO.&#39;New_Logos&#39;), 0) - coalesce(sum(t3_PYLOGO.&#39;New_Logos&#39;), 0)) / coalesce(sum(t3_PYLOGO.&#39;New_Logos&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYLOGO.&#39;New_Logos&#39;), 0) - coalesce(sum(t4_PYLOGO.&#39;New_Logos&#39;), 0)) / coalesce(sum(t4_PYLOGO.&#39;New_Logos&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYLOGO.&#39;New_Logos&#39;), 0) - coalesce(sum(YTD_PYLOGO.&#39;New_Logos&#39;), 0)) / coalesce(sum(YTD_PYLOGO.&#39;New_Logos&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E4&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT LOST LOGO--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_LOST_LOGO = group t1_CYLOST_LOGO by all full, t2_CYLOST_LOGO by all full, t3_CYLOST_LOGO by all full, t4_CYLOST_LOGO by all full, t1_PYLOST_LOGO by all full, t2_PYLOST_LOGO by all full, t3_PYLOST_LOGO by all full, t4_PYLOST_LOGO by all full, YTD_CYLOST_LOGO by all full, YTD_PYLOST_LOGO by all;\nresult_LOST_LOGO = foreach result_LOST_LOGO generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;Lost Logos&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) - coalesce(sum(t1_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) / coalesce(sum(t1_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) - coalesce(sum(t2_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) / coalesce(sum(t2_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) - coalesce(sum(t3_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) / coalesce(sum(t3_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) - coalesce(sum(t4_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) / coalesce(sum(t4_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) - coalesce(sum(YTD_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) / coalesce(sum(YTD_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E5&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT REDACCOUNTS--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_REDACCOUNTS = group t1_CYREDACCOUNTS by all full, t2_CYREDACCOUNTS by all full, t3_CYREDACCOUNTS by all full, t4_CYREDACCOUNTS by all full, t1_PYREDACCOUNTS by all full, t2_PYREDACCOUNTS by all full, t3_PYREDACCOUNTS by all full, t4_PYREDACCOUNTS by all full, YTD_CYREDACCOUNTS by all full, YTD_PYREDACCOUNTS by all;\nresult_REDACCOUNTS = foreach result_REDACCOUNTS generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;Red Accounts&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(t1_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(t1_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(t2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(t2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(t3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(t3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(t4_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(t4_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(YTD_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(YTD_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E6&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT Productivity--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_PRODUCTIVITY = group t1_CYACV by all full, t2_CYACV by all full, t3_CYACV by all full, t4_CYACV by all full, t1_PYACV by all full, t2_PYACV by all full, t3_PYACV by all full, t4_PYACV by all full, YTD_CYACV by all full, YTD_PYACV by all full,t0_CYHC by all full,t1_CYHC by all full, t2_CYHC by all full, t3_CYHC by all full, t4_CYHC by all full,t0_PYHC by all full, t1_PYHC by all full, t2_PYHC by all full, t3_PYHC by all full, t4_PYHC by all full, YTD_CYHC by all full, YTD_PYHC by all full, YTD_PY_2_HC by all  ;\nresult_PRODUCTIVITY = foreach result_PRODUCTIVITY generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;Productivity&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t1_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t0_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t0_CYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t1_CY&#39;, coalesce(sum(t2_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t2_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t1_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t2_CY&#39;, coalesce(sum(t3_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t3_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t2_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t3_CY&#39;, coalesce(sum(t4_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t4_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t4_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t3_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t4_CY&#39;, coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t0_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t0_PYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t1_PY&#39;,  coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t2_PY&#39;, coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t3_PY&#39;, coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t4_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t4_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(YTD_CYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;Co_Prime&#39;), 0))/2) as &#39;YTD_PY&#39;,((((coalesce(sum(t1_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t1_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t0_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t0_CYHC.&#39;Co_Prime&#39;), 0))/2))-(coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t0_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t0_PYHC.&#39;Co_Prime&#39;), 0))/2))))/(coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t0_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t0_PYHC.&#39;Co_Prime&#39;), 0))/2)) ) as &#39;YoY Q1 Growth&#39;,( ((coalesce(sum(t2_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t2_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t1_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0))/2))-(coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0))/2))))/(coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0))/2)) as &#39;YoY Q2 Growth&#39;, ((coalesce(sum(t3_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t3_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t2_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0))/2))-( coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0))/2)))/( coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0))/2)) as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t4_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t4_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t3_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0))/2))-(coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t4_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t4_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0))/2)))/(coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t4_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t4_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0))/2)) as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(YTD_CYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0))/2))-( coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;Co_Prime&#39;), 0))/2)))/( coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;Co_Prime&#39;), 0))/2)) as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E7&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT T_P--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_T_P = group t1_CYT_P by all full, t2_CYT_P by all full, t3_CYT_P by all full, t4_CYT_P by all full, t1_PYT_P by all full, t2_PYT_P by all full, t3_PYT_P by all full, t4_PYT_P by all full, YTD_CYT_P by all full, YTD_PYT_P by all;\nresult_T_P = foreach result_T_P generate &quot;Tech Details&quot; as &#39;Metric Group&#39;, &quot;T&amp;P Cost to Serve&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYT_P.&#39;CTS&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYT_P.&#39;CTS&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYT_P.&#39;CTS&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYT_P.&#39;CTS&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYT_P.&#39;CTS&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYT_P.&#39;CTS&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYT_P.&#39;CTS&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYT_P.&#39;CTS&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYT_P.&#39;CTS&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYT_P.&#39;CTS&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(t1_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(t1_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(t2_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(t2_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(t3_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(t3_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(t4_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(t4_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(YTD_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(YTD_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;G1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT TRANSACTION--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_TRANSACTION = group t1_CYTRANSACTION by all full, t2_CYTRANSACTION by all full, t3_CYTRANSACTION by all full, t4_CYTRANSACTION by all full, t1_PYTRANSACTION by all full, t2_PYTRANSACTION by all full, t3_PYTRANSACTION by all full, t4_PYTRANSACTION by all full, YTD_CYTRANSACTION by all full, YTD_PYTRANSACTION by all;\nresult_TRANSACTION = foreach result_TRANSACTION generate &quot;Tech Details&quot; as &#39;Metric Group&#39;, &quot;Core Transactions / Requests&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYTRANSACTION.&#39;Transactions&#39;), 0) - coalesce(sum(t1_PYTRANSACTION.&#39;Transactions&#39;), 0)) / coalesce(sum(t1_PYTRANSACTION.&#39;Transactions&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYTRANSACTION.&#39;Transactions&#39;), 0) - coalesce(sum(t2_PYTRANSACTION.&#39;Transactions&#39;), 0)) / coalesce(sum(t2_PYTRANSACTION.&#39;Transactions&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYTRANSACTION.&#39;Transactions&#39;), 0) - coalesce(sum(t3_PYTRANSACTION.&#39;Transactions&#39;), 0)) / coalesce(sum(t3_PYTRANSACTION.&#39;Transactions&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYTRANSACTION.&#39;Transactions&#39;), 0) - coalesce(sum(t4_PYTRANSACTION.&#39;Transactions&#39;), 0)) / coalesce(sum(t4_PYTRANSACTION.&#39;Transactions&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYTRANSACTION.&#39;Transactions&#39;), 0) - coalesce(sum(YTD_PYTRANSACTION.&#39;Transactions&#39;), 0)) / coalesce(sum(YTD_PYTRANSACTION.&#39;Transactions&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;Core infra only&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;G3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT AVAILABILITY--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_AVAILABILITY = group t1_CYAVAILABILITY by all full, t2_CYAVAILABILITY by all full, t3_CYAVAILABILITY by all full, t4_CYAVAILABILITY by all full, t1_PYAVAILABILITY by all full, t2_PYAVAILABILITY by all full, t3_PYAVAILABILITY by all full, t4_PYAVAILABILITY by all full, YTD_CYAVAILABILITY by all full, YTD_PYAVAILABILITY by all;\nresult_AVAILABILITY = foreach result_AVAILABILITY generate &quot;Tech Details&quot; as &#39;Metric Group&#39;, &quot;Availability %&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(t1_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(t1_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(t2_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(t2_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(t3_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(t3_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(t4_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(t4_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(YTD_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(YTD_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;Core infra only&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;G2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT EVENTS--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_EVENTS = group t1_CYEVENTS by all full, t2_CYEVENTS by all full, t3_CYEVENTS by all full, t4_CYEVENTS by all full, t1_PYEVENTS by all full, t2_PYEVENTS by all full, t3_PYEVENTS by all full, t4_PYEVENTS by all full, YTD_CYEVENTS by all full, YTD_PYEVENTS by all;\nresult_EVENTS = foreach result_EVENTS generate &quot;Marketing Details&quot; as &#39;Metric Group&#39;, &quot;Marketing Events - World Tours &amp; Trailhead Live&quot; as &#39;Metric&#39;,&quot;NA&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(t1_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(t1_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(t2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(t2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(t3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(t3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(t4_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(t4_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(YTD_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(YTD_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;H1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT OTHER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_OTHER = group t1_CYOTHER by all full, t2_CYOTHER by all full, t3_CYOTHER by all full, t4_CYOTHER by all full, t1_PYOTHER by all full, t2_PYOTHER by all full, t3_PYOTHER by all full, t4_PYOTHER by all full, YTD_CYOTHER by all full, YTD_PYOTHER by all;\nresult_OTHER = foreach result_OTHER generate &quot;Marketing Details&quot; as &#39;Metric Group&#39;, &quot;Marketing Events - Other&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(t1_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(t1_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(t2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(t2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(t3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(t3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(t4_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(t4_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(YTD_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(YTD_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;CxOs (such as exec programs, dinners, etc), Event in a Box, Industry Events/Third Party Events (such as NRF, WEF, etc), Salesforce Basecamps (previously known as Essentials), Hospitality Events (such as Live Nation, sports events, etc), and Developer Workshop (such as TrailheaDX). &quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;H2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT EVENTS EBC--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_EBC = group t1_CYEBC by all full, t2_CYEBC by all full, t3_CYEBC by all full, t4_CYEBC by all full, t1_PYEBC by all full, t2_PYEBC by all full, t3_PYEBC by all full, t4_PYEBC by all full, YTD_CYEBC by all full, YTD_PYEBC by all;\nresult_EBC = foreach result_EBC generate &quot;Marketing Details&quot; as &#39;Metric Group&#39;, &quot;EBCs&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYEBC.&#39;EBC_s&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYEBC.&#39;EBC_s&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYEBC.&#39;EBC_s&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYEBC.&#39;EBC_s&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYEBC.&#39;EBC_s&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYEBC.&#39;EBC_s&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYEBC.&#39;EBC_s&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYEBC.&#39;EBC_s&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYEBC.&#39;EBC_s&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYEBC.&#39;EBC_s&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(t1_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(t1_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(t2_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(t2_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(t3_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(t3_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(t4_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(t4_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(YTD_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(YTD_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;H3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT EVENTS EBCD Dreamforce--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_EBCD = group t1_CYEBCD by all full, t2_CYEBCD by all full, t3_CYEBCD by all full, t4_CYEBCD by all full, t1_PYEBCD by all full, t2_PYEBCD by all full, t3_PYEBCD by all full, t4_PYEBCD by all full, YTD_CYEBCD by all full, YTD_PYEBCD by all;\nresult_EBCD = foreach result_EBCD generate &quot;Marketing Details&quot; as &#39;Metric Group&#39;, &quot;EBC Dreamforce&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) - coalesce(sum(t1_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) / coalesce(sum(t1_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) - coalesce(sum(t2_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) / coalesce(sum(t2_PYEBCD.&#39;EBC_Dreamforce&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) - coalesce(sum(t3_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) / coalesce(sum(t3_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) - coalesce(sum(t4_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) / coalesce(sum(t4_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) - coalesce(sum(YTD_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) / coalesce(sum(YTD_PYEBCD.&#39;EBC_Dreamforce&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;H4&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT CUSTOMER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_CUSTOMER = group t1_CYCUSTOMER by all full, t2_CYCUSTOMER by all full, t3_CYCUSTOMER by all full, t4_CYCUSTOMER by all full, t1_PYCUSTOMER by all full, t2_PYCUSTOMER by all full, t3_PYCUSTOMER by all full, t4_PYCUSTOMER by all full, YTD_CYCUSTOMER by all full, YTD_PYCUSTOMER by all;\nresult_CUSTOMER = foreach result_CUSTOMER generate &quot;Market Details&quot; as &#39;Metric Group&#39;, &quot;Customer Count&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYCUSTOMER.&#39;Customer&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYCUSTOMER.&#39;Customer&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYCUSTOMER.&#39;Customer&#39;), 0) - coalesce(sum(t1_PYCUSTOMER.&#39;Customer&#39;), 0)) / coalesce(sum(t1_PYCUSTOMER.&#39;Customer&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYCUSTOMER.&#39;Customer&#39;), 0) - coalesce(sum(t2_PYCUSTOMER.&#39;Customer&#39;), 0)) / coalesce(sum(t2_PYCUSTOMER.&#39;Customer&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYCUSTOMER.&#39;Customer&#39;), 0) - coalesce(sum(t3_PYCUSTOMER.&#39;Customer&#39;), 0)) / coalesce(sum(t3_PYCUSTOMER.&#39;Customer&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYCUSTOMER.&#39;Customer&#39;), 0) - coalesce(sum(t4_PYCUSTOMER.&#39;Customer&#39;), 0)) / coalesce(sum(t4_PYCUSTOMER.&#39;Customer&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYCUSTOMER.&#39;Customer&#39;), 0) - coalesce(sum(YTD_PYCUSTOMER.&#39;Customer&#39;), 0)) / coalesce(sum(YTD_PYCUSTOMER.&#39;Customer&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;Combo Company definition&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;I1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT SHARE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_SHARE = group t1_CYSHARE by all full, t2_CYSHARE by all full, t3_CYSHARE by all full, t4_CYSHARE by all full, t1_PYSHARE by all full, t2_PYSHARE by all full, t3_PYSHARE by all full, t4_PYSHARE by all full, YTD_CYSHARE by all full, YTD_PYSHARE by all;\nresult_SHARE = foreach result_SHARE generate &quot;Market Details&quot; as &#39;Metric Group&#39;, &quot;Addressable Market &amp; Market Share %&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYSHARE.&#39;TAM&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYSHARE.&#39;TAM&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYSHARE.&#39;TAM&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYSHARE.&#39;TAM&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYSHARE.&#39;TAM&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYSHARE.&#39;TAM&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYSHARE.&#39;TAM&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYSHARE.&#39;TAM&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYSHARE.&#39;TAM&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYSHARE.&#39;TAM&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYSHARE.&#39;TAM&#39;), 0) - coalesce(sum(t1_PYSHARE.&#39;TAM&#39;), 0)) / coalesce(sum(t1_PYSHARE.&#39;TAM&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYSHARE.&#39;TAM&#39;), 0) - coalesce(sum(t2_PYSHARE.&#39;TAM&#39;), 0)) / coalesce(sum(t2_PYSHARE.&#39;TAM&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYSHARE.&#39;TAM&#39;), 0) - coalesce(sum(t3_PYSHARE.&#39;TAM&#39;), 0)) / coalesce(sum(t3_PYSHARE.&#39;TAM&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYSHARE.&#39;TAM&#39;), 0) - coalesce(sum(t4_PYSHARE.&#39;TAM&#39;), 0)) / coalesce(sum(t4_PYSHARE.&#39;TAM&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYSHARE.&#39;TAM&#39;), 0) - coalesce(sum(YTD_PYSHARE.&#39;TAM&#39;), 0)) / coalesce(sum(YTD_PYSHARE.&#39;TAM&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;I2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT CSG CSM--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_CSG_HC = group t1_CYCSG by all full, t2_CYCSG by all full, t3_CYCSG by all full, t4_CYCSG by all full, t1_PYCSG by all full, t2_PYCSG by all full, t3_PYCSG by all full, t4_PYCSG by all full, YTD_CYCSG by all full, YTD_PYCSG by all full , t1_PY_2_CSG by all full, t2_PY_2_CSG by all full, t3_PY_2_CSG by all full, t4_PY_2_CSG by all full,YTD_PY_2_CSG by all;\nresult_CSG_HC = foreach result_CSG_HC generate &quot;CSG Headcount&quot; as &#39;Metric Group&#39;, &quot;CSM&quot; as &#39;Metric&#39;,&quot;24mo CAGR&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;YTD_PY&#39;,(power(coalesce(sum(t1_CYCSG.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(t1_PY_2_CSG.&#39;CSM_Headcount&#39;), 0),(1/2))-1)  as &#39;YoY Q1 Growth&#39;,(power(coalesce(sum(t2_CYCSG.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(t2_PY_2_CSG.&#39;CSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q2 Growth&#39;,(power(coalesce(sum(t3_CYCSG.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(t3_PY_2_CSG.&#39;CSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q3 Growth&#39;,(power(coalesce(sum(t4_CYCSG.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(t4_PY_2_CSG.&#39;CSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q4 Growth&#39;,(power(coalesce(sum(YTD_CYCSG.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(YTD_PY_2_CSG.&#39;CSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;J1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT CSG PSM--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_CSG_PSM = group t1_CYCSG by all full, t2_CYCSG by all full, t3_CYCSG by all full, t4_CYCSG by all full, t1_PYCSG by all full, t2_PYCSG by all full, t3_PYCSG by all full, t4_PYCSG by all full, YTD_CYCSG by all full, YTD_PYCSG by all full,t1_PY_2_CSG by all full, t2_PY_2_CSG by all full, t3_PY_2_CSG by all full, t4_PY_2_CSG by all full,YTD_PY_2_CSG by all;\nresult_CSG_PSM = foreach result_CSG_PSM generate &quot;CSG Headcount&quot; as &#39;Metric Group&#39;, &quot;PSM&quot; as &#39;Metric&#39;,&quot;24mo CAGR&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;YTD_PY&#39;,(power(coalesce(sum(t1_CYCSG.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(t1_PY_2_CSG.&#39;PSM_Headcount&#39;), 0),(1/2))-1)  as &#39;YoY Q1 Growth&#39;,(power(coalesce(sum(t2_CYCSG.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(t2_PY_2_CSG.&#39;PSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q2 Growth&#39;,(power(coalesce(sum(t3_CYCSG.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(t3_PY_2_CSG.&#39;PSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q3 Growth&#39;,(power(coalesce(sum(t4_CYCSG.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(t4_PY_2_CSG.&#39;PSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q4 Growth&#39;,(power(coalesce(sum(YTD_CYCSG.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(YTD_PY_2_CSG.&#39;PSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;J2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT Trailhead Badges--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_BADGES = group t1_CYBADGES by all full, t2_CYBADGES by all full, t3_CYBADGES by all full, t4_CYBADGES by all full, t1_PYBADGES by all full, t2_PYBADGES by all full, t3_PYBADGES by all full, t4_PYBADGES by all full, YTD_CYBADGES by all full, YTD_PYBADGES by all;\nresult_BADGES = foreach result_BADGES generate &quot;Trailhead Details&quot; as &#39;Metric Group&#39;, &quot;Trailhead Badges&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYBADGES.&#39;Trailhead_Badges&#39;), 0) - coalesce(sum(t1_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) / coalesce(sum(t1_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYBADGES.&#39;Trailhead_Badges&#39;), 0) - coalesce(sum(t2_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) / coalesce(sum(t2_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYBADGES.&#39;Trailhead_Badges&#39;), 0) - coalesce(sum(t3_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) / coalesce(sum(t3_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYBADGES.&#39;Trailhead_Badges&#39;), 0) - coalesce(sum(t4_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) / coalesce(sum(t4_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYBADGES.&#39;Trailhead_Badges&#39;), 0) - coalesce(sum(YTD_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) / coalesce(sum(YTD_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;K1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT TRAILBLAZER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_TRAILBLAZER = group t1_CYTRAILBLAZER by all full, t2_CYTRAILBLAZER by all full, t3_CYTRAILBLAZER by all full, t4_CYTRAILBLAZER by all full, t1_PYTRAILBLAZER by all full, t2_PYTRAILBLAZER by all full, t3_PYTRAILBLAZER by all full, t4_PYTRAILBLAZER by all full, YTD_CYTRAILBLAZER by all full, YTD_PYTRAILBLAZER by all;\nresult_TRAILBLAZER = foreach result_TRAILBLAZER generate &quot;Trailhead Details&quot; as &#39;Metric Group&#39;, &quot;Trailblazers&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) - coalesce(sum(t1_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) / coalesce(sum(t1_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) - coalesce(sum(t2_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) / coalesce(sum(t2_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) - coalesce(sum(t3_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) / coalesce(sum(t3_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) - coalesce(sum(t4_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) / coalesce(sum(t4_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) - coalesce(sum(YTD_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) / coalesce(sum(YTD_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;K2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT TRAILBLAZER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_RANGER = group t1_CYRANGER by all full, t2_CYRANGER by all full, t3_CYRANGER by all full, t4_CYRANGER by all full, t1_PYRANGER by all full, t2_PYRANGER by all full, t3_PYRANGER by all full, t4_PYRANGER by all full, YTD_CYRANGER by all full, YTD_PYRANGER by all;\nresult_RANGER = foreach result_RANGER generate &quot;Trailhead Details&quot; as &#39;Metric Group&#39;, &quot;Ranger&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYRANGER.&#39;Ranger&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYRANGER.&#39;Ranger&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYRANGER.&#39;Ranger&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYRANGER.&#39;Ranger&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYRANGER.&#39;Ranger&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYRANGER.&#39;Ranger&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYRANGER.&#39;Ranger&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYRANGER.&#39;Ranger&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYRANGER.&#39;Ranger&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYRANGER.&#39;Ranger&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYRANGER.&#39;Ranger&#39;), 0) - coalesce(sum(t1_PYRANGER.&#39;Ranger&#39;), 0)) / coalesce(sum(t1_PYRANGER.&#39;Ranger&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYRANGER.&#39;Ranger&#39;), 0) - coalesce(sum(t2_PYRANGER.&#39;Ranger&#39;), 0)) / coalesce(sum(t2_PYRANGER.&#39;Ranger&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYRANGER.&#39;Ranger&#39;), 0) - coalesce(sum(t3_PYRANGER.&#39;Ranger&#39;), 0)) / coalesce(sum(t3_PYRANGER.&#39;Ranger&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYRANGER.&#39;Ranger&#39;), 0) - coalesce(sum(t4_PYRANGER.&#39;Ranger&#39;), 0)) / coalesce(sum(t4_PYRANGER.&#39;Ranger&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYRANGER.&#39;Ranger&#39;), 0) - coalesce(sum(YTD_PYRANGER.&#39;Ranger&#39;), 0)) / coalesce(sum(YTD_PYRANGER.&#39;Ranger&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;K3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT HEROKU--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_HEROKU = group t1_CYHEROKU by all full, t2_CYHEROKU by all full, t3_CYHEROKU by all full, t4_CYHEROKU by all full, t1_PYHEROKU by all full, t2_PYHEROKU by all full, t3_PYHEROKU by all full, t4_PYHEROKU by all full, YTD_CYHEROKU by all full, YTD_PYHEROKU by all;\nresult_HEROKU = foreach result_HEROKU generate &quot;Heroku&quot; as &#39;Metric Group&#39;, &quot;Net Billings&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYHEROKU.&#39;Net_Billings&#39;), 0) - coalesce(sum(t1_PYHEROKU.&#39;Net_Billings&#39;), 0)) / coalesce(sum(t1_PYHEROKU.&#39;Net_Billings&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYHEROKU.&#39;Net_Billings&#39;), 0) - coalesce(sum(t2_PYHEROKU.&#39;Net_Billings&#39;), 0)) / coalesce(sum(t2_PYHEROKU.&#39;Net_Billings&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYHEROKU.&#39;Net_Billings&#39;), 0) - coalesce(sum(t3_PYHEROKU.&#39;Net_Billings&#39;), 0)) / coalesce(sum(t3_PYHEROKU.&#39;Net_Billings&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYHEROKU.&#39;Net_Billings&#39;), 0) - coalesce(sum(t4_PYHEROKU.&#39;Net_Billings&#39;), 0)) / coalesce(sum(t4_PYHEROKU.&#39;Net_Billings&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYHEROKU.&#39;Net_Billings&#39;), 0) - coalesce(sum(YTD_PYHEROKU.&#39;Net_Billings&#39;), 0)) / coalesce(sum(YTD_PYHEROKU.&#39;Net_Billings&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;L1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT Productivity John--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nNEW_result_PRODUCTIVITY = group t1_CYPRODUCTIVITY by all full, t2_CYPRODUCTIVITY by all full, t3_CYPRODUCTIVITY by all full, t4_CYPRODUCTIVITY by all full, t1_PYPRODUCTIVITY by all full, t2_PYPRODUCTIVITY by all full, t3_PYPRODUCTIVITY by all full, t4_PYPRODUCTIVITY by all full, YTD_CYPRODUCTIVITY by all full, YTD_PYPRODUCTIVITY by all;\nNEW_result_PRODUCTIVITY = foreach NEW_result_PRODUCTIVITY generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;Productivity_new&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;, coalesce(sum(t1_CYPRODUCTIVITY.&#39;Productivity&#39;), 0)  as &#39;t1_CY&#39;, coalesce(sum(t2_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) - coalesce(sum(t1_PYPRODUCTIVITY.&#39;Productivity&#39;), 0)) / coalesce(sum(t1_PYPRODUCTIVITY.&#39;Productivity&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) - coalesce(sum(t2_PYPRODUCTIVITY.&#39;Productivity&#39;), 0)) / coalesce(sum(t2_PYPRODUCTIVITY.&#39;Productivity&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) - coalesce(sum(t3_PYPRODUCTIVITY.&#39;Productivity&#39;), 0)) / coalesce(sum(t3_PYPRODUCTIVITY.&#39;Productivity&#39;), 0))  as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) - coalesce(sum(t4_PYPRODUCTIVITY.&#39;Productivity&#39;), 0)) / coalesce(sum(t4_PYPRODUCTIVITY.&#39;Productivity&#39;), 0))  as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) - coalesce(sum(YTD_PYPRODUCTIVITY.&#39;Productivity&#39;), 0)) / coalesce(sum(YTD_PYPRODUCTIVITY.&#39;Productivity&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E8&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT ISVTake Off--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_ISV_TAKEOFF = group t1_CYISV by all full, t2_CYISV by all full, t3_CYISV by all full, t4_CYISV by all full, t1_PYISV by all full, t2_PYISV by all full, t3_PYISV by all full, t4_PYISV by all full, YTD_CYISV by all full, YTD_PYISV by all;\nresult_ISV_TAKEOFF= foreach result_ISV_TAKEOFF generate &quot;ISV&quot; as &#39;Metric Group&#39;, &quot;Take off&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;, coalesce(sum(t1_CYISV.&#39;ACV_Take_Off&#39;), 0)  as &#39;t1_CY&#39;, coalesce(sum(t2_CYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYISV.&#39;ACV_Take_Off&#39;), 0) - coalesce(sum(t1_PYISV.&#39;ACV_Take_Off&#39;), 0)) / coalesce(sum(t1_PYISV.&#39;ACV_Take_Off&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYISV.&#39;ACV_Take_Off&#39;), 0) - coalesce(sum(t2_PYISV.&#39;ACV_Take_Off&#39;), 0)) / coalesce(sum(t2_PYISV.&#39;ACV_Take_Off&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYISV.&#39;ACV_Take_Off&#39;), 0) - coalesce(sum(t3_PYISV.&#39;ACV_Take_Off&#39;), 0)) / coalesce(sum(t3_PYISV.&#39;ACV_Take_Off&#39;), 0))  as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYISV.&#39;ACV_Take_Off&#39;), 0) - coalesce(sum(t4_PYISV.&#39;ACV_Take_Off&#39;), 0)) / coalesce(sum(t4_PYISV.&#39;ACV_Take_Off&#39;), 0))  as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYISV.&#39;ACV_Take_Off&#39;), 0) - coalesce(sum(YTD_PYISV.&#39;ACV_Take_Off&#39;), 0)) / coalesce(sum(YTD_PYISV.&#39;ACV_Take_Off&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;M1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT ISV Landing Performance--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_ISV_LANDING = group t1_CYISV by all full, t2_CYISV by all full, t3_CYISV by all full, t4_CYISV by all full, t1_PYISV by all full, t2_PYISV by all full, t3_PYISV by all full, t4_PYISV by all full, YTD_CYISV by all full, YTD_PYISV by all;\nresult_ISV_LANDING= foreach result_ISV_LANDING generate &quot;ISV&quot; as &#39;Metric Group&#39;, &quot;Landing&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;, coalesce(sum(t1_CYISV.&#39;ACV_Landing_Performance&#39;), 0)  as &#39;t1_CY&#39;, coalesce(sum(t2_CYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYISV.&#39;ACV_Landing_Performance&#39;), 0) - coalesce(sum(t1_PYISV.&#39;ACV_Landing_Performance&#39;), 0)) / coalesce(sum(t1_PYISV.&#39;ACV_Landing_Performance&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYISV.&#39;ACV_Landing_Performance&#39;), 0) - coalesce(sum(t2_PYISV.&#39;ACV_Landing_Performance&#39;), 0)) / coalesce(sum(t2_PYISV.&#39;ACV_Landing_Performance&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYISV.&#39;ACV_Landing_Performance&#39;), 0) - coalesce(sum(t3_PYISV.&#39;ACV_Landing_Performance&#39;), 0)) / coalesce(sum(t3_PYISV.&#39;ACV_Landing_Performance&#39;), 0))  as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYISV.&#39;ACV_Landing_Performance&#39;), 0) - coalesce(sum(t4_PYISV.&#39;ACV_Landing_Performance&#39;), 0)) / coalesce(sum(t4_PYISV.&#39;ACV_Landing_Performance&#39;), 0))  as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYISV.&#39;ACV_Landing_Performance&#39;), 0) - coalesce(sum(YTD_PYISV.&#39;ACV_Landing_Performance&#39;), 0)) / coalesce(sum(YTD_PYISV.&#39;ACV_Landing_Performance&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;M2&quot; as &#39;SortOrder&#39;;\nv--////////////////////////////////////////////////////////////////////////////////GENERATE FAKE HEADER, CURRENTLY NOT USED////////////////////////////////////////////////////////////////////////////////-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\n\n\n\ntotal_FINANCIALMEASURES = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Financial Measures&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_Pipegen = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;PipeGen Measures&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_DISTRIBUTION_HC = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Distribution Headcount&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_COMMERCE = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Commerce Cloud Digital Features&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_Sales = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Sales Details&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_HEADCOUNT = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;R&amp;D/T&amp;P Headcount&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_TECH = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Tech Details&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_MARKETING = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Marketing Details&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_MARKET = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Market Details&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_CSG = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;CSG Headcount&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_TRAILHEAD = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Trailhead&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \n\n\n--line = group MasterHierarchy by &#39;all&#39;;\n--line = foreach line generate &quot;-----------------------------------------------------------------&quot; as &#39;Cloud&#39;, &quot;HBZ&quot; as &#39;SortOrder&#39;;\nvnresult = union total_FINANCIALMEASURES,result_ACV, result_AOV,result_ATT,total_Pipegen,result_Pipegen,total_DISTRIBUTION_HC,result_AE,result_SE,result_Co_Prime,total_COMMERCE,result_GMV,result_Sites,total_Sales,result_X10M_Deals,result_X10M,result_Runrate_Volume,result_LOGO,result_LOST_LOGO,result_REDACCOUNTS,total_HEADCOUNT,result_SWE,result_INFRA,total_TECH, result_T_P,result_AVAILABILITY,result_TRANSACTION, total_MARKETING,result_EVENTS,result_OTHER, result_EBC,result_EBCD,total_MARKET,result_CUSTOMER,result_SHARE,total_CSG,result_CSG_HC,result_CSG_PSM,total_TRAILHEAD,result_BADGES,result_TRAILBLAZER, result_RANGER,result_HEROKU,NEW_result_PRODUCTIVITY,result_ISV_TAKEOFF,result_ISV_LANDING;\nvn--result = order result by &#39;SortOrder&#39; asc;\n--result = filter result by &#39;Cloud&#39; not in [&quot;Premier (a la carte)&quot;];\nresult = filter result by &#39;Metric Group&#39; != &quot;Metric Group&quot;;\nresult = group result by &#39;Metric&#39;left , Comment by &#39;Metric&#39;;\nresult = foreach result generate last(result.&#39;Metric Group&#39;) as &#39;Metric Group&#39;, result.&#39;Metric&#39; as &#39;Metric&#39;,last(result.&#39;Rate Measure&#39;) as &#39;Rate Measure&#39;, last(result.&#39;SortOrder&#39;) as &#39;SortOrder&#39;,(case when sum(result.&#39;t1_CY&#39;)==0 then number_to_string(sum(result.&#39;t1_CY&#39;),&quot;#,###.#&quot;)  when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;Net Billings&quot;,&quot;Run Rate Volume&quot;] then number_to_string(sum(result.&#39;t1_CY&#39;)/1000000,&quot;$#,###.#&quot;)+&quot;M&quot; when result.&#39;Metric&#39; in [ &quot;T&amp;P Cost to Serve&quot;] then number_to_string(sum(result.&#39;t1_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;  when result.&#39;Metric&#39; in [&quot;Addressable Market &amp; Market Share %&quot;] then  number_to_string(sum(result.&#39;t1_CY&#39;)*100,&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Core Transactions / Requests&quot;] then  number_to_string(sum(result.&#39;t1_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot; when result.&#39;Metric&#39; in [&quot;GMV&quot;] then  number_to_string(sum(result.&#39;t1_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot;when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;t1_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;  else number_to_string(sum(result.&#39;t1_CY&#39;),&quot;#,###&quot;)  end) as &#39;t1_CY&#39;,(case when result.&#39;Metric&#39; in  [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;AEs&quot;,&quot;SEs&quot;,&quot;Co Prime&quot;,&quot;$10M+ Deals&quot;,&quot;$1M+ deals&quot;,&quot;Run Rate Volume&quot;, &quot;New Logos&quot;,&quot;Red Accounts&quot;,&quot;Marketing Events - World Tours &amp; Trailhead Live&quot;,&quot;Marketing Events - Other&quot;, &quot;EBCs&quot;,&quot;Customer Count&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;Core Transactions / Requests&quot;,&quot;Trailhead Badges&quot;,&quot;Trailblazers&quot;,&quot;Ranger&quot;, &quot;Lost Logos&quot;,&quot;Net Billings&quot;]then number_to_string(sum(result.&#39;YoY Q1 Growth&#39;)/100,&quot;0.0%&quot;) when last(result.&#39;Metric Group&#39;)==&quot;Metric Group&quot; then &quot;&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then&quot;&quot;  else number_to_string(sum(result.&#39;YoY Q1 Growth&#39;),&quot;0.0%&quot;)  end) as &#39;YoY Q1 Growth&#39;,(case when sum(result.&#39;t2_CY&#39;)==0 then number_to_string(sum(result.&#39;t2_CY&#39;),&quot;#,###.#&quot;) when result.&#39;Metric&#39; in[&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;Net Billings&quot;,&quot;Run Rate Volume&quot;] then number_to_string(sum(result.&#39;t2_CY&#39;)/1000000,&quot;$#,###.#&quot;)+&quot;M&quot; when result.&#39;Metric&#39; in [&quot;GMV&quot;] then  number_to_string(sum(result.&#39;t2_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot; when result.&#39;Metric&#39; in [ &quot;T&amp;P Cost to Serve&quot;] then number_to_string(sum(result.&#39;t2_CY&#39;),&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Addressable Market &amp; Market Share %&quot;] then  number_to_string(sum(result.&#39;t2_CY&#39;)*100,&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Core Transactions / Requests&quot;] then  number_to_string(sum(result.&#39;t2_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot;  when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;t2_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;  else number_to_string(sum(result.&#39;t2_CY&#39;),&quot;#,###&quot;)  end) as &#39;t2_CY&#39; , (case when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;AEs&quot;,&quot;SEs&quot;,&quot;Co Prime&quot;,&quot;$10M+ Deals&quot;,&quot;$1M+ deals&quot;,&quot;Run Rate Volume&quot;, &quot;New Logos&quot;,&quot;Red Accounts&quot;,&quot;Marketing Events - World Tours &amp; Trailhead Live&quot;,&quot;Marketing Events - Other&quot;, &quot;EBCs&quot;,&quot;Customer Count&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;Core Transactions / Requests&quot;,&quot;Trailhead Badges&quot;,&quot;Trailblazers&quot;,&quot;Ranger&quot;, &quot;Lost Logos&quot;,&quot;Net Billings&quot;] then number_to_string(sum(result.&#39;YoY Q2 Growth&#39;)/100,&quot;0.0%&quot;)when last(result.&#39;Metric Group&#39;)==&quot;Metric Group&quot; then &quot;&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then&quot;&quot;  else number_to_string(sum(result.&#39;YoY Q2 Growth&#39;),&quot;0.0%&quot;)  end) as &#39;YoY Q2 Growth&#39;,(case when sum(result.&#39;t3_CY&#39;)==0 then number_to_string(sum(result.&#39;t3_CY&#39;),&quot;#,###.#&quot;)  when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;Net Billings&quot;,&quot;Run Rate Volume&quot;] then number_to_string(sum(result.&#39;t3_CY&#39;)/1000000,&quot;$#,###.#&quot;)+&quot;M&quot;  when result.&#39;Metric&#39; in [&quot;GMV&quot;] then  number_to_string(sum(result.&#39;t3_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot; when result.&#39;Metric&#39; in [ &quot;T&amp;P Cost to Serve&quot;] then number_to_string(sum(result.&#39;t3_CY&#39;),&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Addressable Market &amp; Market Share %&quot;] then  number_to_string(sum(result.&#39;t3_CY&#39;)*100,&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Core Transactions / Requests&quot;] then  number_to_string(sum(result.&#39;t3_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot; when  result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;t3_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;  else  number_to_string(sum(result.&#39;t3_CY&#39;),&quot;#,###&quot;)  end) as  &#39;t3_CY&#39;,  (case when result.&#39;Metric&#39; in  [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;AEs&quot;,&quot;SEs&quot;,&quot;Co Prime&quot;,&quot;$10M+ Deals&quot;,&quot;$1M+ deals&quot;,&quot;Run Rate Volume&quot;, &quot;New Logos&quot;,&quot;Red Accounts&quot;,&quot;Marketing Events - World Tours &amp; Trailhead Live&quot;,&quot;Marketing Events - Other&quot;, &quot;EBCs&quot;,&quot;Customer Count&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;Core Transactions / Requests&quot;,&quot;Trailhead Badges&quot;,&quot;Trailblazers&quot;,&quot;Ranger&quot;, &quot;Lost Logos&quot;,&quot;Net Billings&quot;] then number_to_string(sum(result.&#39;YoY Q3 Growth&#39;)/100,&quot;0.0%&quot;) when last(result.&#39;Metric Group&#39;)==&quot;Metric Group&quot; then &quot;&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then&quot;&quot; else number_to_string(sum(result.&#39;YoY Q3 Growth&#39;),&quot;0.0%&quot;)  end) as &#39;YoY Q3 Growth&#39;,(case when sum(result.&#39;t4_CY&#39;)==0 then number_to_string(sum(result.&#39;t4_CY&#39;),&quot;#,###.#&quot;) when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;Net Billings&quot;,&quot;Run Rate Volume&quot;] then number_to_string(sum(result.&#39;t4_CY&#39;)/1000000,&quot;$#,###.#&quot;)+&quot;M&quot; when result.&#39;Metric&#39; in [&quot;GMV&quot;] then  number_to_string(sum(result.&#39;t4_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot;  when result.&#39;Metric&#39; in [ &quot;T&amp;P Cost to Serve&quot;] then number_to_string(sum(result.&#39;t4_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;when result.&#39;Metric&#39; in [&quot;Addressable Market &amp; Market Share %&quot;] then  number_to_string(sum(result.&#39;t4_CY&#39;)*100,&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Core Transactions / Requests&quot;] then  number_to_string(sum(result.&#39;t4_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot;  when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;t4_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;  else number_to_string(sum(result.&#39;t4_CY&#39;),&quot;#,###&quot;)  end) as &#39;t4_CY&#39;,  (case when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;AEs&quot;,&quot;SEs&quot;,&quot;Co Prime&quot;,&quot;$10M+ Deals&quot;,&quot;$1M+ deals&quot;,&quot;Run Rate Volume&quot;, &quot;New Logos&quot;,&quot;Red Accounts&quot;,&quot;Marketing Events - World Tours &amp; Trailhead Live&quot;,&quot;Marketing Events - Other&quot;, &quot;EBCs&quot;,&quot;Customer Count&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;Core Transactions / Requests&quot;,&quot;Trailhead Badges&quot;,&quot;Trailblazers&quot;,&quot;Ranger&quot;, &quot;Lost Logos&quot;,&quot;Net Billings&quot;]then number_to_string(sum(result.&#39;YoY Q4 Growth&#39;)/100,&quot;0.0%&quot;)when last(result.&#39;Metric Group&#39;)==&quot;Metric Group&quot; then &quot;&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then&quot;&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then&quot;&quot;  else number_to_string(sum(result.&#39;YoY Q4 Growth&#39;),&quot;0.0%&quot;)  end) as  &#39;YoY Q4 Growth&#39;,(case  when sum(result.&#39;YTD_CY&#39;)==0 then number_to_string(sum(result.&#39;YTD_CY&#39;),&quot;#,###.#&quot;)  when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;Net Billings&quot;,&quot;Run Rate Volume&quot;] then number_to_string(sum(result.&#39;YTD_CY&#39;)/1000000,&quot;$#,###.#&quot;)+&quot;M&quot;  when result.&#39;Metric&#39; in [&quot;GMV&quot;] then  number_to_string(sum(result.&#39;YTD_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot;  when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;YTD_CY&#39;),&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Addressable Market &amp; Market Share %&quot;] then  number_to_string(sum(result.&#39;YTD_CY&#39;)*100,&quot;#.0&quot;)+&quot;%&quot;  when result.&#39;Metric&#39; in [ &quot;T&amp;P Cost to Serve&quot;] then number_to_string(sum(result.&#39;YTD_CY&#39;),&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Core Transactions / Requests&quot;] then number_to_string(sum(result.&#39;YTD_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;YTD_CY&#39;),&quot;#,###&quot;)+&quot;%&quot;  else number_to_string(sum(result.&#39;YTD_CY&#39;),&quot;#,###&quot;)  end) as  &#39;YTD_CY&#39;,  (case when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;AEs&quot;,&quot;SEs&quot;,&quot;Co Prime&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;$10M+ Deals&quot;,&quot;$1M+ deals&quot;,&quot;Run Rate Volume&quot;, &quot;New Logos&quot;,&quot;Red Accounts&quot;,&quot;Marketing Events - World Tours &amp; Trailhead Live&quot;,&quot;Marketing Events - Other&quot;, &quot;EBCs&quot;,&quot;Customer Count&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;Core Transactions / Requests&quot;,&quot;Trailhead Badges&quot;,&quot;Trailblazers&quot;,&quot;Ranger&quot;, &quot;Lost Logos&quot;,&quot;Net Billings&quot;] then number_to_string(sum(result.&#39;YoY YTD Growth&#39;)/100,&quot;0.0%&quot;) when last(result.&#39;Metric Group&#39;)==&quot;Metric Group&quot; then &quot;&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then&quot;&quot;  else number_to_string(sum(result.&#39;YoY YTD Growth&#39;),&quot;0.0%&quot;)  end) as  &#39;YoY YTD Growth&#39;,last(Comment.&#39;Comment&#39;) as &#39;Comment&#39;;\nresult = order result by &#39;SortOrder&#39; asc;\nresult = foreach result generate &#39;Rate Measure&#39;; ",
        "receiveFacet": true,
        "selectMode": "single",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart",
          "visualizationType": "hbar"
        }
      },
      "Static_Cloud_Filter": {
        "broadcastFacet": true,
        "label": "Static_Cloud_Filter",
        "selectMode": "singlerequired",
        "type": "staticflex",
        "values": [
          "{&quot;display&quot;:&quot;Clouds&quot;,&quot;filter&quot;:&quot;[&#92;&quot;Marketing Cloud &amp; Marketing Platform&#92;&quot;, &#92;&quot;Other&#92;&quot;, &#92;&quot;Quip&#92;&quot;, &#92;&quot;Sales Cloud &amp; Sales Platform&#92;&quot;, &#92;&quot;Salesforce Platform(s)&#92;&quot;, &#92;&quot;Service Cloud &amp; Service Cloud Platform&#92;&quot;, &#92;&quot;Commerce Cloud&#92;&quot;, &#92;&quot;Success Cloud&#92;&quot;,&#92;&quot;Premier (a la carte)&#92;&quot;,&#92;&quot;N/A&#92;&quot;]&quot;}"
        ]
      },
      "Table_Page_1_Header__1": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Page_1_Header_Top",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;;\nresult_Total = group MasterHierarchy by all;\nresult_Total = foreach result_Total generate &quot;Q1_Amount&quot; as &#39; Totals&#39;,&quot;Q2_Amount&quot; as &#39;  Totals&#39;, &quot;Q3_Amount&quot; as &#39;   Totals&#39;,&quot;Q4_Amount&quot; as &#39;    Totals&#39;,&quot;YTD_Amount&quot; as &#39;      Totals&#39;,&quot;Q1_Rate&quot; as &#39;     YoY change&#39; , &quot;Q2_Rate&quot; as &#39; YoY change&#39; , &quot;Q3_Rate&quot; as &#39;  YoY change&#39;, &quot;Q4_Rate&quot; as &#39;   YoY change&#39;, &quot;YTD_Rate&quot; as &#39;    YoY change&#39;      ;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart",
          "visualizationType": "hbar"
        }
      },
      "dimension_column_1": {
        "broadcastFacet": true,
        "groups": [],
        "label": "dimenstion_column_1",
        "numbers": [],
        "query": "\nnMasterHierarchy = load &quot;Master_Hierarchy&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;Level_1&#39; in [&quot;Marketing Cloud &amp; Marketing Platform&quot;, &quot;Other&quot;, &quot;Quip&quot;, &quot;Sales Cloud &amp; Sales Platform&quot;, &quot;Salesforce Platform(s)&quot;, &quot;Service Cloud &amp; Service Cloud Platform&quot;, &quot;Commerce Cloud&quot;, &quot;Success Cloud&quot;, &quot;Premier (a la carte)&quot;, &quot;N/A&quot;];\nMasterHierarchy = group MasterHierarchy by all;\n-------------------------------------------------------------------------------------------------LOAD Comment--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nComment = load &quot;APM_Overview_Comment_5YRS&quot;;\n-------------------------------------------------------------------------------------------------LOAD ACV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nACV = load &quot;APM_CPM&quot;;\nACV = filter ACV by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_ACV&quot;).asString()}});\n ACV = filter ACV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nACV = group ACV by  (&#39;Quarter&#39;, &#39;Fiscal_Year&#39;);\nACV = foreach ACV generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;ACV&#39;) as &#39;ACV&#39;;\n t1_CYACV = filter ACV by   (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYACV = filter ACV by   (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYACV = filter ACV by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYACV = filter ACV by   (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYACV = filter ACV by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYACV = filter ACV by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYACV = filter ACV by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYACV = filter ACV by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYACV = filter ACV by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYACV = filter ACV by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD AOV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nAOV = load &quot;APM_CPM&quot;;\nAOV = filter AOV by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_AOV&quot;).asString()}});\nAOV = foreach AOV generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;AOV&#39;) as &#39;AOV&#39;;\nt1_CYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;); \nt1_PYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_CYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD ATT--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nAttrition = load &quot;APM_CPM&quot;;\nAttrition = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_ATT&quot;).asString()}});\nAttrition = filter Attrition by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nAttrition = foreach Attrition generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Attrition&#39;) * -1 as &#39;Attrition_Product&#39;, sum(&#39;Attrition_Rate&#39;) * -1 as &#39;Attrition_Rate&#39;;\nt1_CYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYATT = filter Attrition by(&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt1_CYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYATTRATE = filter Attrition by(&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD ATTRate --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nAttrition_Rate = load &quot;APM_CPM&quot;;\nAttrition_Rate = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_ATT&quot;).asString()}});\nAttrition_Rate = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}});\nAttrition_Rate = foreach Attrition_Rate generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Attrition&#39;) * -1 as &#39;Attrition_Product&#39;, sum(&#39;Attrition_Rate&#39;) * -1 as &#39;Attrition_Rate&#39;;\nt1_CYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYATTRATE = filter Attrition_Rate by(&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD Pipegen--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nPipegen = load &quot;APM_CPM&quot;;\nPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_PIPEGEN&quot;).asString()}});\nPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nPipegen = foreach Pipegen generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;Pipegen&#39;) as &#39;Pipegen&#39;;\nt1_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYPipegen = filter Pipegen by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD HC--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nHC = load &quot;APM_CPM&quot;;\nHC = filter HC by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_HC&quot;).asString()}});\nHC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nHC = foreach HC generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;SE&#39;) as &#39;SE&#39;, sum(&#39;AE&#39;) as &#39;AE&#39;, sum(&#39;Co_Prime&#39;) as &#39;Co_Prime&#39;;\nt0_CYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_HC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_CYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt0_PYHC = filter HC by  (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt1_PYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYHC = filter HC by  (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYHC = filter HC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYHC = filter HC by  (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYHC = filter HC by  (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYHC = filter HC by  (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt1_PY_2_HC = filter HC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_00&quot;).asString()}}&quot;);\nt2_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt3_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt4_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nYTD_PY_2_HC = filter HC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD SW--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nSW = load &quot;APM_CPM&quot;;\nSW = filter SW by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_SW&quot;).asString()}});\nSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nSW = foreach SW generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;SWE&#39;) as &#39;SWE&#39;;\nt1_CYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD INFRA--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nINFRA = load &quot;APM_CPM&quot;;\nINFRA = filter INFRA by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_SW&quot;).asString()}});\nINFRA = filter INFRA by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nINFRA = foreach INFRA generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;INFRA&#39;) as &#39;INFRA&#39;;\nt1_CYINFRA = filter INFRA by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYINFRA = filter INFRA by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYINFRA = filter INFRA by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYINFRA = filter INFRA by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYINFRA = filter INFRA by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYINFRA = filter INFRA by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYINFRA = filter INFRA by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYINFRA = filter INFRA by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYINFRA = filter INFRA by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYINFRA = filter INFRA by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD CC--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nCC = load &quot;APM_CPM&quot;;\n CC = filter CC by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_CC&quot;).asString()}});\nCC = filter CC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nCC = foreach CC generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;GMV&#39;) as &#39;GMV&#39;, sum(&#39;GMV&#39;) as &#39;GMV_Touched&#39;,sum(&#39;Sites&#39;) as &#39;Sites&#39;,sum(&#39;Sites&#39;) as &#39;Sites_Touched&#39;;\nt1_CYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYCC = filter CC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYCC = filter CC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYCC = filter CC by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nYTD_CYCC_Sites = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYCC_Sites = filter CC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD DEALS--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nDEALS = load &quot;APM_CPM&quot;;\nDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_HC&quot;).asString()}});\nDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nDEALS = foreach DEALS generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;X10M_Deals&#39;) as &#39;X10M_Deals&#39;, sum(&#39;X10M&#39;) as &#39;X10M&#39;, sum(&#39;Runrate_Volume&#39;) as &#39;Runrate_Volume&#39;;\nt1_CYDEALS = filter DEALS by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYDEALS = filter DEALS by  (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYDEALS = filter DEALS by  (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYDEALS = filter DEALS by  (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYDEALS = filter DEALS by  (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYDEALS = filter DEALS by  (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYDEALS = filter DEALS by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYDEALS = filter DEALS by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYDEALS = filter DEALS by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYDEALS = filter DEALS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD LOGO--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nLOGO = load &quot;APM_CPM&quot;;\nLOGO = filter LOGO by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_LOGO&quot;).asString()}});\nLOGO = filter LOGO by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nLOGO = foreach LOGO generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;New_Logos&#39;) as &#39;New_Logos&#39;;\nt1_CYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYLOGO = filter LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYLOGO = filter LOGO by (&#39;Quarter&#39; in{{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;value&quot;).asString()}}&quot;);\nYTD_PYLOGO = filter LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD LOST_LOGO--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nLOST_LOGO = load &quot;APM_CPM&quot;;\nLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_LOST_LOGO&quot;).asString()}});;\nLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nLOST_LOGO = foreach LOST_LOGO generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;Lost_Logo_Count&#39;) as &#39;Lost_Logos&#39;;\nt1_CYLOST_LOGO = filter LOST_LOGO by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYLOST_LOGO = filter LOST_LOGO by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD REDACCOUNTS--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nREDACCOUNTS = load &quot;APM_CPM&quot;;\nREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_REDACCOUNTS&quot;).asString()}});\nREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\n REDACCOUNTS = foreach REDACCOUNTS generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Red_Accounts&#39;) as &#39;Red_Accounts&#39;; \nt1_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD T_P--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\n\nT_P = load &quot;APM_CPM&quot;;\nT_P = foreach T_P generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;CTS&#39;)*100 as &#39;CTS&#39;;\nt1_CYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYT_P = filter T_P by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_T_P&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYT_P = filter T_P by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYT_P = filter T_P by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYT_P = filter T_P by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD TRANSACTION--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\n\nTRANSACTION = load &quot;APM_CPM&quot;;\n TRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_TRANSACTION&quot;).asString()}});\nTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nTRANSACTION = foreach TRANSACTION generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;Transactions_Core&#39;) as &#39;Transactions&#39;;\nt1_CYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;); \n-------------------------------------------------------------------------------------------------LOAD AVAILABILITY--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nAVAILABILITY = load &quot;APM_CPM&quot;;\nAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nAVAILABILITY = foreach AVAILABILITY generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;Availability&#39;)*100 as &#39;Availability&#39; ;\nt1_CYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt4_CYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD EVENTS--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\nEVENTS = load &quot;APM_CPM&quot;;EVENTS  = filter EVENTS by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_EVENTS&quot;).asString()}});\n EVENTS = filter EVENTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nEVENTS = foreach EVENTS generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;World_Tours_Trailhead&#39;) as &#39;World_Tours_Trailhead&#39;;\nt1_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYEVENTS = filter EVENTS by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYEVENTS = filter EVENTS by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD OTHER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\n\nOTHER = load &quot;APM_CPM&quot;;OTHER  = filter OTHER by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_OTHER&quot;).asString()}});\n OTHER = filter OTHER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nOTHER = foreach OTHER generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Marketing_Events_Other&#39;) as &#39;Marketing_Events_Other&#39;;\nt1_CYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYOTHER = filter OTHER by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD EBC--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nEBC = load &quot;APM_CPM&quot;;EBC  = filter EBC by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_EBC&quot;).asString()}});\n EBC = filter EBC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nEBC = foreach EBC generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;EBC_s&#39;) as &#39;EBC_s&#39;;\nt1_CYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD Dreamforce EBCD--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nEBCD = load &quot;APM_CPM&quot;;EBCD  = filter EBCD by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_EBC&quot;).asString()}});\n EBCD = filter EBCD by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nEBCD = foreach EBCD generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Dreamforce_EBC&#39;) as &#39;EBC_Dreamforce&#39;;\nt1_CYEBCD = filter EBCD by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYEBCD = filter EBCD by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYEBCD = filter EBCD by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD CUSTOMER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\nCUSTOMER = load &quot;APM_CPM&quot;;CUSTOMER  = filter CUSTOMER by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_CUSTOMER&quot;).asString()}});\n CUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nCUSTOMER = foreach CUSTOMER generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Customer&#39;) as &#39;Customer&#39;;\nt1_CYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYCUSTOMER = filter CUSTOMER by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYCUSTOMER = filter CUSTOMER by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_CUSTOMER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD SHARE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nSHARE = load &quot;APM_CPM&quot;;SHARE  = filter SHARE by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_SHARE&quot;).asString()}});\nSHARE = foreach SHARE generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;TAM&#39;) as &#39;TAM&#39;;\nt1_CYSHARE = filter SHARE by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYSHARE = filter SHARE by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYSHARE = filter SHARE by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYSHARE = filter SHARE by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYSHARE = filter SHARE by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYSHARE = filter SHARE by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYSHARE = filter SHARE by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYSHARE = filter SHARE by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYSHARE = filter SHARE by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYSHARE = filter SHARE by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD CSG--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nCSG = load &quot;APM_CPM&quot;;CSG  = filter CSG by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_CSG&quot;).asString()}});\n CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nCSG = foreach CSG generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;CSM_Headcount_Headcount&#39;) as &#39;CSM_Headcount&#39;,sum(&#39;PSM_Headcount&#39;) as &#39;PSM_Headcount&#39;;\nt1_CYCSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYCSG = filter CSG by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYCSG = filter CSG by(&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYCSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYCSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYCSG = filter CSG by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYCSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYCSG = filter CSG by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYCSG = filter CSG by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYCSG = filter CSG by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);t1_PY_2_CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_00&quot;).asString()}}&quot;);\nt2_PY_2_CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt3_PY_2_CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt4_PY_2_CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nYTD_PY_2_CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD TRailhead Badges--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\n BADGES = load &quot;APM_CPM&quot;;BADGES  = filter BADGES by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_BADGES&quot;).asString()}});\n BADGES = filter BADGES by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nBADGES = foreach BADGES generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Trailhead_Badges&#39;) as &#39;Trailhead_Badges&#39;;\nt1_CYBADGES = filter BADGES by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYBADGES = filter BADGES by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYBADGES = filter BADGES by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYBADGES = filter BADGES by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYBADGES = filter BADGES by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYBADGES = filter BADGES by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYBADGES = filter BADGES by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYBADGES = filter BADGES by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYBADGES = filter BADGES by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYBADGES = filter BADGES by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD TRailhead TRAILBLAZER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nTRAILBLAZER = load &quot;APM_CPM&quot;;TRAILBLAZER  = filter TRAILBLAZER by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_TRAILBLAZER&quot;).asString()}});\n TRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nTRAILBLAZER = foreach TRAILBLAZER generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Trailblazers&#39;) as &#39;Trailblazers&#39;;\nt1_CYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYTRAILBLAZER = filter TRAILBLAZER by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYTRAILBLAZER = filter TRAILBLAZER by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYTRAILBLAZER = filter TRAILBLAZER by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD TRailhead Ranger--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nRANGER = load &quot;APM_CPM&quot;;RANGER  = filter RANGER by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_RANGER&quot;).asString()}});\n RANGER = filter RANGER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nRANGER = foreach RANGER generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Ranger&#39;) as &#39;Ranger&#39;;\nt1_CYRANGER = filter RANGER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYRANGER = filter RANGER by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYRANGER = filter RANGER by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYRANGER = filter RANGER by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYRANGER = filter RANGER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYRANGER = filter RANGER by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYRANGER = filter RANGER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYRANGER = filter RANGER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYRANGER = filter RANGER by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYRANGER = filter RANGER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD HEROKU--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nHEROKU = load &quot;APM_CPM&quot;;HEROKU  = filter HEROKU by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_HEROKU&quot;).asString()}});\n HEROKU = filter HEROKU by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nHEROKU = foreach HEROKU generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Net_Billings&#39;) as &#39;Net_Billings&#39;;\nt1_CYHEROKU = filter HEROKU by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYHEROKU = filter HEROKU by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYHEROKU = filter HEROKU by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYHEROKU = filter HEROKU by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYHEROKU = filter HEROKU by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYHEROKU = filter HEROKU by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYHEROKU = filter HEROKU by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYHEROKU = filter HEROKU by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYHEROKU = filter HEROKU by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYHEROKU = filter HEROKU by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD Productivity--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nPRODUCTIVITY = load &quot;APM_CPM&quot;;PRODUCTIVITY  = filter PRODUCTIVITY by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_PRODUCTIVITY&quot;).asString()}});\n PRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nPRODUCTIVITY = foreach PRODUCTIVITY generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;{{cell(Quarter_1.selection,0,&quot;Metric_Productivity&quot;).asString()}}&#39;) as &#39;Productivity&#39;;\nt1_CYPRODUCTIVITY = filter PRODUCTIVITY by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);;\n-------------------------------------------------------------------------------------------------LOAD ISV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nISV = load &quot;APM_CPM&quot;;ISV  = filter ISV by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_ISV&quot;).asString()}});\n ISV = filter ISV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nISV = foreach ISV generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;ACV_Take_Off&#39;) as &#39;ACV_Take_Off&#39;,sum(&#39;ACV_Landing_Performance&#39;) as &#39;ACV_Landing_Performance&#39;;\nt1_CYISV = filter ISV by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYISV = filter ISV by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYISV = filter ISV by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYISV = filter ISV by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYISV = filter ISV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYISV = filter ISV by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYISV = filter ISV by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYISV = filter ISV by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYISV = filter ISV by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYISV = filter ISV by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nn-------------------------------------------------------------------------------------------------RESULT ACV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\n\n\nresult_ACV = group t1_CYACV by all full, t2_CYACV by all full, t3_CYACV by all full, t4_CYACV by all full, t1_PYACV by all full, t2_PYACV by all full, t3_PYACV by all full, t4_PYACV by all full, YTD_CYACV by all full, YTD_PYACV by all;\nresult_ACV = foreach result_ACV generate &quot;Financial Measures&quot; as &#39;Metric Group&#39;, &quot;ACV&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYACV.&#39;ACV&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYACV.&#39;ACV&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYACV.&#39;ACV&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYACV.&#39;ACV&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYACV.&#39;ACV&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Million&quot; as &#39;Unit&#39;, &quot;A1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT AOV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nresult_AOV = group t1_CYAOV by all full, t2_CYAOV by all full, t3_CYAOV by all full, t4_CYAOV by all full, t1_PYAOV by all full, t2_PYAOV by all full, t3_PYAOV by all full, t4_PYAOV by all full,YTD_CYAOV by all full, YTD_PYAOV by all;\nresult_AOV = foreach result_AOV generate &quot;Financial Measures&quot; as &#39;Metric Group&#39;, &quot;AOV&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;, coalesce(sum(t1_CYAOV.&#39;AOV&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYAOV.&#39;AOV&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYAOV.&#39;AOV&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYAOV.&#39;AOV&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYAOV.&#39;AOV&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYAOV.&#39;AOV&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYAOV.&#39;AOV&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYAOV.&#39;AOV&#39;), 0) as &#39;t4_PY&#39;,  coalesce(sum(YTD_CYAOV.&#39;AOV&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYAOV.&#39;AOV&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(t1_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(t1_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(t2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(t2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(t3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(t3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(t4_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(t4_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(YTD_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(YTD_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;,&quot;Million&quot; as &#39;Unit&#39;,&quot;A2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT ATT--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nresult_ATT = group t1_CYATT by all full, t2_CYATT by all full, t3_CYATT by all full, t4_CYATT by all full, t1_PYATT by all full, t2_PYATT by all full, t3_PYATT by all full, t4_PYATT by all full, YTD_CYATT by all full,YTD_PYATT by all full, t1_CYATTRATE by all full, t2_CYATTRATE by all full, t3_CYATTRATE by all full, t4_CYATTRATE by all full, t1_PYATTRATE by all full, t2_PYATTRATE by all full, t3_PYATTRATE by all full, t4_PYATTRATE by all full, YTD_CYATTRATE by all full,YTD_PYATTRATE by all;\nresult_ATT = foreach result_ATT generate &quot;Financial Measures&quot; as &#39;Metric Group&#39;, &quot;ATT&quot; as &#39;Metric&#39;,&quot;TTM&quot; as &#39;Rate Measure&#39;, coalesce(sum(t1_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYATT.&#39;Attrition_Product&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYATT.&#39;Attrition_Product&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYATT.&#39;Attrition_Product&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYATT.&#39;Attrition_Product&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYATTRATE.&#39;Attrition_Product&#39;), 0) as &#39;YTD_PY&#39;,coalesce(sum(t1_CYATTRATE.&#39;Attrition_Rate&#39;), 0)  * 100 as &#39;YoY Q1 Growth&#39;,coalesce(sum(t2_CYATTRATE.&#39;Attrition_Rate&#39;), 0)  * 100 as &#39;YoY Q2 Growth&#39;,coalesce(sum(t3_CYATTRATE.&#39;Attrition_Rate&#39;), 0) * 100 as &#39;YoY Q3 Growth&#39;,coalesce(sum(t4_CYATTRATE.&#39;Attrition_Rate&#39;), 0)* 100 as &#39;YoY Q4 Growth&#39;,coalesce(sum(YTD_CYATTRATE.&#39;Attrition_Rate&#39;), 0)* 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;,&quot;Million&quot; as &#39;Unit&#39;,&quot;A3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT Pipegen--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nresult_Pipegen = group t1_CYPipegen by all full, t2_CYPipegen by all full, t3_CYPipegen by all full, t4_CYPipegen by all full, t1_PYPipegen by all full, t2_PYPipegen by all full, t3_PYPipegen by all full, t4_PYPipegen by all full, YTD_CYPipegen by all full,YTD_PYPipegen by all;\nresult_Pipegen = foreach result_Pipegen generate &quot;PipeGen Measures&quot; as &#39;Metric Group&#39;, &quot;Pipeline&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYPipegen.&#39;Pipegen&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYPipegen.&#39;Pipegen&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYPipegen.&#39;Pipegen&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYPipegen.&#39;Pipegen&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(t1_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(t1_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(t2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(t2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(t3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(t3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(t4_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(t4_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(YTD_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(YTD_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Million&quot; as &#39;Unit&#39;,&quot;B1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT AE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nresult_AE = group t1_CYHC by all full, t2_CYHC by all full, t3_CYHC by all full, t4_CYHC by all full, t1_PYHC by all full, t2_PYHC by all full, t3_PYHC by all full, t4_PYHC by all full, YTD_CYHC by all full,YTD_PYHC by all full,  t1_PY_2_HC by all full, t2_PY_2_HC by all full, t3_PY_2_HC by all full, t4_PY_2_HC by all full,YTD_PY_2_HC by all;\nresult_AE = foreach result_AE generate &quot;Distribution Headcount&quot; as &#39;Metric Group&#39;, &quot;AEs&quot; as &#39;Metric&#39;,&quot;24mo CAGR&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYHC.&#39;AE&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYHC.&#39;AE&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYHC.&#39;AE&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYHC.&#39;AE&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYHC.&#39;AE&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYHC.&#39;AE&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYHC.&#39;AE&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYHC.&#39;AE&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYHC.&#39;AE&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0) as &#39;YTD_PY&#39;,(power(coalesce(sum(t1_CYHC.&#39;AE&#39;), 0) / coalesce(sum(t1_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q1 Growth&#39;,(power(coalesce(sum(t2_CYHC.&#39;AE&#39;), 0) / coalesce(sum(t2_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q2 Growth&#39;,(power(coalesce(sum(t3_CYHC.&#39;AE&#39;), 0) / coalesce(sum(t3_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q3 Growth&#39;,(power(coalesce(sum(t4_CYHC.&#39;AE&#39;), 0) / coalesce(sum(t4_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100as &#39;YoY Q4 Growth&#39;,(power(coalesce(sum(YTD_CYHC.&#39;AE&#39;), 0) / coalesce(sum(YTD_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Headcount&quot; as &#39;Unit&#39;,&quot;C1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT SE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nresult_SE = group t1_CYHC by all full, t2_CYHC by all full, t3_CYHC by all full, t4_CYHC by all full, t1_PYHC by all full, t2_PYHC by all full, t3_PYHC by all full, t4_PYHC by all full, YTD_CYHC by all full,YTD_PYHC by all full,  t1_PY_2_HC by all full, t2_PY_2_HC by all full, t3_PY_2_HC by all full, t4_PY_2_HC by all full,YTD_PY_2_HC by all;\nresult_SE = foreach result_SE generate &quot;Distribution Headcount&quot; as &#39;Metric Group&#39;, &quot;SEs&quot; as &#39;Metric&#39;,&quot;24mo CAGR&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYHC.&#39;SE&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYHC.&#39;SE&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYHC.&#39;SE&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYHC.&#39;SE&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYHC.&#39;SE&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYHC.&#39;SE&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYHC.&#39;SE&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYHC.&#39;SE&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYHC.&#39;SE&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYHC.&#39;SE&#39;), 0) as &#39;YTD_PY&#39;,(power(coalesce(sum(t1_CYHC.&#39;SE&#39;), 0) / coalesce(sum(t1_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q1 Growth&#39;,(power(coalesce(sum(t2_CYHC.&#39;SE&#39;), 0) / coalesce(sum(t2_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q2 Growth&#39;,(power(coalesce(sum(t3_CYHC.&#39;SE&#39;), 0) / coalesce(sum(t3_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q3 Growth&#39;,(power(coalesce(sum(t4_CYHC.&#39;SE&#39;), 0) / coalesce(sum(t4_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q4 Growth&#39;,(power(coalesce(sum(YTD_CYHC.&#39;SE&#39;), 0) / coalesce(sum(YTD_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Headcount&quot; as &#39;Unit&#39;,&quot;C2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT CO PRIMED--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_Co_Prime = group t1_CYHC by all full, t2_CYHC by all full, t3_CYHC by all full, t4_CYHC by all full, t1_PYHC by all full, t2_PYHC by all full, t3_PYHC by all full, t4_PYHC by all full, YTD_CYHC by all full,YTD_PYHC by all full,  t1_PY_2_HC by all full, t2_PY_2_HC by all full, t3_PY_2_HC by all full, t4_PY_2_HC by all full,YTD_PY_2_HC by all;\nresult_Co_Prime = foreach result_Co_Prime generate &quot;Distribution Headcount&quot; as &#39;Metric Group&#39;, &quot;Co Prime&quot; as &#39;Metric&#39;,&quot;24mo CAGR&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYHC.&#39;Co_Prime&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYHC.&#39;Co_Prime&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYHC.&#39;Co_Prime&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0) as &#39;YTD_PY&#39;,(power(coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(t1_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YoY Q1 Growth&#39;,(power(coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(t2_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YoY Q2 Growth&#39;,(power(coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(t3_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YoY Q3 Growth&#39;,(power(coalesce(sum(t4_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(t4_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YoY Q4 Growth&#39;,(power(coalesce(sum(YTD_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(YTD_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Headcount&quot; as &#39;Unit&#39;,&quot;C3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT SWE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_SWE = group t1_CYSW by all full, t2_CYSW by all full, t3_CYSW by all full, t4_CYSW by all full, t1_PYSW by all full, t2_PYSW by all full, t3_PYSW by all full, t4_PYSW by all full, YTD_CYSW by all full,YTD_PYSW by all;\nresult_SWE = foreach result_SWE generate &quot;R&amp;D/T&amp;P Headcount&quot; as &#39;Metric Group&#39;, &quot;SWE HC&quot; as &#39;Metric&#39;,&quot;NA&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYSW.&#39;SWE&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYSW.&#39;SWE&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYSW.&#39;SWE&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYSW.&#39;SWE&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYSW.&#39;SWE&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYSW.&#39;SWE&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYSW.&#39;SWE&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYSW.&#39;SWE&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYSW.&#39;SWE&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYSW.&#39;SWE&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(t1_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(t1_PYSW.&#39;SWE&#39;), 0)) as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(t2_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(t2_PYSW.&#39;SWE&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(t3_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(t3_PYSW.&#39;SWE&#39;), 0))  as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(t4_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(t4_PYSW.&#39;SWE&#39;), 0)) as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(YTD_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(YTD_PYSW.&#39;SWE&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Headcount&quot; as &#39;Unit&#39;,&quot;F1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT INFRA--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_INFRA = group t1_CYINFRA by all full, t2_CYINFRA by all full, t3_CYINFRA by all full, t4_CYINFRA by all full, t1_PYINFRA by all full, t2_PYINFRA by all full, t3_PYINFRA by all full, t4_PYINFRA by all full, YTD_CYINFRA by all full,YTD_PYINFRA by all;\nresult_INFRA = foreach result_INFRA generate &quot;R&amp;D/T&amp;P Headcount&quot; as &#39;Metric Group&#39;, &quot;Infra Org HC&quot; as &#39;Metric&#39;,&quot;NA&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYINFRA.&#39;INFRA&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYINFRA.&#39;INFRA&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYINFRA.&#39;INFRA&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYINFRA.&#39;INFRA&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYINFRA.&#39;INFRA&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYINFRA.&#39;INFRA&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYINFRA.&#39;INFRA&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYINFRA.&#39;INFRA&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYINFRA.&#39;INFRA&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYINFRA.&#39;INFRA&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYINFRA.&#39;INFRA&#39;), 0) - coalesce(sum(t1_PYINFRA.&#39;INFRA&#39;), 0)) / coalesce(sum(t1_PYINFRA.&#39;INFRA&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYINFRA.&#39;INFRA&#39;), 0) - coalesce(sum(t2_PYINFRA.&#39;INFRA&#39;), 0)) / coalesce(sum(t2_PYINFRA.&#39;INFRA&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYINFRA.&#39;INFRA&#39;), 0) - coalesce(sum(t3_PYINFRA.&#39;INFRA&#39;), 0)) / coalesce(sum(t3_PYINFRA.&#39;INFRA&#39;), 0))  as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYINFRA.&#39;INFRA&#39;), 0) - coalesce(sum(t4_PYINFRA.&#39;INFRA&#39;), 0)) / coalesce(sum(t4_PYINFRA.&#39;INFRA&#39;), 0)) as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYINFRA.&#39;INFRA&#39;), 0) - coalesce(sum(YTD_PYINFRA.&#39;INFRA&#39;), 0)) / coalesce(sum(YTD_PYINFRA.&#39;INFRA&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Million&quot; as &#39;Unit&#39;,&quot;F2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT GMV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_GMV =  group t1_CYCC by all full, t2_CYCC by all full, t3_CYCC by all full, t4_CYCC by all full, t1_PYCC by all full, t2_PYCC by all full, t3_PYCC by all full, t4_PYCC by all full, YTD_CYCC by all full,YTD_PYCC by all;\nresult_GMV = foreach result_GMV generate &quot;Commerce Cloud Digital Features&quot; as &#39;Metric Group&#39;, &quot;GMV&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYCC.&#39;GMV&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYCC.&#39;GMV&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYCC.&#39;GMV&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYCC.&#39;GMV&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYCC.&#39;GMV&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYCC.&#39;GMV&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYCC.&#39;GMV&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYCC.&#39;GMV&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYCC.&#39;GMV&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYCC.&#39;GMV&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYCC.&#39;GMV&#39;), 0) - coalesce(sum(t1_PYCC.&#39;GMV&#39;), 0)) / coalesce(sum(t1_PYCC.&#39;GMV&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYCC.&#39;GMV&#39;), 0) - coalesce(sum(t2_PYCC.&#39;GMV&#39;), 0)) / coalesce(sum(t2_PYCC.&#39;GMV&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYCC.&#39;GMV&#39;), 0) - coalesce(sum(t3_PYCC.&#39;GMV&#39;), 0)) / coalesce(sum(t3_PYCC.&#39;GMV&#39;), 0)) as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYCC.&#39;GMV&#39;), 0) - coalesce(sum(t4_PYCC.&#39;GMV&#39;), 0)) / coalesce(sum(t4_PYCC.&#39;GMV&#39;), 0))  as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYCC.&#39;GMV&#39;), 0) - coalesce(sum(YTD_PYCC.&#39;GMV&#39;), 0)) / coalesce(sum(YTD_PYCC.&#39;GMV&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Million&quot; as &#39;Unit&#39;,&quot;D1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT Sites--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_Sites = group t1_CYCC by all full, t2_CYCC by all full, t3_CYCC by all full, t4_CYCC by all full, t1_PYCC by all full, t2_PYCC by all full, t3_PYCC by all full, t4_PYCC by all full, YTD_CYCC by all full,YTD_PYCC by all ;\nresult_Sites = foreach result_Sites generate &quot;Commerce Cloud Digital Features&quot; as &#39;Metric Group&#39;, &quot;Sites&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYCC.&#39;Sites&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYCC.&#39;Sites&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYCC.&#39;Sites&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYCC.&#39;Sites&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYCC.&#39;Sites&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYCC.&#39;Sites&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYCC.&#39;Sites&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYCC.&#39;Sites&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYCC.&#39;Sites&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYCC.&#39;Sites&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYCC.&#39;Sites&#39;), 0) - coalesce(sum(t1_PYCC.&#39;Sites&#39;), 0)) / coalesce(sum(t1_PYCC.&#39;Sites&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYCC.&#39;Sites&#39;), 0) - coalesce(sum(t2_PYCC.&#39;Sites&#39;), 0)) / coalesce(sum(t2_PYCC.&#39;Sites&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYCC.&#39;Sites&#39;), 0) - coalesce(sum(t3_PYCC.&#39;Sites&#39;), 0)) / coalesce(sum(t3_PYCC.&#39;Sites&#39;), 0)) as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYCC.&#39;Sites&#39;), 0) - coalesce(sum(t4_PYCC.&#39;Sites&#39;), 0)) / coalesce(sum(t4_PYCC.&#39;Sites&#39;), 0))  as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYCC.&#39;Sites&#39;), 0) - coalesce(sum(YTD_PYCC.&#39;Sites&#39;), 0)) / coalesce(sum(YTD_PYCC.&#39;Sites&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Million&quot; as &#39;Unit&#39;,&quot;D2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT DEALS X!10M Deals--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_X10M_Deals = group t1_CYDEALS by all full, t2_CYDEALS by all full, t3_CYDEALS by all full, t4_CYDEALS by all full, t1_PYDEALS by all full, t2_PYDEALS by all full, t3_PYDEALS by all full, t4_PYDEALS by all full, YTD_CYDEALS by all full, YTD_PYDEALS by all;\nresult_X10M_Deals = foreach result_X10M_Deals generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;$10M+ Deals&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(t1_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(t1_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(t2_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(t2_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(t3_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(t3_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(t4_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(t4_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(YTD_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(YTD_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Count&quot; as &#39;Unit&#39;,&quot;E1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT X10M--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_X10M = group t1_CYDEALS by all full, t2_CYDEALS by all full, t3_CYDEALS by all full, t4_CYDEALS by all full, t1_PYDEALS by all full, t2_PYDEALS by all full, t3_PYDEALS by all full, t4_PYDEALS by all full, YTD_CYDEALS by all full, YTD_PYDEALS by all;\nresult_X10M = foreach result_X10M generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;$1M+ deals&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYDEALS.&#39;X10M&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYDEALS.&#39;X10M&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYDEALS.&#39;X10M&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYDEALS.&#39;X10M&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYDEALS.&#39;X10M&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYDEALS.&#39;X10M&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYDEALS.&#39;X10M&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYDEALS.&#39;X10M&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYDEALS.&#39;X10M&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYDEALS.&#39;X10M&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(t1_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(t1_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(t2_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(t2_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(t3_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(t3_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(t4_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(t4_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(YTD_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(YTD_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Count&quot; as &#39;Unit&#39;,&quot;E2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT DEALS Runrate--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_Runrate_Volume = group t1_CYDEALS by all full, t2_CYDEALS by all full, t3_CYDEALS by all full, t4_CYDEALS by all full, t1_PYDEALS by all full, t2_PYDEALS by all full, t3_PYDEALS by all full, t4_PYDEALS by all full, YTD_CYDEALS by all full, YTD_PYDEALS by all;\nresult_Runrate_Volume = foreach result_Runrate_Volume generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;Run Rate Volume&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(t1_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(t1_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(t2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(t2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(t3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(t3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(t4_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(t4_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(YTD_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(YTD_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;Run-rate is the count of opportunities that are less than a defined region &amp; segment threshold.&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT LOGO--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_LOGO = group t1_CYLOGO by all full, t2_CYLOGO by all full, t3_CYLOGO by all full, t4_CYLOGO by all full, t1_PYLOGO by all full, t2_PYLOGO by all full, t3_PYLOGO by all full, t4_PYLOGO by all full, YTD_CYLOGO by all full, YTD_PYLOGO by all;\nresult_LOGO = foreach result_LOGO generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;New Logos&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYLOGO.&#39;New_Logos&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYLOGO.&#39;New_Logos&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYLOGO.&#39;New_Logos&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYLOGO.&#39;New_Logos&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYLOGO.&#39;New_Logos&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYLOGO.&#39;New_Logos&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYLOGO.&#39;New_Logos&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYLOGO.&#39;New_Logos&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYLOGO.&#39;New_Logos&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYLOGO.&#39;New_Logos&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYLOGO.&#39;New_Logos&#39;), 0) - coalesce(sum(t1_PYLOGO.&#39;New_Logos&#39;), 0)) / coalesce(sum(t1_PYLOGO.&#39;New_Logos&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYLOGO.&#39;New_Logos&#39;), 0) - coalesce(sum(t2_PYLOGO.&#39;New_Logos&#39;), 0)) / coalesce(sum(t2_PYLOGO.&#39;New_Logos&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYLOGO.&#39;New_Logos&#39;), 0) - coalesce(sum(t3_PYLOGO.&#39;New_Logos&#39;), 0)) / coalesce(sum(t3_PYLOGO.&#39;New_Logos&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYLOGO.&#39;New_Logos&#39;), 0) - coalesce(sum(t4_PYLOGO.&#39;New_Logos&#39;), 0)) / coalesce(sum(t4_PYLOGO.&#39;New_Logos&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYLOGO.&#39;New_Logos&#39;), 0) - coalesce(sum(YTD_PYLOGO.&#39;New_Logos&#39;), 0)) / coalesce(sum(YTD_PYLOGO.&#39;New_Logos&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E4&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT LOST LOGO--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_LOST_LOGO = group t1_CYLOST_LOGO by all full, t2_CYLOST_LOGO by all full, t3_CYLOST_LOGO by all full, t4_CYLOST_LOGO by all full, t1_PYLOST_LOGO by all full, t2_PYLOST_LOGO by all full, t3_PYLOST_LOGO by all full, t4_PYLOST_LOGO by all full, YTD_CYLOST_LOGO by all full, YTD_PYLOST_LOGO by all;\nresult_LOST_LOGO = foreach result_LOST_LOGO generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;Lost Logos&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) - coalesce(sum(t1_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) / coalesce(sum(t1_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) - coalesce(sum(t2_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) / coalesce(sum(t2_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) - coalesce(sum(t3_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) / coalesce(sum(t3_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) - coalesce(sum(t4_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) / coalesce(sum(t4_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) - coalesce(sum(YTD_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) / coalesce(sum(YTD_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E5&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT REDACCOUNTS--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_REDACCOUNTS = group t1_CYREDACCOUNTS by all full, t2_CYREDACCOUNTS by all full, t3_CYREDACCOUNTS by all full, t4_CYREDACCOUNTS by all full, t1_PYREDACCOUNTS by all full, t2_PYREDACCOUNTS by all full, t3_PYREDACCOUNTS by all full, t4_PYREDACCOUNTS by all full, YTD_CYREDACCOUNTS by all full, YTD_PYREDACCOUNTS by all;\nresult_REDACCOUNTS = foreach result_REDACCOUNTS generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;Red Accounts&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(t1_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(t1_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(t2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(t2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(t3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(t3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(t4_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(t4_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(YTD_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(YTD_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E6&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT Productivity--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_PRODUCTIVITY = group t1_CYACV by all full, t2_CYACV by all full, t3_CYACV by all full, t4_CYACV by all full, t1_PYACV by all full, t2_PYACV by all full, t3_PYACV by all full, t4_PYACV by all full, YTD_CYACV by all full, YTD_PYACV by all full,t0_CYHC by all full,t1_CYHC by all full, t2_CYHC by all full, t3_CYHC by all full, t4_CYHC by all full,t0_PYHC by all full, t1_PYHC by all full, t2_PYHC by all full, t3_PYHC by all full, t4_PYHC by all full, YTD_CYHC by all full, YTD_PYHC by all full, YTD_PY_2_HC by all  ;\nresult_PRODUCTIVITY = foreach result_PRODUCTIVITY generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;Productivity&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t1_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t0_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t0_CYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t1_CY&#39;, coalesce(sum(t2_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t2_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t1_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t2_CY&#39;, coalesce(sum(t3_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t3_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t2_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t3_CY&#39;, coalesce(sum(t4_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t4_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t4_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t3_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t4_CY&#39;, coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t0_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t0_PYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t1_PY&#39;,  coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t2_PY&#39;, coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t3_PY&#39;, coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t4_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t4_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(YTD_CYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;Co_Prime&#39;), 0))/2) as &#39;YTD_PY&#39;,((((coalesce(sum(t1_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t1_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t0_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t0_CYHC.&#39;Co_Prime&#39;), 0))/2))-(coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t0_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t0_PYHC.&#39;Co_Prime&#39;), 0))/2))))/(coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t0_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t0_PYHC.&#39;Co_Prime&#39;), 0))/2)) ) as &#39;YoY Q1 Growth&#39;,( ((coalesce(sum(t2_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t2_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t1_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0))/2))-(coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0))/2))))/(coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0))/2)) as &#39;YoY Q2 Growth&#39;, ((coalesce(sum(t3_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t3_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t2_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0))/2))-( coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0))/2)))/( coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0))/2)) as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t4_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t4_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t3_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0))/2))-(coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t4_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t4_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0))/2)))/(coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t4_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t4_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0))/2)) as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(YTD_CYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0))/2))-( coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;Co_Prime&#39;), 0))/2)))/( coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;Co_Prime&#39;), 0))/2)) as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E7&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT T_P--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_T_P = group t1_CYT_P by all full, t2_CYT_P by all full, t3_CYT_P by all full, t4_CYT_P by all full, t1_PYT_P by all full, t2_PYT_P by all full, t3_PYT_P by all full, t4_PYT_P by all full, YTD_CYT_P by all full, YTD_PYT_P by all;\nresult_T_P = foreach result_T_P generate &quot;Tech Details&quot; as &#39;Metric Group&#39;, &quot;T&amp;P Cost to Serve&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYT_P.&#39;CTS&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYT_P.&#39;CTS&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYT_P.&#39;CTS&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYT_P.&#39;CTS&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYT_P.&#39;CTS&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYT_P.&#39;CTS&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYT_P.&#39;CTS&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYT_P.&#39;CTS&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYT_P.&#39;CTS&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYT_P.&#39;CTS&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(t1_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(t1_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(t2_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(t2_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(t3_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(t3_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(t4_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(t4_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(YTD_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(YTD_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;G1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT TRANSACTION--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_TRANSACTION = group t1_CYTRANSACTION by all full, t2_CYTRANSACTION by all full, t3_CYTRANSACTION by all full, t4_CYTRANSACTION by all full, t1_PYTRANSACTION by all full, t2_PYTRANSACTION by all full, t3_PYTRANSACTION by all full, t4_PYTRANSACTION by all full, YTD_CYTRANSACTION by all full, YTD_PYTRANSACTION by all;\nresult_TRANSACTION = foreach result_TRANSACTION generate &quot;Tech Details&quot; as &#39;Metric Group&#39;, &quot;Core Transactions / Requests&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYTRANSACTION.&#39;Transactions&#39;), 0) - coalesce(sum(t1_PYTRANSACTION.&#39;Transactions&#39;), 0)) / coalesce(sum(t1_PYTRANSACTION.&#39;Transactions&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYTRANSACTION.&#39;Transactions&#39;), 0) - coalesce(sum(t2_PYTRANSACTION.&#39;Transactions&#39;), 0)) / coalesce(sum(t2_PYTRANSACTION.&#39;Transactions&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYTRANSACTION.&#39;Transactions&#39;), 0) - coalesce(sum(t3_PYTRANSACTION.&#39;Transactions&#39;), 0)) / coalesce(sum(t3_PYTRANSACTION.&#39;Transactions&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYTRANSACTION.&#39;Transactions&#39;), 0) - coalesce(sum(t4_PYTRANSACTION.&#39;Transactions&#39;), 0)) / coalesce(sum(t4_PYTRANSACTION.&#39;Transactions&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYTRANSACTION.&#39;Transactions&#39;), 0) - coalesce(sum(YTD_PYTRANSACTION.&#39;Transactions&#39;), 0)) / coalesce(sum(YTD_PYTRANSACTION.&#39;Transactions&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;Core infra only&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;G3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT AVAILABILITY--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_AVAILABILITY = group t1_CYAVAILABILITY by all full, t2_CYAVAILABILITY by all full, t3_CYAVAILABILITY by all full, t4_CYAVAILABILITY by all full, t1_PYAVAILABILITY by all full, t2_PYAVAILABILITY by all full, t3_PYAVAILABILITY by all full, t4_PYAVAILABILITY by all full, YTD_CYAVAILABILITY by all full, YTD_PYAVAILABILITY by all;\nresult_AVAILABILITY = foreach result_AVAILABILITY generate &quot;Tech Details&quot; as &#39;Metric Group&#39;, &quot;Availability %&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(t1_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(t1_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(t2_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(t2_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(t3_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(t3_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(t4_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(t4_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(YTD_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(YTD_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;Core infra only&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;G2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT EVENTS--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_EVENTS = group t1_CYEVENTS by all full, t2_CYEVENTS by all full, t3_CYEVENTS by all full, t4_CYEVENTS by all full, t1_PYEVENTS by all full, t2_PYEVENTS by all full, t3_PYEVENTS by all full, t4_PYEVENTS by all full, YTD_CYEVENTS by all full, YTD_PYEVENTS by all;\nresult_EVENTS = foreach result_EVENTS generate &quot;Marketing Details&quot; as &#39;Metric Group&#39;, &quot;Marketing Events - World Tours &amp; Trailhead Live&quot; as &#39;Metric&#39;,&quot;NA&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(t1_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(t1_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(t2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(t2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(t3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(t3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(t4_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(t4_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(YTD_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(YTD_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;H1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT OTHER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_OTHER = group t1_CYOTHER by all full, t2_CYOTHER by all full, t3_CYOTHER by all full, t4_CYOTHER by all full, t1_PYOTHER by all full, t2_PYOTHER by all full, t3_PYOTHER by all full, t4_PYOTHER by all full, YTD_CYOTHER by all full, YTD_PYOTHER by all;\nresult_OTHER = foreach result_OTHER generate &quot;Marketing Details&quot; as &#39;Metric Group&#39;, &quot;Marketing Events - Other&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(t1_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(t1_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(t2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(t2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(t3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(t3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(t4_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(t4_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(YTD_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(YTD_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;CxOs (such as exec programs, dinners, etc), Event in a Box, Industry Events/Third Party Events (such as NRF, WEF, etc), Salesforce Basecamps (previously known as Essentials), Hospitality Events (such as Live Nation, sports events, etc), and Developer Workshop (such as TrailheaDX). &quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;H2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT EVENTS EBC--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_EBC = group t1_CYEBC by all full, t2_CYEBC by all full, t3_CYEBC by all full, t4_CYEBC by all full, t1_PYEBC by all full, t2_PYEBC by all full, t3_PYEBC by all full, t4_PYEBC by all full, YTD_CYEBC by all full, YTD_PYEBC by all;\nresult_EBC = foreach result_EBC generate &quot;Marketing Details&quot; as &#39;Metric Group&#39;, &quot;EBCs&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYEBC.&#39;EBC_s&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYEBC.&#39;EBC_s&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYEBC.&#39;EBC_s&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYEBC.&#39;EBC_s&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYEBC.&#39;EBC_s&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYEBC.&#39;EBC_s&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYEBC.&#39;EBC_s&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYEBC.&#39;EBC_s&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYEBC.&#39;EBC_s&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYEBC.&#39;EBC_s&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(t1_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(t1_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(t2_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(t2_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(t3_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(t3_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(t4_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(t4_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(YTD_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(YTD_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;H3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT EVENTS EBCD Dreamforce--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_EBCD = group t1_CYEBCD by all full, t2_CYEBCD by all full, t3_CYEBCD by all full, t4_CYEBCD by all full, t1_PYEBCD by all full, t2_PYEBCD by all full, t3_PYEBCD by all full, t4_PYEBCD by all full, YTD_CYEBCD by all full, YTD_PYEBCD by all;\nresult_EBCD = foreach result_EBCD generate &quot;Marketing Details&quot; as &#39;Metric Group&#39;, &quot;EBC Dreamforce&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) - coalesce(sum(t1_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) / coalesce(sum(t1_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) - coalesce(sum(t2_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) / coalesce(sum(t2_PYEBCD.&#39;EBC_Dreamforce&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) - coalesce(sum(t3_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) / coalesce(sum(t3_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) - coalesce(sum(t4_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) / coalesce(sum(t4_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) - coalesce(sum(YTD_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) / coalesce(sum(YTD_PYEBCD.&#39;EBC_Dreamforce&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;H4&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT CUSTOMER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_CUSTOMER = group t1_CYCUSTOMER by all full, t2_CYCUSTOMER by all full, t3_CYCUSTOMER by all full, t4_CYCUSTOMER by all full, t1_PYCUSTOMER by all full, t2_PYCUSTOMER by all full, t3_PYCUSTOMER by all full, t4_PYCUSTOMER by all full, YTD_CYCUSTOMER by all full, YTD_PYCUSTOMER by all;\nresult_CUSTOMER = foreach result_CUSTOMER generate &quot;Market Details&quot; as &#39;Metric Group&#39;, &quot;Customer Count&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYCUSTOMER.&#39;Customer&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYCUSTOMER.&#39;Customer&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYCUSTOMER.&#39;Customer&#39;), 0) - coalesce(sum(t1_PYCUSTOMER.&#39;Customer&#39;), 0)) / coalesce(sum(t1_PYCUSTOMER.&#39;Customer&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYCUSTOMER.&#39;Customer&#39;), 0) - coalesce(sum(t2_PYCUSTOMER.&#39;Customer&#39;), 0)) / coalesce(sum(t2_PYCUSTOMER.&#39;Customer&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYCUSTOMER.&#39;Customer&#39;), 0) - coalesce(sum(t3_PYCUSTOMER.&#39;Customer&#39;), 0)) / coalesce(sum(t3_PYCUSTOMER.&#39;Customer&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYCUSTOMER.&#39;Customer&#39;), 0) - coalesce(sum(t4_PYCUSTOMER.&#39;Customer&#39;), 0)) / coalesce(sum(t4_PYCUSTOMER.&#39;Customer&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYCUSTOMER.&#39;Customer&#39;), 0) - coalesce(sum(YTD_PYCUSTOMER.&#39;Customer&#39;), 0)) / coalesce(sum(YTD_PYCUSTOMER.&#39;Customer&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;Combo Company definition&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;I1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT SHARE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_SHARE = group t1_CYSHARE by all full, t2_CYSHARE by all full, t3_CYSHARE by all full, t4_CYSHARE by all full, t1_PYSHARE by all full, t2_PYSHARE by all full, t3_PYSHARE by all full, t4_PYSHARE by all full, YTD_CYSHARE by all full, YTD_PYSHARE by all;\nresult_SHARE = foreach result_SHARE generate &quot;Market Details&quot; as &#39;Metric Group&#39;, &quot;TAM $ / Market Share $&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYSHARE.&#39;TAM&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYSHARE.&#39;TAM&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYSHARE.&#39;TAM&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYSHARE.&#39;TAM&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYSHARE.&#39;TAM&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYSHARE.&#39;TAM&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYSHARE.&#39;TAM&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYSHARE.&#39;TAM&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYSHARE.&#39;TAM&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYSHARE.&#39;TAM&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYSHARE.&#39;TAM&#39;), 0) - coalesce(sum(t1_PYSHARE.&#39;TAM&#39;), 0)) / coalesce(sum(t1_PYSHARE.&#39;TAM&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYSHARE.&#39;TAM&#39;), 0) - coalesce(sum(t2_PYSHARE.&#39;TAM&#39;), 0)) / coalesce(sum(t2_PYSHARE.&#39;TAM&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYSHARE.&#39;TAM&#39;), 0) - coalesce(sum(t3_PYSHARE.&#39;TAM&#39;), 0)) / coalesce(sum(t3_PYSHARE.&#39;TAM&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYSHARE.&#39;TAM&#39;), 0) - coalesce(sum(t4_PYSHARE.&#39;TAM&#39;), 0)) / coalesce(sum(t4_PYSHARE.&#39;TAM&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYSHARE.&#39;TAM&#39;), 0) - coalesce(sum(YTD_PYSHARE.&#39;TAM&#39;), 0)) / coalesce(sum(YTD_PYSHARE.&#39;TAM&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;I2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT CSG CSM--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_CSG_HC = group t1_CYCSG by all full, t2_CYCSG by all full, t3_CYCSG by all full, t4_CYCSG by all full, t1_PYCSG by all full, t2_PYCSG by all full, t3_PYCSG by all full, t4_PYCSG by all full, YTD_CYCSG by all full, YTD_PYCSG by all full , t1_PY_2_CSG by all full, t2_PY_2_CSG by all full, t3_PY_2_CSG by all full, t4_PY_2_CSG by all full,YTD_PY_2_CSG by all;\nresult_CSG_HC = foreach result_CSG_HC generate &quot;CSG Headcount&quot; as &#39;Metric Group&#39;, &quot;CSM&quot; as &#39;Metric&#39;,&quot;24mo CAGR&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;YTD_PY&#39;,(power(coalesce(sum(t1_CYCSG.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(t1_PY_2_CSG.&#39;CSM_Headcount&#39;), 0),(1/2))-1)  as &#39;YoY Q1 Growth&#39;,(power(coalesce(sum(t2_CYCSG.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(t2_PY_2_CSG.&#39;CSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q2 Growth&#39;,(power(coalesce(sum(t3_CYCSG.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(t3_PY_2_CSG.&#39;CSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q3 Growth&#39;,(power(coalesce(sum(t4_CYCSG.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(t4_PY_2_CSG.&#39;CSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q4 Growth&#39;,(power(coalesce(sum(YTD_CYCSG.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(YTD_PY_2_CSG.&#39;CSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;J1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT CSG PSM--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_CSG_PSM = group t1_CYCSG by all full, t2_CYCSG by all full, t3_CYCSG by all full, t4_CYCSG by all full, t1_PYCSG by all full, t2_PYCSG by all full, t3_PYCSG by all full, t4_PYCSG by all full, YTD_CYCSG by all full, YTD_PYCSG by all full,t1_PY_2_CSG by all full, t2_PY_2_CSG by all full, t3_PY_2_CSG by all full, t4_PY_2_CSG by all full,YTD_PY_2_CSG by all;\nresult_CSG_PSM = foreach result_CSG_PSM generate &quot;CSG Headcount&quot; as &#39;Metric Group&#39;, &quot;PSM&quot; as &#39;Metric&#39;,&quot;24mo CAGR&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;YTD_PY&#39;,(power(coalesce(sum(t1_CYCSG.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(t1_PY_2_CSG.&#39;PSM_Headcount&#39;), 0),(1/2))-1)  as &#39;YoY Q1 Growth&#39;,(power(coalesce(sum(t2_CYCSG.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(t2_PY_2_CSG.&#39;PSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q2 Growth&#39;,(power(coalesce(sum(t3_CYCSG.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(t3_PY_2_CSG.&#39;PSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q3 Growth&#39;,(power(coalesce(sum(t4_CYCSG.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(t4_PY_2_CSG.&#39;PSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q4 Growth&#39;,(power(coalesce(sum(YTD_CYCSG.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(YTD_PY_2_CSG.&#39;PSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;J2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT Trailhead Badges--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_BADGES = group t1_CYBADGES by all full, t2_CYBADGES by all full, t3_CYBADGES by all full, t4_CYBADGES by all full, t1_PYBADGES by all full, t2_PYBADGES by all full, t3_PYBADGES by all full, t4_PYBADGES by all full, YTD_CYBADGES by all full, YTD_PYBADGES by all;\nresult_BADGES = foreach result_BADGES generate &quot;Trailhead Details&quot; as &#39;Metric Group&#39;, &quot;Trailhead Badges&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYBADGES.&#39;Trailhead_Badges&#39;), 0) - coalesce(sum(t1_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) / coalesce(sum(t1_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYBADGES.&#39;Trailhead_Badges&#39;), 0) - coalesce(sum(t2_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) / coalesce(sum(t2_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYBADGES.&#39;Trailhead_Badges&#39;), 0) - coalesce(sum(t3_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) / coalesce(sum(t3_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYBADGES.&#39;Trailhead_Badges&#39;), 0) - coalesce(sum(t4_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) / coalesce(sum(t4_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYBADGES.&#39;Trailhead_Badges&#39;), 0) - coalesce(sum(YTD_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) / coalesce(sum(YTD_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;K1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT TRAILBLAZER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_TRAILBLAZER = group t1_CYTRAILBLAZER by all full, t2_CYTRAILBLAZER by all full, t3_CYTRAILBLAZER by all full, t4_CYTRAILBLAZER by all full, t1_PYTRAILBLAZER by all full, t2_PYTRAILBLAZER by all full, t3_PYTRAILBLAZER by all full, t4_PYTRAILBLAZER by all full, YTD_CYTRAILBLAZER by all full, YTD_PYTRAILBLAZER by all;\nresult_TRAILBLAZER = foreach result_TRAILBLAZER generate &quot;Trailhead Details&quot; as &#39;Metric Group&#39;, &quot;Trailblazers&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) - coalesce(sum(t1_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) / coalesce(sum(t1_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) - coalesce(sum(t2_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) / coalesce(sum(t2_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) - coalesce(sum(t3_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) / coalesce(sum(t3_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) - coalesce(sum(t4_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) / coalesce(sum(t4_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) - coalesce(sum(YTD_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) / coalesce(sum(YTD_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;K2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT TRAILBLAZER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_RANGER = group t1_CYRANGER by all full, t2_CYRANGER by all full, t3_CYRANGER by all full, t4_CYRANGER by all full, t1_PYRANGER by all full, t2_PYRANGER by all full, t3_PYRANGER by all full, t4_PYRANGER by all full, YTD_CYRANGER by all full, YTD_PYRANGER by all;\nresult_RANGER = foreach result_RANGER generate &quot;Trailhead Details&quot; as &#39;Metric Group&#39;, &quot;Ranger&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYRANGER.&#39;Ranger&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYRANGER.&#39;Ranger&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYRANGER.&#39;Ranger&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYRANGER.&#39;Ranger&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYRANGER.&#39;Ranger&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYRANGER.&#39;Ranger&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYRANGER.&#39;Ranger&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYRANGER.&#39;Ranger&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYRANGER.&#39;Ranger&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYRANGER.&#39;Ranger&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYRANGER.&#39;Ranger&#39;), 0) - coalesce(sum(t1_PYRANGER.&#39;Ranger&#39;), 0)) / coalesce(sum(t1_PYRANGER.&#39;Ranger&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYRANGER.&#39;Ranger&#39;), 0) - coalesce(sum(t2_PYRANGER.&#39;Ranger&#39;), 0)) / coalesce(sum(t2_PYRANGER.&#39;Ranger&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYRANGER.&#39;Ranger&#39;), 0) - coalesce(sum(t3_PYRANGER.&#39;Ranger&#39;), 0)) / coalesce(sum(t3_PYRANGER.&#39;Ranger&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYRANGER.&#39;Ranger&#39;), 0) - coalesce(sum(t4_PYRANGER.&#39;Ranger&#39;), 0)) / coalesce(sum(t4_PYRANGER.&#39;Ranger&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYRANGER.&#39;Ranger&#39;), 0) - coalesce(sum(YTD_PYRANGER.&#39;Ranger&#39;), 0)) / coalesce(sum(YTD_PYRANGER.&#39;Ranger&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;K3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT HEROKU--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_HEROKU = group t1_CYHEROKU by all full, t2_CYHEROKU by all full, t3_CYHEROKU by all full, t4_CYHEROKU by all full, t1_PYHEROKU by all full, t2_PYHEROKU by all full, t3_PYHEROKU by all full, t4_PYHEROKU by all full, YTD_CYHEROKU by all full, YTD_PYHEROKU by all;\nresult_HEROKU = foreach result_HEROKU generate &quot;Heroku&quot; as &#39;Metric Group&#39;, &quot;Net Billings&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYHEROKU.&#39;Net_Billings&#39;), 0) - coalesce(sum(t1_PYHEROKU.&#39;Net_Billings&#39;), 0)) / coalesce(sum(t1_PYHEROKU.&#39;Net_Billings&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYHEROKU.&#39;Net_Billings&#39;), 0) - coalesce(sum(t2_PYHEROKU.&#39;Net_Billings&#39;), 0)) / coalesce(sum(t2_PYHEROKU.&#39;Net_Billings&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYHEROKU.&#39;Net_Billings&#39;), 0) - coalesce(sum(t3_PYHEROKU.&#39;Net_Billings&#39;), 0)) / coalesce(sum(t3_PYHEROKU.&#39;Net_Billings&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYHEROKU.&#39;Net_Billings&#39;), 0) - coalesce(sum(t4_PYHEROKU.&#39;Net_Billings&#39;), 0)) / coalesce(sum(t4_PYHEROKU.&#39;Net_Billings&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYHEROKU.&#39;Net_Billings&#39;), 0) - coalesce(sum(YTD_PYHEROKU.&#39;Net_Billings&#39;), 0)) / coalesce(sum(YTD_PYHEROKU.&#39;Net_Billings&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;L1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT Productivity John--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nNEW_result_PRODUCTIVITY = group t1_CYPRODUCTIVITY by all full, t2_CYPRODUCTIVITY by all full, t3_CYPRODUCTIVITY by all full, t4_CYPRODUCTIVITY by all full, t1_PYPRODUCTIVITY by all full, t2_PYPRODUCTIVITY by all full, t3_PYPRODUCTIVITY by all full, t4_PYPRODUCTIVITY by all full, YTD_CYPRODUCTIVITY by all full, YTD_PYPRODUCTIVITY by all;\nNEW_result_PRODUCTIVITY = foreach NEW_result_PRODUCTIVITY generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;Productivity&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;, coalesce(sum(t1_CYPRODUCTIVITY.&#39;Productivity&#39;), 0)  as &#39;t1_CY&#39;, coalesce(sum(t2_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) - coalesce(sum(t1_PYPRODUCTIVITY.&#39;Productivity&#39;), 0)) / coalesce(sum(t1_PYPRODUCTIVITY.&#39;Productivity&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) - coalesce(sum(t2_PYPRODUCTIVITY.&#39;Productivity&#39;), 0)) / coalesce(sum(t2_PYPRODUCTIVITY.&#39;Productivity&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) - coalesce(sum(t3_PYPRODUCTIVITY.&#39;Productivity&#39;), 0)) / coalesce(sum(t3_PYPRODUCTIVITY.&#39;Productivity&#39;), 0))  as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) - coalesce(sum(t4_PYPRODUCTIVITY.&#39;Productivity&#39;), 0)) / coalesce(sum(t4_PYPRODUCTIVITY.&#39;Productivity&#39;), 0))  as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) - coalesce(sum(YTD_PYPRODUCTIVITY.&#39;Productivity&#39;), 0)) / coalesce(sum(YTD_PYPRODUCTIVITY.&#39;Productivity&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E8&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT ISVTake Off--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_ISV_TAKEOFF = group t1_CYISV by all full, t2_CYISV by all full, t3_CYISV by all full, t4_CYISV by all full, t1_PYISV by all full, t2_PYISV by all full, t3_PYISV by all full, t4_PYISV by all full, YTD_CYISV by all full, YTD_PYISV by all;\nresult_ISV_TAKEOFF= foreach result_ISV_TAKEOFF generate &quot;ISV&quot; as &#39;Metric Group&#39;, &quot;Take off&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;, coalesce(sum(t1_CYISV.&#39;ACV_Take_Off&#39;), 0)  as &#39;t1_CY&#39;, coalesce(sum(t2_CYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYISV.&#39;ACV_Take_Off&#39;), 0) - coalesce(sum(t1_PYISV.&#39;ACV_Take_Off&#39;), 0)) / coalesce(sum(t1_PYISV.&#39;ACV_Take_Off&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYISV.&#39;ACV_Take_Off&#39;), 0) - coalesce(sum(t2_PYISV.&#39;ACV_Take_Off&#39;), 0)) / coalesce(sum(t2_PYISV.&#39;ACV_Take_Off&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYISV.&#39;ACV_Take_Off&#39;), 0) - coalesce(sum(t3_PYISV.&#39;ACV_Take_Off&#39;), 0)) / coalesce(sum(t3_PYISV.&#39;ACV_Take_Off&#39;), 0))  as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYISV.&#39;ACV_Take_Off&#39;), 0) - coalesce(sum(t4_PYISV.&#39;ACV_Take_Off&#39;), 0)) / coalesce(sum(t4_PYISV.&#39;ACV_Take_Off&#39;), 0))  as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYISV.&#39;ACV_Take_Off&#39;), 0) - coalesce(sum(YTD_PYISV.&#39;ACV_Take_Off&#39;), 0)) / coalesce(sum(YTD_PYISV.&#39;ACV_Take_Off&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;M1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT ISV Landing Performance--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_ISV_LANDING = group t1_CYISV by all full, t2_CYISV by all full, t3_CYISV by all full, t4_CYISV by all full, t1_PYISV by all full, t2_PYISV by all full, t3_PYISV by all full, t4_PYISV by all full, YTD_CYISV by all full, YTD_PYISV by all;\nresult_ISV_LANDING= foreach result_ISV_LANDING generate &quot;ISV&quot; as &#39;Metric Group&#39;, &quot;Landing&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;, coalesce(sum(t1_CYISV.&#39;ACV_Landing_Performance&#39;), 0)  as &#39;t1_CY&#39;, coalesce(sum(t2_CYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYISV.&#39;ACV_Landing_Performance&#39;), 0) - coalesce(sum(t1_PYISV.&#39;ACV_Landing_Performance&#39;), 0)) / coalesce(sum(t1_PYISV.&#39;ACV_Landing_Performance&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYISV.&#39;ACV_Landing_Performance&#39;), 0) - coalesce(sum(t2_PYISV.&#39;ACV_Landing_Performance&#39;), 0)) / coalesce(sum(t2_PYISV.&#39;ACV_Landing_Performance&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYISV.&#39;ACV_Landing_Performance&#39;), 0) - coalesce(sum(t3_PYISV.&#39;ACV_Landing_Performance&#39;), 0)) / coalesce(sum(t3_PYISV.&#39;ACV_Landing_Performance&#39;), 0))  as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYISV.&#39;ACV_Landing_Performance&#39;), 0) - coalesce(sum(t4_PYISV.&#39;ACV_Landing_Performance&#39;), 0)) / coalesce(sum(t4_PYISV.&#39;ACV_Landing_Performance&#39;), 0))  as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYISV.&#39;ACV_Landing_Performance&#39;), 0) - coalesce(sum(YTD_PYISV.&#39;ACV_Landing_Performance&#39;), 0)) / coalesce(sum(YTD_PYISV.&#39;ACV_Landing_Performance&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;M2&quot; as &#39;SortOrder&#39;;\nvn\n\n\n\n\ntotal_FINANCIALMEASURES = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Financial Measures&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_Pipegen = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;PipeGen Measures&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_DISTRIBUTION_HC = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Distribution Headcount&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_COMMERCE = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Commerce Cloud Digital Features&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_Sales = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Sales Details&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_HEADCOUNT = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;R&amp;D/T&amp;P Headcount&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_TECH = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Tech Details&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_MARKETING = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Marketing Details&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_MARKET = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Market Details&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_CSG = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;CSG Headcount&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_TRAILHEAD = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Trailhead&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \n\n\n--line = group MasterHierarchy by &#39;all&#39;;\n--line = foreach line generate &quot;-----------------------------------------------------------------&quot; as &#39;Cloud&#39;, &quot;HBZ&quot; as &#39;SortOrder&#39;;\nvnresult = union total_FINANCIALMEASURES,result_ACV, result_AOV,result_ATT,total_Pipegen,result_Pipegen,total_DISTRIBUTION_HC,result_AE,result_SE,result_Co_Prime,total_COMMERCE,result_GMV,result_Sites,total_Sales,result_X10M_Deals,result_X10M,result_Runrate_Volume,result_LOGO,result_LOST_LOGO,result_REDACCOUNTS,total_HEADCOUNT,result_SWE,result_INFRA,total_TECH, result_T_P,result_AVAILABILITY,result_TRANSACTION, total_MARKETING,result_EVENTS,result_OTHER, result_EBC,result_EBCD,total_MARKET,result_CUSTOMER,result_SHARE,total_CSG,result_CSG_HC,result_CSG_PSM,total_TRAILHEAD,result_BADGES,result_TRAILBLAZER, result_RANGER,result_HEROKU,NEW_result_PRODUCTIVITY,result_ISV_TAKEOFF,result_ISV_LANDING;\nvn--result = order result by &#39;SortOrder&#39; asc;\n--result = filter result by &#39;Cloud&#39; not in [&quot;Premier (a la carte)&quot;];\nresult = filter result by &#39;Metric Group&#39; != &quot;Metric Group&quot;;\nresult = group result by &#39;Metric&#39;left , Comment by &#39;Metric&#39;;\nresult = foreach result generate last(result.&#39;Metric Group&#39;) as &#39;Metric Group&#39;, result.&#39;Metric&#39; as &#39;Metric&#39;,last(result.&#39;Rate Measure&#39;) as &#39;Rate Measure&#39;, last(result.&#39;SortOrder&#39;) as &#39;SortOrder&#39;,(case when sum(result.&#39;t1_CY&#39;)==0 then number_to_string(sum(result.&#39;t1_CY&#39;),&quot;#,###.#&quot;)  when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;Net Billings&quot;,&quot;Run Rate Volume&quot;] then number_to_string(sum(result.&#39;t1_CY&#39;)/1000000,&quot;$#,###.#&quot;)+&quot;M&quot; when result.&#39;Metric&#39; in [ &quot;T&amp;P Cost to Serve&quot;] then number_to_string(sum(result.&#39;t1_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;  when result.&#39;Metric&#39; in [&quot;Addressable Market &amp; Market Share %&quot;] then  number_to_string(sum(result.&#39;t1_CY&#39;)*100,&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Core Transactions / Requests&quot;] then  number_to_string(sum(result.&#39;t1_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot; when result.&#39;Metric&#39; in [&quot;GMV&quot;] then  number_to_string(sum(result.&#39;t1_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot;when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;t1_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;  else number_to_string(sum(result.&#39;t1_CY&#39;),&quot;#,###&quot;)  end) as &#39;t1_CY&#39;,(case when result.&#39;Metric&#39; in  [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;AEs&quot;,&quot;SEs&quot;,&quot;Co Prime&quot;,&quot;$10M+ Deals&quot;,&quot;$1M+ deals&quot;,&quot;Run Rate Volume&quot;, &quot;New Logos&quot;,&quot;Red Accounts&quot;,&quot;Marketing Events - World Tours &amp; Trailhead Live&quot;,&quot;Marketing Events - Other&quot;, &quot;EBCs&quot;,&quot;Customer Count&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;Core Transactions / Requests&quot;,&quot;Trailhead Badges&quot;,&quot;Trailblazers&quot;,&quot;Ranger&quot;, &quot;Lost Logos&quot;,&quot;Net Billings&quot;]then number_to_string(sum(result.&#39;YoY Q1 Growth&#39;)/100,&quot;0.0%&quot;) when last(result.&#39;Metric Group&#39;)==&quot;Metric Group&quot; then &quot;&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then&quot;&quot;  else number_to_string(sum(result.&#39;YoY Q1 Growth&#39;),&quot;0.0%&quot;)  end) as &#39;YoY Q1 Growth&#39;,(case when sum(result.&#39;t2_CY&#39;)==0 then number_to_string(sum(result.&#39;t2_CY&#39;),&quot;#,###.#&quot;) when result.&#39;Metric&#39; in[&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;Net Billings&quot;,&quot;Run Rate Volume&quot;] then number_to_string(sum(result.&#39;t2_CY&#39;)/1000000,&quot;$#,###.#&quot;)+&quot;M&quot; when result.&#39;Metric&#39; in [&quot;GMV&quot;] then  number_to_string(sum(result.&#39;t2_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot; when result.&#39;Metric&#39; in [ &quot;T&amp;P Cost to Serve&quot;] then number_to_string(sum(result.&#39;t2_CY&#39;),&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Addressable Market &amp; Market Share %&quot;] then  number_to_string(sum(result.&#39;t2_CY&#39;)*100,&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Core Transactions / Requests&quot;] then  number_to_string(sum(result.&#39;t2_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot;  when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;t2_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;  else number_to_string(sum(result.&#39;t2_CY&#39;),&quot;#,###&quot;)  end) as &#39;t2_CY&#39; , (case when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;AEs&quot;,&quot;SEs&quot;,&quot;Co Prime&quot;,&quot;$10M+ Deals&quot;,&quot;$1M+ deals&quot;,&quot;Run Rate Volume&quot;, &quot;New Logos&quot;,&quot;Red Accounts&quot;,&quot;Marketing Events - World Tours &amp; Trailhead Live&quot;,&quot;Marketing Events - Other&quot;, &quot;EBCs&quot;,&quot;Customer Count&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;Core Transactions / Requests&quot;,&quot;Trailhead Badges&quot;,&quot;Trailblazers&quot;,&quot;Ranger&quot;, &quot;Lost Logos&quot;,&quot;Net Billings&quot;] then number_to_string(sum(result.&#39;YoY Q2 Growth&#39;)/100,&quot;0.0%&quot;)when last(result.&#39;Metric Group&#39;)==&quot;Metric Group&quot; then &quot;&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then&quot;&quot;  else number_to_string(sum(result.&#39;YoY Q2 Growth&#39;),&quot;0.0%&quot;)  end) as &#39;YoY Q2 Growth&#39;,(case when sum(result.&#39;t3_CY&#39;)==0 then number_to_string(sum(result.&#39;t3_CY&#39;),&quot;#,###.#&quot;)  when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;Net Billings&quot;,&quot;Run Rate Volume&quot;] then number_to_string(sum(result.&#39;t3_CY&#39;)/1000000,&quot;$#,###.#&quot;)+&quot;M&quot;  when result.&#39;Metric&#39; in [&quot;GMV&quot;] then  number_to_string(sum(result.&#39;t3_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot; when result.&#39;Metric&#39; in [ &quot;T&amp;P Cost to Serve&quot;] then number_to_string(sum(result.&#39;t3_CY&#39;),&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Addressable Market &amp; Market Share %&quot;] then  number_to_string(sum(result.&#39;t3_CY&#39;)*100,&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Core Transactions / Requests&quot;] then  number_to_string(sum(result.&#39;t3_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot; when  result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;t3_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;  else  number_to_string(sum(result.&#39;t3_CY&#39;),&quot;#,###&quot;)  end) as  &#39;t3_CY&#39;,  (case when result.&#39;Metric&#39; in  [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;AEs&quot;,&quot;SEs&quot;,&quot;Co Prime&quot;,&quot;$10M+ Deals&quot;,&quot;$1M+ deals&quot;,&quot;Run Rate Volume&quot;, &quot;New Logos&quot;,&quot;Red Accounts&quot;,&quot;Marketing Events - World Tours &amp; Trailhead Live&quot;,&quot;Marketing Events - Other&quot;, &quot;EBCs&quot;,&quot;Customer Count&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;Core Transactions / Requests&quot;,&quot;Trailhead Badges&quot;,&quot;Trailblazers&quot;,&quot;Ranger&quot;, &quot;Lost Logos&quot;,&quot;Net Billings&quot;] then number_to_string(sum(result.&#39;YoY Q3 Growth&#39;)/100,&quot;0.0%&quot;) when last(result.&#39;Metric Group&#39;)==&quot;Metric Group&quot; then &quot;&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then&quot;&quot; else number_to_string(sum(result.&#39;YoY Q3 Growth&#39;),&quot;0.0%&quot;)  end) as &#39;YoY Q3 Growth&#39;,(case when sum(result.&#39;t4_CY&#39;)==0 then number_to_string(sum(result.&#39;t4_CY&#39;),&quot;#,###.#&quot;) when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;Net Billings&quot;,&quot;Run Rate Volume&quot;] then number_to_string(sum(result.&#39;t4_CY&#39;)/1000000,&quot;$#,###.#&quot;)+&quot;M&quot; when result.&#39;Metric&#39; in [&quot;GMV&quot;] then  number_to_string(sum(result.&#39;t4_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot;  when result.&#39;Metric&#39; in [ &quot;T&amp;P Cost to Serve&quot;] then number_to_string(sum(result.&#39;t4_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;when result.&#39;Metric&#39; in [&quot;Addressable Market &amp; Market Share %&quot;] then  number_to_string(sum(result.&#39;t4_CY&#39;)*100,&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Core Transactions / Requests&quot;] then  number_to_string(sum(result.&#39;t4_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot;  when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;t4_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;  else number_to_string(sum(result.&#39;t4_CY&#39;),&quot;#,###&quot;)  end) as &#39;t4_CY&#39;,  (case when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;AEs&quot;,&quot;SEs&quot;,&quot;Co Prime&quot;,&quot;$10M+ Deals&quot;,&quot;$1M+ deals&quot;,&quot;Run Rate Volume&quot;, &quot;New Logos&quot;,&quot;Red Accounts&quot;,&quot;Marketing Events - World Tours &amp; Trailhead Live&quot;,&quot;Marketing Events - Other&quot;, &quot;EBCs&quot;,&quot;Customer Count&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;Core Transactions / Requests&quot;,&quot;Trailhead Badges&quot;,&quot;Trailblazers&quot;,&quot;Ranger&quot;, &quot;Lost Logos&quot;,&quot;Net Billings&quot;]then number_to_string(sum(result.&#39;YoY Q4 Growth&#39;)/100,&quot;0.0%&quot;)when last(result.&#39;Metric Group&#39;)==&quot;Metric Group&quot; then &quot;&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then&quot;&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then&quot;&quot;  else number_to_string(sum(result.&#39;YoY Q4 Growth&#39;),&quot;0.0%&quot;)  end) as  &#39;YoY Q4 Growth&#39;,(case  when sum(result.&#39;YTD_CY&#39;)==0 then number_to_string(sum(result.&#39;YTD_CY&#39;),&quot;#,###.#&quot;)  when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;Net Billings&quot;,&quot;Run Rate Volume&quot;] then number_to_string(sum(result.&#39;YTD_CY&#39;)/1000000,&quot;$#,###.#&quot;)+&quot;M&quot;  when result.&#39;Metric&#39; in [&quot;GMV&quot;] then  number_to_string(sum(result.&#39;YTD_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot;  when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;YTD_CY&#39;),&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Addressable Market &amp; Market Share %&quot;] then  number_to_string(sum(result.&#39;YTD_CY&#39;)*100,&quot;#.0&quot;)+&quot;%&quot;  when result.&#39;Metric&#39; in [ &quot;T&amp;P Cost to Serve&quot;] then number_to_string(sum(result.&#39;YTD_CY&#39;),&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Core Transactions / Requests&quot;] then number_to_string(sum(result.&#39;YTD_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;YTD_CY&#39;),&quot;#,###&quot;)+&quot;%&quot;  else number_to_string(sum(result.&#39;YTD_CY&#39;),&quot;#,###&quot;)  end) as  &#39;YTD_CY&#39;,  (case when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;AEs&quot;,&quot;SEs&quot;,&quot;Co Prime&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;$10M+ Deals&quot;,&quot;$1M+ deals&quot;,&quot;Run Rate Volume&quot;, &quot;New Logos&quot;,&quot;Red Accounts&quot;,&quot;Marketing Events - World Tours &amp; Trailhead Live&quot;,&quot;Marketing Events - Other&quot;, &quot;EBCs&quot;,&quot;Customer Count&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;Core Transactions / Requests&quot;,&quot;Trailhead Badges&quot;,&quot;Trailblazers&quot;,&quot;Ranger&quot;, &quot;Lost Logos&quot;,&quot;Net Billings&quot;] then number_to_string(sum(result.&#39;YoY YTD Growth&#39;)/100,&quot;0.0%&quot;) when last(result.&#39;Metric Group&#39;)==&quot;Metric Group&quot; then &quot;&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then&quot;&quot;  else number_to_string(sum(result.&#39;YoY YTD Growth&#39;),&quot;0.0%&quot;)  end) as  &#39;YoY YTD Growth&#39;,last(Comment.&#39;Comment&#39;) as &#39;Comment&#39;;\nresult = order result by &#39;SortOrder&#39; asc;\nresult = foreach result generate &#39;Metric Group&#39;, &#39;Metric&#39;; ",
        "receiveFacet": true,
        "selectMode": "single",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart",
          "visualizationType": "hbar"
        }
      },
      "DASHBOARD_PARAMETER": {
        "broadcastFacet": true,
        "label": "Quarter",
        "selectMode": "singlerequired",
        "start": "{&quot;display&quot;:[&quot;CURRENT_1&quot;]}",
        "type": "staticflex",
        "values": [
          "{&quot;display&quot;:&quot;CURRENT_1&quot;,&quot;YTD_ACV&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_AOV&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_ATT&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_ATT_RATE&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_PIPEGEN&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_HC&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_SW&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_CC&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_CC_SITES&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_DEALS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_LOGO&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_LOST_LOGO&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_REDACCOUNTS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_T_P&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_TRANSACTION&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_AVAILABILITY&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_EVENTS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_OTHER&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_EBC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_CUSTOMER&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_SHARE&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_CSG&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_BADGES&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_TRAILBLAZER&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_RANGER&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_HEROKU&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_PRODUCTIVITY&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_ISV&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_ACV&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_AOV&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_ATT&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_PIPEGEN&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_HC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_SW&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_CC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_CC_SITES&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_DEALS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_LOGO&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_LOST_LOGO&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_REDACCOUNTS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_T_P&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_TRANSACTION&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_AVAILABILITY&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_EVENTS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_OTHER&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_EBC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_CUSTOMER&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_SHARE&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_CSG&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_BADGES&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_TRAILBLAZER&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_RANGER&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_HEROKU&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_PRODUCTIVITY&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_ISV&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;}",
          "{&quot;display&quot;:&quot;Quarter_1&quot;,&quot;YTD_ACV&quot;:&quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;February&#92;&quot;,&#92;&quot;March&#92;&quot;]&quot;,&quot;YTD_AOV&quot;:&quot;[&#92;&quot;April&#92;&quot;]&quot;,&quot;YTD_ATT&quot;:&quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;February&#92;&quot;,&#92;&quot;March&#92;&quot;]&quot;,&quot;YTD_PIPEGEN&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;YTD_HC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;YTD_SW&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;YTD_CC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;YTD_CC_SITES&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;YTD_DEALS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;YTD_LOGO&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;YTD_REDACCOUNTS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;YTD_T_P&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;YTD_TRANSACTION&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;YTD_AVAILABILITY&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;YTD_EVENTS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;YTD_OTHER&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;YTD_EBC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;YTD_CUSTOMER&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;YTD_SHARE&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;YTD_CSG&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;Quarters_ACV&quot;:&quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;February&#92;&quot;,&#92;&quot;March&#92;&quot;]&quot;,&quot;Quarters_AOV&quot;:&quot;[&#92;&quot;April&#92;&quot;]&quot;,&quot;Quarters_ATT&quot;:&quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;February&#92;&quot;,&#92;&quot;March&#92;&quot;]&quot;,&quot;Quarters_PIPEGEN&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;Quarters_HC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;Quarters_SW&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;Quarters_CC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;Quarters_CC_SITES&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;Quarters_DEALS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;Quarters_LOGO&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;Quarters_REDACCOUNTS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;Quarters_T_P&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;Quarters_TRANSACTION&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;Quarters_AVAILABILITY&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;Quarters_EVENTS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;Quarters_OTHER&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;Quarters_EBC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;Quarters_CUSTOMER&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;Quarters_SHARE&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;Quarters_CSG&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;}",
          "{&quot;display&quot;:&quot;Quarter_2&quot;,&quot;YTD_ACV&quot;:&quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;February&#92;&quot;,&#92;&quot;July&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;May&#92;&quot;]&quot;,&quot;YTD_AOV&quot;:&quot;[&#92;&quot;July&#92;&quot;]&quot;,&quot;YTD_ATT&quot;:&quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;February&#92;&quot;,&#92;&quot;July&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;May&#92;&quot;]&quot;,&quot;YTD_PIPEGEN&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_HC&quot;:&quot;[&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_SW&quot;:&quot;[&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_CC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_CC_SITES&quot;:&quot;[&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_DEALS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_LOGO&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_REDACCOUNTS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_T_P&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_TRANSACTION&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_AVAILABILITY&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_EVENTS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_OTHER&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_EBC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_CUSTOMER&quot;:&quot;[&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_SHARE&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;YTD_CSG&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Quarters_ACV&quot;:&quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;February&#92;&quot;,&#92;&quot;July&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;May&#92;&quot;]&quot;,&quot;Quarters_AOV&quot;:&quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;July&#92;&quot;]&quot;,&quot;Quarters_ATT&quot;:&quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;February&#92;&quot;,&#92;&quot;July&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;May&#92;&quot;]&quot;,&quot;Quarters_PIPEGEN&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Quarters_HC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Quarters_SW&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Quarters_CC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Quarters_CC_SITES&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Quarters_DEALS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Quarters_LOGO&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Quarters_REDACCOUNTS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Quarters_T_P&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Quarters_TRANSACTION&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Quarters_AVAILABILITY&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Quarters_EVENTS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Quarters_OTHER&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Quarters_EBC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Quarters_CUSTOMER&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Quarters_SHARE&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Quarters_CSG&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;]&quot;}",
          "{&quot;display&quot;:&quot;Quarter_3&quot;,&quot;YTD_ACV&quot;:&quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;February&#92;&quot;,&#92;&quot;July&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;May&#92;&quot;,&#92;&quot;August&#92;&quot;,&#92;&quot;September&#92;&quot;,&#92;&quot;October&#92;&quot;]&quot;,&quot;YTD_AOV&quot;:&quot;[&#92;&quot;October&#92;&quot;]&quot;,&quot;YTD_ATT&quot;:&quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;February&#92;&quot;,&#92;&quot;July&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;May&#92;&quot;,&#92;&quot;August&#92;&quot;,&#92;&quot;September&#92;&quot;,&#92;&quot;October&#92;&quot;]&quot;,&quot;YTD_PIPEGEN&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_HC&quot;:&quot;[&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_SW&quot;:&quot;[&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_CC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_CC_SITES&quot;:&quot;[&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_DEALS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_LOGO&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_REDACCOUNTS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_T_P&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_TRANSACTION&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_AVAILABILITY&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_EVENTS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_OTHER&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_EBC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_CUSTOMER&quot;:&quot;[&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_SHARE&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;YTD_CSG&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;Quarters_ACV&quot;:&quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;February&#92;&quot;,&#92;&quot;July&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;May&#92;&quot;,&#92;&quot;August&#92;&quot;,&#92;&quot;September&#92;&quot;,&#92;&quot;October&#92;&quot;]&quot;,&quot;Quarters_AOV&quot;:&quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;July&#92;&quot;,&#92;&quot;October&#92;&quot;]&quot;,&quot;Quarters_ATT&quot;:&quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;February&#92;&quot;,&#92;&quot;July&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;May&#92;&quot;,&#92;&quot;August&#92;&quot;,&#92;&quot;September&#92;&quot;,&#92;&quot;October&#92;&quot;]&quot;,&quot;Quarters_PIPEGEN&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;Quarters_HC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;Quarters_SW&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;Quarters_CC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;Quarters_CC_SITES&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;Quarters_DEALS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;Quarters_LOGO&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;Quarters_REDACCOUNTS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;Quarters_T_P&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;Quarters_TRANSACTION&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;Quarters_AVAILABILITY&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;Quarters_EVENTS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;Quarters_OTHER&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;Quarters_EBC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;Quarters_CUSTOMER&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;Quarters_SHARE&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;Quarters_CSG&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;}",
          "{&quot;display&quot;:&quot;Quarter_4&quot;,&quot;YTD_ACV&quot;:&quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;February&#92;&quot;,&#92;&quot;July&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;May&#92;&quot;,&#92;&quot;August&#92;&quot;,&#92;&quot;September&#92;&quot;,&#92;&quot;October&#92;&quot;,&#92;&quot;November&#92;&quot;,&#92;&quot;December&#92;&quot;,&#92;&quot;January&#92;&quot;]&quot;,&quot;YTD_AOV&quot;:&quot;[&#92;&quot;January&#92;&quot;]&quot;,&quot;YTD_ATT&quot;:&quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;February&#92;&quot;,&#92;&quot;July&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;May&#92;&quot;,&#92;&quot;August&#92;&quot;,&#92;&quot;September&#92;&quot;,&#92;&quot;October&#92;&quot;,&#92;&quot;November&#92;&quot;,&#92;&quot;December&#92;&quot;,&#92;&quot;January&#92;&quot;]&quot;,&quot;YTD_PIPEGEN&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_HC&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_SW&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_CC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_CC_SITES&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_DEALS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_LOGO&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_REDACCOUNTS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_T_P&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_TRANSACTION&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_AVAILABILITY&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_EVENTS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_OTHER&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_EBC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_CUSTOMER&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_SHARE&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;YTD_CSG&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_ACV&quot;:&quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;February&#92;&quot;,&#92;&quot;July&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;May&#92;&quot;,&#92;&quot;August&#92;&quot;,&#92;&quot;September&#92;&quot;,&#92;&quot;October&#92;&quot;,&#92;&quot;November&#92;&quot;,&#92;&quot;December&#92;&quot;,&#92;&quot;January&#92;&quot;]&quot;,&quot;Quarters_AOV&quot;:&quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;July&#92;&quot;,&#92;&quot;October&#92;&quot;,&#92;&quot;January&#92;&quot;]&quot;,&quot;Quarters_ATT&quot;:&quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;February&#92;&quot;,&#92;&quot;July&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;May&#92;&quot;,&#92;&quot;August&#92;&quot;,&#92;&quot;September&#92;&quot;,&#92;&quot;October&#92;&quot;,&#92;&quot;November&#92;&quot;,&#92;&quot;December&#92;&quot;,&#92;&quot;January&#92;&quot;]&quot;,&quot;Quarters_PIPEGEN&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_HC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_SW&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_CC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_CC_SITES&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_DEALS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_LOGO&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_REDACCOUNTS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_T_P&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_TRANSACTION&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_AVAILABILITY&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_EVENTS&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_OTHER&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_EBC&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_CUSTOMER&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_SHARE&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Quarters_CSG&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;}"
        ]
      },
      "Quarter_1": {
        "broadcastFacet": true,
        "label": "Quarter",
        "selectMode": "singlerequired",
        "start": "{&quot;display&quot;:[&quot;Q3&quot;]}",
        "type": "staticflex",
        "values": [
          "{&quot;display&quot;:&quot;all&quot;,&quot;value&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;,&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;value_YTD&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;value_YTD_ATT_Rate&quot;:&quot;[&#92;&quot;&#92;&quot;]&quot;,&quot;Metric_Productivity&quot;:&quot;Productivity_Annual&quot;}",
          "{&quot;display&quot;:&quot;Q1&quot;,&quot;value&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;value_YTD&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;value_YTD_ATT_Rate&quot;:&quot;[&#92;&quot;FYQ1&#92;&quot;]&quot;,&quot;Metric_Productivity&quot;:&quot;Productivity&quot;}",
          "{&quot;display&quot;:&quot;Q2&quot;,&quot;value&quot;:&quot;[&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;value_YTD&quot;:&quot;[&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;value_YTD_ATT_Rate&quot;:&quot;[&#92;&quot;FYQ2&#92;&quot;]&quot;,&quot;Metric_Productivity&quot;:&quot;Productivity&quot;}",
          "{&quot;display&quot;:&quot;Q3&quot;,&quot;value&quot;:&quot;[&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;value_YTD&quot;:&quot;[&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;value_YTD_ATT_Rate&quot;:&quot;[&#92;&quot;FYQ3&#92;&quot;]&quot;,&quot;Metric_Productivity&quot;:&quot;Productivity&quot;}",
          "{&quot;display&quot;:&quot;Q4&quot;,&quot;value&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;value_YTD&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;value_YTD_ATT_Rate&quot;:&quot;[&#92;&quot;FYQ4&#92;&quot;]&quot;,&quot;Metric_Productivity&quot;:&quot;Productivity&quot;}"
        ]
      },
      "lens_5_14": {
        "broadcastFacet": true,
        "groups": [],
        "label": "lens_5",
        "numbers": [],
        "query": "\nnMasterHierarchy = load &quot;Master_Hierarchy&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;Level_1&#39; in [&quot;Marketing Cloud &amp; Marketing Platform&quot;, &quot;Other&quot;, &quot;Quip&quot;, &quot;Sales Cloud &amp; Sales Platform&quot;, &quot;Salesforce Platform(s)&quot;, &quot;Service Cloud &amp; Service Cloud Platform&quot;, &quot;Commerce Cloud&quot;, &quot;Success Cloud&quot;, &quot;Premier (a la carte)&quot;, &quot;N/A&quot;];\nMasterHierarchy = group MasterHierarchy by all;\n-------------------------------------------------------------------------------------------------LOAD Comment--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nComment = load &quot;APM_Overview_Comment_5YRS&quot;;\n-------------------------------------------------------------------------------------------------LOAD ACV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nACV = load &quot;APM_CPM&quot;;\nACV = filter ACV by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_ACV&quot;).asString()}});\n ACV = filter ACV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nACV = group ACV by  (&#39;Quarter&#39;, &#39;Fiscal_Year&#39;);\nACV = foreach ACV generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;ACV&#39;) as &#39;ACV&#39;;\n t1_CYACV = filter ACV by   (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYACV = filter ACV by   (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYACV = filter ACV by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYACV = filter ACV by   (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYACV = filter ACV by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYACV = filter ACV by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYACV = filter ACV by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYACV = filter ACV by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYACV = filter ACV by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYACV = filter ACV by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD AOV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nAOV = load &quot;APM_CPM&quot;;\nAOV = filter AOV by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_AOV&quot;).asString()}});\nAOV = foreach AOV generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;AOV&#39;) as &#39;AOV&#39;;\nt1_CYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;); \nt1_PYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_CYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD ATT--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nAttrition = load &quot;APM_CPM&quot;;\nAttrition = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_ATT&quot;).asString()}});\nAttrition = filter Attrition by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nAttrition = foreach Attrition generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Attrition&#39;) * -1 as &#39;Attrition_Product&#39;, sum(&#39;Attrition_Rate&#39;) * -1 as &#39;Attrition_Rate&#39;;\nt1_CYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYATT = filter Attrition by(&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt1_CYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYATTRATE = filter Attrition by(&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD ATTRate --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nAttrition_Rate = load &quot;APM_CPM&quot;;\nAttrition_Rate = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_ATT&quot;).asString()}});\nAttrition_Rate = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}});\nAttrition_Rate = foreach Attrition_Rate generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Attrition&#39;) * -1 as &#39;Attrition_Product&#39;, sum(&#39;Attrition_Rate&#39;) * -1 as &#39;Attrition_Rate&#39;;\nt1_CYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYATTRATE = filter Attrition_Rate by(&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD Pipegen--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nPipegen = load &quot;APM_CPM&quot;;\nPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_PIPEGEN&quot;).asString()}});\nPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nPipegen = foreach Pipegen generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;Pipegen&#39;) as &#39;Pipegen&#39;;\nt1_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYPipegen = filter Pipegen by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD HC--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nHC = load &quot;APM_CPM&quot;;\nHC = filter HC by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_HC&quot;).asString()}});\nHC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nHC = foreach HC generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;SE&#39;) as &#39;SE&#39;, sum(&#39;AE&#39;) as &#39;AE&#39;, sum(&#39;Co_Prime&#39;) as &#39;Co_Prime&#39;;\nt0_CYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_HC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_CYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt0_PYHC = filter HC by  (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt1_PYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYHC = filter HC by  (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYHC = filter HC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYHC = filter HC by  (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYHC = filter HC by  (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYHC = filter HC by  (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt1_PY_2_HC = filter HC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_00&quot;).asString()}}&quot;);\nt2_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt3_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt4_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nYTD_PY_2_HC = filter HC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD SW--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nSW = load &quot;APM_CPM&quot;;\nSW = filter SW by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_SW&quot;).asString()}});\nSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nSW = foreach SW generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;SWE&#39;) as &#39;SWE&#39;;\nt1_CYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD INFRA--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nINFRA = load &quot;APM_CPM&quot;;\nINFRA = filter INFRA by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_SW&quot;).asString()}});\nINFRA = filter INFRA by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nINFRA = foreach INFRA generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;INFRA&#39;) as &#39;INFRA&#39;;\nt1_CYINFRA = filter INFRA by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYINFRA = filter INFRA by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYINFRA = filter INFRA by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYINFRA = filter INFRA by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYINFRA = filter INFRA by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYINFRA = filter INFRA by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYINFRA = filter INFRA by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYINFRA = filter INFRA by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYINFRA = filter INFRA by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYINFRA = filter INFRA by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD CC--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nCC = load &quot;APM_CPM&quot;;\n CC = filter CC by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_CC&quot;).asString()}});\nCC = filter CC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nCC = foreach CC generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;GMV&#39;) as &#39;GMV&#39;, sum(&#39;GMV&#39;) as &#39;GMV_Touched&#39;,sum(&#39;Sites&#39;) as &#39;Sites&#39;,sum(&#39;Sites&#39;) as &#39;Sites_Touched&#39;;\nt1_CYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYCC = filter CC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYCC = filter CC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYCC = filter CC by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nYTD_CYCC_Sites = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYCC_Sites = filter CC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD DEALS--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nDEALS = load &quot;APM_CPM&quot;;\nDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_HC&quot;).asString()}});\nDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nDEALS = foreach DEALS generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;X10M_Deals&#39;) as &#39;X10M_Deals&#39;, sum(&#39;X10M&#39;) as &#39;X10M&#39;, sum(&#39;Runrate_Volume&#39;) as &#39;Runrate_Volume&#39;;\nt1_CYDEALS = filter DEALS by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYDEALS = filter DEALS by  (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYDEALS = filter DEALS by  (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYDEALS = filter DEALS by  (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYDEALS = filter DEALS by  (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYDEALS = filter DEALS by  (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYDEALS = filter DEALS by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYDEALS = filter DEALS by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYDEALS = filter DEALS by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYDEALS = filter DEALS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD LOGO--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nLOGO = load &quot;APM_CPM&quot;;\nLOGO = filter LOGO by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_LOGO&quot;).asString()}});\nLOGO = filter LOGO by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nLOGO = foreach LOGO generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;New_Logos&#39;) as &#39;New_Logos&#39;;\nt1_CYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYLOGO = filter LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYLOGO = filter LOGO by (&#39;Quarter&#39; in{{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;value&quot;).asString()}}&quot;);\nYTD_PYLOGO = filter LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD LOST_LOGO--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nLOST_LOGO = load &quot;APM_CPM&quot;;\nLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_LOST_LOGO&quot;).asString()}});;\nLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nLOST_LOGO = foreach LOST_LOGO generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;Lost_Logo_Count&#39;) as &#39;Lost_Logos&#39;;\nt1_CYLOST_LOGO = filter LOST_LOGO by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYLOST_LOGO = filter LOST_LOGO by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD REDACCOUNTS--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nREDACCOUNTS = load &quot;APM_CPM&quot;;\nREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_REDACCOUNTS&quot;).asString()}});\nREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\n REDACCOUNTS = foreach REDACCOUNTS generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Red_Accounts&#39;) as &#39;Red_Accounts&#39;; \nt1_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD T_P--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\n\nT_P = load &quot;APM_CPM&quot;;\nT_P = foreach T_P generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;CTS&#39;)*100 as &#39;CTS&#39;;\nt1_CYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYT_P = filter T_P by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_T_P&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYT_P = filter T_P by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYT_P = filter T_P by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYT_P = filter T_P by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD TRANSACTION--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\n\nTRANSACTION = load &quot;APM_CPM&quot;;\n TRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_TRANSACTION&quot;).asString()}});\nTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nTRANSACTION = foreach TRANSACTION generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;Transactions_Core&#39;) as &#39;Transactions&#39;;\nt1_CYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;); \n-------------------------------------------------------------------------------------------------LOAD AVAILABILITY--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nAVAILABILITY = load &quot;APM_CPM&quot;;\nAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nAVAILABILITY = foreach AVAILABILITY generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;Availability&#39;)*100 as &#39;Availability&#39; ;\nt1_CYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt4_CYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD EVENTS--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\nEVENTS = load &quot;APM_CPM&quot;;EVENTS  = filter EVENTS by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_EVENTS&quot;).asString()}});\n EVENTS = filter EVENTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nEVENTS = foreach EVENTS generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;World_Tours_Trailhead&#39;) as &#39;World_Tours_Trailhead&#39;;\nt1_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYEVENTS = filter EVENTS by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYEVENTS = filter EVENTS by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD OTHER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\n\nOTHER = load &quot;APM_CPM&quot;;OTHER  = filter OTHER by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_OTHER&quot;).asString()}});\n OTHER = filter OTHER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nOTHER = foreach OTHER generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Marketing_Events_Other&#39;) as &#39;Marketing_Events_Other&#39;;\nt1_CYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYOTHER = filter OTHER by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD EBC--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nEBC = load &quot;APM_CPM&quot;;EBC  = filter EBC by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_EBC&quot;).asString()}});\n EBC = filter EBC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nEBC = foreach EBC generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;EBC_s&#39;) as &#39;EBC_s&#39;;\nt1_CYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD Dreamforce EBCD--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nEBCD = load &quot;APM_CPM&quot;;EBCD  = filter EBCD by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_EBC&quot;).asString()}});\n EBCD = filter EBCD by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nEBCD = foreach EBCD generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Dreamforce_EBC&#39;) as &#39;EBC_Dreamforce&#39;;\nt1_CYEBCD = filter EBCD by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYEBCD = filter EBCD by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYEBCD = filter EBCD by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD CUSTOMER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\nCUSTOMER = load &quot;APM_CPM&quot;;CUSTOMER  = filter CUSTOMER by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_CUSTOMER&quot;).asString()}});\n CUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nCUSTOMER = foreach CUSTOMER generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Customer&#39;) as &#39;Customer&#39;;\nt1_CYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYCUSTOMER = filter CUSTOMER by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYCUSTOMER = filter CUSTOMER by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_CUSTOMER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD SHARE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nSHARE = load &quot;APM_CPM&quot;;SHARE  = filter SHARE by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_SHARE&quot;).asString()}});\nSHARE = foreach SHARE generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;TAM&#39;) as &#39;TAM&#39;;\nt1_CYSHARE = filter SHARE by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYSHARE = filter SHARE by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYSHARE = filter SHARE by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYSHARE = filter SHARE by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYSHARE = filter SHARE by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYSHARE = filter SHARE by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYSHARE = filter SHARE by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYSHARE = filter SHARE by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYSHARE = filter SHARE by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYSHARE = filter SHARE by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD CSG--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nCSG = load &quot;APM_CPM&quot;;CSG  = filter CSG by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_CSG&quot;).asString()}});\n CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nCSG = foreach CSG generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;CSM_Headcount_Headcount&#39;) as &#39;CSM_Headcount&#39;,sum(&#39;PSM_Headcount&#39;) as &#39;PSM_Headcount&#39;;\nt1_CYCSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYCSG = filter CSG by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYCSG = filter CSG by(&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYCSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYCSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYCSG = filter CSG by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYCSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYCSG = filter CSG by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYCSG = filter CSG by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYCSG = filter CSG by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);t1_PY_2_CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_00&quot;).asString()}}&quot;);\nt2_PY_2_CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt3_PY_2_CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt4_PY_2_CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nYTD_PY_2_CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD TRailhead Badges--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\n BADGES = load &quot;APM_CPM&quot;;BADGES  = filter BADGES by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_BADGES&quot;).asString()}});\n BADGES = filter BADGES by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nBADGES = foreach BADGES generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Trailhead_Badges&#39;) as &#39;Trailhead_Badges&#39;;\nt1_CYBADGES = filter BADGES by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYBADGES = filter BADGES by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYBADGES = filter BADGES by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYBADGES = filter BADGES by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYBADGES = filter BADGES by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYBADGES = filter BADGES by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYBADGES = filter BADGES by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYBADGES = filter BADGES by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYBADGES = filter BADGES by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYBADGES = filter BADGES by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD TRailhead TRAILBLAZER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nTRAILBLAZER = load &quot;APM_CPM&quot;;TRAILBLAZER  = filter TRAILBLAZER by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_TRAILBLAZER&quot;).asString()}});\n TRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nTRAILBLAZER = foreach TRAILBLAZER generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Trailblazers&#39;) as &#39;Trailblazers&#39;;\nt1_CYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYTRAILBLAZER = filter TRAILBLAZER by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYTRAILBLAZER = filter TRAILBLAZER by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYTRAILBLAZER = filter TRAILBLAZER by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD TRailhead Ranger--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nRANGER = load &quot;APM_CPM&quot;;RANGER  = filter RANGER by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_RANGER&quot;).asString()}});\n RANGER = filter RANGER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nRANGER = foreach RANGER generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Ranger&#39;) as &#39;Ranger&#39;;\nt1_CYRANGER = filter RANGER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYRANGER = filter RANGER by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYRANGER = filter RANGER by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYRANGER = filter RANGER by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYRANGER = filter RANGER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYRANGER = filter RANGER by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYRANGER = filter RANGER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYRANGER = filter RANGER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYRANGER = filter RANGER by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYRANGER = filter RANGER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD HEROKU--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nHEROKU = load &quot;APM_CPM&quot;;HEROKU  = filter HEROKU by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_HEROKU&quot;).asString()}});\n HEROKU = filter HEROKU by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nHEROKU = foreach HEROKU generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Net_Billings&#39;) as &#39;Net_Billings&#39;;\nt1_CYHEROKU = filter HEROKU by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYHEROKU = filter HEROKU by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYHEROKU = filter HEROKU by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYHEROKU = filter HEROKU by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYHEROKU = filter HEROKU by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYHEROKU = filter HEROKU by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYHEROKU = filter HEROKU by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYHEROKU = filter HEROKU by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYHEROKU = filter HEROKU by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYHEROKU = filter HEROKU by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD Productivity--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nPRODUCTIVITY = load &quot;APM_CPM&quot;;PRODUCTIVITY  = filter PRODUCTIVITY by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_PRODUCTIVITY&quot;).asString()}});\n PRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nPRODUCTIVITY = foreach PRODUCTIVITY generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;{{cell(Quarter_1.selection,0,&quot;Metric_Productivity&quot;).asString()}}&#39;) as &#39;Productivity&#39;;\nt1_CYPRODUCTIVITY = filter PRODUCTIVITY by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);;\n-------------------------------------------------------------------------------------------------LOAD ISV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nISV = load &quot;APM_CPM&quot;;ISV  = filter ISV by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_ISV&quot;).asString()}});\n ISV = filter ISV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nISV = foreach ISV generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;ACV_Take_Off&#39;) as &#39;ACV_Take_Off&#39;,sum(&#39;ACV_Landing_Performance&#39;) as &#39;ACV_Landing_Performance&#39;;\nt1_CYISV = filter ISV by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYISV = filter ISV by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYISV = filter ISV by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYISV = filter ISV by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYISV = filter ISV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYISV = filter ISV by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYISV = filter ISV by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYISV = filter ISV by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYISV = filter ISV by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYISV = filter ISV by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nn-------------------------------------------------------------------------------------------------RESULT ACV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\n\n\nresult_ACV = group t1_CYACV by all full, t2_CYACV by all full, t3_CYACV by all full, t4_CYACV by all full, t1_PYACV by all full, t2_PYACV by all full, t3_PYACV by all full, t4_PYACV by all full, YTD_CYACV by all full, YTD_PYACV by all;\nresult_ACV = foreach result_ACV generate &quot;Financial Measures&quot; as &#39;Metric Group&#39;, &quot;ACV&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYACV.&#39;ACV&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYACV.&#39;ACV&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYACV.&#39;ACV&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYACV.&#39;ACV&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYACV.&#39;ACV&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Million&quot; as &#39;Unit&#39;, &quot;A1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT AOV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nresult_AOV = group t1_CYAOV by all full, t2_CYAOV by all full, t3_CYAOV by all full, t4_CYAOV by all full, t1_PYAOV by all full, t2_PYAOV by all full, t3_PYAOV by all full, t4_PYAOV by all full,YTD_CYAOV by all full, YTD_PYAOV by all;\nresult_AOV = foreach result_AOV generate &quot;Financial Measures&quot; as &#39;Metric Group&#39;, &quot;AOV&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;, coalesce(sum(t1_CYAOV.&#39;AOV&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYAOV.&#39;AOV&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYAOV.&#39;AOV&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYAOV.&#39;AOV&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYAOV.&#39;AOV&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYAOV.&#39;AOV&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYAOV.&#39;AOV&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYAOV.&#39;AOV&#39;), 0) as &#39;t4_PY&#39;,  coalesce(sum(YTD_CYAOV.&#39;AOV&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYAOV.&#39;AOV&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(t1_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(t1_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(t2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(t2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(t3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(t3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(t4_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(t4_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(YTD_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(YTD_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;,&quot;Million&quot; as &#39;Unit&#39;,&quot;A2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT ATT--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nresult_ATT = group t1_CYATT by all full, t2_CYATT by all full, t3_CYATT by all full, t4_CYATT by all full, t1_PYATT by all full, t2_PYATT by all full, t3_PYATT by all full, t4_PYATT by all full, YTD_CYATT by all full,YTD_PYATT by all full, t1_CYATTRATE by all full, t2_CYATTRATE by all full, t3_CYATTRATE by all full, t4_CYATTRATE by all full, t1_PYATTRATE by all full, t2_PYATTRATE by all full, t3_PYATTRATE by all full, t4_PYATTRATE by all full, YTD_CYATTRATE by all full,YTD_PYATTRATE by all;\nresult_ATT = foreach result_ATT generate &quot;Financial Measures&quot; as &#39;Metric Group&#39;, &quot;ATT&quot; as &#39;Metric&#39;,&quot;TTM&quot; as &#39;Rate Measure&#39;, coalesce(sum(t1_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYATT.&#39;Attrition_Product&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYATT.&#39;Attrition_Product&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYATT.&#39;Attrition_Product&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYATT.&#39;Attrition_Product&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYATTRATE.&#39;Attrition_Product&#39;), 0) as &#39;YTD_PY&#39;,coalesce(sum(t1_CYATTRATE.&#39;Attrition_Rate&#39;), 0)  * 100 as &#39;YoY Q1 Growth&#39;,coalesce(sum(t2_CYATTRATE.&#39;Attrition_Rate&#39;), 0)  * 100 as &#39;YoY Q2 Growth&#39;,coalesce(sum(t3_CYATTRATE.&#39;Attrition_Rate&#39;), 0) * 100 as &#39;YoY Q3 Growth&#39;,coalesce(sum(t4_CYATTRATE.&#39;Attrition_Rate&#39;), 0)* 100 as &#39;YoY Q4 Growth&#39;,coalesce(sum(YTD_CYATTRATE.&#39;Attrition_Rate&#39;), 0)* 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;,&quot;Million&quot; as &#39;Unit&#39;,&quot;A3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT Pipegen--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nresult_Pipegen = group t1_CYPipegen by all full, t2_CYPipegen by all full, t3_CYPipegen by all full, t4_CYPipegen by all full, t1_PYPipegen by all full, t2_PYPipegen by all full, t3_PYPipegen by all full, t4_PYPipegen by all full, YTD_CYPipegen by all full,YTD_PYPipegen by all;\nresult_Pipegen = foreach result_Pipegen generate &quot;PipeGen Measures&quot; as &#39;Metric Group&#39;, &quot;Pipeline&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYPipegen.&#39;Pipegen&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYPipegen.&#39;Pipegen&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYPipegen.&#39;Pipegen&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYPipegen.&#39;Pipegen&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(t1_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(t1_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(t2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(t2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(t3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(t3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(t4_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(t4_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(YTD_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(YTD_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Million&quot; as &#39;Unit&#39;,&quot;B1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT AE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nresult_AE = group t1_CYHC by all full, t2_CYHC by all full, t3_CYHC by all full, t4_CYHC by all full, t1_PYHC by all full, t2_PYHC by all full, t3_PYHC by all full, t4_PYHC by all full, YTD_CYHC by all full,YTD_PYHC by all full,  t1_PY_2_HC by all full, t2_PY_2_HC by all full, t3_PY_2_HC by all full, t4_PY_2_HC by all full,YTD_PY_2_HC by all;\nresult_AE = foreach result_AE generate &quot;Distribution Headcount&quot; as &#39;Metric Group&#39;, &quot;AEs&quot; as &#39;Metric&#39;,&quot;24mo CAGR&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYHC.&#39;AE&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYHC.&#39;AE&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYHC.&#39;AE&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYHC.&#39;AE&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYHC.&#39;AE&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYHC.&#39;AE&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYHC.&#39;AE&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYHC.&#39;AE&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYHC.&#39;AE&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0) as &#39;YTD_PY&#39;,(power(coalesce(sum(t1_CYHC.&#39;AE&#39;), 0) / coalesce(sum(t1_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q1 Growth&#39;,(power(coalesce(sum(t2_CYHC.&#39;AE&#39;), 0) / coalesce(sum(t2_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q2 Growth&#39;,(power(coalesce(sum(t3_CYHC.&#39;AE&#39;), 0) / coalesce(sum(t3_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q3 Growth&#39;,(power(coalesce(sum(t4_CYHC.&#39;AE&#39;), 0) / coalesce(sum(t4_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100as &#39;YoY Q4 Growth&#39;,(power(coalesce(sum(YTD_CYHC.&#39;AE&#39;), 0) / coalesce(sum(YTD_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Headcount&quot; as &#39;Unit&#39;,&quot;C1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT SE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nresult_SE = group t1_CYHC by all full, t2_CYHC by all full, t3_CYHC by all full, t4_CYHC by all full, t1_PYHC by all full, t2_PYHC by all full, t3_PYHC by all full, t4_PYHC by all full, YTD_CYHC by all full,YTD_PYHC by all full,  t1_PY_2_HC by all full, t2_PY_2_HC by all full, t3_PY_2_HC by all full, t4_PY_2_HC by all full,YTD_PY_2_HC by all;\nresult_SE = foreach result_SE generate &quot;Distribution Headcount&quot; as &#39;Metric Group&#39;, &quot;SEs&quot; as &#39;Metric&#39;,&quot;24mo CAGR&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYHC.&#39;SE&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYHC.&#39;SE&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYHC.&#39;SE&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYHC.&#39;SE&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYHC.&#39;SE&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYHC.&#39;SE&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYHC.&#39;SE&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYHC.&#39;SE&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYHC.&#39;SE&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYHC.&#39;SE&#39;), 0) as &#39;YTD_PY&#39;,(power(coalesce(sum(t1_CYHC.&#39;SE&#39;), 0) / coalesce(sum(t1_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q1 Growth&#39;,(power(coalesce(sum(t2_CYHC.&#39;SE&#39;), 0) / coalesce(sum(t2_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q2 Growth&#39;,(power(coalesce(sum(t3_CYHC.&#39;SE&#39;), 0) / coalesce(sum(t3_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q3 Growth&#39;,(power(coalesce(sum(t4_CYHC.&#39;SE&#39;), 0) / coalesce(sum(t4_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q4 Growth&#39;,(power(coalesce(sum(YTD_CYHC.&#39;SE&#39;), 0) / coalesce(sum(YTD_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Headcount&quot; as &#39;Unit&#39;,&quot;C2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT CO PRIMED--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_Co_Prime = group t1_CYHC by all full, t2_CYHC by all full, t3_CYHC by all full, t4_CYHC by all full, t1_PYHC by all full, t2_PYHC by all full, t3_PYHC by all full, t4_PYHC by all full, YTD_CYHC by all full,YTD_PYHC by all full,  t1_PY_2_HC by all full, t2_PY_2_HC by all full, t3_PY_2_HC by all full, t4_PY_2_HC by all full,YTD_PY_2_HC by all;\nresult_Co_Prime = foreach result_Co_Prime generate &quot;Distribution Headcount&quot; as &#39;Metric Group&#39;, &quot;Co Prime&quot; as &#39;Metric&#39;,&quot;24mo CAGR&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYHC.&#39;Co_Prime&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYHC.&#39;Co_Prime&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYHC.&#39;Co_Prime&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0) as &#39;YTD_PY&#39;,(power(coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(t1_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YoY Q1 Growth&#39;,(power(coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(t2_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YoY Q2 Growth&#39;,(power(coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(t3_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YoY Q3 Growth&#39;,(power(coalesce(sum(t4_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(t4_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YoY Q4 Growth&#39;,(power(coalesce(sum(YTD_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(YTD_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Headcount&quot; as &#39;Unit&#39;,&quot;C3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT SWE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_SWE = group t1_CYSW by all full, t2_CYSW by all full, t3_CYSW by all full, t4_CYSW by all full, t1_PYSW by all full, t2_PYSW by all full, t3_PYSW by all full, t4_PYSW by all full, YTD_CYSW by all full,YTD_PYSW by all;\nresult_SWE = foreach result_SWE generate &quot;R&amp;D/T&amp;P Headcount&quot; as &#39;Metric Group&#39;, &quot;SWE HC&quot; as &#39;Metric&#39;,&quot;NA&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYSW.&#39;SWE&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYSW.&#39;SWE&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYSW.&#39;SWE&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYSW.&#39;SWE&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYSW.&#39;SWE&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYSW.&#39;SWE&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYSW.&#39;SWE&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYSW.&#39;SWE&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYSW.&#39;SWE&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYSW.&#39;SWE&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(t1_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(t1_PYSW.&#39;SWE&#39;), 0)) as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(t2_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(t2_PYSW.&#39;SWE&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(t3_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(t3_PYSW.&#39;SWE&#39;), 0))  as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(t4_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(t4_PYSW.&#39;SWE&#39;), 0)) as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(YTD_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(YTD_PYSW.&#39;SWE&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Headcount&quot; as &#39;Unit&#39;,&quot;F1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT INFRA--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_INFRA = group t1_CYINFRA by all full, t2_CYINFRA by all full, t3_CYINFRA by all full, t4_CYINFRA by all full, t1_PYINFRA by all full, t2_PYINFRA by all full, t3_PYINFRA by all full, t4_PYINFRA by all full, YTD_CYINFRA by all full,YTD_PYINFRA by all;\nresult_INFRA = foreach result_INFRA generate &quot;R&amp;D/T&amp;P Headcount&quot; as &#39;Metric Group&#39;, &quot;Infra Org HC&quot; as &#39;Metric&#39;,&quot;NA&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYINFRA.&#39;INFRA&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYINFRA.&#39;INFRA&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYINFRA.&#39;INFRA&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYINFRA.&#39;INFRA&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYINFRA.&#39;INFRA&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYINFRA.&#39;INFRA&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYINFRA.&#39;INFRA&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYINFRA.&#39;INFRA&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYINFRA.&#39;INFRA&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYINFRA.&#39;INFRA&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYINFRA.&#39;INFRA&#39;), 0) - coalesce(sum(t1_PYINFRA.&#39;INFRA&#39;), 0)) / coalesce(sum(t1_PYINFRA.&#39;INFRA&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYINFRA.&#39;INFRA&#39;), 0) - coalesce(sum(t2_PYINFRA.&#39;INFRA&#39;), 0)) / coalesce(sum(t2_PYINFRA.&#39;INFRA&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYINFRA.&#39;INFRA&#39;), 0) - coalesce(sum(t3_PYINFRA.&#39;INFRA&#39;), 0)) / coalesce(sum(t3_PYINFRA.&#39;INFRA&#39;), 0))  as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYINFRA.&#39;INFRA&#39;), 0) - coalesce(sum(t4_PYINFRA.&#39;INFRA&#39;), 0)) / coalesce(sum(t4_PYINFRA.&#39;INFRA&#39;), 0)) as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYINFRA.&#39;INFRA&#39;), 0) - coalesce(sum(YTD_PYINFRA.&#39;INFRA&#39;), 0)) / coalesce(sum(YTD_PYINFRA.&#39;INFRA&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Million&quot; as &#39;Unit&#39;,&quot;F2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT GMV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_GMV =  group t1_CYCC by all full, t2_CYCC by all full, t3_CYCC by all full, t4_CYCC by all full, t1_PYCC by all full, t2_PYCC by all full, t3_PYCC by all full, t4_PYCC by all full, YTD_CYCC by all full,YTD_PYCC by all;\nresult_GMV = foreach result_GMV generate &quot;Commerce Cloud Digital Features&quot; as &#39;Metric Group&#39;, &quot;GMV&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYCC.&#39;GMV&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYCC.&#39;GMV&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYCC.&#39;GMV&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYCC.&#39;GMV&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYCC.&#39;GMV&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYCC.&#39;GMV&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYCC.&#39;GMV&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYCC.&#39;GMV&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYCC.&#39;GMV&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYCC.&#39;GMV&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYCC.&#39;GMV&#39;), 0) - coalesce(sum(t1_PYCC.&#39;GMV&#39;), 0)) / coalesce(sum(t1_PYCC.&#39;GMV&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYCC.&#39;GMV&#39;), 0) - coalesce(sum(t2_PYCC.&#39;GMV&#39;), 0)) / coalesce(sum(t2_PYCC.&#39;GMV&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYCC.&#39;GMV&#39;), 0) - coalesce(sum(t3_PYCC.&#39;GMV&#39;), 0)) / coalesce(sum(t3_PYCC.&#39;GMV&#39;), 0)) as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYCC.&#39;GMV&#39;), 0) - coalesce(sum(t4_PYCC.&#39;GMV&#39;), 0)) / coalesce(sum(t4_PYCC.&#39;GMV&#39;), 0))  as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYCC.&#39;GMV&#39;), 0) - coalesce(sum(YTD_PYCC.&#39;GMV&#39;), 0)) / coalesce(sum(YTD_PYCC.&#39;GMV&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Million&quot; as &#39;Unit&#39;,&quot;D1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT Sites--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_Sites = group t1_CYCC by all full, t2_CYCC by all full, t3_CYCC by all full, t4_CYCC by all full, t1_PYCC by all full, t2_PYCC by all full, t3_PYCC by all full, t4_PYCC by all full, YTD_CYCC by all full,YTD_PYCC by all ;\nresult_Sites = foreach result_Sites generate &quot;Commerce Cloud Digital Features&quot; as &#39;Metric Group&#39;, &quot;Sites&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYCC.&#39;Sites&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYCC.&#39;Sites&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYCC.&#39;Sites&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYCC.&#39;Sites&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYCC.&#39;Sites&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYCC.&#39;Sites&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYCC.&#39;Sites&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYCC.&#39;Sites&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYCC.&#39;Sites&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYCC.&#39;Sites&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYCC.&#39;Sites&#39;), 0) - coalesce(sum(t1_PYCC.&#39;Sites&#39;), 0)) / coalesce(sum(t1_PYCC.&#39;Sites&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYCC.&#39;Sites&#39;), 0) - coalesce(sum(t2_PYCC.&#39;Sites&#39;), 0)) / coalesce(sum(t2_PYCC.&#39;Sites&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYCC.&#39;Sites&#39;), 0) - coalesce(sum(t3_PYCC.&#39;Sites&#39;), 0)) / coalesce(sum(t3_PYCC.&#39;Sites&#39;), 0)) as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYCC.&#39;Sites&#39;), 0) - coalesce(sum(t4_PYCC.&#39;Sites&#39;), 0)) / coalesce(sum(t4_PYCC.&#39;Sites&#39;), 0))  as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYCC.&#39;Sites&#39;), 0) - coalesce(sum(YTD_PYCC.&#39;Sites&#39;), 0)) / coalesce(sum(YTD_PYCC.&#39;Sites&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Million&quot; as &#39;Unit&#39;,&quot;D2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT DEALS X!10M Deals--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_X10M_Deals = group t1_CYDEALS by all full, t2_CYDEALS by all full, t3_CYDEALS by all full, t4_CYDEALS by all full, t1_PYDEALS by all full, t2_PYDEALS by all full, t3_PYDEALS by all full, t4_PYDEALS by all full, YTD_CYDEALS by all full, YTD_PYDEALS by all;\nresult_X10M_Deals = foreach result_X10M_Deals generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;$10M+ Deals&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(t1_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(t1_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(t2_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(t2_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(t3_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(t3_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(t4_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(t4_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(YTD_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(YTD_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Count&quot; as &#39;Unit&#39;,&quot;E1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT X10M--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_X10M = group t1_CYDEALS by all full, t2_CYDEALS by all full, t3_CYDEALS by all full, t4_CYDEALS by all full, t1_PYDEALS by all full, t2_PYDEALS by all full, t3_PYDEALS by all full, t4_PYDEALS by all full, YTD_CYDEALS by all full, YTD_PYDEALS by all;\nresult_X10M = foreach result_X10M generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;$1M+ deals&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYDEALS.&#39;X10M&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYDEALS.&#39;X10M&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYDEALS.&#39;X10M&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYDEALS.&#39;X10M&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYDEALS.&#39;X10M&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYDEALS.&#39;X10M&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYDEALS.&#39;X10M&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYDEALS.&#39;X10M&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYDEALS.&#39;X10M&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYDEALS.&#39;X10M&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(t1_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(t1_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(t2_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(t2_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(t3_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(t3_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(t4_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(t4_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(YTD_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(YTD_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Count&quot; as &#39;Unit&#39;,&quot;E2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT DEALS Runrate--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_Runrate_Volume = group t1_CYDEALS by all full, t2_CYDEALS by all full, t3_CYDEALS by all full, t4_CYDEALS by all full, t1_PYDEALS by all full, t2_PYDEALS by all full, t3_PYDEALS by all full, t4_PYDEALS by all full, YTD_CYDEALS by all full, YTD_PYDEALS by all;\nresult_Runrate_Volume = foreach result_Runrate_Volume generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;Run Rate Volume&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(t1_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(t1_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(t2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(t2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(t3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(t3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(t4_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(t4_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(YTD_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(YTD_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;Run-rate is the count of opportunities that are less than a defined region &amp; segment threshold.&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT LOGO--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_LOGO = group t1_CYLOGO by all full, t2_CYLOGO by all full, t3_CYLOGO by all full, t4_CYLOGO by all full, t1_PYLOGO by all full, t2_PYLOGO by all full, t3_PYLOGO by all full, t4_PYLOGO by all full, YTD_CYLOGO by all full, YTD_PYLOGO by all;\nresult_LOGO = foreach result_LOGO generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;New Logos&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYLOGO.&#39;New_Logos&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYLOGO.&#39;New_Logos&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYLOGO.&#39;New_Logos&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYLOGO.&#39;New_Logos&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYLOGO.&#39;New_Logos&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYLOGO.&#39;New_Logos&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYLOGO.&#39;New_Logos&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYLOGO.&#39;New_Logos&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYLOGO.&#39;New_Logos&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYLOGO.&#39;New_Logos&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYLOGO.&#39;New_Logos&#39;), 0) - coalesce(sum(t1_PYLOGO.&#39;New_Logos&#39;), 0)) / coalesce(sum(t1_PYLOGO.&#39;New_Logos&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYLOGO.&#39;New_Logos&#39;), 0) - coalesce(sum(t2_PYLOGO.&#39;New_Logos&#39;), 0)) / coalesce(sum(t2_PYLOGO.&#39;New_Logos&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYLOGO.&#39;New_Logos&#39;), 0) - coalesce(sum(t3_PYLOGO.&#39;New_Logos&#39;), 0)) / coalesce(sum(t3_PYLOGO.&#39;New_Logos&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYLOGO.&#39;New_Logos&#39;), 0) - coalesce(sum(t4_PYLOGO.&#39;New_Logos&#39;), 0)) / coalesce(sum(t4_PYLOGO.&#39;New_Logos&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYLOGO.&#39;New_Logos&#39;), 0) - coalesce(sum(YTD_PYLOGO.&#39;New_Logos&#39;), 0)) / coalesce(sum(YTD_PYLOGO.&#39;New_Logos&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E4&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT LOST LOGO--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_LOST_LOGO = group t1_CYLOST_LOGO by all full, t2_CYLOST_LOGO by all full, t3_CYLOST_LOGO by all full, t4_CYLOST_LOGO by all full, t1_PYLOST_LOGO by all full, t2_PYLOST_LOGO by all full, t3_PYLOST_LOGO by all full, t4_PYLOST_LOGO by all full, YTD_CYLOST_LOGO by all full, YTD_PYLOST_LOGO by all;\nresult_LOST_LOGO = foreach result_LOST_LOGO generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;Lost Logos&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) - coalesce(sum(t1_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) / coalesce(sum(t1_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) - coalesce(sum(t2_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) / coalesce(sum(t2_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) - coalesce(sum(t3_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) / coalesce(sum(t3_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) - coalesce(sum(t4_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) / coalesce(sum(t4_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) - coalesce(sum(YTD_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) / coalesce(sum(YTD_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E5&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT REDACCOUNTS--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_REDACCOUNTS = group t1_CYREDACCOUNTS by all full, t2_CYREDACCOUNTS by all full, t3_CYREDACCOUNTS by all full, t4_CYREDACCOUNTS by all full, t1_PYREDACCOUNTS by all full, t2_PYREDACCOUNTS by all full, t3_PYREDACCOUNTS by all full, t4_PYREDACCOUNTS by all full, YTD_CYREDACCOUNTS by all full, YTD_PYREDACCOUNTS by all;\nresult_REDACCOUNTS = foreach result_REDACCOUNTS generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;Red Accounts&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(t1_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(t1_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(t2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(t2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(t3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(t3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(t4_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(t4_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(YTD_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(YTD_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E6&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT Productivity--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_PRODUCTIVITY = group t1_CYACV by all full, t2_CYACV by all full, t3_CYACV by all full, t4_CYACV by all full, t1_PYACV by all full, t2_PYACV by all full, t3_PYACV by all full, t4_PYACV by all full, YTD_CYACV by all full, YTD_PYACV by all full,t0_CYHC by all full,t1_CYHC by all full, t2_CYHC by all full, t3_CYHC by all full, t4_CYHC by all full,t0_PYHC by all full, t1_PYHC by all full, t2_PYHC by all full, t3_PYHC by all full, t4_PYHC by all full, YTD_CYHC by all full, YTD_PYHC by all full, YTD_PY_2_HC by all  ;\nresult_PRODUCTIVITY = foreach result_PRODUCTIVITY generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;Productivity&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t1_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t0_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t0_CYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t1_CY&#39;, coalesce(sum(t2_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t2_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t1_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t2_CY&#39;, coalesce(sum(t3_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t3_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t2_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t3_CY&#39;, coalesce(sum(t4_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t4_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t4_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t3_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t4_CY&#39;, coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t0_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t0_PYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t1_PY&#39;,  coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t2_PY&#39;, coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t3_PY&#39;, coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t4_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t4_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(YTD_CYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;Co_Prime&#39;), 0))/2) as &#39;YTD_PY&#39;,((((coalesce(sum(t1_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t1_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t0_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t0_CYHC.&#39;Co_Prime&#39;), 0))/2))-(coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t0_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t0_PYHC.&#39;Co_Prime&#39;), 0))/2))))/(coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t0_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t0_PYHC.&#39;Co_Prime&#39;), 0))/2)) ) as &#39;YoY Q1 Growth&#39;,( ((coalesce(sum(t2_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t2_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t1_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0))/2))-(coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0))/2))))/(coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0))/2)) as &#39;YoY Q2 Growth&#39;, ((coalesce(sum(t3_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t3_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t2_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0))/2))-( coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0))/2)))/( coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0))/2)) as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t4_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t4_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t3_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0))/2))-(coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t4_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t4_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0))/2)))/(coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t4_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t4_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0))/2)) as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(YTD_CYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0))/2))-( coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;Co_Prime&#39;), 0))/2)))/( coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;Co_Prime&#39;), 0))/2)) as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E7&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT T_P--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_T_P = group t1_CYT_P by all full, t2_CYT_P by all full, t3_CYT_P by all full, t4_CYT_P by all full, t1_PYT_P by all full, t2_PYT_P by all full, t3_PYT_P by all full, t4_PYT_P by all full, YTD_CYT_P by all full, YTD_PYT_P by all;\nresult_T_P = foreach result_T_P generate &quot;Tech Details&quot; as &#39;Metric Group&#39;, &quot;T&amp;P Cost to Serve&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYT_P.&#39;CTS&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYT_P.&#39;CTS&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYT_P.&#39;CTS&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYT_P.&#39;CTS&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYT_P.&#39;CTS&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYT_P.&#39;CTS&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYT_P.&#39;CTS&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYT_P.&#39;CTS&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYT_P.&#39;CTS&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYT_P.&#39;CTS&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(t1_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(t1_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(t2_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(t2_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(t3_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(t3_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(t4_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(t4_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(YTD_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(YTD_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;G1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT TRANSACTION--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_TRANSACTION = group t1_CYTRANSACTION by all full, t2_CYTRANSACTION by all full, t3_CYTRANSACTION by all full, t4_CYTRANSACTION by all full, t1_PYTRANSACTION by all full, t2_PYTRANSACTION by all full, t3_PYTRANSACTION by all full, t4_PYTRANSACTION by all full, YTD_CYTRANSACTION by all full, YTD_PYTRANSACTION by all;\nresult_TRANSACTION = foreach result_TRANSACTION generate &quot;Tech Details&quot; as &#39;Metric Group&#39;, &quot;Core Transactions / Requests&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYTRANSACTION.&#39;Transactions&#39;), 0) - coalesce(sum(t1_PYTRANSACTION.&#39;Transactions&#39;), 0)) / coalesce(sum(t1_PYTRANSACTION.&#39;Transactions&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYTRANSACTION.&#39;Transactions&#39;), 0) - coalesce(sum(t2_PYTRANSACTION.&#39;Transactions&#39;), 0)) / coalesce(sum(t2_PYTRANSACTION.&#39;Transactions&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYTRANSACTION.&#39;Transactions&#39;), 0) - coalesce(sum(t3_PYTRANSACTION.&#39;Transactions&#39;), 0)) / coalesce(sum(t3_PYTRANSACTION.&#39;Transactions&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYTRANSACTION.&#39;Transactions&#39;), 0) - coalesce(sum(t4_PYTRANSACTION.&#39;Transactions&#39;), 0)) / coalesce(sum(t4_PYTRANSACTION.&#39;Transactions&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYTRANSACTION.&#39;Transactions&#39;), 0) - coalesce(sum(YTD_PYTRANSACTION.&#39;Transactions&#39;), 0)) / coalesce(sum(YTD_PYTRANSACTION.&#39;Transactions&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;Core infra only&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;G3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT AVAILABILITY--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_AVAILABILITY = group t1_CYAVAILABILITY by all full, t2_CYAVAILABILITY by all full, t3_CYAVAILABILITY by all full, t4_CYAVAILABILITY by all full, t1_PYAVAILABILITY by all full, t2_PYAVAILABILITY by all full, t3_PYAVAILABILITY by all full, t4_PYAVAILABILITY by all full, YTD_CYAVAILABILITY by all full, YTD_PYAVAILABILITY by all;\nresult_AVAILABILITY = foreach result_AVAILABILITY generate &quot;Tech Details&quot; as &#39;Metric Group&#39;, &quot;Availability %&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(t1_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(t1_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(t2_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(t2_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(t3_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(t3_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(t4_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(t4_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(YTD_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(YTD_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;Core infra only&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;G2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT EVENTS--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_EVENTS = group t1_CYEVENTS by all full, t2_CYEVENTS by all full, t3_CYEVENTS by all full, t4_CYEVENTS by all full, t1_PYEVENTS by all full, t2_PYEVENTS by all full, t3_PYEVENTS by all full, t4_PYEVENTS by all full, YTD_CYEVENTS by all full, YTD_PYEVENTS by all;\nresult_EVENTS = foreach result_EVENTS generate &quot;Marketing Details&quot; as &#39;Metric Group&#39;, &quot;Marketing Events - World Tours &amp; Trailhead Live&quot; as &#39;Metric&#39;,&quot;NA&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(t1_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(t1_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(t2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(t2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(t3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(t3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(t4_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(t4_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(YTD_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(YTD_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;H1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT OTHER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_OTHER = group t1_CYOTHER by all full, t2_CYOTHER by all full, t3_CYOTHER by all full, t4_CYOTHER by all full, t1_PYOTHER by all full, t2_PYOTHER by all full, t3_PYOTHER by all full, t4_PYOTHER by all full, YTD_CYOTHER by all full, YTD_PYOTHER by all;\nresult_OTHER = foreach result_OTHER generate &quot;Marketing Details&quot; as &#39;Metric Group&#39;, &quot;Marketing Events - Other&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(t1_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(t1_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(t2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(t2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(t3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(t3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(t4_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(t4_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(YTD_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(YTD_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;CxOs (such as exec programs, dinners, etc), Event in a Box, Industry Events/Third Party Events (such as NRF, WEF, etc), Salesforce Basecamps (previously known as Essentials), Hospitality Events (such as Live Nation, sports events, etc), and Developer Workshop (such as TrailheaDX). &quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;H2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT EVENTS EBC--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_EBC = group t1_CYEBC by all full, t2_CYEBC by all full, t3_CYEBC by all full, t4_CYEBC by all full, t1_PYEBC by all full, t2_PYEBC by all full, t3_PYEBC by all full, t4_PYEBC by all full, YTD_CYEBC by all full, YTD_PYEBC by all;\nresult_EBC = foreach result_EBC generate &quot;Marketing Details&quot; as &#39;Metric Group&#39;, &quot;EBCs&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYEBC.&#39;EBC_s&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYEBC.&#39;EBC_s&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYEBC.&#39;EBC_s&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYEBC.&#39;EBC_s&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYEBC.&#39;EBC_s&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYEBC.&#39;EBC_s&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYEBC.&#39;EBC_s&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYEBC.&#39;EBC_s&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYEBC.&#39;EBC_s&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYEBC.&#39;EBC_s&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(t1_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(t1_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(t2_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(t2_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(t3_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(t3_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(t4_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(t4_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(YTD_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(YTD_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;H3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT EVENTS EBCD Dreamforce--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_EBCD = group t1_CYEBCD by all full, t2_CYEBCD by all full, t3_CYEBCD by all full, t4_CYEBCD by all full, t1_PYEBCD by all full, t2_PYEBCD by all full, t3_PYEBCD by all full, t4_PYEBCD by all full, YTD_CYEBCD by all full, YTD_PYEBCD by all;\nresult_EBCD = foreach result_EBCD generate &quot;Marketing Details&quot; as &#39;Metric Group&#39;, &quot;EBC Dreamforce&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) - coalesce(sum(t1_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) / coalesce(sum(t1_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) - coalesce(sum(t2_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) / coalesce(sum(t2_PYEBCD.&#39;EBC_Dreamforce&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) - coalesce(sum(t3_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) / coalesce(sum(t3_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) - coalesce(sum(t4_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) / coalesce(sum(t4_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) - coalesce(sum(YTD_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) / coalesce(sum(YTD_PYEBCD.&#39;EBC_Dreamforce&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;H4&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT CUSTOMER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_CUSTOMER = group t1_CYCUSTOMER by all full, t2_CYCUSTOMER by all full, t3_CYCUSTOMER by all full, t4_CYCUSTOMER by all full, t1_PYCUSTOMER by all full, t2_PYCUSTOMER by all full, t3_PYCUSTOMER by all full, t4_PYCUSTOMER by all full, YTD_CYCUSTOMER by all full, YTD_PYCUSTOMER by all;\nresult_CUSTOMER = foreach result_CUSTOMER generate &quot;Market Details&quot; as &#39;Metric Group&#39;, &quot;Customer Count&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYCUSTOMER.&#39;Customer&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYCUSTOMER.&#39;Customer&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYCUSTOMER.&#39;Customer&#39;), 0) - coalesce(sum(t1_PYCUSTOMER.&#39;Customer&#39;), 0)) / coalesce(sum(t1_PYCUSTOMER.&#39;Customer&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYCUSTOMER.&#39;Customer&#39;), 0) - coalesce(sum(t2_PYCUSTOMER.&#39;Customer&#39;), 0)) / coalesce(sum(t2_PYCUSTOMER.&#39;Customer&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYCUSTOMER.&#39;Customer&#39;), 0) - coalesce(sum(t3_PYCUSTOMER.&#39;Customer&#39;), 0)) / coalesce(sum(t3_PYCUSTOMER.&#39;Customer&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYCUSTOMER.&#39;Customer&#39;), 0) - coalesce(sum(t4_PYCUSTOMER.&#39;Customer&#39;), 0)) / coalesce(sum(t4_PYCUSTOMER.&#39;Customer&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYCUSTOMER.&#39;Customer&#39;), 0) - coalesce(sum(YTD_PYCUSTOMER.&#39;Customer&#39;), 0)) / coalesce(sum(YTD_PYCUSTOMER.&#39;Customer&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;Combo Company definition&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;I1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT SHARE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_SHARE = group t1_CYSHARE by all full, t2_CYSHARE by all full, t3_CYSHARE by all full, t4_CYSHARE by all full, t1_PYSHARE by all full, t2_PYSHARE by all full, t3_PYSHARE by all full, t4_PYSHARE by all full, YTD_CYSHARE by all full, YTD_PYSHARE by all;\nresult_SHARE = foreach result_SHARE generate &quot;Market Details&quot; as &#39;Metric Group&#39;, &quot;Addressable Market &amp; Market Share %&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYSHARE.&#39;TAM&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYSHARE.&#39;TAM&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYSHARE.&#39;TAM&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYSHARE.&#39;TAM&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYSHARE.&#39;TAM&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYSHARE.&#39;TAM&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYSHARE.&#39;TAM&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYSHARE.&#39;TAM&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYSHARE.&#39;TAM&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYSHARE.&#39;TAM&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYSHARE.&#39;TAM&#39;), 0) - coalesce(sum(t1_PYSHARE.&#39;TAM&#39;), 0)) / coalesce(sum(t1_PYSHARE.&#39;TAM&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYSHARE.&#39;TAM&#39;), 0) - coalesce(sum(t2_PYSHARE.&#39;TAM&#39;), 0)) / coalesce(sum(t2_PYSHARE.&#39;TAM&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYSHARE.&#39;TAM&#39;), 0) - coalesce(sum(t3_PYSHARE.&#39;TAM&#39;), 0)) / coalesce(sum(t3_PYSHARE.&#39;TAM&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYSHARE.&#39;TAM&#39;), 0) - coalesce(sum(t4_PYSHARE.&#39;TAM&#39;), 0)) / coalesce(sum(t4_PYSHARE.&#39;TAM&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYSHARE.&#39;TAM&#39;), 0) - coalesce(sum(YTD_PYSHARE.&#39;TAM&#39;), 0)) / coalesce(sum(YTD_PYSHARE.&#39;TAM&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;I2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT CSG CSM--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_CSG_HC = group t1_CYCSG by all full, t2_CYCSG by all full, t3_CYCSG by all full, t4_CYCSG by all full, t1_PYCSG by all full, t2_PYCSG by all full, t3_PYCSG by all full, t4_PYCSG by all full, YTD_CYCSG by all full, YTD_PYCSG by all full , t1_PY_2_CSG by all full, t2_PY_2_CSG by all full, t3_PY_2_CSG by all full, t4_PY_2_CSG by all full,YTD_PY_2_CSG by all;\nresult_CSG_HC = foreach result_CSG_HC generate &quot;CSG Headcount&quot; as &#39;Metric Group&#39;, &quot;CSM&quot; as &#39;Metric&#39;,&quot;24mo CAGR&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;YTD_PY&#39;,(power(coalesce(sum(t1_CYCSG.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(t1_PY_2_CSG.&#39;CSM_Headcount&#39;), 0),(1/2))-1)  as &#39;YoY Q1 Growth&#39;,(power(coalesce(sum(t2_CYCSG.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(t2_PY_2_CSG.&#39;CSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q2 Growth&#39;,(power(coalesce(sum(t3_CYCSG.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(t3_PY_2_CSG.&#39;CSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q3 Growth&#39;,(power(coalesce(sum(t4_CYCSG.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(t4_PY_2_CSG.&#39;CSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q4 Growth&#39;,(power(coalesce(sum(YTD_CYCSG.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(YTD_PY_2_CSG.&#39;CSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;J1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT CSG PSM--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_CSG_PSM = group t1_CYCSG by all full, t2_CYCSG by all full, t3_CYCSG by all full, t4_CYCSG by all full, t1_PYCSG by all full, t2_PYCSG by all full, t3_PYCSG by all full, t4_PYCSG by all full, YTD_CYCSG by all full, YTD_PYCSG by all full,t1_PY_2_CSG by all full, t2_PY_2_CSG by all full, t3_PY_2_CSG by all full, t4_PY_2_CSG by all full,YTD_PY_2_CSG by all;\nresult_CSG_PSM = foreach result_CSG_PSM generate &quot;CSG Headcount&quot; as &#39;Metric Group&#39;, &quot;PSM&quot; as &#39;Metric&#39;,&quot;24mo CAGR&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;YTD_PY&#39;,(power(coalesce(sum(t1_CYCSG.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(t1_PY_2_CSG.&#39;PSM_Headcount&#39;), 0),(1/2))-1)  as &#39;YoY Q1 Growth&#39;,(power(coalesce(sum(t2_CYCSG.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(t2_PY_2_CSG.&#39;PSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q2 Growth&#39;,(power(coalesce(sum(t3_CYCSG.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(t3_PY_2_CSG.&#39;PSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q3 Growth&#39;,(power(coalesce(sum(t4_CYCSG.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(t4_PY_2_CSG.&#39;PSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q4 Growth&#39;,(power(coalesce(sum(YTD_CYCSG.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(YTD_PY_2_CSG.&#39;PSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;J2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT Trailhead Badges--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_BADGES = group t1_CYBADGES by all full, t2_CYBADGES by all full, t3_CYBADGES by all full, t4_CYBADGES by all full, t1_PYBADGES by all full, t2_PYBADGES by all full, t3_PYBADGES by all full, t4_PYBADGES by all full, YTD_CYBADGES by all full, YTD_PYBADGES by all;\nresult_BADGES = foreach result_BADGES generate &quot;Trailhead Details&quot; as &#39;Metric Group&#39;, &quot;Trailhead Badges&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYBADGES.&#39;Trailhead_Badges&#39;), 0) - coalesce(sum(t1_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) / coalesce(sum(t1_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYBADGES.&#39;Trailhead_Badges&#39;), 0) - coalesce(sum(t2_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) / coalesce(sum(t2_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYBADGES.&#39;Trailhead_Badges&#39;), 0) - coalesce(sum(t3_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) / coalesce(sum(t3_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYBADGES.&#39;Trailhead_Badges&#39;), 0) - coalesce(sum(t4_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) / coalesce(sum(t4_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYBADGES.&#39;Trailhead_Badges&#39;), 0) - coalesce(sum(YTD_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) / coalesce(sum(YTD_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;K1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT TRAILBLAZER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_TRAILBLAZER = group t1_CYTRAILBLAZER by all full, t2_CYTRAILBLAZER by all full, t3_CYTRAILBLAZER by all full, t4_CYTRAILBLAZER by all full, t1_PYTRAILBLAZER by all full, t2_PYTRAILBLAZER by all full, t3_PYTRAILBLAZER by all full, t4_PYTRAILBLAZER by all full, YTD_CYTRAILBLAZER by all full, YTD_PYTRAILBLAZER by all;\nresult_TRAILBLAZER = foreach result_TRAILBLAZER generate &quot;Trailhead Details&quot; as &#39;Metric Group&#39;, &quot;Trailblazers&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) - coalesce(sum(t1_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) / coalesce(sum(t1_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) - coalesce(sum(t2_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) / coalesce(sum(t2_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) - coalesce(sum(t3_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) / coalesce(sum(t3_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) - coalesce(sum(t4_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) / coalesce(sum(t4_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) - coalesce(sum(YTD_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) / coalesce(sum(YTD_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;K2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT TRAILBLAZER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_RANGER = group t1_CYRANGER by all full, t2_CYRANGER by all full, t3_CYRANGER by all full, t4_CYRANGER by all full, t1_PYRANGER by all full, t2_PYRANGER by all full, t3_PYRANGER by all full, t4_PYRANGER by all full, YTD_CYRANGER by all full, YTD_PYRANGER by all;\nresult_RANGER = foreach result_RANGER generate &quot;Trailhead Details&quot; as &#39;Metric Group&#39;, &quot;Ranger&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYRANGER.&#39;Ranger&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYRANGER.&#39;Ranger&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYRANGER.&#39;Ranger&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYRANGER.&#39;Ranger&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYRANGER.&#39;Ranger&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYRANGER.&#39;Ranger&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYRANGER.&#39;Ranger&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYRANGER.&#39;Ranger&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYRANGER.&#39;Ranger&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYRANGER.&#39;Ranger&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYRANGER.&#39;Ranger&#39;), 0) - coalesce(sum(t1_PYRANGER.&#39;Ranger&#39;), 0)) / coalesce(sum(t1_PYRANGER.&#39;Ranger&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYRANGER.&#39;Ranger&#39;), 0) - coalesce(sum(t2_PYRANGER.&#39;Ranger&#39;), 0)) / coalesce(sum(t2_PYRANGER.&#39;Ranger&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYRANGER.&#39;Ranger&#39;), 0) - coalesce(sum(t3_PYRANGER.&#39;Ranger&#39;), 0)) / coalesce(sum(t3_PYRANGER.&#39;Ranger&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYRANGER.&#39;Ranger&#39;), 0) - coalesce(sum(t4_PYRANGER.&#39;Ranger&#39;), 0)) / coalesce(sum(t4_PYRANGER.&#39;Ranger&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYRANGER.&#39;Ranger&#39;), 0) - coalesce(sum(YTD_PYRANGER.&#39;Ranger&#39;), 0)) / coalesce(sum(YTD_PYRANGER.&#39;Ranger&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;K3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT HEROKU--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_HEROKU = group t1_CYHEROKU by all full, t2_CYHEROKU by all full, t3_CYHEROKU by all full, t4_CYHEROKU by all full, t1_PYHEROKU by all full, t2_PYHEROKU by all full, t3_PYHEROKU by all full, t4_PYHEROKU by all full, YTD_CYHEROKU by all full, YTD_PYHEROKU by all;\nresult_HEROKU = foreach result_HEROKU generate &quot;Heroku&quot; as &#39;Metric Group&#39;, &quot;Net Billings&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYHEROKU.&#39;Net_Billings&#39;), 0) - coalesce(sum(t1_PYHEROKU.&#39;Net_Billings&#39;), 0)) / coalesce(sum(t1_PYHEROKU.&#39;Net_Billings&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYHEROKU.&#39;Net_Billings&#39;), 0) - coalesce(sum(t2_PYHEROKU.&#39;Net_Billings&#39;), 0)) / coalesce(sum(t2_PYHEROKU.&#39;Net_Billings&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYHEROKU.&#39;Net_Billings&#39;), 0) - coalesce(sum(t3_PYHEROKU.&#39;Net_Billings&#39;), 0)) / coalesce(sum(t3_PYHEROKU.&#39;Net_Billings&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYHEROKU.&#39;Net_Billings&#39;), 0) - coalesce(sum(t4_PYHEROKU.&#39;Net_Billings&#39;), 0)) / coalesce(sum(t4_PYHEROKU.&#39;Net_Billings&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYHEROKU.&#39;Net_Billings&#39;), 0) - coalesce(sum(YTD_PYHEROKU.&#39;Net_Billings&#39;), 0)) / coalesce(sum(YTD_PYHEROKU.&#39;Net_Billings&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;L1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT Productivity John--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nNEW_result_PRODUCTIVITY = group t1_CYPRODUCTIVITY by all full, t2_CYPRODUCTIVITY by all full, t3_CYPRODUCTIVITY by all full, t4_CYPRODUCTIVITY by all full, t1_PYPRODUCTIVITY by all full, t2_PYPRODUCTIVITY by all full, t3_PYPRODUCTIVITY by all full, t4_PYPRODUCTIVITY by all full, YTD_CYPRODUCTIVITY by all full, YTD_PYPRODUCTIVITY by all;\nNEW_result_PRODUCTIVITY = foreach NEW_result_PRODUCTIVITY generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;Productivity_new&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;, coalesce(sum(t1_CYPRODUCTIVITY.&#39;Productivity&#39;), 0)  as &#39;t1_CY&#39;, coalesce(sum(t2_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) - coalesce(sum(t1_PYPRODUCTIVITY.&#39;Productivity&#39;), 0)) / coalesce(sum(t1_PYPRODUCTIVITY.&#39;Productivity&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) - coalesce(sum(t2_PYPRODUCTIVITY.&#39;Productivity&#39;), 0)) / coalesce(sum(t2_PYPRODUCTIVITY.&#39;Productivity&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) - coalesce(sum(t3_PYPRODUCTIVITY.&#39;Productivity&#39;), 0)) / coalesce(sum(t3_PYPRODUCTIVITY.&#39;Productivity&#39;), 0))  as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) - coalesce(sum(t4_PYPRODUCTIVITY.&#39;Productivity&#39;), 0)) / coalesce(sum(t4_PYPRODUCTIVITY.&#39;Productivity&#39;), 0))  as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) - coalesce(sum(YTD_PYPRODUCTIVITY.&#39;Productivity&#39;), 0)) / coalesce(sum(YTD_PYPRODUCTIVITY.&#39;Productivity&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E8&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT ISVTake Off--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_ISV_TAKEOFF = group t1_CYISV by all full, t2_CYISV by all full, t3_CYISV by all full, t4_CYISV by all full, t1_PYISV by all full, t2_PYISV by all full, t3_PYISV by all full, t4_PYISV by all full, YTD_CYISV by all full, YTD_PYISV by all;\nresult_ISV_TAKEOFF= foreach result_ISV_TAKEOFF generate &quot;ISV&quot; as &#39;Metric Group&#39;, &quot;Take off&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;, coalesce(sum(t1_CYISV.&#39;ACV_Take_Off&#39;), 0)  as &#39;t1_CY&#39;, coalesce(sum(t2_CYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYISV.&#39;ACV_Take_Off&#39;), 0) - coalesce(sum(t1_PYISV.&#39;ACV_Take_Off&#39;), 0)) / coalesce(sum(t1_PYISV.&#39;ACV_Take_Off&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYISV.&#39;ACV_Take_Off&#39;), 0) - coalesce(sum(t2_PYISV.&#39;ACV_Take_Off&#39;), 0)) / coalesce(sum(t2_PYISV.&#39;ACV_Take_Off&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYISV.&#39;ACV_Take_Off&#39;), 0) - coalesce(sum(t3_PYISV.&#39;ACV_Take_Off&#39;), 0)) / coalesce(sum(t3_PYISV.&#39;ACV_Take_Off&#39;), 0))  as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYISV.&#39;ACV_Take_Off&#39;), 0) - coalesce(sum(t4_PYISV.&#39;ACV_Take_Off&#39;), 0)) / coalesce(sum(t4_PYISV.&#39;ACV_Take_Off&#39;), 0))  as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYISV.&#39;ACV_Take_Off&#39;), 0) - coalesce(sum(YTD_PYISV.&#39;ACV_Take_Off&#39;), 0)) / coalesce(sum(YTD_PYISV.&#39;ACV_Take_Off&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;M1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT ISV Landing Performance--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_ISV_LANDING = group t1_CYISV by all full, t2_CYISV by all full, t3_CYISV by all full, t4_CYISV by all full, t1_PYISV by all full, t2_PYISV by all full, t3_PYISV by all full, t4_PYISV by all full, YTD_CYISV by all full, YTD_PYISV by all;\nresult_ISV_LANDING= foreach result_ISV_LANDING generate &quot;ISV&quot; as &#39;Metric Group&#39;, &quot;Landing&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;, coalesce(sum(t1_CYISV.&#39;ACV_Landing_Performance&#39;), 0)  as &#39;t1_CY&#39;, coalesce(sum(t2_CYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYISV.&#39;ACV_Landing_Performance&#39;), 0) - coalesce(sum(t1_PYISV.&#39;ACV_Landing_Performance&#39;), 0)) / coalesce(sum(t1_PYISV.&#39;ACV_Landing_Performance&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYISV.&#39;ACV_Landing_Performance&#39;), 0) - coalesce(sum(t2_PYISV.&#39;ACV_Landing_Performance&#39;), 0)) / coalesce(sum(t2_PYISV.&#39;ACV_Landing_Performance&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYISV.&#39;ACV_Landing_Performance&#39;), 0) - coalesce(sum(t3_PYISV.&#39;ACV_Landing_Performance&#39;), 0)) / coalesce(sum(t3_PYISV.&#39;ACV_Landing_Performance&#39;), 0))  as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYISV.&#39;ACV_Landing_Performance&#39;), 0) - coalesce(sum(t4_PYISV.&#39;ACV_Landing_Performance&#39;), 0)) / coalesce(sum(t4_PYISV.&#39;ACV_Landing_Performance&#39;), 0))  as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYISV.&#39;ACV_Landing_Performance&#39;), 0) - coalesce(sum(YTD_PYISV.&#39;ACV_Landing_Performance&#39;), 0)) / coalesce(sum(YTD_PYISV.&#39;ACV_Landing_Performance&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;M2&quot; as &#39;SortOrder&#39;;\nvn\n\n\n\n\ntotal_FINANCIALMEASURES = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Financial Measures&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_Pipegen = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;PipeGen Measures&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_DISTRIBUTION_HC = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Distribution Headcount&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_COMMERCE = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Commerce Cloud Digital Features&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_Sales = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Sales Details&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_HEADCOUNT = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;R&amp;D/T&amp;P Headcount&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_TECH = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Tech Details&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_MARKETING = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Marketing Details&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_MARKET = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Market Details&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_CSG = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;CSG Headcount&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_TRAILHEAD = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Trailhead&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \n\n\n--line = group MasterHierarchy by &#39;all&#39;;\n--line = foreach line generate &quot;-----------------------------------------------------------------&quot; as &#39;Cloud&#39;, &quot;HBZ&quot; as &#39;SortOrder&#39;;\nvnresult = union total_FINANCIALMEASURES,result_ACV, result_AOV,result_ATT,total_Pipegen,result_Pipegen,total_DISTRIBUTION_HC,result_AE,result_SE,result_Co_Prime,total_COMMERCE,result_GMV,result_Sites,total_Sales,result_X10M_Deals,result_X10M,result_Runrate_Volume,result_LOGO,result_LOST_LOGO,result_REDACCOUNTS,total_HEADCOUNT,result_SWE,result_INFRA,total_TECH, result_T_P,result_AVAILABILITY,result_TRANSACTION, total_MARKETING,result_EVENTS,result_OTHER, result_EBC,result_EBCD,total_MARKET,result_CUSTOMER,result_SHARE,total_CSG,result_CSG_HC,result_CSG_PSM,total_TRAILHEAD,result_BADGES,result_TRAILBLAZER, result_RANGER,result_HEROKU,NEW_result_PRODUCTIVITY,result_ISV_TAKEOFF,result_ISV_LANDING;\nvn--result = order result by &#39;SortOrder&#39; asc;\n--result = filter result by &#39;Cloud&#39; not in [&quot;Premier (a la carte)&quot;];\nresult = filter result by &#39;Metric Group&#39; != &quot;Metric Group&quot;;\nresult = group result by &#39;Metric&#39;left , Comment by &#39;Metric&#39;;\nresult = foreach result generate last(result.&#39;Metric Group&#39;) as &#39;Metric Group&#39;, result.&#39;Metric&#39; as &#39;Metric&#39;,last(result.&#39;Rate Measure&#39;) as &#39;Rate Measure&#39;, last(result.&#39;SortOrder&#39;) as &#39;SortOrder&#39;,(case when sum(result.&#39;t1_CY&#39;)==0 then number_to_string(sum(result.&#39;t1_CY&#39;),&quot;#,###.#&quot;)  when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;Net Billings&quot;,&quot;Run Rate Volume&quot;] then number_to_string(sum(result.&#39;t1_CY&#39;)/1000000,&quot;$#,###.#&quot;)+&quot;M&quot; when result.&#39;Metric&#39; in [ &quot;T&amp;P Cost to Serve&quot;] then number_to_string(sum(result.&#39;t1_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;  when result.&#39;Metric&#39; in [&quot;Addressable Market &amp; Market Share %&quot;] then  number_to_string(sum(result.&#39;t1_CY&#39;)*100,&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Core Transactions / Requests&quot;] then  number_to_string(sum(result.&#39;t1_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot; when result.&#39;Metric&#39; in [&quot;GMV&quot;] then  number_to_string(sum(result.&#39;t1_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot;when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;t1_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;  else number_to_string(sum(result.&#39;t1_CY&#39;),&quot;#,###&quot;)  end) as &#39;t1_CY&#39;,(case when result.&#39;Metric&#39; in  [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;AEs&quot;,&quot;SEs&quot;,&quot;Co Prime&quot;,&quot;$10M+ Deals&quot;,&quot;$1M+ deals&quot;,&quot;Run Rate Volume&quot;, &quot;New Logos&quot;,&quot;Red Accounts&quot;,&quot;Marketing Events - World Tours &amp; Trailhead Live&quot;,&quot;Marketing Events - Other&quot;, &quot;EBCs&quot;,&quot;Customer Count&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;Core Transactions / Requests&quot;,&quot;Trailhead Badges&quot;,&quot;Trailblazers&quot;,&quot;Ranger&quot;, &quot;Lost Logos&quot;,&quot;Net Billings&quot;]then number_to_string(sum(result.&#39;YoY Q1 Growth&#39;)/100,&quot;0.0%&quot;) when last(result.&#39;Metric Group&#39;)==&quot;Metric Group&quot; then &quot;&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then&quot;&quot;  else number_to_string(sum(result.&#39;YoY Q1 Growth&#39;),&quot;0.0%&quot;)  end) as &#39;YoY Q1 Growth&#39;,(case when sum(result.&#39;t2_CY&#39;)==0 then number_to_string(sum(result.&#39;t2_CY&#39;),&quot;#,###.#&quot;) when result.&#39;Metric&#39; in[&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;Net Billings&quot;,&quot;Run Rate Volume&quot;] then number_to_string(sum(result.&#39;t2_CY&#39;)/1000000,&quot;$#,###.#&quot;)+&quot;M&quot; when result.&#39;Metric&#39; in [&quot;GMV&quot;] then  number_to_string(sum(result.&#39;t2_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot; when result.&#39;Metric&#39; in [ &quot;T&amp;P Cost to Serve&quot;] then number_to_string(sum(result.&#39;t2_CY&#39;),&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Addressable Market &amp; Market Share %&quot;] then  number_to_string(sum(result.&#39;t2_CY&#39;)*100,&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Core Transactions / Requests&quot;] then  number_to_string(sum(result.&#39;t2_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot;  when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;t2_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;  else number_to_string(sum(result.&#39;t2_CY&#39;),&quot;#,###&quot;)  end) as &#39;t2_CY&#39; , (case when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;AEs&quot;,&quot;SEs&quot;,&quot;Co Prime&quot;,&quot;$10M+ Deals&quot;,&quot;$1M+ deals&quot;,&quot;Run Rate Volume&quot;, &quot;New Logos&quot;,&quot;Red Accounts&quot;,&quot;Marketing Events - World Tours &amp; Trailhead Live&quot;,&quot;Marketing Events - Other&quot;, &quot;EBCs&quot;,&quot;Customer Count&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;Core Transactions / Requests&quot;,&quot;Trailhead Badges&quot;,&quot;Trailblazers&quot;,&quot;Ranger&quot;, &quot;Lost Logos&quot;,&quot;Net Billings&quot;] then number_to_string(sum(result.&#39;YoY Q2 Growth&#39;)/100,&quot;0.0%&quot;)when last(result.&#39;Metric Group&#39;)==&quot;Metric Group&quot; then &quot;&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then&quot;&quot;  else number_to_string(sum(result.&#39;YoY Q2 Growth&#39;),&quot;0.0%&quot;)  end) as &#39;YoY Q2 Growth&#39;,(case when sum(result.&#39;t3_CY&#39;)==0 then number_to_string(sum(result.&#39;t3_CY&#39;),&quot;#,###.#&quot;)  when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;Net Billings&quot;,&quot;Run Rate Volume&quot;] then number_to_string(sum(result.&#39;t3_CY&#39;)/1000000,&quot;$#,###.#&quot;)+&quot;M&quot;  when result.&#39;Metric&#39; in [&quot;GMV&quot;] then  number_to_string(sum(result.&#39;t3_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot; when result.&#39;Metric&#39; in [ &quot;T&amp;P Cost to Serve&quot;] then number_to_string(sum(result.&#39;t3_CY&#39;),&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Addressable Market &amp; Market Share %&quot;] then  number_to_string(sum(result.&#39;t3_CY&#39;)*100,&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Core Transactions / Requests&quot;] then  number_to_string(sum(result.&#39;t3_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot; when  result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;t3_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;  else  number_to_string(sum(result.&#39;t3_CY&#39;),&quot;#,###&quot;)  end) as  &#39;t3_CY&#39;,  (case when result.&#39;Metric&#39; in  [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;AEs&quot;,&quot;SEs&quot;,&quot;Co Prime&quot;,&quot;$10M+ Deals&quot;,&quot;$1M+ deals&quot;,&quot;Run Rate Volume&quot;, &quot;New Logos&quot;,&quot;Red Accounts&quot;,&quot;Marketing Events - World Tours &amp; Trailhead Live&quot;,&quot;Marketing Events - Other&quot;, &quot;EBCs&quot;,&quot;Customer Count&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;Core Transactions / Requests&quot;,&quot;Trailhead Badges&quot;,&quot;Trailblazers&quot;,&quot;Ranger&quot;, &quot;Lost Logos&quot;,&quot;Net Billings&quot;] then number_to_string(sum(result.&#39;YoY Q3 Growth&#39;)/100,&quot;0.0%&quot;) when last(result.&#39;Metric Group&#39;)==&quot;Metric Group&quot; then &quot;&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then&quot;&quot; else number_to_string(sum(result.&#39;YoY Q3 Growth&#39;),&quot;0.0%&quot;)  end) as &#39;YoY Q3 Growth&#39;,(case when sum(result.&#39;t4_CY&#39;)==0 then number_to_string(sum(result.&#39;t4_CY&#39;),&quot;#,###.#&quot;) when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;Net Billings&quot;,&quot;Run Rate Volume&quot;] then number_to_string(sum(result.&#39;t4_CY&#39;)/1000000,&quot;$#,###.#&quot;)+&quot;M&quot; when result.&#39;Metric&#39; in [&quot;GMV&quot;] then  number_to_string(sum(result.&#39;t4_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot;  when result.&#39;Metric&#39; in [ &quot;T&amp;P Cost to Serve&quot;] then number_to_string(sum(result.&#39;t4_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;when result.&#39;Metric&#39; in [&quot;Addressable Market &amp; Market Share %&quot;] then  number_to_string(sum(result.&#39;t4_CY&#39;)*100,&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Core Transactions / Requests&quot;] then  number_to_string(sum(result.&#39;t4_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot;  when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;t4_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;  else number_to_string(sum(result.&#39;t4_CY&#39;),&quot;#,###&quot;)  end) as &#39;t4_CY&#39;,  (case when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;AEs&quot;,&quot;SEs&quot;,&quot;Co Prime&quot;,&quot;$10M+ Deals&quot;,&quot;$1M+ deals&quot;,&quot;Run Rate Volume&quot;, &quot;New Logos&quot;,&quot;Red Accounts&quot;,&quot;Marketing Events - World Tours &amp; Trailhead Live&quot;,&quot;Marketing Events - Other&quot;, &quot;EBCs&quot;,&quot;Customer Count&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;Core Transactions / Requests&quot;,&quot;Trailhead Badges&quot;,&quot;Trailblazers&quot;,&quot;Ranger&quot;, &quot;Lost Logos&quot;,&quot;Net Billings&quot;]then number_to_string(sum(result.&#39;YoY Q4 Growth&#39;)/100,&quot;0.0%&quot;)when last(result.&#39;Metric Group&#39;)==&quot;Metric Group&quot; then &quot;&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then&quot;&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then&quot;&quot;  else number_to_string(sum(result.&#39;YoY Q4 Growth&#39;),&quot;0.0%&quot;)  end) as  &#39;YoY Q4 Growth&#39;,(case  when sum(result.&#39;YTD_CY&#39;)==0 then number_to_string(sum(result.&#39;YTD_CY&#39;),&quot;#,###.#&quot;)  when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;Net Billings&quot;,&quot;Run Rate Volume&quot;] then number_to_string(sum(result.&#39;YTD_CY&#39;)/1000000,&quot;$#,###.#&quot;)+&quot;M&quot;  when result.&#39;Metric&#39; in [&quot;GMV&quot;] then  number_to_string(sum(result.&#39;YTD_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot;  when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;YTD_CY&#39;),&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Addressable Market &amp; Market Share %&quot;] then  number_to_string(sum(result.&#39;YTD_CY&#39;)*100,&quot;#.0&quot;)+&quot;%&quot;  when result.&#39;Metric&#39; in [ &quot;T&amp;P Cost to Serve&quot;] then number_to_string(sum(result.&#39;YTD_CY&#39;),&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Core Transactions / Requests&quot;] then number_to_string(sum(result.&#39;YTD_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;YTD_CY&#39;),&quot;#,###&quot;)+&quot;%&quot;  else number_to_string(sum(result.&#39;YTD_CY&#39;),&quot;#,###&quot;)  end) as  &#39;YTD_CY&#39;,  (case when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;AEs&quot;,&quot;SEs&quot;,&quot;Co Prime&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;$10M+ Deals&quot;,&quot;$1M+ deals&quot;,&quot;Run Rate Volume&quot;, &quot;New Logos&quot;,&quot;Red Accounts&quot;,&quot;Marketing Events - World Tours &amp; Trailhead Live&quot;,&quot;Marketing Events - Other&quot;, &quot;EBCs&quot;,&quot;Customer Count&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;Core Transactions / Requests&quot;,&quot;Trailhead Badges&quot;,&quot;Trailblazers&quot;,&quot;Ranger&quot;, &quot;Lost Logos&quot;,&quot;Net Billings&quot;] then number_to_string(sum(result.&#39;YoY YTD Growth&#39;)/100,&quot;0.0%&quot;) when last(result.&#39;Metric Group&#39;)==&quot;Metric Group&quot; then &quot;&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then&quot;&quot;  else number_to_string(sum(result.&#39;YoY YTD Growth&#39;),&quot;0.0%&quot;)  end) as  &#39;YoY YTD Growth&#39;,&quot;ⓘ  Note: &quot; +(case when last(Comment.&#39;Notes&#39;) is null then &quot;&quot; else last(Comment.&#39;Notes&#39;) end)+&quot; / ⓘ  Comment: &quot; +(case when last(Comment.&#39;Comment&#39;) is null then &quot;&quot; else last(Comment.&#39;Comment&#39;) end) +&quot;                        &quot; as &#39;Comment&#39;;;\nresult = order result by &#39;SortOrder&#39; asc;\nresult = foreach result generate &#39;Comment&#39;; ",
        "receiveFacet": true,
        "selectMode": "single",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart",
          "visualizationType": "hbar"
        }
      },
      "Fiscal_Year_Selector_1": {
        "broadcastFacet": true,
        "label": "Fiscal Year Selector",
        "selectMode": "singlerequired",
        "start": "{&quot;display&quot;:[&quot;2018&quot;]}",
        "type": "staticflex",
        "values": [
          "{&quot;display&quot;:&quot;2018&quot;,&quot;value&quot;:&quot;2019&quot;,&quot;previous_year&quot;:&quot;2018&quot;,&quot;previous_year_2&quot;:&quot;2017&quot;,&quot;year_00&quot;:&quot;2013&quot;,&quot;year_0&quot;:&quot;2014&quot;,&quot;year_1&quot;:&quot;2015&quot;,&quot;year_2&quot;:&quot;2016&quot;,&quot;year_3&quot;:&quot;2017&quot;,&quot;year_4&quot;:&quot;2018&quot;,&quot;year_5&quot;:&quot;2019&quot;}",
          "{&quot;display&quot;:&quot;2017&quot;,&quot;value&quot;:&quot;2017&quot;,&quot;previous_year&quot;:&quot;2016&quot;,&quot;previous_year_2&quot;:&quot;2015&quot;}",
          "{&quot;display&quot;:&quot;2016&quot;,&quot;value&quot;:&quot;2016&quot;,&quot;previous_year&quot;:&quot;2015&quot;,&quot;previous_year_2&quot;:&quot;2014&quot;}",
          "{&quot;display&quot;:&quot;2015&quot;,&quot;value&quot;:&quot;2015&quot;,&quot;previous_year&quot;:&quot;2014&quot;,&quot;previous_year_2&quot;:&quot;2013&quot;}",
          "{&quot;display&quot;:&quot;2014&quot;,&quot;value&quot;:&quot;2014&quot;,&quot;previous_year&quot;:&quot;2013&quot;,&quot;previous_year_2&quot;:&quot;2012&quot;}"
        ]
      },
      "Table_Dimension_Header": {
        "broadcastFacet": true,
        "groups": [],
        "label": "Table_Dimension_Header",
        "numbers": [],
        "query": "MasterHierarchy = load &quot;Master_Hierarchy&quot;; q= group MasterHierarchy by &#39;all&#39;;\nq = foreach q generate &quot;    Group    &quot; as &#39;Metric &#39;,&quot;    Name    &quot; as &#39;Metric&#39;,&quot;    Measure    &quot; as &#39;Rate&#39;;",
        "receiveFacet": true,
        "selectMode": "none",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "visualizationType": "hbar"
        }
      },
      "column_1": {
        "broadcastFacet": true,
        "groups": [],
        "label": "column_1",
        "numbers": [],
        "query": "\nnMasterHierarchy = load &quot;Master_Hierarchy&quot;;\nMasterHierarchy = filter MasterHierarchy by &#39;Level_1&#39; in [&quot;Marketing Cloud &amp; Marketing Platform&quot;, &quot;Other&quot;, &quot;Quip&quot;, &quot;Sales Cloud &amp; Sales Platform&quot;, &quot;Salesforce Platform(s)&quot;, &quot;Service Cloud &amp; Service Cloud Platform&quot;, &quot;Commerce Cloud&quot;, &quot;Success Cloud&quot;, &quot;Premier (a la carte)&quot;, &quot;N/A&quot;];\nMasterHierarchy = group MasterHierarchy by all;\n-------------------------------------------------------------------------------------------------LOAD Comment--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nComment = load &quot;APM_Overview_Comment_5YRS&quot;;\n-------------------------------------------------------------------------------------------------LOAD ACV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nACV = load &quot;APM_CPM&quot;;\nACV = filter ACV by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_ACV&quot;).asString()}});\n ACV = filter ACV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nACV = group ACV by  (&#39;Quarter&#39;, &#39;Fiscal_Year&#39;);\nACV = foreach ACV generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;ACV&#39;) as &#39;ACV&#39;;\n t1_CYACV = filter ACV by   (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYACV = filter ACV by   (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYACV = filter ACV by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYACV = filter ACV by   (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYACV = filter ACV by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYACV = filter ACV by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYACV = filter ACV by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYACV = filter ACV by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYACV = filter ACV by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYACV = filter ACV by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ACV&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD AOV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nAOV = load &quot;APM_CPM&quot;;\nAOV = filter AOV by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_AOV&quot;).asString()}});\nAOV = foreach AOV generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;AOV&#39;) as &#39;AOV&#39;;\nt1_CYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;); \nt1_PYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYAOV = filter AOV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD ATT--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nAttrition = load &quot;APM_CPM&quot;;\nAttrition = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_ATT&quot;).asString()}});\nAttrition = filter Attrition by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nAttrition = foreach Attrition generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Attrition&#39;) * -1 as &#39;Attrition_Product&#39;, sum(&#39;Attrition_Rate&#39;) * -1 as &#39;Attrition_Rate&#39;;\nt1_CYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYATT = filter Attrition by(&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYATT = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt1_CYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYATTRATE = filter Attrition by(&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYATTRATE = filter Attrition by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_ATT_RATE&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD ATTRate --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nAttrition_Rate = load &quot;APM_CPM&quot;;\nAttrition_Rate = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_ATT&quot;).asString()}});\nAttrition_Rate = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}});\nAttrition_Rate = foreach Attrition_Rate generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Attrition&#39;) * -1 as &#39;Attrition_Product&#39;, sum(&#39;Attrition_Rate&#39;) * -1 as &#39;Attrition_Rate&#39;;\nt1_CYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in{{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYATTRATE = filter Attrition_Rate by(&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYATTRATE = filter Attrition_Rate by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD_ATT_Rate&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD Pipegen--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nPipegen = load &quot;APM_CPM&quot;;\nPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_PIPEGEN&quot;).asString()}});\nPipegen = filter Pipegen by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nPipegen = foreach Pipegen generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;Pipegen&#39;) as &#39;Pipegen&#39;;\nt1_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYPipegen = filter Pipegen by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYPipegen = filter Pipegen by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_PIPEGEN&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD HC--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nHC = load &quot;APM_CPM&quot;;\nHC = filter HC by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_HC&quot;).asString()}});\nHC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nHC = foreach HC generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;SE&#39;) as &#39;SE&#39;, sum(&#39;AE&#39;) as &#39;AE&#39;, sum(&#39;Co_Prime&#39;) as &#39;Co_Prime&#39;;\nt0_CYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_HC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_CYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt0_PYHC = filter HC by  (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt1_PYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYHC = filter HC by  (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYHC = filter HC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYHC = filter HC by  (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYHC = filter HC by  (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYHC = filter HC by  (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYHC = filter HC by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt1_PY_2_HC = filter HC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_00&quot;).asString()}}&quot;);\nt2_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt3_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt4_PY_2_HC = filter HC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nYTD_PY_2_HC = filter HC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD SW--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nSW = load &quot;APM_CPM&quot;;\nSW = filter SW by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_SW&quot;).asString()}});\nSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nSW = foreach SW generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;SWE&#39;) as &#39;SWE&#39;;\nt1_CYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYSW = filter SW by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYSW = filter SW by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD INFRA--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nINFRA = load &quot;APM_CPM&quot;;\nINFRA = filter INFRA by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_SW&quot;).asString()}});\nINFRA = filter INFRA by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nINFRA = foreach INFRA generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;INFRA&#39;) as &#39;INFRA&#39;;\nt1_CYINFRA = filter INFRA by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYINFRA = filter INFRA by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYINFRA = filter INFRA by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYINFRA = filter INFRA by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYINFRA = filter INFRA by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYINFRA = filter INFRA by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYINFRA = filter INFRA by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYINFRA = filter INFRA by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYINFRA = filter INFRA by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYINFRA = filter INFRA by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD CC--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nCC = load &quot;APM_CPM&quot;;\n CC = filter CC by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_CC&quot;).asString()}});\nCC = filter CC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nCC = foreach CC generate  &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;GMV&#39;) as &#39;GMV&#39;, sum(&#39;GMV&#39;) as &#39;GMV_Touched&#39;,sum(&#39;Sites&#39;) as &#39;Sites&#39;,sum(&#39;Sites&#39;) as &#39;Sites_Touched&#39;;\nt1_CYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYCC = filter CC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYCC = filter CC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYCC = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYCC = filter CC by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nYTD_CYCC_Sites = filter CC by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYCC_Sites = filter CC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD DEALS--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nDEALS = load &quot;APM_CPM&quot;;\nDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_HC&quot;).asString()}});\nDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nDEALS = filter DEALS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nDEALS = foreach DEALS generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;X10M_Deals&#39;) as &#39;X10M_Deals&#39;, sum(&#39;X10M&#39;) as &#39;X10M&#39;, sum(&#39;Runrate_Volume&#39;) as &#39;Runrate_Volume&#39;;\nt1_CYDEALS = filter DEALS by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYDEALS = filter DEALS by  (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYDEALS = filter DEALS by  (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYDEALS = filter DEALS by  (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYDEALS = filter DEALS by  (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYDEALS = filter DEALS by  (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYDEALS = filter DEALS by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYDEALS = filter DEALS by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYDEALS = filter DEALS by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYDEALS = filter DEALS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_DEALS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD LOGO--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nLOGO = load &quot;APM_CPM&quot;;\nLOGO = filter LOGO by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_LOGO&quot;).asString()}});\nLOGO = filter LOGO by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nLOGO = foreach LOGO generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;New_Logos&#39;) as &#39;New_Logos&#39;;\nt1_CYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYLOGO = filter LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYLOGO = filter LOGO by  (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYLOGO = filter LOGO by (&#39;Quarter&#39; in{{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;value&quot;).asString()}}&quot;);\nYTD_PYLOGO = filter LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD LOST_LOGO--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nLOST_LOGO = load &quot;APM_CPM&quot;;\nLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_LOST_LOGO&quot;).asString()}});;\nLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nLOST_LOGO = foreach LOST_LOGO generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;Lost_Logo_Count&#39;) as &#39;Lost_Logos&#39;;\nt1_CYLOST_LOGO = filter LOST_LOGO by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYLOST_LOGO = filter LOST_LOGO by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYLOST_LOGO = filter LOST_LOGO by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_LOST_LOGO&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD REDACCOUNTS--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nREDACCOUNTS = load &quot;APM_CPM&quot;;\nREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_REDACCOUNTS&quot;).asString()}});\nREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\n REDACCOUNTS = foreach REDACCOUNTS generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Red_Accounts&#39;) as &#39;Red_Accounts&#39;; \nt1_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYREDACCOUNTS = filter REDACCOUNTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_REDACCOUNTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD T_P--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\n\nT_P = load &quot;APM_CPM&quot;;\nT_P = foreach T_P generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;CTS&#39;)*100 as &#39;CTS&#39;;\nt1_CYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYT_P = filter T_P by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_T_P&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYT_P = filter T_P by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYT_P = filter T_P by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYT_P = filter T_P by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYT_P = filter T_P by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD TRANSACTION--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\n\nTRANSACTION = load &quot;APM_CPM&quot;;\n TRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_TRANSACTION&quot;).asString()}});\nTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nTRANSACTION = foreach TRANSACTION generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;Transactions_Core&#39;) as &#39;Transactions&#39;;\nt1_CYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYTRANSACTION = filter TRANSACTION by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_TRANSACTION&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;); \n-------------------------------------------------------------------------------------------------LOAD AVAILABILITY--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nAVAILABILITY = load &quot;APM_CPM&quot;;\nAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nAVAILABILITY = foreach AVAILABILITY generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,  sum(&#39;Availability&#39;)*100 as &#39;Availability&#39; ;\nt1_CYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt4_CYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYAVAILABILITY = filter AVAILABILITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD EVENTS--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\nEVENTS = load &quot;APM_CPM&quot;;EVENTS  = filter EVENTS by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_EVENTS&quot;).asString()}});\n EVENTS = filter EVENTS by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nEVENTS = foreach EVENTS generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;World_Tours_Trailhead&#39;) as &#39;World_Tours_Trailhead&#39;;\nt1_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYEVENTS = filter EVENTS by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYEVENTS = filter EVENTS by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYEVENTS = filter EVENTS by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EVENTS&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD OTHER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\n\nOTHER = load &quot;APM_CPM&quot;;OTHER  = filter OTHER by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_OTHER&quot;).asString()}});\n OTHER = filter OTHER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nOTHER = foreach OTHER generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Marketing_Events_Other&#39;) as &#39;Marketing_Events_Other&#39;;\nt1_CYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYOTHER = filter OTHER by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYOTHER = filter OTHER by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_OTHER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD EBC--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nEBC = load &quot;APM_CPM&quot;;EBC  = filter EBC by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_EBC&quot;).asString()}});\n EBC = filter EBC by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nEBC = foreach EBC generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;EBC_s&#39;) as &#39;EBC_s&#39;;\nt1_CYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYEBC = filter EBC by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD Dreamforce EBCD--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nEBCD = load &quot;APM_CPM&quot;;EBCD  = filter EBCD by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_EBC&quot;).asString()}});\n EBCD = filter EBCD by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nEBCD = foreach EBCD generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Dreamforce_EBC&#39;) as &#39;EBC_Dreamforce&#39;;\nt1_CYEBCD = filter EBCD by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYEBCD = filter EBCD by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYEBCD = filter EBCD by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYEBCD = filter EBCD by (&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_EBC&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD CUSTOMER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\nCUSTOMER = load &quot;APM_CPM&quot;;CUSTOMER  = filter CUSTOMER by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_CUSTOMER&quot;).asString()}});\n CUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nCUSTOMER = foreach CUSTOMER generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;Customer&#39;) as &#39;Customer&#39;;\nt1_CYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYCUSTOMER = filter CUSTOMER by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYCUSTOMER = filter CUSTOMER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYCUSTOMER = filter CUSTOMER by(&#39;Quarter&#39; in  {{cell(DASHBOARD_PARAMETER.selection,0,&quot;YTD_CUSTOMER&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD SHARE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nSHARE = load &quot;APM_CPM&quot;;SHARE  = filter SHARE by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_SHARE&quot;).asString()}});\nSHARE = foreach SHARE generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;, sum(&#39;TAM&#39;) as &#39;TAM&#39;;\nt1_CYSHARE = filter SHARE by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYSHARE = filter SHARE by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYSHARE = filter SHARE by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYSHARE = filter SHARE by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYSHARE = filter SHARE by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYSHARE = filter SHARE by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYSHARE = filter SHARE by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYSHARE = filter SHARE by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYSHARE = filter SHARE by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYSHARE = filter SHARE by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD CSG--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nCSG = load &quot;APM_CPM&quot;;CSG  = filter CSG by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_CSG&quot;).asString()}});\n CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nCSG = foreach CSG generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;CSM_Headcount_Headcount&#39;) as &#39;CSM_Headcount&#39;,sum(&#39;PSM_Headcount&#39;) as &#39;PSM_Headcount&#39;;\nt1_CYCSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYCSG = filter CSG by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYCSG = filter CSG by(&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYCSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYCSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYCSG = filter CSG by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYCSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYCSG = filter CSG by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYCSG = filter CSG by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYCSG = filter CSG by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);t1_PY_2_CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_00&quot;).asString()}}&quot;);\nt2_PY_2_CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt3_PY_2_CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt4_PY_2_CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nYTD_PY_2_CSG = filter CSG by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD TRailhead Badges--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\n BADGES = load &quot;APM_CPM&quot;;BADGES  = filter BADGES by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_BADGES&quot;).asString()}});\n BADGES = filter BADGES by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nBADGES = foreach BADGES generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Trailhead_Badges&#39;) as &#39;Trailhead_Badges&#39;;\nt1_CYBADGES = filter BADGES by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYBADGES = filter BADGES by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYBADGES = filter BADGES by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYBADGES = filter BADGES by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYBADGES = filter BADGES by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYBADGES = filter BADGES by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYBADGES = filter BADGES by  (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYBADGES = filter BADGES by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYBADGES = filter BADGES by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYBADGES = filter BADGES by  (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD TRailhead TRAILBLAZER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nTRAILBLAZER = load &quot;APM_CPM&quot;;TRAILBLAZER  = filter TRAILBLAZER by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_TRAILBLAZER&quot;).asString()}});\n TRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nTRAILBLAZER = foreach TRAILBLAZER generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Trailblazers&#39;) as &#39;Trailblazers&#39;;\nt1_CYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYTRAILBLAZER = filter TRAILBLAZER by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYTRAILBLAZER = filter TRAILBLAZER by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYTRAILBLAZER = filter TRAILBLAZER by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYTRAILBLAZER = filter TRAILBLAZER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD TRailhead Ranger--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nRANGER = load &quot;APM_CPM&quot;;RANGER  = filter RANGER by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_RANGER&quot;).asString()}});\n RANGER = filter RANGER by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nRANGER = foreach RANGER generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Ranger&#39;) as &#39;Ranger&#39;;\nt1_CYRANGER = filter RANGER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYRANGER = filter RANGER by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYRANGER = filter RANGER by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYRANGER = filter RANGER by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYRANGER = filter RANGER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYRANGER = filter RANGER by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYRANGER = filter RANGER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYRANGER = filter RANGER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYRANGER = filter RANGER by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYRANGER = filter RANGER by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD HEROKU--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nHEROKU = load &quot;APM_CPM&quot;;HEROKU  = filter HEROKU by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_HEROKU&quot;).asString()}});\n HEROKU = filter HEROKU by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nHEROKU = foreach HEROKU generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;Net_Billings&#39;) as &#39;Net_Billings&#39;;\nt1_CYHEROKU = filter HEROKU by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYHEROKU = filter HEROKU by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYHEROKU = filter HEROKU by(&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYHEROKU = filter HEROKU by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYHEROKU = filter HEROKU by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYHEROKU = filter HEROKU by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYHEROKU = filter HEROKU by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYHEROKU = filter HEROKU by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYHEROKU = filter HEROKU by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYHEROKU = filter HEROKU by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\n-------------------------------------------------------------------------------------------------LOAD Productivity--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nPRODUCTIVITY = load &quot;APM_CPM&quot;;PRODUCTIVITY  = filter PRODUCTIVITY by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_PRODUCTIVITY&quot;).asString()}});\n PRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nPRODUCTIVITY = foreach PRODUCTIVITY generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;{{cell(Quarter_1.selection,0,&quot;Metric_Productivity&quot;).asString()}}&#39;) as &#39;Productivity&#39;;\nt1_CYPRODUCTIVITY = filter PRODUCTIVITY by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYPRODUCTIVITY = filter PRODUCTIVITY by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);;\n-------------------------------------------------------------------------------------------------LOAD ISV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\nISV = load &quot;APM_CPM&quot;;ISV  = filter ISV by (&#39;Quarter&#39; in {{cell(DASHBOARD_PARAMETER.selection,0,&quot;Quarters_ISV&quot;).asString()}});\n ISV = filter ISV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value&quot;).asString()}});\nISV = foreach ISV generate &#39;Quarter&#39; as &#39;Quarter&#39;, &#39;Fiscal_Year&#39; as &#39;Fiscal_Year&#39;,sum(&#39;ACV_Take_Off&#39;) as &#39;ACV_Take_Off&#39;,sum(&#39;ACV_Landing_Performance&#39;) as &#39;ACV_Landing_Performance&#39;;\nt1_CYISV = filter ISV by(&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt1_PYISV = filter ISV by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_0&quot;).asString()}}&quot;);\nt2_CYISV = filter ISV by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt2_PYISV = filter ISV by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_1&quot;).asString()}}&quot;);\nt3_CYISV = filter ISV by (&#39;Quarter&#39; in {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nt3_PYISV = filter ISV by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_2&quot;).asString()}}&quot;);\nt4_CYISV = filter ISV by (&#39;Quarter&#39; in   {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nt4_PYISV = filter ISV by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_3&quot;).asString()}}&quot;);\nYTD_CYISV = filter ISV by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_5&quot;).asString()}}&quot;);\nYTD_PYISV = filter ISV by (&#39;Quarter&#39; in  {{cell(Quarter_1.selection,0,&quot;value_YTD&quot;).asString()}}) &amp;&amp; (&#39;Fiscal_Year&#39; == &quot;{{cell(Fiscal_Year_Selector_1.selection,0,&quot;year_4&quot;).asString()}}&quot;);\nn-------------------------------------------------------------------------------------------------RESULT ACV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\n\n\nresult_ACV = group t1_CYACV by all full, t2_CYACV by all full, t3_CYACV by all full, t4_CYACV by all full, t1_PYACV by all full, t2_PYACV by all full, t3_PYACV by all full, t4_PYACV by all full, YTD_CYACV by all full, YTD_PYACV by all;\nresult_ACV = foreach result_ACV generate &quot;Financial Measures&quot; as &#39;Metric Group&#39;, &quot;ACV&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYACV.&#39;ACV&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYACV.&#39;ACV&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYACV.&#39;ACV&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYACV.&#39;ACV&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYACV.&#39;ACV&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYACV.&#39;ACV&#39;), 0) - coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0)) / coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Million&quot; as &#39;Unit&#39;, &quot;A1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT AOV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nresult_AOV = group t1_CYAOV by all full, t2_CYAOV by all full, t3_CYAOV by all full, t4_CYAOV by all full, t1_PYAOV by all full, t2_PYAOV by all full, t3_PYAOV by all full, t4_PYAOV by all full,YTD_CYAOV by all full, YTD_PYAOV by all;\nresult_AOV = foreach result_AOV generate &quot;Financial Measures&quot; as &#39;Metric Group&#39;, &quot;AOV&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;, coalesce(sum(t1_CYAOV.&#39;AOV&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYAOV.&#39;AOV&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYAOV.&#39;AOV&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYAOV.&#39;AOV&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYAOV.&#39;AOV&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYAOV.&#39;AOV&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYAOV.&#39;AOV&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYAOV.&#39;AOV&#39;), 0) as &#39;t4_PY&#39;,  coalesce(sum(YTD_CYAOV.&#39;AOV&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYAOV.&#39;AOV&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(t1_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(t1_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(t2_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(t2_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(t3_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(t3_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(t4_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(t4_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYAOV.&#39;AOV&#39;), 0) - coalesce(sum(YTD_PYAOV.&#39;AOV&#39;), 0)) / coalesce(sum(YTD_PYAOV.&#39;AOV&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;,&quot;Million&quot; as &#39;Unit&#39;,&quot;A2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT ATT--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nresult_ATT = group t1_CYATT by all full, t2_CYATT by all full, t3_CYATT by all full, t4_CYATT by all full, t1_PYATT by all full, t2_PYATT by all full, t3_PYATT by all full, t4_PYATT by all full, YTD_CYATT by all full,YTD_PYATT by all full, t1_CYATTRATE by all full, t2_CYATTRATE by all full, t3_CYATTRATE by all full, t4_CYATTRATE by all full, t1_PYATTRATE by all full, t2_PYATTRATE by all full, t3_PYATTRATE by all full, t4_PYATTRATE by all full, YTD_CYATTRATE by all full,YTD_PYATTRATE by all;\nresult_ATT = foreach result_ATT generate &quot;Financial Measures&quot; as &#39;Metric Group&#39;, &quot;ATT&quot; as &#39;Metric&#39;,&quot;TTM&quot; as &#39;Rate Measure&#39;, coalesce(sum(t1_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYATT.&#39;Attrition_Product&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYATT.&#39;Attrition_Product&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYATT.&#39;Attrition_Product&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYATT.&#39;Attrition_Product&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYATT.&#39;Attrition_Product&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYATTRATE.&#39;Attrition_Product&#39;), 0) as &#39;YTD_PY&#39;,coalesce(sum(t1_CYATTRATE.&#39;Attrition_Rate&#39;), 0)  * 100 as &#39;YoY Q1 Growth&#39;,coalesce(sum(t2_CYATTRATE.&#39;Attrition_Rate&#39;), 0)  * 100 as &#39;YoY Q2 Growth&#39;,coalesce(sum(t3_CYATTRATE.&#39;Attrition_Rate&#39;), 0) * 100 as &#39;YoY Q3 Growth&#39;,coalesce(sum(t4_CYATTRATE.&#39;Attrition_Rate&#39;), 0)* 100 as &#39;YoY Q4 Growth&#39;,coalesce(sum(YTD_CYATTRATE.&#39;Attrition_Rate&#39;), 0)* 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;,&quot;Million&quot; as &#39;Unit&#39;,&quot;A3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT Pipegen--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nresult_Pipegen = group t1_CYPipegen by all full, t2_CYPipegen by all full, t3_CYPipegen by all full, t4_CYPipegen by all full, t1_PYPipegen by all full, t2_PYPipegen by all full, t3_PYPipegen by all full, t4_PYPipegen by all full, YTD_CYPipegen by all full,YTD_PYPipegen by all;\nresult_Pipegen = foreach result_Pipegen generate &quot;PipeGen Measures&quot; as &#39;Metric Group&#39;, &quot;Pipeline&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYPipegen.&#39;Pipegen&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYPipegen.&#39;Pipegen&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYPipegen.&#39;Pipegen&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYPipegen.&#39;Pipegen&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYPipegen.&#39;Pipegen&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(t1_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(t1_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(t2_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(t2_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(t3_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(t3_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(t4_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(t4_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYPipegen.&#39;Pipegen&#39;), 0) - coalesce(sum(YTD_PYPipegen.&#39;Pipegen&#39;), 0)) / coalesce(sum(YTD_PYPipegen.&#39;Pipegen&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Million&quot; as &#39;Unit&#39;,&quot;B1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT AE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nresult_AE = group t1_CYHC by all full, t2_CYHC by all full, t3_CYHC by all full, t4_CYHC by all full, t1_PYHC by all full, t2_PYHC by all full, t3_PYHC by all full, t4_PYHC by all full, YTD_CYHC by all full,YTD_PYHC by all full,  t1_PY_2_HC by all full, t2_PY_2_HC by all full, t3_PY_2_HC by all full, t4_PY_2_HC by all full,YTD_PY_2_HC by all;\nresult_AE = foreach result_AE generate &quot;Distribution Headcount&quot; as &#39;Metric Group&#39;, &quot;AEs&quot; as &#39;Metric&#39;,&quot;24mo CAGR&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYHC.&#39;AE&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYHC.&#39;AE&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYHC.&#39;AE&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYHC.&#39;AE&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYHC.&#39;AE&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYHC.&#39;AE&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYHC.&#39;AE&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYHC.&#39;AE&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYHC.&#39;AE&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0) as &#39;YTD_PY&#39;,(power(coalesce(sum(t1_CYHC.&#39;AE&#39;), 0) / coalesce(sum(t1_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q1 Growth&#39;,(power(coalesce(sum(t2_CYHC.&#39;AE&#39;), 0) / coalesce(sum(t2_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q2 Growth&#39;,(power(coalesce(sum(t3_CYHC.&#39;AE&#39;), 0) / coalesce(sum(t3_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q3 Growth&#39;,(power(coalesce(sum(t4_CYHC.&#39;AE&#39;), 0) / coalesce(sum(t4_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100as &#39;YoY Q4 Growth&#39;,(power(coalesce(sum(YTD_CYHC.&#39;AE&#39;), 0) / coalesce(sum(YTD_PY_2_HC.&#39;AE&#39;), 0),(1/2))-1)*100as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Headcount&quot; as &#39;Unit&#39;,&quot;C1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT SE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\nresult_SE = group t1_CYHC by all full, t2_CYHC by all full, t3_CYHC by all full, t4_CYHC by all full, t1_PYHC by all full, t2_PYHC by all full, t3_PYHC by all full, t4_PYHC by all full, YTD_CYHC by all full,YTD_PYHC by all full,  t1_PY_2_HC by all full, t2_PY_2_HC by all full, t3_PY_2_HC by all full, t4_PY_2_HC by all full,YTD_PY_2_HC by all;\nresult_SE = foreach result_SE generate &quot;Distribution Headcount&quot; as &#39;Metric Group&#39;, &quot;SEs&quot; as &#39;Metric&#39;,&quot;24mo CAGR&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYHC.&#39;SE&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYHC.&#39;SE&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYHC.&#39;SE&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYHC.&#39;SE&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYHC.&#39;SE&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYHC.&#39;SE&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYHC.&#39;SE&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYHC.&#39;SE&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYHC.&#39;SE&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYHC.&#39;SE&#39;), 0) as &#39;YTD_PY&#39;,(power(coalesce(sum(t1_CYHC.&#39;SE&#39;), 0) / coalesce(sum(t1_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q1 Growth&#39;,(power(coalesce(sum(t2_CYHC.&#39;SE&#39;), 0) / coalesce(sum(t2_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q2 Growth&#39;,(power(coalesce(sum(t3_CYHC.&#39;SE&#39;), 0) / coalesce(sum(t3_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q3 Growth&#39;,(power(coalesce(sum(t4_CYHC.&#39;SE&#39;), 0) / coalesce(sum(t4_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YoY Q4 Growth&#39;,(power(coalesce(sum(YTD_CYHC.&#39;SE&#39;), 0) / coalesce(sum(YTD_PY_2_HC.&#39;SE&#39;), 0),(1/2))-1)*100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Headcount&quot; as &#39;Unit&#39;,&quot;C2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT CO PRIMED--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_Co_Prime = group t1_CYHC by all full, t2_CYHC by all full, t3_CYHC by all full, t4_CYHC by all full, t1_PYHC by all full, t2_PYHC by all full, t3_PYHC by all full, t4_PYHC by all full, YTD_CYHC by all full,YTD_PYHC by all full,  t1_PY_2_HC by all full, t2_PY_2_HC by all full, t3_PY_2_HC by all full, t4_PY_2_HC by all full,YTD_PY_2_HC by all;\nresult_Co_Prime = foreach result_Co_Prime generate &quot;Distribution Headcount&quot; as &#39;Metric Group&#39;, &quot;Co Prime&quot; as &#39;Metric&#39;,&quot;24mo CAGR&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYHC.&#39;Co_Prime&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYHC.&#39;Co_Prime&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYHC.&#39;Co_Prime&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0) as &#39;YTD_PY&#39;,(power(coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(t1_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YoY Q1 Growth&#39;,(power(coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(t2_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YoY Q2 Growth&#39;,(power(coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(t3_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YoY Q3 Growth&#39;,(power(coalesce(sum(t4_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(t4_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YoY Q4 Growth&#39;,(power(coalesce(sum(YTD_CYHC.&#39;Co_Prime&#39;), 0) / coalesce(sum(YTD_PY_2_HC.&#39;Co_Prime&#39;), 0),(1/2))-1)*100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Headcount&quot; as &#39;Unit&#39;,&quot;C3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT SWE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_SWE = group t1_CYSW by all full, t2_CYSW by all full, t3_CYSW by all full, t4_CYSW by all full, t1_PYSW by all full, t2_PYSW by all full, t3_PYSW by all full, t4_PYSW by all full, YTD_CYSW by all full,YTD_PYSW by all;\nresult_SWE = foreach result_SWE generate &quot;R&amp;D/T&amp;P Headcount&quot; as &#39;Metric Group&#39;, &quot;SWE HC&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYSW.&#39;SWE&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYSW.&#39;SWE&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYSW.&#39;SWE&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYSW.&#39;SWE&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYSW.&#39;SWE&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYSW.&#39;SWE&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYSW.&#39;SWE&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYSW.&#39;SWE&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYSW.&#39;SWE&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYSW.&#39;SWE&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(t1_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(t1_PYSW.&#39;SWE&#39;), 0)) as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(t2_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(t2_PYSW.&#39;SWE&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(t3_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(t3_PYSW.&#39;SWE&#39;), 0))  as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(t4_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(t4_PYSW.&#39;SWE&#39;), 0)) as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYSW.&#39;SWE&#39;), 0) - coalesce(sum(YTD_PYSW.&#39;SWE&#39;), 0)) / coalesce(sum(YTD_PYSW.&#39;SWE&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Headcount&quot; as &#39;Unit&#39;,&quot;F1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT INFRA--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_INFRA = group t1_CYINFRA by all full, t2_CYINFRA by all full, t3_CYINFRA by all full, t4_CYINFRA by all full, t1_PYINFRA by all full, t2_PYINFRA by all full, t3_PYINFRA by all full, t4_PYINFRA by all full, YTD_CYINFRA by all full,YTD_PYINFRA by all;\nresult_INFRA = foreach result_INFRA generate &quot;R&amp;D/T&amp;P Headcount&quot; as &#39;Metric Group&#39;, &quot;Infra Org HC&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYINFRA.&#39;INFRA&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYINFRA.&#39;INFRA&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYINFRA.&#39;INFRA&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYINFRA.&#39;INFRA&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYINFRA.&#39;INFRA&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYINFRA.&#39;INFRA&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYINFRA.&#39;INFRA&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYINFRA.&#39;INFRA&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYINFRA.&#39;INFRA&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYINFRA.&#39;INFRA&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYINFRA.&#39;INFRA&#39;), 0) - coalesce(sum(t1_PYINFRA.&#39;INFRA&#39;), 0)) / coalesce(sum(t1_PYINFRA.&#39;INFRA&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYINFRA.&#39;INFRA&#39;), 0) - coalesce(sum(t2_PYINFRA.&#39;INFRA&#39;), 0)) / coalesce(sum(t2_PYINFRA.&#39;INFRA&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYINFRA.&#39;INFRA&#39;), 0) - coalesce(sum(t3_PYINFRA.&#39;INFRA&#39;), 0)) / coalesce(sum(t3_PYINFRA.&#39;INFRA&#39;), 0))  as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYINFRA.&#39;INFRA&#39;), 0) - coalesce(sum(t4_PYINFRA.&#39;INFRA&#39;), 0)) / coalesce(sum(t4_PYINFRA.&#39;INFRA&#39;), 0)) as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYINFRA.&#39;INFRA&#39;), 0) - coalesce(sum(YTD_PYINFRA.&#39;INFRA&#39;), 0)) / coalesce(sum(YTD_PYINFRA.&#39;INFRA&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Million&quot; as &#39;Unit&#39;,&quot;F2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT GMV--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_GMV =  group t1_CYCC by all full, t2_CYCC by all full, t3_CYCC by all full, t4_CYCC by all full, t1_PYCC by all full, t2_PYCC by all full, t3_PYCC by all full, t4_PYCC by all full, YTD_CYCC by all full,YTD_PYCC by all;\nresult_GMV = foreach result_GMV generate &quot;Commerce Cloud Digital Features&quot; as &#39;Metric Group&#39;, &quot;GMV&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYCC.&#39;GMV&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYCC.&#39;GMV&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYCC.&#39;GMV&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYCC.&#39;GMV&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYCC.&#39;GMV&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYCC.&#39;GMV&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYCC.&#39;GMV&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYCC.&#39;GMV&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYCC.&#39;GMV&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYCC.&#39;GMV&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYCC.&#39;GMV&#39;), 0) - coalesce(sum(t1_PYCC.&#39;GMV&#39;), 0)) / coalesce(sum(t1_PYCC.&#39;GMV&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYCC.&#39;GMV&#39;), 0) - coalesce(sum(t2_PYCC.&#39;GMV&#39;), 0)) / coalesce(sum(t2_PYCC.&#39;GMV&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYCC.&#39;GMV&#39;), 0) - coalesce(sum(t3_PYCC.&#39;GMV&#39;), 0)) / coalesce(sum(t3_PYCC.&#39;GMV&#39;), 0)) as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYCC.&#39;GMV&#39;), 0) - coalesce(sum(t4_PYCC.&#39;GMV&#39;), 0)) / coalesce(sum(t4_PYCC.&#39;GMV&#39;), 0))  as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYCC.&#39;GMV&#39;), 0) - coalesce(sum(YTD_PYCC.&#39;GMV&#39;), 0)) / coalesce(sum(YTD_PYCC.&#39;GMV&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Million&quot; as &#39;Unit&#39;,&quot;D1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT Sites--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_Sites = group t1_CYCC by all full, t2_CYCC by all full, t3_CYCC by all full, t4_CYCC by all full, t1_PYCC by all full, t2_PYCC by all full, t3_PYCC by all full, t4_PYCC by all full, YTD_CYCC by all full,YTD_PYCC by all ;\nresult_Sites = foreach result_Sites generate &quot;Commerce Cloud Digital Features&quot; as &#39;Metric Group&#39;, &quot;Sites&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYCC.&#39;Sites&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYCC.&#39;Sites&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYCC.&#39;Sites&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYCC.&#39;Sites&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYCC.&#39;Sites&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYCC.&#39;Sites&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYCC.&#39;Sites&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYCC.&#39;Sites&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYCC.&#39;Sites&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYCC.&#39;Sites&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYCC.&#39;Sites&#39;), 0) - coalesce(sum(t1_PYCC.&#39;Sites&#39;), 0)) / coalesce(sum(t1_PYCC.&#39;Sites&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYCC.&#39;Sites&#39;), 0) - coalesce(sum(t2_PYCC.&#39;Sites&#39;), 0)) / coalesce(sum(t2_PYCC.&#39;Sites&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYCC.&#39;Sites&#39;), 0) - coalesce(sum(t3_PYCC.&#39;Sites&#39;), 0)) / coalesce(sum(t3_PYCC.&#39;Sites&#39;), 0)) as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYCC.&#39;Sites&#39;), 0) - coalesce(sum(t4_PYCC.&#39;Sites&#39;), 0)) / coalesce(sum(t4_PYCC.&#39;Sites&#39;), 0))  as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYCC.&#39;Sites&#39;), 0) - coalesce(sum(YTD_PYCC.&#39;Sites&#39;), 0)) / coalesce(sum(YTD_PYCC.&#39;Sites&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Million&quot; as &#39;Unit&#39;,&quot;D2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT DEALS X!10M Deals--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_X10M_Deals = group t1_CYDEALS by all full, t2_CYDEALS by all full, t3_CYDEALS by all full, t4_CYDEALS by all full, t1_PYDEALS by all full, t2_PYDEALS by all full, t3_PYDEALS by all full, t4_PYDEALS by all full, YTD_CYDEALS by all full, YTD_PYDEALS by all;\nresult_X10M_Deals = foreach result_X10M_Deals generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;$10M+ Deals&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYDEALS.&#39;X10M_Deals&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(t1_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(t1_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(t2_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(t2_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(t3_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(t3_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(t4_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(t4_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYDEALS.&#39;X10M_Deals&#39;), 0) - coalesce(sum(YTD_PYDEALS.&#39;X10M_Deals&#39;), 0)) / coalesce(sum(YTD_PYDEALS.&#39;X10M_Deals&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Count&quot; as &#39;Unit&#39;,&quot;E1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT X10M--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_X10M = group t1_CYDEALS by all full, t2_CYDEALS by all full, t3_CYDEALS by all full, t4_CYDEALS by all full, t1_PYDEALS by all full, t2_PYDEALS by all full, t3_PYDEALS by all full, t4_PYDEALS by all full, YTD_CYDEALS by all full, YTD_PYDEALS by all;\nresult_X10M = foreach result_X10M generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;$1M+ deals&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYDEALS.&#39;X10M&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYDEALS.&#39;X10M&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYDEALS.&#39;X10M&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYDEALS.&#39;X10M&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYDEALS.&#39;X10M&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYDEALS.&#39;X10M&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYDEALS.&#39;X10M&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYDEALS.&#39;X10M&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYDEALS.&#39;X10M&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYDEALS.&#39;X10M&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(t1_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(t1_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(t2_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(t2_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(t3_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(t3_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(t4_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(t4_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYDEALS.&#39;X10M&#39;), 0) - coalesce(sum(YTD_PYDEALS.&#39;X10M&#39;), 0)) / coalesce(sum(YTD_PYDEALS.&#39;X10M&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;Count&quot; as &#39;Unit&#39;,&quot;E2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT DEALS Runrate--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_Runrate_Volume = group t1_CYDEALS by all full, t2_CYDEALS by all full, t3_CYDEALS by all full, t4_CYDEALS by all full, t1_PYDEALS by all full, t2_PYDEALS by all full, t3_PYDEALS by all full, t4_PYDEALS by all full, YTD_CYDEALS by all full, YTD_PYDEALS by all;\nresult_Runrate_Volume = foreach result_Runrate_Volume generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;Run Rate Volume&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYDEALS.&#39;Runrate_Volume&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(t1_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(t1_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(t2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(t2_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(t3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(t3_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(t4_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(t4_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYDEALS.&#39;Runrate_Volume&#39;), 0) - coalesce(sum(YTD_PYDEALS.&#39;Runrate_Volume&#39;), 0)) / coalesce(sum(YTD_PYDEALS.&#39;Runrate_Volume&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;Run-rate is the count of opportunities that are less than a defined region &amp; segment threshold.&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT LOGO--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_LOGO = group t1_CYLOGO by all full, t2_CYLOGO by all full, t3_CYLOGO by all full, t4_CYLOGO by all full, t1_PYLOGO by all full, t2_PYLOGO by all full, t3_PYLOGO by all full, t4_PYLOGO by all full, YTD_CYLOGO by all full, YTD_PYLOGO by all;\nresult_LOGO = foreach result_LOGO generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;New Logos&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYLOGO.&#39;New_Logos&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYLOGO.&#39;New_Logos&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYLOGO.&#39;New_Logos&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYLOGO.&#39;New_Logos&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYLOGO.&#39;New_Logos&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYLOGO.&#39;New_Logos&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYLOGO.&#39;New_Logos&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYLOGO.&#39;New_Logos&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYLOGO.&#39;New_Logos&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYLOGO.&#39;New_Logos&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYLOGO.&#39;New_Logos&#39;), 0) - coalesce(sum(t1_PYLOGO.&#39;New_Logos&#39;), 0)) / coalesce(sum(t1_PYLOGO.&#39;New_Logos&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYLOGO.&#39;New_Logos&#39;), 0) - coalesce(sum(t2_PYLOGO.&#39;New_Logos&#39;), 0)) / coalesce(sum(t2_PYLOGO.&#39;New_Logos&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYLOGO.&#39;New_Logos&#39;), 0) - coalesce(sum(t3_PYLOGO.&#39;New_Logos&#39;), 0)) / coalesce(sum(t3_PYLOGO.&#39;New_Logos&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYLOGO.&#39;New_Logos&#39;), 0) - coalesce(sum(t4_PYLOGO.&#39;New_Logos&#39;), 0)) / coalesce(sum(t4_PYLOGO.&#39;New_Logos&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYLOGO.&#39;New_Logos&#39;), 0) - coalesce(sum(YTD_PYLOGO.&#39;New_Logos&#39;), 0)) / coalesce(sum(YTD_PYLOGO.&#39;New_Logos&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E4&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT LOST LOGO--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_LOST_LOGO = group t1_CYLOST_LOGO by all full, t2_CYLOST_LOGO by all full, t3_CYLOST_LOGO by all full, t4_CYLOST_LOGO by all full, t1_PYLOST_LOGO by all full, t2_PYLOST_LOGO by all full, t3_PYLOST_LOGO by all full, t4_PYLOST_LOGO by all full, YTD_CYLOST_LOGO by all full, YTD_PYLOST_LOGO by all;\nresult_LOST_LOGO = foreach result_LOST_LOGO generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;Lost Logos&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) - coalesce(sum(t1_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) / coalesce(sum(t1_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) - coalesce(sum(t2_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) / coalesce(sum(t2_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) - coalesce(sum(t3_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) / coalesce(sum(t3_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) - coalesce(sum(t4_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) / coalesce(sum(t4_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYLOST_LOGO.&#39;Lost_Logos&#39;), 0) - coalesce(sum(YTD_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) / coalesce(sum(YTD_PYLOST_LOGO.&#39;Lost_Logos&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E5&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT REDACCOUNTS--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_REDACCOUNTS = group t1_CYREDACCOUNTS by all full, t2_CYREDACCOUNTS by all full, t3_CYREDACCOUNTS by all full, t4_CYREDACCOUNTS by all full, t1_PYREDACCOUNTS by all full, t2_PYREDACCOUNTS by all full, t3_PYREDACCOUNTS by all full, t4_PYREDACCOUNTS by all full, YTD_CYREDACCOUNTS by all full, YTD_PYREDACCOUNTS by all;\nresult_REDACCOUNTS = foreach result_REDACCOUNTS generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;Red Accounts&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(t1_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(t1_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(t2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(t2_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(t3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(t3_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(t4_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(t4_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYREDACCOUNTS.&#39;Red_Accounts&#39;), 0) - coalesce(sum(YTD_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) / coalesce(sum(YTD_PYREDACCOUNTS.&#39;Red_Accounts&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E6&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT Productivity--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_PRODUCTIVITY = group t1_CYACV by all full, t2_CYACV by all full, t3_CYACV by all full, t4_CYACV by all full, t1_PYACV by all full, t2_PYACV by all full, t3_PYACV by all full, t4_PYACV by all full, YTD_CYACV by all full, YTD_PYACV by all full,t0_CYHC by all full,t1_CYHC by all full, t2_CYHC by all full, t3_CYHC by all full, t4_CYHC by all full,t0_PYHC by all full, t1_PYHC by all full, t2_PYHC by all full, t3_PYHC by all full, t4_PYHC by all full, YTD_CYHC by all full, YTD_PYHC by all full, YTD_PY_2_HC by all  ;\nresult_PRODUCTIVITY = foreach result_PRODUCTIVITY generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;Productivity&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t1_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t0_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t0_CYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t1_CY&#39;, coalesce(sum(t2_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t2_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t1_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t2_CY&#39;, coalesce(sum(t3_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t3_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t2_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t3_CY&#39;, coalesce(sum(t4_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t4_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t4_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t3_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t4_CY&#39;, coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t0_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t0_PYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t1_PY&#39;,  coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t2_PY&#39;, coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t3_PY&#39;, coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t4_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t4_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(YTD_CYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0))/2) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;Co_Prime&#39;), 0))/2) as &#39;YTD_PY&#39;,((((coalesce(sum(t1_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t1_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t0_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t0_CYHC.&#39;Co_Prime&#39;), 0))/2))-(coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t0_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t0_PYHC.&#39;Co_Prime&#39;), 0))/2))))/(coalesce(sum(t1_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t0_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t0_PYHC.&#39;Co_Prime&#39;), 0))/2)) ) as &#39;YoY Q1 Growth&#39;,( ((coalesce(sum(t2_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t2_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t1_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_CYHC.&#39;Co_Prime&#39;), 0))/2))-(coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0))/2))))/(coalesce(sum(t2_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t1_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t1_PYHC.&#39;Co_Prime&#39;), 0))/2)) as &#39;YoY Q2 Growth&#39;, ((coalesce(sum(t3_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t3_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t2_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_CYHC.&#39;Co_Prime&#39;), 0))/2))-( coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0))/2)))/( coalesce(sum(t3_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t2_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t2_PYHC.&#39;Co_Prime&#39;), 0))/2)) as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t4_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t4_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t3_CYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_CYHC.&#39;Co_Prime&#39;), 0))/2))-(coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t4_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t4_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0))/2)))/(coalesce(sum(t4_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(t4_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t4_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(t3_PYHC.&#39;AE&#39;), 0)+coalesce(sum(t3_PYHC.&#39;Co_Prime&#39;), 0))/2)) as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYACV.&#39;ACV&#39;), 0)/((coalesce(sum(YTD_CYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_CYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0))/2))-( coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;Co_Prime&#39;), 0))/2)))/( coalesce(sum(YTD_PYACV.&#39;ACV&#39;), 0)/((coalesce(sum(YTD_PYHC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PYHC.&#39;Co_Prime&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;AE&#39;), 0)+coalesce(sum(YTD_PY_2_HC.&#39;Co_Prime&#39;), 0))/2)) as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E7&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT T_P--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_T_P = group t1_CYT_P by all full, t2_CYT_P by all full, t3_CYT_P by all full, t4_CYT_P by all full, t1_PYT_P by all full, t2_PYT_P by all full, t3_PYT_P by all full, t4_PYT_P by all full, YTD_CYT_P by all full, YTD_PYT_P by all;\nresult_T_P = foreach result_T_P generate &quot;Tech Details&quot; as &#39;Metric Group&#39;, &quot;T&amp;P Cost to Serve&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYT_P.&#39;CTS&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYT_P.&#39;CTS&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYT_P.&#39;CTS&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYT_P.&#39;CTS&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYT_P.&#39;CTS&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYT_P.&#39;CTS&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYT_P.&#39;CTS&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYT_P.&#39;CTS&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYT_P.&#39;CTS&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYT_P.&#39;CTS&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(t1_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(t1_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(t2_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(t2_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(t3_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(t3_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(t4_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(t4_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYT_P.&#39;CTS&#39;), 0) - coalesce(sum(YTD_PYT_P.&#39;CTS&#39;), 0)) / coalesce(sum(YTD_PYT_P.&#39;CTS&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;G1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT TRANSACTION--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_TRANSACTION = group t1_CYTRANSACTION by all full, t2_CYTRANSACTION by all full, t3_CYTRANSACTION by all full, t4_CYTRANSACTION by all full, t1_PYTRANSACTION by all full, t2_PYTRANSACTION by all full, t3_PYTRANSACTION by all full, t4_PYTRANSACTION by all full, YTD_CYTRANSACTION by all full, YTD_PYTRANSACTION by all;\nresult_TRANSACTION = foreach result_TRANSACTION generate &quot;Tech Details&quot; as &#39;Metric Group&#39;, &quot;Core Transactions / Requests&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYTRANSACTION.&#39;Transactions&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYTRANSACTION.&#39;Transactions&#39;), 0) - coalesce(sum(t1_PYTRANSACTION.&#39;Transactions&#39;), 0)) / coalesce(sum(t1_PYTRANSACTION.&#39;Transactions&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYTRANSACTION.&#39;Transactions&#39;), 0) - coalesce(sum(t2_PYTRANSACTION.&#39;Transactions&#39;), 0)) / coalesce(sum(t2_PYTRANSACTION.&#39;Transactions&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYTRANSACTION.&#39;Transactions&#39;), 0) - coalesce(sum(t3_PYTRANSACTION.&#39;Transactions&#39;), 0)) / coalesce(sum(t3_PYTRANSACTION.&#39;Transactions&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYTRANSACTION.&#39;Transactions&#39;), 0) - coalesce(sum(t4_PYTRANSACTION.&#39;Transactions&#39;), 0)) / coalesce(sum(t4_PYTRANSACTION.&#39;Transactions&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYTRANSACTION.&#39;Transactions&#39;), 0) - coalesce(sum(YTD_PYTRANSACTION.&#39;Transactions&#39;), 0)) / coalesce(sum(YTD_PYTRANSACTION.&#39;Transactions&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;Core infra only&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;G3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT AVAILABILITY--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_AVAILABILITY = group t1_CYAVAILABILITY by all full, t2_CYAVAILABILITY by all full, t3_CYAVAILABILITY by all full, t4_CYAVAILABILITY by all full, t1_PYAVAILABILITY by all full, t2_PYAVAILABILITY by all full, t3_PYAVAILABILITY by all full, t4_PYAVAILABILITY by all full, YTD_CYAVAILABILITY by all full, YTD_PYAVAILABILITY by all;\nresult_AVAILABILITY = foreach result_AVAILABILITY generate &quot;Tech Details&quot; as &#39;Metric Group&#39;, &quot;Availability %&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYAVAILABILITY.&#39;Availability&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(t1_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(t1_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(t2_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(t2_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(t3_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(t3_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(t4_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(t4_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYAVAILABILITY.&#39;Availability&#39;), 0) - coalesce(sum(YTD_PYAVAILABILITY.&#39;Availability&#39;), 0)) / coalesce(sum(YTD_PYAVAILABILITY.&#39;Availability&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;Core infra only&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;G2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT EVENTS--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_EVENTS = group t1_CYEVENTS by all full, t2_CYEVENTS by all full, t3_CYEVENTS by all full, t4_CYEVENTS by all full, t1_PYEVENTS by all full, t2_PYEVENTS by all full, t3_PYEVENTS by all full, t4_PYEVENTS by all full, YTD_CYEVENTS by all full, YTD_PYEVENTS by all;\nresult_EVENTS = foreach result_EVENTS generate &quot;Marketing Details&quot; as &#39;Metric Group&#39;, &quot;Marketing Events - World Tours &amp; Trailhead Live&quot; as &#39;Metric&#39;,&quot;NA&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(t1_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(t1_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(t2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(t2_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(t3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(t3_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(t4_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(t4_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYEVENTS.&#39;World_Tours_Trailhead&#39;), 0) - coalesce(sum(YTD_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) / coalesce(sum(YTD_PYEVENTS.&#39;World_Tours_Trailhead&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;H1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT OTHER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_OTHER = group t1_CYOTHER by all full, t2_CYOTHER by all full, t3_CYOTHER by all full, t4_CYOTHER by all full, t1_PYOTHER by all full, t2_PYOTHER by all full, t3_PYOTHER by all full, t4_PYOTHER by all full, YTD_CYOTHER by all full, YTD_PYOTHER by all;\nresult_OTHER = foreach result_OTHER generate &quot;Marketing Details&quot; as &#39;Metric Group&#39;, &quot;Marketing Events - Other&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYOTHER.&#39;Marketing_Events_Other&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(t1_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(t1_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(t2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(t2_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(t3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(t3_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(t4_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(t4_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYOTHER.&#39;Marketing_Events_Other&#39;), 0) - coalesce(sum(YTD_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) / coalesce(sum(YTD_PYOTHER.&#39;Marketing_Events_Other&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;CxOs (such as exec programs, dinners, etc), Event in a Box, Industry Events/Third Party Events (such as NRF, WEF, etc), Salesforce Basecamps (previously known as Essentials), Hospitality Events (such as Live Nation, sports events, etc), and Developer Workshop (such as TrailheaDX). &quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;H2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT EVENTS EBC--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_EBC = group t1_CYEBC by all full, t2_CYEBC by all full, t3_CYEBC by all full, t4_CYEBC by all full, t1_PYEBC by all full, t2_PYEBC by all full, t3_PYEBC by all full, t4_PYEBC by all full, YTD_CYEBC by all full, YTD_PYEBC by all;\nresult_EBC = foreach result_EBC generate &quot;Marketing Details&quot; as &#39;Metric Group&#39;, &quot;EBCs&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYEBC.&#39;EBC_s&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYEBC.&#39;EBC_s&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYEBC.&#39;EBC_s&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYEBC.&#39;EBC_s&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYEBC.&#39;EBC_s&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYEBC.&#39;EBC_s&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYEBC.&#39;EBC_s&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYEBC.&#39;EBC_s&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYEBC.&#39;EBC_s&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYEBC.&#39;EBC_s&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(t1_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(t1_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(t2_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(t2_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(t3_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(t3_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(t4_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(t4_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYEBC.&#39;EBC_s&#39;), 0) - coalesce(sum(YTD_PYEBC.&#39;EBC_s&#39;), 0)) / coalesce(sum(YTD_PYEBC.&#39;EBC_s&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;H3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT EVENTS EBCD Dreamforce--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_EBCD = group t1_CYEBCD by all full, t2_CYEBCD by all full, t3_CYEBCD by all full, t4_CYEBCD by all full, t1_PYEBCD by all full, t2_PYEBCD by all full, t3_PYEBCD by all full, t4_PYEBCD by all full, YTD_CYEBCD by all full, YTD_PYEBCD by all;\nresult_EBCD = foreach result_EBCD generate &quot;Marketing Details&quot; as &#39;Metric Group&#39;, &quot;EBC Dreamforce&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYEBCD.&#39;EBC_Dreamforce&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) - coalesce(sum(t1_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) / coalesce(sum(t1_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) - coalesce(sum(t2_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) / coalesce(sum(t2_PYEBCD.&#39;EBC_Dreamforce&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) - coalesce(sum(t3_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) / coalesce(sum(t3_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) - coalesce(sum(t4_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) / coalesce(sum(t4_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYEBCD.&#39;EBC_Dreamforce&#39;), 0) - coalesce(sum(YTD_PYEBCD.&#39;EBC_Dreamforce&#39;), 0)) / coalesce(sum(YTD_PYEBCD.&#39;EBC_Dreamforce&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;H4&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT CUSTOMER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_CUSTOMER = group t1_CYCUSTOMER by all full, t2_CYCUSTOMER by all full, t3_CYCUSTOMER by all full, t4_CYCUSTOMER by all full, t1_PYCUSTOMER by all full, t2_PYCUSTOMER by all full, t3_PYCUSTOMER by all full, t4_PYCUSTOMER by all full, YTD_CYCUSTOMER by all full, YTD_PYCUSTOMER by all;\nresult_CUSTOMER = foreach result_CUSTOMER generate &quot;Market Details&quot; as &#39;Metric Group&#39;, &quot;Customer Count&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYCUSTOMER.&#39;Customer&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYCUSTOMER.&#39;Customer&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYCUSTOMER.&#39;Customer&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYCUSTOMER.&#39;Customer&#39;), 0) - coalesce(sum(t1_PYCUSTOMER.&#39;Customer&#39;), 0)) / coalesce(sum(t1_PYCUSTOMER.&#39;Customer&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYCUSTOMER.&#39;Customer&#39;), 0) - coalesce(sum(t2_PYCUSTOMER.&#39;Customer&#39;), 0)) / coalesce(sum(t2_PYCUSTOMER.&#39;Customer&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYCUSTOMER.&#39;Customer&#39;), 0) - coalesce(sum(t3_PYCUSTOMER.&#39;Customer&#39;), 0)) / coalesce(sum(t3_PYCUSTOMER.&#39;Customer&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYCUSTOMER.&#39;Customer&#39;), 0) - coalesce(sum(t4_PYCUSTOMER.&#39;Customer&#39;), 0)) / coalesce(sum(t4_PYCUSTOMER.&#39;Customer&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYCUSTOMER.&#39;Customer&#39;), 0) - coalesce(sum(YTD_PYCUSTOMER.&#39;Customer&#39;), 0)) / coalesce(sum(YTD_PYCUSTOMER.&#39;Customer&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;Combo Company definition&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;I1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT SHARE--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_SHARE = group t1_CYSHARE by all full, t2_CYSHARE by all full, t3_CYSHARE by all full, t4_CYSHARE by all full, t1_PYSHARE by all full, t2_PYSHARE by all full, t3_PYSHARE by all full, t4_PYSHARE by all full, YTD_CYSHARE by all full, YTD_PYSHARE by all;\nresult_SHARE = foreach result_SHARE generate &quot;Market Details&quot; as &#39;Metric Group&#39;, &quot;Addressable Market &amp; Market Share %&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYSHARE.&#39;TAM&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYSHARE.&#39;TAM&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYSHARE.&#39;TAM&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYSHARE.&#39;TAM&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYSHARE.&#39;TAM&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYSHARE.&#39;TAM&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYSHARE.&#39;TAM&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYSHARE.&#39;TAM&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYSHARE.&#39;TAM&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYSHARE.&#39;TAM&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYSHARE.&#39;TAM&#39;), 0) - coalesce(sum(t1_PYSHARE.&#39;TAM&#39;), 0)) / coalesce(sum(t1_PYSHARE.&#39;TAM&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYSHARE.&#39;TAM&#39;), 0) - coalesce(sum(t2_PYSHARE.&#39;TAM&#39;), 0)) / coalesce(sum(t2_PYSHARE.&#39;TAM&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYSHARE.&#39;TAM&#39;), 0) - coalesce(sum(t3_PYSHARE.&#39;TAM&#39;), 0)) / coalesce(sum(t3_PYSHARE.&#39;TAM&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYSHARE.&#39;TAM&#39;), 0) - coalesce(sum(t4_PYSHARE.&#39;TAM&#39;), 0)) / coalesce(sum(t4_PYSHARE.&#39;TAM&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYSHARE.&#39;TAM&#39;), 0) - coalesce(sum(YTD_PYSHARE.&#39;TAM&#39;), 0)) / coalesce(sum(YTD_PYSHARE.&#39;TAM&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;I2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT CSG CSM--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_CSG_HC = group t1_CYCSG by all full, t2_CYCSG by all full, t3_CYCSG by all full, t4_CYCSG by all full, t1_PYCSG by all full, t2_PYCSG by all full, t3_PYCSG by all full, t4_PYCSG by all full, YTD_CYCSG by all full, YTD_PYCSG by all full , t1_PY_2_CSG by all full, t2_PY_2_CSG by all full, t3_PY_2_CSG by all full, t4_PY_2_CSG by all full,YTD_PY_2_CSG by all;\nresult_CSG_HC = foreach result_CSG_HC generate &quot;CSG Headcount&quot; as &#39;Metric Group&#39;, &quot;CSM&quot; as &#39;Metric&#39;,&quot;24mo CAGR&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYCSG.&#39;CSM_Headcount&#39;), 0) as &#39;YTD_PY&#39;,(power(coalesce(sum(t1_CYCSG.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(t1_PY_2_CSG.&#39;CSM_Headcount&#39;), 0),(1/2))-1)  as &#39;YoY Q1 Growth&#39;,(power(coalesce(sum(t2_CYCSG.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(t2_PY_2_CSG.&#39;CSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q2 Growth&#39;,(power(coalesce(sum(t3_CYCSG.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(t3_PY_2_CSG.&#39;CSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q3 Growth&#39;,(power(coalesce(sum(t4_CYCSG.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(t4_PY_2_CSG.&#39;CSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q4 Growth&#39;,(power(coalesce(sum(YTD_CYCSG.&#39;CSM_Headcount&#39;), 0) / coalesce(sum(YTD_PY_2_CSG.&#39;CSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;J1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT CSG PSM--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_CSG_PSM = group t1_CYCSG by all full, t2_CYCSG by all full, t3_CYCSG by all full, t4_CYCSG by all full, t1_PYCSG by all full, t2_PYCSG by all full, t3_PYCSG by all full, t4_PYCSG by all full, YTD_CYCSG by all full, YTD_PYCSG by all full,t1_PY_2_CSG by all full, t2_PY_2_CSG by all full, t3_PY_2_CSG by all full, t4_PY_2_CSG by all full,YTD_PY_2_CSG by all;\nresult_CSG_PSM = foreach result_CSG_PSM generate &quot;CSG Headcount&quot; as &#39;Metric Group&#39;, &quot;PSM&quot; as &#39;Metric&#39;,&quot;24mo CAGR&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYCSG.&#39;PSM_Headcount&#39;), 0) as &#39;YTD_PY&#39;,(power(coalesce(sum(t1_CYCSG.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(t1_PY_2_CSG.&#39;PSM_Headcount&#39;), 0),(1/2))-1)  as &#39;YoY Q1 Growth&#39;,(power(coalesce(sum(t2_CYCSG.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(t2_PY_2_CSG.&#39;PSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q2 Growth&#39;,(power(coalesce(sum(t3_CYCSG.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(t3_PY_2_CSG.&#39;PSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q3 Growth&#39;,(power(coalesce(sum(t4_CYCSG.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(t4_PY_2_CSG.&#39;PSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY Q4 Growth&#39;,(power(coalesce(sum(YTD_CYCSG.&#39;PSM_Headcount&#39;), 0) / coalesce(sum(YTD_PY_2_CSG.&#39;PSM_Headcount&#39;), 0),(1/2))-1) as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;J2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT Trailhead Badges--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_BADGES = group t1_CYBADGES by all full, t2_CYBADGES by all full, t3_CYBADGES by all full, t4_CYBADGES by all full, t1_PYBADGES by all full, t2_PYBADGES by all full, t3_PYBADGES by all full, t4_PYBADGES by all full, YTD_CYBADGES by all full, YTD_PYBADGES by all;\nresult_BADGES = foreach result_BADGES generate &quot;Trailhead Details&quot; as &#39;Metric Group&#39;, &quot;Trailhead Badges&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYBADGES.&#39;Trailhead_Badges&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYBADGES.&#39;Trailhead_Badges&#39;), 0) - coalesce(sum(t1_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) / coalesce(sum(t1_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYBADGES.&#39;Trailhead_Badges&#39;), 0) - coalesce(sum(t2_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) / coalesce(sum(t2_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYBADGES.&#39;Trailhead_Badges&#39;), 0) - coalesce(sum(t3_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) / coalesce(sum(t3_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYBADGES.&#39;Trailhead_Badges&#39;), 0) - coalesce(sum(t4_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) / coalesce(sum(t4_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYBADGES.&#39;Trailhead_Badges&#39;), 0) - coalesce(sum(YTD_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) / coalesce(sum(YTD_PYBADGES.&#39;Trailhead_Badges&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;K1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT TRAILBLAZER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_TRAILBLAZER = group t1_CYTRAILBLAZER by all full, t2_CYTRAILBLAZER by all full, t3_CYTRAILBLAZER by all full, t4_CYTRAILBLAZER by all full, t1_PYTRAILBLAZER by all full, t2_PYTRAILBLAZER by all full, t3_PYTRAILBLAZER by all full, t4_PYTRAILBLAZER by all full, YTD_CYTRAILBLAZER by all full, YTD_PYTRAILBLAZER by all;\nresult_TRAILBLAZER = foreach result_TRAILBLAZER generate &quot;Trailhead Details&quot; as &#39;Metric Group&#39;, &quot;Trailblazers&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) - coalesce(sum(t1_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) / coalesce(sum(t1_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) - coalesce(sum(t2_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) / coalesce(sum(t2_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) - coalesce(sum(t3_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) / coalesce(sum(t3_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) - coalesce(sum(t4_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) / coalesce(sum(t4_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYTRAILBLAZER.&#39;Trailblazers&#39;), 0) - coalesce(sum(YTD_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) / coalesce(sum(YTD_PYTRAILBLAZER.&#39;Trailblazers&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;K2&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT TRAILBLAZER--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_RANGER = group t1_CYRANGER by all full, t2_CYRANGER by all full, t3_CYRANGER by all full, t4_CYRANGER by all full, t1_PYRANGER by all full, t2_PYRANGER by all full, t3_PYRANGER by all full, t4_PYRANGER by all full, YTD_CYRANGER by all full, YTD_PYRANGER by all;\nresult_RANGER = foreach result_RANGER generate &quot;Trailhead Details&quot; as &#39;Metric Group&#39;, &quot;Ranger&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYRANGER.&#39;Ranger&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYRANGER.&#39;Ranger&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYRANGER.&#39;Ranger&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYRANGER.&#39;Ranger&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYRANGER.&#39;Ranger&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYRANGER.&#39;Ranger&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYRANGER.&#39;Ranger&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYRANGER.&#39;Ranger&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYRANGER.&#39;Ranger&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYRANGER.&#39;Ranger&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYRANGER.&#39;Ranger&#39;), 0) - coalesce(sum(t1_PYRANGER.&#39;Ranger&#39;), 0)) / coalesce(sum(t1_PYRANGER.&#39;Ranger&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYRANGER.&#39;Ranger&#39;), 0) - coalesce(sum(t2_PYRANGER.&#39;Ranger&#39;), 0)) / coalesce(sum(t2_PYRANGER.&#39;Ranger&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYRANGER.&#39;Ranger&#39;), 0) - coalesce(sum(t3_PYRANGER.&#39;Ranger&#39;), 0)) / coalesce(sum(t3_PYRANGER.&#39;Ranger&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYRANGER.&#39;Ranger&#39;), 0) - coalesce(sum(t4_PYRANGER.&#39;Ranger&#39;), 0)) / coalesce(sum(t4_PYRANGER.&#39;Ranger&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYRANGER.&#39;Ranger&#39;), 0) - coalesce(sum(YTD_PYRANGER.&#39;Ranger&#39;), 0)) / coalesce(sum(YTD_PYRANGER.&#39;Ranger&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;K3&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT HEROKU--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_HEROKU = group t1_CYHEROKU by all full, t2_CYHEROKU by all full, t3_CYHEROKU by all full, t4_CYHEROKU by all full, t1_PYHEROKU by all full, t2_PYHEROKU by all full, t3_PYHEROKU by all full, t4_PYHEROKU by all full, YTD_CYHEROKU by all full, YTD_PYHEROKU by all;\nresult_HEROKU = foreach result_HEROKU generate &quot;Heroku&quot; as &#39;Metric Group&#39;, &quot;Net Billings&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;,coalesce(sum(t1_CYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t1_CY&#39;, coalesce(sum(t2_CYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYHEROKU.&#39;Net_Billings&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYHEROKU.&#39;Net_Billings&#39;), 0) - coalesce(sum(t1_PYHEROKU.&#39;Net_Billings&#39;), 0)) / coalesce(sum(t1_PYHEROKU.&#39;Net_Billings&#39;), 0)) * 100 as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYHEROKU.&#39;Net_Billings&#39;), 0) - coalesce(sum(t2_PYHEROKU.&#39;Net_Billings&#39;), 0)) / coalesce(sum(t2_PYHEROKU.&#39;Net_Billings&#39;), 0)) * 100 as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYHEROKU.&#39;Net_Billings&#39;), 0) - coalesce(sum(t3_PYHEROKU.&#39;Net_Billings&#39;), 0)) / coalesce(sum(t3_PYHEROKU.&#39;Net_Billings&#39;), 0)) * 100 as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYHEROKU.&#39;Net_Billings&#39;), 0) - coalesce(sum(t4_PYHEROKU.&#39;Net_Billings&#39;), 0)) / coalesce(sum(t4_PYHEROKU.&#39;Net_Billings&#39;), 0)) * 100 as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYHEROKU.&#39;Net_Billings&#39;), 0) - coalesce(sum(YTD_PYHEROKU.&#39;Net_Billings&#39;), 0)) / coalesce(sum(YTD_PYHEROKU.&#39;Net_Billings&#39;), 0)) * 100 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;L1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT Productivity John--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nNEW_result_PRODUCTIVITY = group t1_CYPRODUCTIVITY by all full, t2_CYPRODUCTIVITY by all full, t3_CYPRODUCTIVITY by all full, t4_CYPRODUCTIVITY by all full, t1_PYPRODUCTIVITY by all full, t2_PYPRODUCTIVITY by all full, t3_PYPRODUCTIVITY by all full, t4_PYPRODUCTIVITY by all full, YTD_CYPRODUCTIVITY by all full, YTD_PYPRODUCTIVITY by all;\nNEW_result_PRODUCTIVITY = foreach NEW_result_PRODUCTIVITY generate &quot;Sales Details&quot; as &#39;Metric Group&#39;, &quot;Productivity&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;, coalesce(sum(t1_CYPRODUCTIVITY.&#39;Productivity&#39;), 0)  as &#39;t1_CY&#39;, coalesce(sum(t2_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYPRODUCTIVITY.&#39;Productivity&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) - coalesce(sum(t1_PYPRODUCTIVITY.&#39;Productivity&#39;), 0)) / coalesce(sum(t1_PYPRODUCTIVITY.&#39;Productivity&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) - coalesce(sum(t2_PYPRODUCTIVITY.&#39;Productivity&#39;), 0)) / coalesce(sum(t2_PYPRODUCTIVITY.&#39;Productivity&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) - coalesce(sum(t3_PYPRODUCTIVITY.&#39;Productivity&#39;), 0)) / coalesce(sum(t3_PYPRODUCTIVITY.&#39;Productivity&#39;), 0))  as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) - coalesce(sum(t4_PYPRODUCTIVITY.&#39;Productivity&#39;), 0)) / coalesce(sum(t4_PYPRODUCTIVITY.&#39;Productivity&#39;), 0))  as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYPRODUCTIVITY.&#39;Productivity&#39;), 0) - coalesce(sum(YTD_PYPRODUCTIVITY.&#39;Productivity&#39;), 0)) / coalesce(sum(YTD_PYPRODUCTIVITY.&#39;Productivity&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;E8&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT ISVTake Off--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_ISV_TAKEOFF = group t1_CYISV by all full, t2_CYISV by all full, t3_CYISV by all full, t4_CYISV by all full, t1_PYISV by all full, t2_PYISV by all full, t3_PYISV by all full, t4_PYISV by all full, YTD_CYISV by all full, YTD_PYISV by all;\nresult_ISV_TAKEOFF= foreach result_ISV_TAKEOFF generate &quot;ISV&quot; as &#39;Metric Group&#39;, &quot;Take Off&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;, coalesce(sum(t1_CYISV.&#39;ACV_Take_Off&#39;), 0)  as &#39;t1_CY&#39;, coalesce(sum(t2_CYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYISV.&#39;ACV_Take_Off&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYISV.&#39;ACV_Take_Off&#39;), 0) - coalesce(sum(t1_PYISV.&#39;ACV_Take_Off&#39;), 0)) / coalesce(sum(t1_PYISV.&#39;ACV_Take_Off&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYISV.&#39;ACV_Take_Off&#39;), 0) - coalesce(sum(t2_PYISV.&#39;ACV_Take_Off&#39;), 0)) / coalesce(sum(t2_PYISV.&#39;ACV_Take_Off&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYISV.&#39;ACV_Take_Off&#39;), 0) - coalesce(sum(t3_PYISV.&#39;ACV_Take_Off&#39;), 0)) / coalesce(sum(t3_PYISV.&#39;ACV_Take_Off&#39;), 0))  as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYISV.&#39;ACV_Take_Off&#39;), 0) - coalesce(sum(t4_PYISV.&#39;ACV_Take_Off&#39;), 0)) / coalesce(sum(t4_PYISV.&#39;ACV_Take_Off&#39;), 0))  as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYISV.&#39;ACV_Take_Off&#39;), 0) - coalesce(sum(YTD_PYISV.&#39;ACV_Take_Off&#39;), 0)) / coalesce(sum(YTD_PYISV.&#39;ACV_Take_Off&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;M1&quot; as &#39;SortOrder&#39;;\n-------------------------------------------------------------------------------------------------RESULT ISV Landing Performance--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nresult_ISV_LANDING = group t1_CYISV by all full, t2_CYISV by all full, t3_CYISV by all full, t4_CYISV by all full, t1_PYISV by all full, t2_PYISV by all full, t3_PYISV by all full, t4_PYISV by all full, YTD_CYISV by all full, YTD_PYISV by all;\nresult_ISV_LANDING= foreach result_ISV_LANDING generate &quot;ISV&quot; as &#39;Metric Group&#39;, &quot;Landing&quot; as &#39;Metric&#39;,&quot;YoY&quot; as &#39;Rate Measure&#39;, coalesce(sum(t1_CYISV.&#39;ACV_Landing_Performance&#39;), 0)  as &#39;t1_CY&#39;, coalesce(sum(t2_CYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t2_CY&#39;, coalesce(sum(t3_CYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t3_CY&#39;, coalesce(sum(t4_CYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t4_CY&#39;, coalesce(sum(t1_PYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t1_PY&#39;, coalesce(sum(t2_PYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t2_PY&#39;, coalesce(sum(t3_PYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t3_PY&#39;, coalesce(sum(t4_PYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;t4_PY&#39;, coalesce(sum(YTD_CYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;YTD_CY&#39;, coalesce(sum(YTD_PYISV.&#39;ACV_Landing_Performance&#39;), 0) as &#39;YTD_PY&#39;,((coalesce(sum(t1_CYISV.&#39;ACV_Landing_Performance&#39;), 0) - coalesce(sum(t1_PYISV.&#39;ACV_Landing_Performance&#39;), 0)) / coalesce(sum(t1_PYISV.&#39;ACV_Landing_Performance&#39;), 0))  as &#39;YoY Q1 Growth&#39;,((coalesce(sum(t2_CYISV.&#39;ACV_Landing_Performance&#39;), 0) - coalesce(sum(t2_PYISV.&#39;ACV_Landing_Performance&#39;), 0)) / coalesce(sum(t2_PYISV.&#39;ACV_Landing_Performance&#39;), 0))  as &#39;YoY Q2 Growth&#39;,((coalesce(sum(t3_CYISV.&#39;ACV_Landing_Performance&#39;), 0) - coalesce(sum(t3_PYISV.&#39;ACV_Landing_Performance&#39;), 0)) / coalesce(sum(t3_PYISV.&#39;ACV_Landing_Performance&#39;), 0))  as &#39;YoY Q3 Growth&#39;,((coalesce(sum(t4_CYISV.&#39;ACV_Landing_Performance&#39;), 0) - coalesce(sum(t4_PYISV.&#39;ACV_Landing_Performance&#39;), 0)) / coalesce(sum(t4_PYISV.&#39;ACV_Landing_Performance&#39;), 0))  as &#39;YoY Q4 Growth&#39;,((coalesce(sum(YTD_CYISV.&#39;ACV_Landing_Performance&#39;), 0) - coalesce(sum(YTD_PYISV.&#39;ACV_Landing_Performance&#39;), 0)) / coalesce(sum(YTD_PYISV.&#39;ACV_Landing_Performance&#39;), 0))  as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;,&quot;M2&quot; as &#39;SortOrder&#39;;\nv--////////////////////////////////////////////////////////////////////////////////GENERATE FAKE HEADER, CURRENTLY NOT USED////////////////////////////////////////////////////////////////////////////////-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------;\n\n\n\n\n\ntotal_FINANCIALMEASURES = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Financial Measures&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_Pipegen = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;PipeGen Measures&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_DISTRIBUTION_HC = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Distribution Headcount&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_COMMERCE = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Commerce Cloud Digital Features&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_Sales = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Sales Details&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_HEADCOUNT = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;R&amp;D/T&amp;P Headcount&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_TECH = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Tech Details&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_MARKETING = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Marketing Details&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_MARKET = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Market Details&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_CSG = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;CSG Headcount&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \ntotal_TRAILHEAD = foreach MasterHierarchy generate &quot;Metric Group&quot; as &#39;Metric Group&#39;,&quot;Trailhead&quot; as Metric, &quot;&quot; as &#39;Rate Measures&#39;,0 as &#39;t1_CY&#39;,0 as &#39;t2_CY&#39;, 0 as &#39;t3_CY&#39;, 0 as &#39;t4_CY&#39;, 0 as &#39;t1_PY&#39;, 0 as &#39;t2_PY&#39;, 0 as &#39;t3_PY&#39;, 0 as &#39;t4_PY&#39;, 0 as &#39;YTD_CY&#39;, 0 as &#39;YTD_PY&#39;,0 as &#39;YoY Q1 Growth&#39;,0 as &#39;YoY Q2 Growth&#39;,0 as &#39;YoY Q3 Growth&#39;,0 as &#39;YoY Q4 Growth&#39;,0 as &#39;YoY YTD Growth&#39;, &quot;&quot; as &#39;Comment&#39;, &quot;&quot; as &#39;Unit&#39;; \n\n\n--line = group MasterHierarchy by &#39;all&#39;;\n--line = foreach line generate &quot;-----------------------------------------------------------------&quot; as &#39;Cloud&#39;, &quot;HBZ&quot; as &#39;SortOrder&#39;;\nvnresult = union total_FINANCIALMEASURES,result_ACV, result_AOV,result_ATT,total_Pipegen,result_Pipegen,total_DISTRIBUTION_HC,result_AE,result_SE,result_Co_Prime,total_COMMERCE,result_GMV,result_Sites,total_Sales,result_X10M_Deals,result_X10M,result_Runrate_Volume,result_LOGO,result_LOST_LOGO,result_REDACCOUNTS,total_HEADCOUNT,result_SWE,result_INFRA,total_TECH, result_T_P,result_AVAILABILITY,result_TRANSACTION, total_MARKETING,result_EVENTS,result_OTHER, result_EBC,result_EBCD,total_MARKET,result_CUSTOMER,result_SHARE,total_CSG,result_CSG_HC,result_CSG_PSM,total_TRAILHEAD,result_BADGES,result_TRAILBLAZER, result_RANGER,result_HEROKU,NEW_result_PRODUCTIVITY,result_ISV_TAKEOFF,result_ISV_LANDING;\nvn--result = order result by &#39;SortOrder&#39; asc;\n--result = filter result by &#39;Cloud&#39; not in [&quot;Premier (a la carte)&quot;];\nresult = filter result by &#39;Metric Group&#39; != &quot;Metric Group&quot;;\nresult = group result by &#39;Metric&#39;left , Comment by &#39;Metric&#39;;\nresult = foreach result generate last(result.&#39;Metric Group&#39;) as &#39;Metric Group&#39;, result.&#39;Metric&#39; as &#39;Metric&#39;,last(result.&#39;Rate Measure&#39;) as &#39;Rate Measure&#39;, last(result.&#39;SortOrder&#39;) as &#39;SortOrder&#39;,(case when sum(result.&#39;t1_CY&#39;)==0 then number_to_string(sum(result.&#39;t1_CY&#39;),&quot;#,###.#&quot;)  when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;Net Billings&quot;,&quot;Run Rate Volume&quot;,&quot;Take Off&quot;,&quot;Landing&quot;] then number_to_string(sum(result.&#39;t1_CY&#39;)/1000000,&quot;$#,###.0&quot;)+&quot;M&quot; when result.&#39;Metric&#39; in [ &quot;T&amp;P Cost to Serve&quot;] then number_to_string(sum(result.&#39;t1_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;  when result.&#39;Metric&#39; in [&quot;Addressable Market &amp; Market Share %&quot;] then  number_to_string(sum(result.&#39;t1_CY&#39;)*100,&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Core Transactions / Requests&quot;] then  number_to_string(sum(result.&#39;t1_CY&#39;)/1000000000,&quot;#,###.0&quot;)+&quot;B&quot; when result.&#39;Metric&#39; in [&quot;GMV&quot;] then  number_to_string(sum(result.&#39;t1_CY&#39;)/1000000000,&quot;#,###.0&quot;)+&quot;B&quot;when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;t1_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;  else number_to_string(sum(result.&#39;t1_CY&#39;),&quot;#,###&quot;)  end) as &#39;t1_CY&#39;,(case when result.&#39;Metric&#39; in  [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;AEs&quot;,&quot;SEs&quot;,&quot;Co Prime&quot;,&quot;$10M+ Deals&quot;,&quot;$1M+ deals&quot;,&quot;Run Rate Volume&quot;, &quot;New Logos&quot;,&quot;Red Accounts&quot;,&quot;Marketing Events - World Tours &amp; Trailhead Live&quot;,&quot;Marketing Events - Other&quot;, &quot;EBCs&quot;,&quot;Customer Count&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;Core Transactions / Requests&quot;,&quot;Trailhead Badges&quot;,&quot;Trailblazers&quot;,&quot;Ranger&quot;, &quot;Lost Logos&quot;,&quot;Net Billings&quot;]then number_to_string(sum(result.&#39;YoY Q1 Growth&#39;)/100,&quot;0.0%&quot;) when last(result.&#39;Metric Group&#39;)==&quot;Metric Group&quot; then &quot;&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then&quot;&quot;  else number_to_string(sum(result.&#39;YoY Q1 Growth&#39;),&quot;0.0%&quot;)  end) as &#39;YoY Q1 Growth&#39;,(case when sum(result.&#39;t2_CY&#39;)==0 then number_to_string(sum(result.&#39;t2_CY&#39;),&quot;#,###.#&quot;) when result.&#39;Metric&#39; in[&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;Net Billings&quot;,&quot;Run Rate Volume&quot;,&quot;Take Off&quot;,&quot;Landing&quot;] then number_to_string(sum(result.&#39;t2_CY&#39;)/1000000,&quot;$#,###.0&quot;)+&quot;M&quot; when result.&#39;Metric&#39; in [&quot;GMV&quot;] then  number_to_string(sum(result.&#39;t2_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot; when result.&#39;Metric&#39; in [ &quot;T&amp;P Cost to Serve&quot;] then number_to_string(sum(result.&#39;t2_CY&#39;),&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Addressable Market &amp; Market Share %&quot;] then  number_to_string(sum(result.&#39;t2_CY&#39;)*100,&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Core Transactions / Requests&quot;] then  number_to_string(sum(result.&#39;t2_CY&#39;)/1000000000,&quot;#,###.#&quot;)+&quot;B&quot;  when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;t2_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;  else number_to_string(sum(result.&#39;t2_CY&#39;),&quot;#,###&quot;)  end) as &#39;t2_CY&#39; , (case when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;AEs&quot;,&quot;SEs&quot;,&quot;Co Prime&quot;,&quot;$10M+ Deals&quot;,&quot;$1M+ deals&quot;,&quot;Run Rate Volume&quot;, &quot;New Logos&quot;,&quot;Red Accounts&quot;,&quot;Marketing Events - World Tours &amp; Trailhead Live&quot;,&quot;Marketing Events - Other&quot;, &quot;EBCs&quot;,&quot;Customer Count&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;Core Transactions / Requests&quot;,&quot;Trailhead Badges&quot;,&quot;Trailblazers&quot;,&quot;Ranger&quot;, &quot;Lost Logos&quot;,&quot;Net Billings&quot;] then number_to_string(sum(result.&#39;YoY Q2 Growth&#39;)/100,&quot;0.0%&quot;)when last(result.&#39;Metric Group&#39;)==&quot;Metric Group&quot; then &quot;&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then&quot;&quot;  else number_to_string(sum(result.&#39;YoY Q2 Growth&#39;),&quot;0.0%&quot;)  end) as &#39;YoY Q2 Growth&#39;,(case when sum(result.&#39;t3_CY&#39;)==0 then number_to_string(sum(result.&#39;t3_CY&#39;),&quot;#,###.#&quot;)  when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;Net Billings&quot;,&quot;Run Rate Volume&quot;,&quot;Take Off&quot;,&quot;Landing&quot;] then number_to_string(sum(result.&#39;t3_CY&#39;)/1000000,&quot;$#,###.0&quot;)+&quot;M&quot;  when result.&#39;Metric&#39; in [&quot;GMV&quot;] then  number_to_string(sum(result.&#39;t3_CY&#39;)/1000000000,&quot;#,###.0&quot;)+&quot;B&quot; when result.&#39;Metric&#39; in [ &quot;T&amp;P Cost to Serve&quot;] then number_to_string(sum(result.&#39;t3_CY&#39;),&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Addressable Market &amp; Market Share %&quot;] then  number_to_string(sum(result.&#39;t3_CY&#39;)*100,&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Core Transactions / Requests&quot;] then  number_to_string(sum(result.&#39;t3_CY&#39;)/1000000000,&quot;#,###.0&quot;)+&quot;B&quot; when  result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;t3_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;  else  number_to_string(sum(result.&#39;t3_CY&#39;),&quot;#,###&quot;)  end) as  &#39;t3_CY&#39;,  (case when result.&#39;Metric&#39; in  [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;AEs&quot;,&quot;SEs&quot;,&quot;Co Prime&quot;,&quot;$10M+ Deals&quot;,&quot;$1M+ deals&quot;,&quot;Run Rate Volume&quot;, &quot;New Logos&quot;,&quot;Red Accounts&quot;,&quot;Marketing Events - World Tours &amp; Trailhead Live&quot;,&quot;Marketing Events - Other&quot;, &quot;EBCs&quot;,&quot;Customer Count&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;Core Transactions / Requests&quot;,&quot;Trailhead Badges&quot;,&quot;Trailblazers&quot;,&quot;Ranger&quot;, &quot;Lost Logos&quot;,&quot;Net Billings&quot;] then number_to_string(sum(result.&#39;YoY Q3 Growth&#39;)/100,&quot;0.0%&quot;) when last(result.&#39;Metric Group&#39;)==&quot;Metric Group&quot; then &quot;&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then&quot;&quot; else number_to_string(sum(result.&#39;YoY Q3 Growth&#39;),&quot;0.0%&quot;)  end) as &#39;YoY Q3 Growth&#39;,(case when sum(result.&#39;t4_CY&#39;)==0 then number_to_string(sum(result.&#39;t4_CY&#39;),&quot;#,###.#&quot;) when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;Net Billings&quot;,&quot;Run Rate Volume&quot;,&quot;Take Off&quot;,&quot;Landing&quot;] then number_to_string(sum(result.&#39;t4_CY&#39;)/1000000,&quot;$#,###.0&quot;)+&quot;M&quot; when result.&#39;Metric&#39; in [&quot;GMV&quot;] then  number_to_string(sum(result.&#39;t4_CY&#39;)/1000000000,&quot;#,###.0&quot;)+&quot;B&quot;  when result.&#39;Metric&#39; in [ &quot;T&amp;P Cost to Serve&quot;] then number_to_string(sum(result.&#39;t4_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;when result.&#39;Metric&#39; in [&quot;Addressable Market &amp; Market Share %&quot;] then  number_to_string(sum(result.&#39;t4_CY&#39;)*100,&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Core Transactions / Requests&quot;] then  number_to_string(sum(result.&#39;t4_CY&#39;)/1000000000,&quot;#,###.0&quot;)+&quot;B&quot;  when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;t4_CY&#39;),&quot;#.0&quot;)+&quot;%&quot;  else number_to_string(sum(result.&#39;t4_CY&#39;),&quot;#,###&quot;)  end) as &#39;t4_CY&#39;,  (case when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;AEs&quot;,&quot;SEs&quot;,&quot;Co Prime&quot;,&quot;$10M+ Deals&quot;,&quot;$1M+ deals&quot;,&quot;Run Rate Volume&quot;, &quot;New Logos&quot;,&quot;Red Accounts&quot;,&quot;Marketing Events - World Tours &amp; Trailhead Live&quot;,&quot;Marketing Events - Other&quot;, &quot;EBCs&quot;,&quot;Customer Count&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;Core Transactions / Requests&quot;,&quot;Trailhead Badges&quot;,&quot;Trailblazers&quot;,&quot;Ranger&quot;, &quot;Lost Logos&quot;,&quot;Net Billings&quot;]then number_to_string(sum(result.&#39;YoY Q4 Growth&#39;)/100,&quot;0.0%&quot;)when last(result.&#39;Metric Group&#39;)==&quot;Metric Group&quot; then &quot;&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then&quot;&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then&quot;&quot;  else number_to_string(sum(result.&#39;YoY Q4 Growth&#39;),&quot;0.0%&quot;)  end) as  &#39;YoY Q4 Growth&#39;,(case  when sum(result.&#39;YTD_CY&#39;)==0 then number_to_string(sum(result.&#39;YTD_CY&#39;),&quot;#,###.#&quot;)  when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;Net Billings&quot;,&quot;Run Rate Volume&quot;,&quot;Take Off&quot;,&quot;Landing&quot;] then number_to_string(sum(result.&#39;YTD_CY&#39;)/1000000,&quot;$#,###.#&quot;)+&quot;M&quot;  when result.&#39;Metric&#39; in [&quot;GMV&quot;] then  number_to_string(sum(result.&#39;YTD_CY&#39;)/1000000000,&quot;#,###.0&quot;)+&quot;B&quot;  when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;YTD_CY&#39;),&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Addressable Market &amp; Market Share %&quot;] then  number_to_string(sum(result.&#39;YTD_CY&#39;)*100,&quot;#.0&quot;)+&quot;%&quot;  when result.&#39;Metric&#39; in [ &quot;T&amp;P Cost to Serve&quot;] then number_to_string(sum(result.&#39;YTD_CY&#39;),&quot;#.0&quot;)+&quot;%&quot; when result.&#39;Metric&#39; in [&quot;Core Transactions / Requests&quot;] then number_to_string(sum(result.&#39;YTD_CY&#39;)/1000000000,&quot;#,###.0&quot;)+&quot;B&quot; when result.&#39;Metric&#39; in [&quot;Availability %&quot;] then  number_to_string(sum(result.&#39;YTD_CY&#39;),&quot;#,###&quot;)+&quot;%&quot;  else number_to_string(sum(result.&#39;YTD_CY&#39;),&quot;#,###&quot;)  end) as  &#39;YTD_CY&#39;,  (case when result.&#39;Metric&#39; in [&quot;ACV&quot;, &quot;AOV&quot;, &quot;ATT&quot;,&quot;Pipeline&quot;,&quot;AEs&quot;,&quot;SEs&quot;,&quot;Co Prime&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;$10M+ Deals&quot;,&quot;$1M+ deals&quot;,&quot;Run Rate Volume&quot;, &quot;New Logos&quot;,&quot;Red Accounts&quot;,&quot;Marketing Events - World Tours &amp; Trailhead Live&quot;,&quot;Marketing Events - Other&quot;, &quot;EBCs&quot;,&quot;Customer Count&quot;, &quot;Addressable Market &amp; Market Share %&quot;,&quot;Core Transactions / Requests&quot;,&quot;Trailhead Badges&quot;,&quot;Trailblazers&quot;,&quot;Ranger&quot;, &quot;Lost Logos&quot;,&quot;Net Billings&quot;] then number_to_string(sum(result.&#39;YoY YTD Growth&#39;)/100,&quot;0.0%&quot;) when last(result.&#39;Metric Group&#39;)==&quot;Metric Group&quot; then &quot;&quot; when result.&#39;Metric&#39; in [&quot;T&amp;P Cost to Serve&quot;,&quot;Availability %&quot;] then&quot;&quot;  else number_to_string(sum(result.&#39;YoY YTD Growth&#39;),&quot;0.0%&quot;)  end) as  &#39;YoY YTD Growth&#39;,last(Comment.&#39;Comment&#39;) as &#39;Comment&#39;;\nresult = order result by &#39;SortOrder&#39; asc;\nresult = foreach result generate &#39;t1_CY&#39;,&#39;t2_CY&#39;,&#39;t3_CY&#39;,&#39;t4_CY&#39;, &#39;YTD_CY&#39;, &#39;YoY Q1 Growth&#39;, &#39;YoY Q2 Growth&#39;, &#39;YoY Q3 Growth&#39;, &#39;YoY Q4 Growth&#39;, (case when &#39;YoY YTD Growth&#39; in [&quot;-100.0%&quot;] then &quot;-&quot; else &#39;YoY YTD Growth&#39; end) as &#39;YoY YTD Growth&#39; ;\n",
        "receiveFacet": true,
        "selectMode": "single",
        "strings": [],
        "type": "saql",
        "useGlobal": true,
        "visualizationParameters": {
          "parameters": {
            "autoFitMode": "none",
            "showValues": true,
            "bins": {
              "breakpoints": {
                "high": 100,
                "low": 0
              },
              "bands": {
                "high": {
                  "color": "#008000",
                  "label": ""
                },
                "low": {
                  "color": "#B22222",
                  "label": ""
                },
                "medium": {
                  "color": "#ffa500",
                  "label": ""
                }
              }
            },
            "legend": {
              "showHeader": true,
              "show": true,
              "customSize": "auto",
              "position": "right-top",
              "inside": false
            },
            "axisMode": "multi",
            "tooltip": {
              "showBinLabel": true,
              "measures": "",
              "showPercentage": true,
              "showDimensions": true,
              "showMeasures": true,
              "customizeTooltip": false,
              "dimensions": ""
            },
            "visualizationType": "hbar",
            "title": {
              "fontSize": 14,
              "subtitleFontSize": 11,
              "label": "",
              "align": "center",
              "subtitleLabel": ""
            },
            "binValues": false,
            "trellis": {
              "flipLabels": false,
              "showGridLines": true,
              "size": [
                100,
                100
              ],
              "enable": false,
              "type": "x",
              "chartsPerLine": 4
            },
            "measureAxis2": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "measureAxis1": {
              "sqrtScale": false,
              "showTitle": true,
              "showAxis": true,
              "title": "",
              "customDomain": {
                "showDomain": false
              }
            },
            "theme": "wave",
            "dimensionAxis": {
              "showTitle": true,
              "customSize": "auto",
              "showAxis": true,
              "title": "",
              "icons": {
                "useIcons": false,
                "iconProps": {
                  "fit": "cover",
                  "column": "",
                  "type": "round"
                }
              }
            }
          },
          "type": "chart",
          "visualizationType": "hbar"
        }
      }
    },
    "widgetStyle": {
      "backgroundColor": "#FFFFFF",
      "borderColor": "#E6ECF2",
      "borderEdges": [],
      "borderRadius": 0,
      "borderWidth": 1
    },
    "widgets": {
      "text_10": {
        "parameters": {
          "fontSize": 20,
          "showActionMenu": true,
          "text": "COMMENT TABLE",
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "text_12": {
        "parameters": {
          "fontSize": 32,
          "showActionMenu": true,
          "text": "Corporate Performance Matrix - 5 Years Summary",
          "textAlignment": "center",
          "textColor": "#335779"
        },
        "type": "text"
      },
      "text_11": {
        "parameters": {
          "fontSize": 20,
          "showActionMenu": true,
          "text": "Dataset: APM_CPM_Comment",
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "table_10": {
        "parameters": {
          "borderColor": "#E6ECF2",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#FFFFFF",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "evenRowColor": "#f2f6fa",
          "exploreLink": false,
          "fixedColumnWidth": 170,
          "header": {
            "backgroundColor": "rgb(244, 246, 249)",
            "fontColor": "#5c7a99",
            "fontSize": 0
          },
          "innerMajorBorderColor": "#E6ECF2",
          "innerMinorBorderColor": "#e1e5ee",
          "mode": "fixed",
          "numberOfLines": 1,
          "oddRowColor": "#ffffff",
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "dimension_column_1",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "table_12": {
        "parameters": {
          "borderColor": "rgb(225, 229, 238)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#f2f6fa",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "evenRowColor": "#f2f6fa",
          "exploreLink": false,
          "fixedColumnWidth": 91,
          "header": {
            "backgroundColor": "rgb(244, 246, 249)",
            "fontColor": "#5c7a99",
            "fontSize": 0
          },
          "innerMajorBorderColor": "#FFFFFF",
          "innerMinorBorderColor": "#e1e5ee",
          "mode": "fixed",
          "numberOfLines": 1,
          "oddRowColor": "#ffffff",
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "dimension_column_3",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "table_13": {
        "parameters": {
          "borderColor": "#e1e5ee",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#f2f6fa",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "evenRowColor": "#f2f6fa",
          "exploreLink": false,
          "fixedColumnWidth": 208,
          "header": {
            "backgroundColor": "rgb(244, 246, 249)",
            "fontColor": "#5c7a99",
            "fontSize": 0
          },
          "innerMajorBorderColor": "#FFFFFF",
          "innerMinorBorderColor": "#e1e5ee",
          "mode": "fixed",
          "numberOfLines": 1,
          "oddRowColor": "#ffffff",
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "lens_5_14",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "container_1": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "container_3": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "container_4": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "table_16": {
        "parameters": {
          "borderColor": "#98c6f5",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "fixedColumnWidth": 208,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#ffffff",
            "fontSize": 14
          },
          "innerMajorBorderColor": "#3290ed",
          "innerMinorBorderColor": "#98c6f5",
          "mode": "fixed",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "step": "Table_Page_1_Header__2",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "table_17": {
        "parameters": {
          "borderColor": "#a8b7c7",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "fixedColumnWidth": 170,
          "header": {
            "backgroundColor": "#16325c",
            "fontColor": "#ffffff",
            "fontSize": 12
          },
          "innerMajorBorderColor": "#54698d",
          "innerMinorBorderColor": "#a8b7c7",
          "mode": "fixed",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Page_1_Header__3",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "text_3": {
        "parameters": {
          "fontSize": 20,
          "showActionMenu": true,
          "text": "Use the &quot;Current_1&quot; definition for manual modifications, the Quarter 1-4 are predefined and should not be changed.",
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "container_7": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "text_2": {
        "parameters": {
          "fontSize": 20,
          "showActionMenu": true,
          "text": "This dashboard is currently not available in mobile.",
          "textAlignment": "center",
          "textColor": "#FFFFFF"
        },
        "type": "text"
      },
      "text_5": {
        "parameters": {
          "fontSize": 20,
          "showActionMenu": true,
          "text": "Selected Fiscal Year",
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "container_9": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "original"
        },
        "type": "container"
      },
      "text_4": {
        "parameters": {
          "fontSize": 20,
          "showActionMenu": true,
          "text": "FULL MASTER TABLE ",
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "text_7": {
        "parameters": {
          "fontSize": 10,
          "showActionMenu": true,
          "text": "EXAMPLE FOR SETUP 12/21/2017\n-&gt;Modification only in the static step &quot;DASHBOARD_PARAMETER&quot;\n\n &quot;type&quot;: &quot;staticflex&quot;,\n                &quot;values&quot;: [\n                    {\n                        &quot;display&quot;: &quot;CURRENT_1&quot;,\n                        &quot;YTD_ACV&quot;: &quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;February&#92;&quot;,&#92;&quot;July&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;May&#92;&quot;,&#92;&quot;August&#92;&quot;,&#92;&quot;September&#92;&quot;,&#92;&quot;October&#92;&quot;,&#92;&quot;November&#92;&quot;]&quot;,\n                        &quot;YTD_AOV&quot;: &quot;[&#92;&quot;October&#92;&quot;]&quot;,\n                        &quot;YTD_ATT&quot;: &quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;February&#92;&quot;,&#92;&quot;July&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;May&#92;&quot;,&#92;&quot;August&#92;&quot;,&#92;&quot;September&#92;&quot;,&#92;&quot;October&#92;&quot;]&quot;,\n                        &quot;YTD_PIPEGEN&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;YTD_HC&quot;: &quot;[&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;YTD_SW&quot;: &quot;[&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;YTD_CC&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;YTD_CC_SITES&quot;: &quot;[&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;YTD_DEALS&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;YTD_LOGO&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;YTD_REDACCOUNTS&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;YTD_T_P&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;YTD_TRANSACTION&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;YTD_AVAILABILITY&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;YTD_EVENTS&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;YTD_OTHER&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;YTD_EBC&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;YTD_CUSTOMER&quot;: &quot;[&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;YTD_SHARE&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;YTD_CSG&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;Quarters_ACV&quot;: &quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;February&#92;&quot;,&#92;&quot;July&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;May&#92;&quot;,&#92;&quot;August&#92;&quot;,&#92;&quot;September&#92;&quot;,&#92;&quot;October&#92;&quot;,&#92;&quot;November&#92;&quot;]&quot;,\n                        &quot;Quarters_AOV&quot;: &quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;July&#92;&quot;,&#92;&quot;October&#92;&quot;]&quot;,\n                        &quot;Quarters_ATT&quot;: &quot;[&#92;&quot;April&#92;&quot;,&#92;&quot;February&#92;&quot;,&#92;&quot;July&#92;&quot;,&#92;&quot;June&#92;&quot;,&#92;&quot;March&#92;&quot;,&#92;&quot;May&#92;&quot;,&#92;&quot;August&#92;&quot;,&#92;&quot;September&#92;&quot;,&#92;&quot;October&#92;&quot;]&quot;,\n                        &quot;Quarters_PIPEGEN&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;Quarters_HC&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;Quarters_SW&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;Quarters_CC&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;Quarters_CC_SITES&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;Quarters_DEALS&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;Quarters_LOGO&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;Quarters_REDACCOUNTS&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;Quarters_T_P&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;Quarters_TRANSACTION&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;Quarters_AVAILABILITY&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;Quarters_EVENTS&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;Quarters_OTHER&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;Quarters_EBC&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;Quarters_CUSTOMER&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;Quarters_SHARE&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;,\n                        &quot;Quarters_CSG&quot;: &quot;[&#92;&quot;FYQ1&#92;&quot;,&#92;&quot;FYQ2&#92;&quot;,&#92;&quot;FYQ3&#92;&quot;]&quot;\n                    },",
          "textAlignment": "left",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "text_6": {
        "parameters": {
          "fontSize": 48,
          "showActionMenu": true,
          "text": "DASHBOARD PARAMETER",
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "text_9": {
        "parameters": {
          "fontSize": 12,
          "showActionMenu": true,
          "text": "Explanation step &quot;DASHBOARD_PARAMETER&quot;\n\nFor each Source file the YTD and max Quarters can be defined. \nYTD = Year to date and defines the YTD calculation.\nQuarters= maximum Quarters/Month per Source which should be shown in the Dashboard. \nWith this setup YTD and Quarters can be controlled individually. Please make sure the setup is matching. \n\n\n",
          "textAlignment": "left",
          "textColor": "#7D98B3"
        },
        "type": "text"
      },
      "text_8": {
        "parameters": {
          "fontSize": 12,
          "showActionMenu": true,
          "text": "If you select Quarter 1-4 make sure you change the &quot;Start&quot; value in the step &quot;DASHBOARD_PARAMETER&quot; accordingly. Default is &quot;Current_1&quot;",
          "textAlignment": "center",
          "textColor": "rgb(242, 17, 17)"
        },
        "type": "text"
      },
      "listselector_9": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "showActionMenu": false,
          "step": "Fiscal_Year_Selector_1",
          "title": "Selected Fiscal Year"
        },
        "type": "listselector"
      },
      "image_4": {
        "parameters": {
          "alignmentX": "center",
          "alignmentY": "center",
          "fit": "fitheight",
          "image": {
            "name": "FSpng5png",
            "namespace": ""
          }
        },
        "type": "image"
      },
      "text_1": {
        "parameters": {
          "fontSize": 20,
          "showActionMenu": true,
          "text": "METRIC PARAMETER CONTROL for YTD column",
          "textAlignment": "center",
          "textColor": "#091A3E"
        },
        "type": "text"
      },
      "link_3": {
        "parameters": {
          "destinationLink": {
            "name": "CPM_Summary_Dashboard"
          },
          "destinationType": "dashboard",
          "fontSize": 12,
          "includeState": false,
          "text": "CPM",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_4": {
        "parameters": {
          "destinationType": "dashboard",
          "fontSize": 12,
          "includeState": false,
          "text": "CPM 5 Year Trend",
          "textAlignment": "center",
          "textColor": "#5C7A99"
        },
        "type": "link"
      },
      "link_1": {
        "parameters": {
          "destinationLink": {
            "name": "APM_Landing_Page"
          },
          "destinationType": "dashboard",
          "fontSize": 12,
          "includeState": false,
          "text": "APM  Landing Page",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_2": {
        "parameters": {
          "destinationLink": {
            "name": "e20bb354-6062-4bea-a080-a4a34b535fb8"
          },
          "destinationType": "page",
          "fontSize": 12,
          "includeState": false,
          "text": "Test Quarter Set up",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "table_1": {
        "parameters": {
          "borderColor": "rgb(225, 229, 238)",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#f2f6fa",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "evenRowColor": "#f2f6fa",
          "exploreLink": false,
          "fixedColumnWidth": 96,
          "header": {
            "backgroundColor": "rgb(244, 246, 249)",
            "fontColor": "#5c7a99",
            "fontSize": 0
          },
          "innerMajorBorderColor": "#FFFFFF",
          "innerMinorBorderColor": "#e1e5ee",
          "mode": "fixed",
          "numberOfLines": 1,
          "oddRowColor": "#ffffff",
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "column_1",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "table_22": {
        "parameters": {
          "borderColor": "#a8b7c7",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "fixedColumnWidth": 91,
          "header": {
            "backgroundColor": "#16325c",
            "fontColor": "#ffffff",
            "fontSize": 12
          },
          "innerMajorBorderColor": "#54698d",
          "innerMinorBorderColor": "#a8b7c7",
          "mode": "fixed",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Page_1_Header__5",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "link_9": {
        "parameters": {
          "destinationLink": {
            "name": "APM_Industry_Dashboard"
          },
          "destinationType": "dashboard",
          "fontSize": 12,
          "includeState": false,
          "text": "Industry",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "table_4": {
        "parameters": {
          "borderColor": "#a8b7c7",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "fixedColumnWidth": 96,
          "header": {
            "backgroundColor": "#16325c",
            "fontColor": "#ffffff",
            "fontSize": 14
          },
          "innerMajorBorderColor": "#54698d",
          "innerMinorBorderColor": "#a8b7c7",
          "mode": "fixed",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Page_1_Header_Top",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "table_5": {
        "parameters": {
          "borderColor": "#a8b7c7",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#091A3E",
            "fontColor": "#FFFFFF",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "fixedColumnWidth": 125,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#ffffff",
            "fontSize": 12
          },
          "innerMajorBorderColor": "#54698d",
          "innerMinorBorderColor": "#a8b7c7",
          "mode": "fixed",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Dimension_Header",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "link_7": {
        "parameters": {
          "destinationLink": {
            "name": "APM_Region_Summary_Dashboard_Level_1"
          },
          "destinationType": "dashboard",
          "fontSize": 12,
          "includeState": false,
          "text": "Region",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "pillbox_1": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "showActionMenu": true,
          "step": "Static_Cloud_Filter"
        },
        "type": "pillbox"
      },
      "link_8": {
        "parameters": {
          "destinationLink": {
            "name": "APM_Segment_Dashboard_Level_1"
          },
          "destinationType": "dashboard",
          "fontSize": 12,
          "includeState": false,
          "text": "Segment",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "link_5": {
        "parameters": {
          "destinationLink": {
            "name": "APM_Cloud_Summary_Dashboard_Level_1"
          },
          "destinationType": "dashboard",
          "fontSize": 12,
          "includeState": false,
          "text": "Cloud",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "table_8": {
        "parameters": {
          "borderColor": "#a8b7c7",
          "borderWidth": 1,
          "cell": {
            "backgroundColor": "#ffffff",
            "fontColor": "#16325c",
            "fontSize": 12
          },
          "columnProperties": {},
          "columns": [],
          "customBulkActions": [],
          "exploreLink": false,
          "fixedColumnWidth": 96,
          "header": {
            "backgroundColor": "rgb(22, 50, 92)",
            "fontColor": "#ffffff",
            "fontSize": 14
          },
          "innerMajorBorderColor": "#54698d",
          "innerMinorBorderColor": "#a8b7c7",
          "mode": "fixed",
          "numberOfLines": 1,
          "pivoted": false,
          "showActionMenu": true,
          "showRowIndexColumn": false,
          "step": "Table_Page_1_Header__1",
          "totals": true,
          "verticalPadding": 8
        },
        "type": "table"
      },
      "pillbox_3": {
        "parameters": {
          "compact": false,
          "displayTemplate": "[]",
          "exploreLink": false,
          "showActionMenu": true,
          "step": "DASHBOARD_PARAMETER"
        },
        "type": "pillbox"
      },
      "link_6": {
        "parameters": {
          "destinationLink": {
            "name": "APM_Sales_Leader_Summary_Dashboard_Level_1"
          },
          "destinationType": "dashboard",
          "fontSize": 12,
          "includeState": false,
          "text": "Sales Leader",
          "textAlignment": "center",
          "textColor": "#44A2F5"
        },
        "type": "link"
      },
      "image_1": {
        "parameters": {
          "alignmentX": "center",
          "alignmentY": "center",
          "fit": "fitwidth",
          "image": {
            "name": "campfirepng1png",
            "namespace": ""
          }
        },
        "type": "image"
      },
      "image_3": {
        "parameters": {
          "alignmentX": "left",
          "alignmentY": "top",
          "fit": "stretch",
          "image": {
            "name": "FS2_Footerpngpng",
            "namespace": ""
          }
        },
        "type": "image"
      },
      "listselector_1": {
        "parameters": {
          "compact": false,
          "exploreLink": false,
          "instant": true,
          "showActionMenu": false,
          "step": "Quarter_1",
          "title": "Quarter"
        },
        "type": "listselector"
      },
      "image_2": {
        "parameters": {
          "alignmentX": "center",
          "alignmentY": "center",
          "fit": "fitheight",
          "image": {
            "name": "einsteinsectionpredictIOpng2png",
            "namespace": ""
          }
        },
        "type": "image"
      }
    }
  },
  "type": "dashboard",
  "url": "/services/data/v44.0/wave/dashboards/0FKf2000000nnChGAI"
}